{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap","webpack:///webpack://spi-client-js/webpack/universalModuleDefinition","webpack:///webpack://spi-client-js/webpack/bootstrap","webpack:///webpack://spi-client-js/index.js","webpack:///webpack://spi-client-js/node_modules/@babel/runtime/helpers/asyncToGenerator.js","webpack:///webpack://spi-client-js/node_modules/@babel/runtime/helpers/classCallCheck.js","webpack:///webpack://spi-client-js/node_modules/@babel/runtime/helpers/createClass.js","webpack:///webpack://spi-client-js/node_modules/@babel/runtime/node_modules/regenerator-runtime/runtime.js","webpack:///webpack://spi-client-js/node_modules/@babel/runtime/regenerator/index.js","webpack:///webpack://spi-client-js/node_modules/aes-js/index.js","webpack:///webpack://spi-client-js/node_modules/bn.js/lib/bn.js","webpack:///webpack://spi-client-js/node_modules/jssha/src/sha.js","webpack:///webpack://spi-client-js/(webpack)/buildin/module.js","webpack:///webpack://spi-client-js/src/Cashout.js","webpack:///webpack://spi-client-js/src/Connection.js","webpack:///webpack://spi-client-js/src/Crypto.js","webpack:///webpack://spi-client-js/src/DiffieHellman.js","webpack:///webpack://spi-client-js/src/KeyRollingHelper.js","webpack:///webpack://spi-client-js/src/Logger.js","webpack:///webpack://spi-client-js/src/Messages.js","webpack:///webpack://spi-client-js/src/Pairing.js","webpack:///webpack://spi-client-js/src/PairingHelper.js","webpack:///webpack://spi-client-js/src/PayAtTable.js","webpack:///webpack://spi-client-js/src/PingHelper.js","webpack:///webpack://spi-client-js/src/PosInfo.js","webpack:///webpack://spi-client-js/src/Preauth.js","webpack:///webpack://spi-client-js/src/Printing.js","webpack:///webpack://spi-client-js/src/Purchase.js","webpack:///webpack://spi-client-js/src/PurchaseHelper.js","webpack:///webpack://spi-client-js/src/RequestIdHelper.js","webpack:///webpack://spi-client-js/src/Secrets.js","webpack:///webpack://spi-client-js/src/Service/DeviceService.js","webpack:///webpack://spi-client-js/src/Settlement.js","webpack:///webpack://spi-client-js/src/Spi.js","webpack:///webpack://spi-client-js/src/SpiModels.js","webpack:///webpack://spi-client-js/src/SpiPayAtTable.js","webpack:///webpack://spi-client-js/src/SpiPreauth.js","webpack:///webpack://spi-client-js/src/TerminalStatus.js","webpack:///(webpack)/buildin/module.js","webpack:///./MotelPos/MotelPos.js"],"names":["root","factory","exports","module","define","amd","a","i","window","installedModules","__webpack_require__","moduleId","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","parentHotUpdateCallback","chunkId","moreModules","hotAvailableFilesMap","hotRequestedFilesMap","hotUpdate","hotWaitingFiles","hotChunksLoading","hotUpdateDownloaded","hotAddUpdateChunk","hotCurrentChildModule","hotApplyOnUpdate","hotCurrentHash","hotRequestTimeout","hotCurrentModuleData","hotCurrentParents","hotCurrentParentsTemp","hotCreateRequire","me","fn","request","hot","active","parents","indexOf","push","children","console","warn","ObjectFactory","configurable","set","e","hotStatus","hotSetStatus","then","finishChunkLoading","err","hotWaitingFilesMap","hotEnsureUpdateChunk","hotCreateModule","_acceptedDependencies","_declinedDependencies","_selfAccepted","_selfDeclined","_disposeHandlers","_main","accept","dep","callback","undefined","_typeof","length","decline","dispose","addDisposeHandler","removeDisposeHandler","idx","splice","check","hotCheck","apply","hotApply","status","hotStatusHandlers","addStatusHandler","removeStatusHandler","data","newStatus","hotDeferred","hotUpdateNewHash","toModuleId","id","Error","requestTimeout","Promise","resolve","reject","XMLHttpRequest","requestPath","open","timeout","send","onreadystatechange","readyState","update","JSON","parse","responseText","h","promise","script","document","createElement","charset","src","head","appendChild","hotDownloadUpdateChunk","deferred","result","outdatedModules","options","cb","j","getAffectedStuff","updateModuleId","outdatedDependencies","queue","map","chain","queueItem","pop","type","parentId","parent","concat","addAllToSet","b","item","appliedUpdate","warnUnexpectedRequire","abortError","doApply","doDispose","chainInfo","join","onDeclined","ignoreDeclined","onUnaccepted","ignoreUnaccepted","onAccepted","onDisposed","outdatedSelfAcceptedModules","errorHandler","keys","forEach","installedChunks","hotDisposeChunk","dependency","moduleOutdatedDependencies","slice","disposeHandlers","child","error","callbacks","onErrored","dependencyId","ignoreErrored","err2","originalError","__webpack_exports__","_src_Spi__WEBPACK_IMPORTED_MODULE_0__","_src_Logger__WEBPACK_IMPORTED_MODULE_1__","_src_Secrets__WEBPACK_IMPORTED_MODULE_2__","_src_Messages__WEBPACK_IMPORTED_MODULE_3__","_src_SpiModels__WEBPACK_IMPORTED_MODULE_4__","_src_Printing__WEBPACK_IMPORTED_MODULE_5__","_src_Purchase__WEBPACK_IMPORTED_MODULE_6__","_src_TerminalStatus__WEBPACK_IMPORTED_MODULE_7__","_src_Cashout__WEBPACK_IMPORTED_MODULE_8__","_src_Settlement__WEBPACK_IMPORTED_MODULE_9__","_src_RequestIdHelper__WEBPACK_IMPORTED_MODULE_10__","_src_Service_DeviceService__WEBPACK_IMPORTED_MODULE_11__","_src_PayAtTable__WEBPACK_IMPORTED_MODULE_12__","_src_Preauth__WEBPACK_IMPORTED_MODULE_13__","asyncGeneratorStep","gen","_next","_throw","arg","info","done","self","this","args","arguments","instance","Constructor","TypeError","_defineProperties","target","props","descriptor","writable","protoProps","staticProps","runtime","Op","hasOwn","$Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","wrap","innerFn","outerFn","tryLocsList","protoGenerator","Generator","generator","context","Context","_invoke","state","GenStateSuspendedStart","method","GenStateExecuting","GenStateCompleted","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","GenStateSuspendedYield","makeInvokeMethod","obj","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","AsyncIterator","previousPromise","callInvokeWithMethodAndArg","invoke","__await","unwrapped","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","constructor","displayName","isGeneratorFunction","genFun","ctor","mark","setPrototypeOf","__proto__","awrap","async","iter","toString","reverse","skipTempReset","prev","charAt","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","regeneratorRuntime","accidentalStrictMode","Function","checkInt","parseInt","checkInts","arrayish","coerceArray","copy","buffer","Array","isArray","Uint8Array","createArray","copyArray","sourceArray","targetArray","targetStart","sourceStart","sourceEnd","convertUtf8","toBytes","text","encodeURI","charCodeAt","substr","fromBytes","bytes","String","fromCharCode","convertHex","Hex","v","numberOfRounds","16","24","32","rcon","S","Si","T1","T2","T3","T4","T5","T6","T7","T8","U1","U2","U3","U4","convertToInt32","AES","_prepare","rounds","_Ke","_Kd","index","roundKeyCount","KC","tk","tt","rconpointer","encrypt","plaintext","decrypt","ciphertext","ModeOfOperationECB","description","_aes","block","ModeOfOperationCBC","iv","_lastCipherblock","ModeOfOperationCFB","segmentSize","_shiftRegister","xorSegment","encrypted","ModeOfOperationOFB","_lastPrecipher","_lastPrecipherIndex","Counter","initialValue","_counter","setValue","setBytes","Number","MAX_SAFE_INTEGER","increment","ModeOfOperationCTR","counter","_remainingCounter","_remainingCounterIndex","aesjs","ModeOfOperation","ecb","cbc","cfb","ofb","ctr","utils","hex","utf8","padding","pkcs7","pad","padder","strip","_arrayTest","assert","val","msg","inherits","superCtor","super_","TempCtor","BN","number","base","endian","isBN","negative","words","red","_init","Buffer","wordSize","parseHex","str","start","end","len","Math","min","parseBase","mul","num","max","left","right","cmp","_initNumber","_initArray","replace","_parseHex","_parseBase","toArray","ceil","w","off","limbLen","limbPow","total","mod","word","imuln","_iaddn","pow","dest","clone","_expand","size","_normSign","inspect","zeros","groupSizes","groupBases","smallMulTo","out","lo","carry","k","ncarry","rword","maxJ","groupSize","groupBase","isZero","modn","idivn","toNumber","ret","toJSON","toBuffer","toArrayLike","ArrayType","byteLength","reqLength","littleEndian","res","q","andln","iushrn","clz32","_countBits","_zeroBits","bitLength","hi","zeroBits","toTwos","width","abs","inotn","iaddn","fromTwos","testn","notn","ineg","isNeg","neg","iuor","ior","or","uor","iuand","iand","and","uand","iuxor","ixor","xor","uxor","bytesNeeded","bitsLeft","setn","bit","wbit","iadd","isub","add","sub","comb10MulTo","mid","a0","al0","ah0","a1","al1","ah1","a2","al2","ah2","a3","al3","ah3","a4","al4","ah4","a5","al5","ah5","a6","al6","ah6","a7","al7","ah7","a8","al8","ah8","a9","al9","ah9","b0","bl0","bh0","b1","bl1","bh1","b2","bl2","bh2","b3","bl3","bh3","b4","bl4","bh4","b5","bl5","bh5","b6","bl6","bh6","b7","bl7","bh7","b8","bl8","bh8","b9","bl9","bh9","w0","imul","w1","w2","w3","w4","w5","w6","w7","w8","w9","w10","w11","w12","w13","w14","w15","w16","w17","w18","jumboMulTo","FFTM","mulp","x","y","mulTo","hncarry","bigMulTo","makeRBT","N","revBin","rb","permute","rbt","rws","iws","rtws","itws","transform","rtwdf","cos","PI","itwdf","sin","rtwdf_","itwdf_","re","ie","ro","io","rx","guessLen13b","odd","conjugate","normalize13b","ws","round","convert13b","stub","ph","_","rwst","iwst","nrws","nrwst","niwst","rmws","mulf","muln","sqr","isqr","toBitArray","iushln","bits","carryMask","newCarry","ishln","hint","extended","mask","maskedWords","ishrn","shln","ushln","shrn","ushrn","imaskn","maskn","isubn","addn","subn","iabs","_ishlnsubmul","shift","_wordDiv","bhi","diff","qj","div","divmod","positive","divn","umod","divRound","dm","half","r2","acc","egcd","A","B","C","D","g","isEven","yp","xp","im","isOdd","jm","gcd","_invmp","x1","x2","delta","cmpn","invm","bincn","ucmp","gtn","gt","gten","gte","ltn","lt","lten","lte","eqn","eq","Red","toRed","ctx","convertTo","_forceRed","fromRed","convertFrom","forceRed","redAdd","redIAdd","redSub","redISub","redShl","shl","redMul","_verify2","redIMul","redSqr","_verify1","redISqr","redSqrt","sqrt","redInvm","redNeg","redPow","primes","k256","p224","p192","p25519","MPrime","tmp","_tmp","K256","P224","P192","P25519","prime","_prime","Mont","imod","rinv","minv","ireduce","rlen","split","imulK","input","output","outLen","mod3","one","nOne","lpow","z","inv","wnd","current","currentLen","mont","u","__WEBPACK_AMD_DEFINE_RESULT__","Y","f","I","encoding","numRounds","K","Z","lastIndexOf","L","F","M","setHMACKey","binLen","getHash","shakeLen","O","P","Q","ArrayBuffer","R","getHMAC","outputUpper","toUpperCase","b64Pad","_c","_c2","_c3","search","_c4","_c5","T","aa","ba","U","ca","da","ea","fa","ga","ha","ia","ja","ka","G","la","H","ma","na","oa","J","E","V","W","X","webpackPolyfill","deprecate","paths","CashoutOnlyRequest","amountCents","posRefId","_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default","PosRefId","CashoutAmount","SurchargeAmount","Config","SpiConfig","Options","TransactionOptions","_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default","pos_ref_id","cash_amount","surcharge_amount","EnabledPrintMerchantCopy","EnabledPromptForCustomerCopyOnEftpos","EnabledSignatureFlowOnEftpos","AddReceiptConfig","AddOptions","Message","RequestIdHelper","Events","CashoutOnlyResponse","_m","RequestId","Id","SchemeName","scheme_name","Success","SuccessState","Data","attribute","ConnectionState","Disconnected","Connecting","Connected","SPI_PROTOCOL","ConnectionStateEventArgs","connectionState","_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_1___default","MessageEventArgs","message","Connection","Address","State","SpiProtocol","_ws","WebSocket","_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_0___default","UseSecureWebSockets","_this","onopen","pollWebSocketConnection","onmessage","payload","onMessageReceived","onclose","onClosed","onerror","onError","CustomEvent","detail","CLOSED","close","_this2","count","OPEN","onOpened","setTimeout","Disconnect","Crypto","textBytes","encryptedBytes","aesCbc","decryptedBytes","messageToSign","shaObj","jsSHA","DiffieHellman","maxValue","maxValueBN","shiftDistance","randBitInt","privateKey","aHex","gHex","montPrime","gRed","theirPublicKey","yourPrivateKey","bHex","AHex","BRed","KeyRollingHelper","krRequest","currentSecrets","KeyRollResponse","newSecrets","Secrets","KeyRollingResult","keyRollingConfirmation","KeyRollingConfirmation","NewSecrets","Logger","element","lineSeperator","_len","_key","_render","_len2","_key2","_len3","_key3","_len4","_key4","_len5","_key5","innerText","scrollTop","scrollHeight","PairRequest","KeyRequest","KeyResponse","KeyCheck","PairResponse","DropKeysAdvice","LoginRequest","LoginResponse","Ping","Pong","PurchaseRequest","PurchaseResponse","CancelTransactionRequest","CancelTransactionResponse","GetLastTransactionRequest","GetLastTransactionResponse","RefundRequest","RefundResponse","SignatureRequired","SignatureDeclined","SignatureAccepted","AuthCodeRequired","AuthCodeAdvice","MotoPurchaseRequest","MotoPurchaseResponse","SettleRequest","SettleResponse","SettlementEnquiryRequest","SettlementEnquiryResponse","SetPosInfoRequest","SetPosInfoResponse","KeyRollRequest","InvalidHmacSignature","PayAtTableGetTableConfig","PayAtTableSetTableConfig","PayAtTableGetBillDetails","PayAtTableBillDetails","PayAtTableBillPayment","PrintingRequest","PrintingResponse","TerminalStatusRequest","TerminalStatusResponse","BatteryLevelChanged","PayAtTableGetOpenTables","PayAtTableOpenTables","PayAtTableBillPaymentFlowEnded","Unknown","Failed","MessageStamp","posId","secrets","serverTimeDelta","PosId","ServerTimeDelta","MessageEnvelope","enc","hmac","Enc","Hmac","pos_id","eventName","needsEncryption","EventName","DateTimeStamp","IncommingHmac","_needsEncryption","DecryptedJson","success","error_reason","error_detail","now","Date","dts","getTime","stamp","tzoffset","getTimezoneOffset","adjustedTime","envelope","event","datetime","encMsg","encrMessageEnvelope","bankDate","date","time","msgJson","env","sig","decryptedJson","decryptedMsg","_message","Aenc","Ahmac","requestId","Benc","Bhmac","ConfirmationCode","SecretsAndKeyResponse","keyResponse","DropKeysRequest","GENERATOR","GROUP14_2048_BIT_MODP","PairingHelper","keyRequest","encPubAndSec","_calculateMyPublicKeyAndSecret","MyPublicKey","Senc","SharedSecretKey","hmacPubAndSec","Shmac","diffieHellman","myPrivateBI","myPublicBI","secretBI","secret","DHSecretToSPISecret","PublicKeyAndSecret","myPublicKey","sharedSecretKey","BillStatusResponse","Result","BillId","TableId","OperatorId","TotalAmount","OutstandingAmount","BillData","bill","PaymentHistoryEntry","payment_type","payment_summary","messageId","BillRetrievalResult","SUCCESS","INVALID_TABLE_ID","INVALID_BILL_ID","INVALID_OPERATOR_ID","PaymentType","CARD","CASH","BillPayment","_incomingAdvice","PaymentFlowStarted","pt","purchaseMsg","PurchaseAmount","GetPurchaseAmount","TipAmount","GetTipAmount","GetSurchargeAmount","paymentType","paymentSummary","PaymentSummary","PayAtTableConfig","PayAtTabledEnabled","OperatorIdEnabled","SplitByAmountEnabled","EqualSplitEnabled","TableRetrievalEnabled","TippingEnabled","SummaryReportEnabled","LabelPayButton","LabelOperatorId","LabelTableId","AllowedOperatorIds","pay_at_table_enabled","operator_id_enabled","split_by_amount_enabled","equal_split_enabled","tipping_enabled","summary_report_enabled","pay_button_label","operator_id_label","table_id_label","operator_id_list","table_retrieval_enabled","GetOpenTablesResponse","TableData","tables","GetOpenTables","OpenTablesEntry","Label","BillOutstandingAmount","table_id","label","bill_outstanding_amount","BillPaymentFlowEndedResponse","bill_id","BillTotalAmount","bill_total_amount","operator_id","CardTotalCount","card_total_count","CardTotalAmount","card_total_amount","CashTotalCount","cash_total_count","CashTotalAmount","cash_total_amount","PongHelper","ping","PingHelper","version","vendorId","libraryLanguage","libraryVersion","otherInfo","_version","_vendorId","_libraryLanguage","_libraryVersion","_otherInfo","pos_version","pos_vendor_id","library_language","library_version","other_info","_success","DeviceInfo","deviceInfo","navigator","userAgent","PreauthEvents","AccountVerifyRequest","AccountVerifyResponse","PreauthOpenRequest","PreauthOpenResponse","PreauthTopupRequest","PreauthTopupResponse","PreauthExtendRequest","PreauthExtendResponse","PreauthPartialCancellationRequest","PreauthPartialCancellationResponse","PreauthCancellationRequest","PreauthCancellationResponse","PreauthCompleteRequest","PreauthCompleteResponse","Details","PreauthAmount","preauth_amount","preauthId","topupAmountCents","PreauthId","TopupAmount","preauth_id","topup_amount","partialCancellationAmountCents","PartialCancellationAmount","preauth_cancel_amount","PreauthCancelRequest","PreauthCompletionRequest","completionAmountCents","surchargeAmount","CompletionAmount","completion_amount","PreauthResponse","_payload","Printer","PromptForCashout","AmountCents","toFixed","purchase_amount","tip_amount","prompt_for_cashout","SchemeAppName","rrn","bank_noncash_amount","bank_cash_amount","customer_receipt","merchant_receipt","host_response_text","host_response_code","terminal_ref_id","card_entry","account_type","auth_code","bank_date","bank_time","masked_pan","terminal_id","merchant_receipt_printed","customer_receipt_printed","dateStr","bank_settlement_date","GetAccountType","GetAuthCode","GetBankDate","GetBankTime","GetResponseCode","GetResponseText","GetMaskedPan","GetRRN","GetTerminalId","GetTerminalReferenceId","GetSuccessState","GetError","startsWith","WasOperationInProgressError","GetPosRefId","transaction_type","amount_purchase","amount_transaction_type","cr","mr","suppressMerchantPassword","SuppressMerchantPassword","refund_amount","suppress_merchant_password","_receiptToSign","receiptToSign","SignatureDecline","SignatureAccept","PhoneForAuthRequired","_phoneNumber","_merchantId","auth_centre_phone_number","merchant_id","authCode","AuthCode","PurchaseHelper","purchaseId","purchaseAmount","tipAmount","cashoutAmount","promptForCashout","assign","__RequestIdHelperCounter","prefix","encKey","hmacKey","EncKey","HmacKey","localStorage","DeviceAddressStatus","useSecureWebSockets","_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_2___default","ip","fqdn","LastUpdated","DeviceAddressResponseCode","ResponseStatusDescription","ResponseMessage","_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_3___default","address","addreses","INVALID_SERIAL_NUMBER","ADDRESS_NOT_CHANGED","SERIAL_NUMBER_NOT_CHANGED","DEVICE_SERVICE_ERROR","HttpStatusCode","NotFound","DeviceAddressService","_RetrieveService","_babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1___default","_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","_callee","serialNumber","apiKey","acquirerCode","isSecureConnection","isTestMode","path","deviceAddressUri","response","_args","_context","fetch","headers","ASM-MSP-DEVICE-ADDRESS-API-KEY","_x","Settlement","accumulated_settle_by_acquirer_count","accumulated_settle_by_acquirer_value","accumulated_total_count","accumulated_total_value","timeStr","settlement_period_start_time","settlement_period_start_date","settlement_period_end_time","settlement_period_end_date","settlement_triggered_time","settlement_triggered_date","transaction_range","schemes","scheme","SchemeSettlementEntry","SettleByAcquirer","TotalValue","total_value","TotalCount","total_count","SPI_VERSION","Spi","eftposAddress","_posId","_serialNumber","_secrets","_forceSecureWebSockets","_eftposAddress","_log","_conn","CurrentDeviceStatus","_deviceApiKey","_acquirerCode","_inTestMode","_autoAddressResolutionEnabled","_spiMessageStamp","_posVendorId","_posVersion","_hasSetInfo","_mostRecentPingSent","_mostRecentPongReceived","_missedPongsCount","_retriesSinceLastDeviceAddressResolution","_mostRecentLoginResponse","_pongTimeout","_pingFrequency","_readyToTransact","_periodicPingThread","_txMonitorCheckFrequency","_checkOnTxFrequency","_maxWaitForCancelTx","_sleepBeforeReconnectMs","_missedPongsToDisconnect","_retriesBeforeResolvingDeviceAddress","CurrentFlow","CurrentPairingFlowState","CurrentTxFlowState","_currentStatus","_spiPat","SpiPayAtTable","_spiPreauth","SpiPreauth","_resetConn","_startTransactionMonitoringThread","SpiFlow","Idle","SpiStatus","PairedConnecting","Connect","Unpaired","deviceApiKey","CurrentStatus","was","HasSerialNumberChanged","_autoResolveEftposAddress","autoAddressResolutionEnable","PairedConnected","testMode","posVendorId","posVersion","Pairing","Finished","Transaction","PairingFlowState","Successful","AwaitingCheckFromEftpos","AwaitingCheckFromPos","_onPairingSuccess","_onReadyToTransact","_send","ToMessage","_onPairingFailed","_doUnpair","InitiateTxResult","purchaseRequest","TransactionFlowState","TransactionType","Purchase","Sent","purchase","AmountSummary","refundRequest","refundMsg","Refund","accepted","AwaitingSignatureCheck","MidTxResult","SignatureResponded","SignatureRequiredMessage","SubmitAuthCodeResult","AwaitingPhoneForAuth","AuthCodeSent","RequestSent","cancelReq","Cancelling","cashoutMsg","CashoutOnly","motoPurchaseMsg","MOTO","settleMsg","Settle","stlEnqMsg","SettlementEnquiry","gltRequestMsg","GetLastTransaction","CallingGlt","txType","gltResponse","expectedAmount","requestTime","GltMatch","gltBankDateTimeStr","GetBankDateTimeString","gltBankDateTime","compare","toMessage","keyCheck","pairResp","_startPeriodicPing","krRes","incomingPosRefId","phoneForAuthRequired","GetPhoneNumber","GetMerchantId","Completed","AttemptingToCancel","_callGetLastTransaction","txState","AwaitingGltResponse","gtlResponse","WasRetrievedSuccessfully","successState","RequestTime","WasTimeOutOfSyncError","cancelResponse","GetErrorReason","GetErrorDetail","isSuccess","getErrorReason","getErrorDetail","needsPublishing","LastStateRequestTime","_isUsingHttps","_onSpiConnectionStatusChanged","_onSpiMessageReceived","_onWsErrorReceived","_this3","pr","NewPairRequest","_stopPeriodicPing","_this4","setInterval","_periodicPing","_this5","_doPing","_callSetPosInfo","PushPayAtTableConfig","Request","setPosInfoRequest","GetAppDeviceInfo","clearInterval","GeneratePingRequest","_mostRecentPingSentTime","GetServerTimeDelta","debug","pong","messageJson","_handlePreauthMessage","_handleKeyRequest","_handleKeyCheck","_handlePairResponse","_handleDropKeysAdvice","_handlePurchaseResponse","_handleRefundResponse","_handleCashoutOnlyResponse","_handleMotoPurchaseResponse","_handleSignatureRequired","_handleAuthCodeRequired","_handleGetLastTransactionResponse","HandleSettleResponse","_handleSettlementEnquiryResponse","_handleIncomingPing","_handleIncomingPong","_handleKeyRollingRequest","_handleCancelTransactionResponse","_handleSetPosInfoResponse","_handleGetTableConfig","_handleGetBillDetailsRequest","_handleBillPaymentAdvice","_handleGetOpenTablesRequest","_handleBillPaymentFlowEnded","_handlePrintingResponse","_handleTerminalStatusResponse","_handleBatteryLevelChanged","_handleErrorEvent","json","Send","updatedSerialNumber","updatedEftposAddress","_isSecureConnection","service","addressResponse","addressResponseJson","statusText","last_updated","t0","ok","HasEftposAddressChanged","protocol","Preauth","AccountVerify","initiated","Initiated","valid","Valid","Type","DisplayMessage","LastGltRequestId","Response","PhoneForAuthRequiredMessage","CancelAttemptTime","GLTResponsePosRefId","gltRequestId","spiMessage","validFormat","ValidFormat","PrintMerchantCopy","PromptForCustomerCopyOnEftpos","SignatureFlowOnEftpos","messageData","_customerReceiptHeader","_customerReceiptFooter","_merchantReceiptHeader","_merchantReceiptFooter","customerReceiptHeader","customerReceiptFooter","merchantReceiptHeader","merchantReceiptFooter","spi","_spi","billId","tableId","operatorId","paymentFlowStarted","billPayment","updatedBillData","GetBillStatus","billStatus","existingBillStatus","existingPaymentHistory","getBillPaymentHistory","find","phe","updatedHistoryEntries","toLowerCase","BillPaymentReceived","updatedBillStatus","openTablesResponse","BillPaymentFlowEnded","verifyMsg","tfs","_initiatePreauthTx","sentMsg","_handleAccountVerifyResponse","_handlePreauthResponse","currentTxFlowState","battery_level","charging","TerminalBattery","BatteryLevel","__WEBPACK_AMD_DEFINE_ARRAY__","__WEBPACK_AMD_DEFINE_FACTORY__","MotelPos","log","receipt","flow_msg","_classCallCheck","_spiSecrets","_rcpt_from_eftpos","_sig_flow_from_eftpos","_print_merchant_copy","_receipt","_flow_msg","LoadPersistedState","SetPosInfo","addEventListener","OnSpiStatusChanged","OnPairingFlowStateChanged","OnSecretsChanged","OnTxFlowStateChanged","HandlePrintingResponse","HandleTerminalStatusResponse","HandleBatteryLevelChanged","EnablePreauth","Start","Clear","Info","PrintStatusAndActions","AcceptUserInput","pairingFlowState","setItem","removeItem","spiStatus","clear","printingResponse","AckFlowEndedAndBackToIdle","terminalStatusResponse","GetStatus","GetBatteryLevel","IsCharging","terminalBattery","PrintFlowInfo","PrintActions","PrintPairingStatus","pairingState","GetMerchantReceipt","trim","preauthResponse","GetBalanceAmount","GetPreviousBalanceAmount","GetCompletionAmount","details","WasCustomerReceiptPrinted","GetCustomerReceipt","purchaseResponse","WasMerchantReceiptPrinted","inputsEnabled","statusEl","getElementById","primaryStatusEl","flowStatusEl","flowStatusHeading","dataset","inputs","querySelectorAll","disabled","inputEl","stringify","GetVersion","SetPosId","SetEftposAddress","checked","Pair","PairingConfirmCode","PairingCancel","Unpair","toISOString","InitiateAccountVerifyTx","amount","InitiateOpenTx","ref","InitiateTopupTx","InitiatePartialCancellationTx","InitiateExtendTx","InitiateCancelTx","surcharge","InitiateCompletionTx","AcceptSignature","CancelTransaction","innerHTML","getItem"],"mappings":"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","file":"MotelPos.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 5);\n","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"spi-client-js\"] = factory();\n\telse\n\t\troot[\"spi-client-js\"] = factory();\n})(window, function() {\nreturn "," \tfunction hotDisposeChunk(chunkId) {\n \t\tdelete installedChunks[chunkId];\n \t}\n \tvar parentHotUpdateCallback = window[\"webpackHotUpdatespi_client_js\"];\n \twindow[\"webpackHotUpdatespi_client_js\"] = // eslint-disable-next-line no-unused-vars\n \tfunction webpackHotUpdateCallback(chunkId, moreModules) {\n \t\thotAddUpdateChunk(chunkId, moreModules);\n \t\tif (parentHotUpdateCallback) parentHotUpdateCallback(chunkId, moreModules);\n \t} ;\n\n \t// eslint-disable-next-line no-unused-vars\n \tfunction hotDownloadUpdateChunk(chunkId) {\n \t\tvar script = document.createElement(\"script\");\n \t\tscript.charset = \"utf-8\";\n \t\tscript.src = __webpack_require__.p + \"\" + chunkId + \".\" + hotCurrentHash + \".hot-update.js\";\n \t\tif (null) script.crossOrigin = null;\n \t\tdocument.head.appendChild(script);\n \t}\n\n \t// eslint-disable-next-line no-unused-vars\n \tfunction hotDownloadManifest(requestTimeout) {\n \t\trequestTimeout = requestTimeout || 10000;\n \t\treturn new Promise(function(resolve, reject) {\n \t\t\tif (typeof XMLHttpRequest === \"undefined\") {\n \t\t\t\treturn reject(new Error(\"No browser support\"));\n \t\t\t}\n \t\t\ttry {\n \t\t\t\tvar request = new XMLHttpRequest();\n \t\t\t\tvar requestPath = __webpack_require__.p + \"\" + hotCurrentHash + \".hot-update.json\";\n \t\t\t\trequest.open(\"GET\", requestPath, true);\n \t\t\t\trequest.timeout = requestTimeout;\n \t\t\t\trequest.send(null);\n \t\t\t} catch (err) {\n \t\t\t\treturn reject(err);\n \t\t\t}\n \t\t\trequest.onreadystatechange = function() {\n \t\t\t\tif (request.readyState !== 4) return;\n \t\t\t\tif (request.status === 0) {\n \t\t\t\t\t// timeout\n \t\t\t\t\treject(\n \t\t\t\t\t\tnew Error(\"Manifest request to \" + requestPath + \" timed out.\")\n \t\t\t\t\t);\n \t\t\t\t} else if (request.status === 404) {\n \t\t\t\t\t// no update available\n \t\t\t\t\tresolve();\n \t\t\t\t} else if (request.status !== 200 && request.status !== 304) {\n \t\t\t\t\t// other failure\n \t\t\t\t\treject(new Error(\"Manifest request to \" + requestPath + \" failed.\"));\n \t\t\t\t} else {\n \t\t\t\t\t// success\n \t\t\t\t\ttry {\n \t\t\t\t\t\tvar update = JSON.parse(request.responseText);\n \t\t\t\t\t} catch (e) {\n \t\t\t\t\t\treject(e);\n \t\t\t\t\t\treturn;\n \t\t\t\t\t}\n \t\t\t\t\tresolve(update);\n \t\t\t\t}\n \t\t\t};\n \t\t});\n \t}\n\n \tvar hotApplyOnUpdate = true;\n \t// eslint-disable-next-line no-unused-vars\n \tvar hotCurrentHash = \"d9614ef4564638a8be97\";\n \tvar hotRequestTimeout = 10000;\n \tvar hotCurrentModuleData = {};\n \tvar hotCurrentChildModule;\n \t// eslint-disable-next-line no-unused-vars\n \tvar hotCurrentParents = [];\n \t// eslint-disable-next-line no-unused-vars\n \tvar hotCurrentParentsTemp = [];\n\n \t// eslint-disable-next-line no-unused-vars\n \tfunction hotCreateRequire(moduleId) {\n \t\tvar me = installedModules[moduleId];\n \t\tif (!me) return __webpack_require__;\n \t\tvar fn = function(request) {\n \t\t\tif (me.hot.active) {\n \t\t\t\tif (installedModules[request]) {\n \t\t\t\t\tif (installedModules[request].parents.indexOf(moduleId) === -1) {\n \t\t\t\t\t\tinstalledModules[request].parents.push(moduleId);\n \t\t\t\t\t}\n \t\t\t\t} else {\n \t\t\t\t\thotCurrentParents = [moduleId];\n \t\t\t\t\thotCurrentChildModule = request;\n \t\t\t\t}\n \t\t\t\tif (me.children.indexOf(request) === -1) {\n \t\t\t\t\tme.children.push(request);\n \t\t\t\t}\n \t\t\t} else {\n \t\t\t\tconsole.warn(\n \t\t\t\t\t\"[HMR] unexpected require(\" +\n \t\t\t\t\t\trequest +\n \t\t\t\t\t\t\") from disposed module \" +\n \t\t\t\t\t\tmoduleId\n \t\t\t\t);\n \t\t\t\thotCurrentParents = [];\n \t\t\t}\n \t\t\treturn __webpack_require__(request);\n \t\t};\n \t\tvar ObjectFactory = function ObjectFactory(name) {\n \t\t\treturn {\n \t\t\t\tconfigurable: true,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: function() {\n \t\t\t\t\treturn __webpack_require__[name];\n \t\t\t\t},\n \t\t\t\tset: function(value) {\n \t\t\t\t\t__webpack_require__[name] = value;\n \t\t\t\t}\n \t\t\t};\n \t\t};\n \t\tfor (var name in __webpack_require__) {\n \t\t\tif (\n \t\t\t\tObject.prototype.hasOwnProperty.call(__webpack_require__, name) &&\n \t\t\t\tname !== \"e\" &&\n \t\t\t\tname !== \"t\"\n \t\t\t) {\n \t\t\t\tObject.defineProperty(fn, name, ObjectFactory(name));\n \t\t\t}\n \t\t}\n \t\tfn.e = function(chunkId) {\n \t\t\tif (hotStatus === \"ready\") hotSetStatus(\"prepare\");\n \t\t\thotChunksLoading++;\n \t\t\treturn __webpack_require__.e(chunkId).then(finishChunkLoading, function(err) {\n \t\t\t\tfinishChunkLoading();\n \t\t\t\tthrow err;\n \t\t\t});\n\n \t\t\tfunction finishChunkLoading() {\n \t\t\t\thotChunksLoading--;\n \t\t\t\tif (hotStatus === \"prepare\") {\n \t\t\t\t\tif (!hotWaitingFilesMap[chunkId]) {\n \t\t\t\t\t\thotEnsureUpdateChunk(chunkId);\n \t\t\t\t\t}\n \t\t\t\t\tif (hotChunksLoading === 0 && hotWaitingFiles === 0) {\n \t\t\t\t\t\thotUpdateDownloaded();\n \t\t\t\t\t}\n \t\t\t\t}\n \t\t\t}\n \t\t};\n \t\tfn.t = function(value, mode) {\n \t\t\tif (mode & 1) value = fn(value);\n \t\t\treturn __webpack_require__.t(value, mode & ~1);\n \t\t};\n \t\treturn fn;\n \t}\n\n \t// eslint-disable-next-line no-unused-vars\n \tfunction hotCreateModule(moduleId) {\n \t\tvar hot = {\n \t\t\t// private stuff\n \t\t\t_acceptedDependencies: {},\n \t\t\t_declinedDependencies: {},\n \t\t\t_selfAccepted: false,\n \t\t\t_selfDeclined: false,\n \t\t\t_disposeHandlers: [],\n \t\t\t_main: hotCurrentChildModule !== moduleId,\n\n \t\t\t// Module API\n \t\t\tactive: true,\n \t\t\taccept: function(dep, callback) {\n \t\t\t\tif (dep === undefined) hot._selfAccepted = true;\n \t\t\t\telse if (typeof dep === \"function\") hot._selfAccepted = dep;\n \t\t\t\telse if (typeof dep === \"object\")\n \t\t\t\t\tfor (var i = 0; i < dep.length; i++)\n \t\t\t\t\t\thot._acceptedDependencies[dep[i]] = callback || function() {};\n \t\t\t\telse hot._acceptedDependencies[dep] = callback || function() {};\n \t\t\t},\n \t\t\tdecline: function(dep) {\n \t\t\t\tif (dep === undefined) hot._selfDeclined = true;\n \t\t\t\telse if (typeof dep === \"object\")\n \t\t\t\t\tfor (var i = 0; i < dep.length; i++)\n \t\t\t\t\t\thot._declinedDependencies[dep[i]] = true;\n \t\t\t\telse hot._declinedDependencies[dep] = true;\n \t\t\t},\n \t\t\tdispose: function(callback) {\n \t\t\t\thot._disposeHandlers.push(callback);\n \t\t\t},\n \t\t\taddDisposeHandler: function(callback) {\n \t\t\t\thot._disposeHandlers.push(callback);\n \t\t\t},\n \t\t\tremoveDisposeHandler: function(callback) {\n \t\t\t\tvar idx = hot._disposeHandlers.indexOf(callback);\n \t\t\t\tif (idx >= 0) hot._disposeHandlers.splice(idx, 1);\n \t\t\t},\n\n \t\t\t// Management API\n \t\t\tcheck: hotCheck,\n \t\t\tapply: hotApply,\n \t\t\tstatus: function(l) {\n \t\t\t\tif (!l) return hotStatus;\n \t\t\t\thotStatusHandlers.push(l);\n \t\t\t},\n \t\t\taddStatusHandler: function(l) {\n \t\t\t\thotStatusHandlers.push(l);\n \t\t\t},\n \t\t\tremoveStatusHandler: function(l) {\n \t\t\t\tvar idx = hotStatusHandlers.indexOf(l);\n \t\t\t\tif (idx >= 0) hotStatusHandlers.splice(idx, 1);\n \t\t\t},\n\n \t\t\t//inherit from previous dispose call\n \t\t\tdata: hotCurrentModuleData[moduleId]\n \t\t};\n \t\thotCurrentChildModule = undefined;\n \t\treturn hot;\n \t}\n\n \tvar hotStatusHandlers = [];\n \tvar hotStatus = \"idle\";\n\n \tfunction hotSetStatus(newStatus) {\n \t\thotStatus = newStatus;\n \t\tfor (var i = 0; i < hotStatusHandlers.length; i++)\n \t\t\thotStatusHandlers[i].call(null, newStatus);\n \t}\n\n \t// while downloading\n \tvar hotWaitingFiles = 0;\n \tvar hotChunksLoading = 0;\n \tvar hotWaitingFilesMap = {};\n \tvar hotRequestedFilesMap = {};\n \tvar hotAvailableFilesMap = {};\n \tvar hotDeferred;\n\n \t// The update info\n \tvar hotUpdate, hotUpdateNewHash;\n\n \tfunction toModuleId(id) {\n \t\tvar isNumber = +id + \"\" === id;\n \t\treturn isNumber ? +id : id;\n \t}\n\n \tfunction hotCheck(apply) {\n \t\tif (hotStatus !== \"idle\") {\n \t\t\tthrow new Error(\"check() is only allowed in idle status\");\n \t\t}\n \t\thotApplyOnUpdate = apply;\n \t\thotSetStatus(\"check\");\n \t\treturn hotDownloadManifest(hotRequestTimeout).then(function(update) {\n \t\t\tif (!update) {\n \t\t\t\thotSetStatus(\"idle\");\n \t\t\t\treturn null;\n \t\t\t}\n \t\t\thotRequestedFilesMap = {};\n \t\t\thotWaitingFilesMap = {};\n \t\t\thotAvailableFilesMap = update.c;\n \t\t\thotUpdateNewHash = update.h;\n\n \t\t\thotSetStatus(\"prepare\");\n \t\t\tvar promise = new Promise(function(resolve, reject) {\n \t\t\t\thotDeferred = {\n \t\t\t\t\tresolve: resolve,\n \t\t\t\t\treject: reject\n \t\t\t\t};\n \t\t\t});\n \t\t\thotUpdate = {};\n \t\t\tvar chunkId = \"main\";\n \t\t\t// eslint-disable-next-line no-lone-blocks\n \t\t\t{\n \t\t\t\t/*globals chunkId */\n \t\t\t\thotEnsureUpdateChunk(chunkId);\n \t\t\t}\n \t\t\tif (\n \t\t\t\thotStatus === \"prepare\" &&\n \t\t\t\thotChunksLoading === 0 &&\n \t\t\t\thotWaitingFiles === 0\n \t\t\t) {\n \t\t\t\thotUpdateDownloaded();\n \t\t\t}\n \t\t\treturn promise;\n \t\t});\n \t}\n\n \t// eslint-disable-next-line no-unused-vars\n \tfunction hotAddUpdateChunk(chunkId, moreModules) {\n \t\tif (!hotAvailableFilesMap[chunkId] || !hotRequestedFilesMap[chunkId])\n \t\t\treturn;\n \t\thotRequestedFilesMap[chunkId] = false;\n \t\tfor (var moduleId in moreModules) {\n \t\t\tif (Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\thotUpdate[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif (--hotWaitingFiles === 0 && hotChunksLoading === 0) {\n \t\t\thotUpdateDownloaded();\n \t\t}\n \t}\n\n \tfunction hotEnsureUpdateChunk(chunkId) {\n \t\tif (!hotAvailableFilesMap[chunkId]) {\n \t\t\thotWaitingFilesMap[chunkId] = true;\n \t\t} else {\n \t\t\thotRequestedFilesMap[chunkId] = true;\n \t\t\thotWaitingFiles++;\n \t\t\thotDownloadUpdateChunk(chunkId);\n \t\t}\n \t}\n\n \tfunction hotUpdateDownloaded() {\n \t\thotSetStatus(\"ready\");\n \t\tvar deferred = hotDeferred;\n \t\thotDeferred = null;\n \t\tif (!deferred) return;\n \t\tif (hotApplyOnUpdate) {\n \t\t\t// Wrap deferred object in Promise to mark it as a well-handled Promise to\n \t\t\t// avoid triggering uncaught exception warning in Chrome.\n \t\t\t// See https://bugs.chromium.org/p/chromium/issues/detail?id=465666\n \t\t\tPromise.resolve()\n \t\t\t\t.then(function() {\n \t\t\t\t\treturn hotApply(hotApplyOnUpdate);\n \t\t\t\t})\n \t\t\t\t.then(\n \t\t\t\t\tfunction(result) {\n \t\t\t\t\t\tdeferred.resolve(result);\n \t\t\t\t\t},\n \t\t\t\t\tfunction(err) {\n \t\t\t\t\t\tdeferred.reject(err);\n \t\t\t\t\t}\n \t\t\t\t);\n \t\t} else {\n \t\t\tvar outdatedModules = [];\n \t\t\tfor (var id in hotUpdate) {\n \t\t\t\tif (Object.prototype.hasOwnProperty.call(hotUpdate, id)) {\n \t\t\t\t\toutdatedModules.push(toModuleId(id));\n \t\t\t\t}\n \t\t\t}\n \t\t\tdeferred.resolve(outdatedModules);\n \t\t}\n \t}\n\n \tfunction hotApply(options) {\n \t\tif (hotStatus !== \"ready\")\n \t\t\tthrow new Error(\"apply() is only allowed in ready status\");\n \t\toptions = options || {};\n\n \t\tvar cb;\n \t\tvar i;\n \t\tvar j;\n \t\tvar module;\n \t\tvar moduleId;\n\n \t\tfunction getAffectedStuff(updateModuleId) {\n \t\t\tvar outdatedModules = [updateModuleId];\n \t\t\tvar outdatedDependencies = {};\n\n \t\t\tvar queue = outdatedModules.map(function(id) {\n \t\t\t\treturn {\n \t\t\t\t\tchain: [id],\n \t\t\t\t\tid: id\n \t\t\t\t};\n \t\t\t});\n \t\t\twhile (queue.length > 0) {\n \t\t\t\tvar queueItem = queue.pop();\n \t\t\t\tvar moduleId = queueItem.id;\n \t\t\t\tvar chain = queueItem.chain;\n \t\t\t\tmodule = installedModules[moduleId];\n \t\t\t\tif (!module || module.hot._selfAccepted) continue;\n \t\t\t\tif (module.hot._selfDeclined) {\n \t\t\t\t\treturn {\n \t\t\t\t\t\ttype: \"self-declined\",\n \t\t\t\t\t\tchain: chain,\n \t\t\t\t\t\tmoduleId: moduleId\n \t\t\t\t\t};\n \t\t\t\t}\n \t\t\t\tif (module.hot._main) {\n \t\t\t\t\treturn {\n \t\t\t\t\t\ttype: \"unaccepted\",\n \t\t\t\t\t\tchain: chain,\n \t\t\t\t\t\tmoduleId: moduleId\n \t\t\t\t\t};\n \t\t\t\t}\n \t\t\t\tfor (var i = 0; i < module.parents.length; i++) {\n \t\t\t\t\tvar parentId = module.parents[i];\n \t\t\t\t\tvar parent = installedModules[parentId];\n \t\t\t\t\tif (!parent) continue;\n \t\t\t\t\tif (parent.hot._declinedDependencies[moduleId]) {\n \t\t\t\t\t\treturn {\n \t\t\t\t\t\t\ttype: \"declined\",\n \t\t\t\t\t\t\tchain: chain.concat([parentId]),\n \t\t\t\t\t\t\tmoduleId: moduleId,\n \t\t\t\t\t\t\tparentId: parentId\n \t\t\t\t\t\t};\n \t\t\t\t\t}\n \t\t\t\t\tif (outdatedModules.indexOf(parentId) !== -1) continue;\n \t\t\t\t\tif (parent.hot._acceptedDependencies[moduleId]) {\n \t\t\t\t\t\tif (!outdatedDependencies[parentId])\n \t\t\t\t\t\t\toutdatedDependencies[parentId] = [];\n \t\t\t\t\t\taddAllToSet(outdatedDependencies[parentId], [moduleId]);\n \t\t\t\t\t\tcontinue;\n \t\t\t\t\t}\n \t\t\t\t\tdelete outdatedDependencies[parentId];\n \t\t\t\t\toutdatedModules.push(parentId);\n \t\t\t\t\tqueue.push({\n \t\t\t\t\t\tchain: chain.concat([parentId]),\n \t\t\t\t\t\tid: parentId\n \t\t\t\t\t});\n \t\t\t\t}\n \t\t\t}\n\n \t\t\treturn {\n \t\t\t\ttype: \"accepted\",\n \t\t\t\tmoduleId: updateModuleId,\n \t\t\t\toutdatedModules: outdatedModules,\n \t\t\t\toutdatedDependencies: outdatedDependencies\n \t\t\t};\n \t\t}\n\n \t\tfunction addAllToSet(a, b) {\n \t\t\tfor (var i = 0; i < b.length; i++) {\n \t\t\t\tvar item = b[i];\n \t\t\t\tif (a.indexOf(item) === -1) a.push(item);\n \t\t\t}\n \t\t}\n\n \t\t// at begin all updates modules are outdated\n \t\t// the \"outdated\" status can propagate to parents if they don't accept the children\n \t\tvar outdatedDependencies = {};\n \t\tvar outdatedModules = [];\n \t\tvar appliedUpdate = {};\n\n \t\tvar warnUnexpectedRequire = function warnUnexpectedRequire() {\n \t\t\tconsole.warn(\n \t\t\t\t\"[HMR] unexpected require(\" + result.moduleId + \") to disposed module\"\n \t\t\t);\n \t\t};\n\n \t\tfor (var id in hotUpdate) {\n \t\t\tif (Object.prototype.hasOwnProperty.call(hotUpdate, id)) {\n \t\t\t\tmoduleId = toModuleId(id);\n \t\t\t\t/** @type {TODO} */\n \t\t\t\tvar result;\n \t\t\t\tif (hotUpdate[id]) {\n \t\t\t\t\tresult = getAffectedStuff(moduleId);\n \t\t\t\t} else {\n \t\t\t\t\tresult = {\n \t\t\t\t\t\ttype: \"disposed\",\n \t\t\t\t\t\tmoduleId: id\n \t\t\t\t\t};\n \t\t\t\t}\n \t\t\t\t/** @type {Error|false} */\n \t\t\t\tvar abortError = false;\n \t\t\t\tvar doApply = false;\n \t\t\t\tvar doDispose = false;\n \t\t\t\tvar chainInfo = \"\";\n \t\t\t\tif (result.chain) {\n \t\t\t\t\tchainInfo = \"\\nUpdate propagation: \" + result.chain.join(\" -> \");\n \t\t\t\t}\n \t\t\t\tswitch (result.type) {\n \t\t\t\t\tcase \"self-declined\":\n \t\t\t\t\t\tif (options.onDeclined) options.onDeclined(result);\n \t\t\t\t\t\tif (!options.ignoreDeclined)\n \t\t\t\t\t\t\tabortError = new Error(\n \t\t\t\t\t\t\t\t\"Aborted because of self decline: \" +\n \t\t\t\t\t\t\t\t\tresult.moduleId +\n \t\t\t\t\t\t\t\t\tchainInfo\n \t\t\t\t\t\t\t);\n \t\t\t\t\t\tbreak;\n \t\t\t\t\tcase \"declined\":\n \t\t\t\t\t\tif (options.onDeclined) options.onDeclined(result);\n \t\t\t\t\t\tif (!options.ignoreDeclined)\n \t\t\t\t\t\t\tabortError = new Error(\n \t\t\t\t\t\t\t\t\"Aborted because of declined dependency: \" +\n \t\t\t\t\t\t\t\t\tresult.moduleId +\n \t\t\t\t\t\t\t\t\t\" in \" +\n \t\t\t\t\t\t\t\t\tresult.parentId +\n \t\t\t\t\t\t\t\t\tchainInfo\n \t\t\t\t\t\t\t);\n \t\t\t\t\t\tbreak;\n \t\t\t\t\tcase \"unaccepted\":\n \t\t\t\t\t\tif (options.onUnaccepted) options.onUnaccepted(result);\n \t\t\t\t\t\tif (!options.ignoreUnaccepted)\n \t\t\t\t\t\t\tabortError = new Error(\n \t\t\t\t\t\t\t\t\"Aborted because \" + moduleId + \" is not accepted\" + chainInfo\n \t\t\t\t\t\t\t);\n \t\t\t\t\t\tbreak;\n \t\t\t\t\tcase \"accepted\":\n \t\t\t\t\t\tif (options.onAccepted) options.onAccepted(result);\n \t\t\t\t\t\tdoApply = true;\n \t\t\t\t\t\tbreak;\n \t\t\t\t\tcase \"disposed\":\n \t\t\t\t\t\tif (options.onDisposed) options.onDisposed(result);\n \t\t\t\t\t\tdoDispose = true;\n \t\t\t\t\t\tbreak;\n \t\t\t\t\tdefault:\n \t\t\t\t\t\tthrow new Error(\"Unexception type \" + result.type);\n \t\t\t\t}\n \t\t\t\tif (abortError) {\n \t\t\t\t\thotSetStatus(\"abort\");\n \t\t\t\t\treturn Promise.reject(abortError);\n \t\t\t\t}\n \t\t\t\tif (doApply) {\n \t\t\t\t\tappliedUpdate[moduleId] = hotUpdate[moduleId];\n \t\t\t\t\taddAllToSet(outdatedModules, result.outdatedModules);\n \t\t\t\t\tfor (moduleId in result.outdatedDependencies) {\n \t\t\t\t\t\tif (\n \t\t\t\t\t\t\tObject.prototype.hasOwnProperty.call(\n \t\t\t\t\t\t\t\tresult.outdatedDependencies,\n \t\t\t\t\t\t\t\tmoduleId\n \t\t\t\t\t\t\t)\n \t\t\t\t\t\t) {\n \t\t\t\t\t\t\tif (!outdatedDependencies[moduleId])\n \t\t\t\t\t\t\t\toutdatedDependencies[moduleId] = [];\n \t\t\t\t\t\t\taddAllToSet(\n \t\t\t\t\t\t\t\toutdatedDependencies[moduleId],\n \t\t\t\t\t\t\t\tresult.outdatedDependencies[moduleId]\n \t\t\t\t\t\t\t);\n \t\t\t\t\t\t}\n \t\t\t\t\t}\n \t\t\t\t}\n \t\t\t\tif (doDispose) {\n \t\t\t\t\taddAllToSet(outdatedModules, [result.moduleId]);\n \t\t\t\t\tappliedUpdate[moduleId] = warnUnexpectedRequire;\n \t\t\t\t}\n \t\t\t}\n \t\t}\n\n \t\t// Store self accepted outdated modules to require them later by the module system\n \t\tvar outdatedSelfAcceptedModules = [];\n \t\tfor (i = 0; i < outdatedModules.length; i++) {\n \t\t\tmoduleId = outdatedModules[i];\n \t\t\tif (\n \t\t\t\tinstalledModules[moduleId] &&\n \t\t\t\tinstalledModules[moduleId].hot._selfAccepted &&\n \t\t\t\t// removed self-accepted modules should not be required\n \t\t\t\tappliedUpdate[moduleId] !== warnUnexpectedRequire\n \t\t\t) {\n \t\t\t\toutdatedSelfAcceptedModules.push({\n \t\t\t\t\tmodule: moduleId,\n \t\t\t\t\terrorHandler: installedModules[moduleId].hot._selfAccepted\n \t\t\t\t});\n \t\t\t}\n \t\t}\n\n \t\t// Now in \"dispose\" phase\n \t\thotSetStatus(\"dispose\");\n \t\tObject.keys(hotAvailableFilesMap).forEach(function(chunkId) {\n \t\t\tif (hotAvailableFilesMap[chunkId] === false) {\n \t\t\t\thotDisposeChunk(chunkId);\n \t\t\t}\n \t\t});\n\n \t\tvar idx;\n \t\tvar queue = outdatedModules.slice();\n \t\twhile (queue.length > 0) {\n \t\t\tmoduleId = queue.pop();\n \t\t\tmodule = installedModules[moduleId];\n \t\t\tif (!module) continue;\n\n \t\t\tvar data = {};\n\n \t\t\t// Call dispose handlers\n \t\t\tvar disposeHandlers = module.hot._disposeHandlers;\n \t\t\tfor (j = 0; j < disposeHandlers.length; j++) {\n \t\t\t\tcb = disposeHandlers[j];\n \t\t\t\tcb(data);\n \t\t\t}\n \t\t\thotCurrentModuleData[moduleId] = data;\n\n \t\t\t// disable module (this disables requires from this module)\n \t\t\tmodule.hot.active = false;\n\n \t\t\t// remove module from cache\n \t\t\tdelete installedModules[moduleId];\n\n \t\t\t// when disposing there is no need to call dispose handler\n \t\t\tdelete outdatedDependencies[moduleId];\n\n \t\t\t// remove \"parents\" references from all children\n \t\t\tfor (j = 0; j < module.children.length; j++) {\n \t\t\t\tvar child = installedModules[module.children[j]];\n \t\t\t\tif (!child) continue;\n \t\t\t\tidx = child.parents.indexOf(moduleId);\n \t\t\t\tif (idx >= 0) {\n \t\t\t\t\tchild.parents.splice(idx, 1);\n \t\t\t\t}\n \t\t\t}\n \t\t}\n\n \t\t// remove outdated dependency from module children\n \t\tvar dependency;\n \t\tvar moduleOutdatedDependencies;\n \t\tfor (moduleId in outdatedDependencies) {\n \t\t\tif (\n \t\t\t\tObject.prototype.hasOwnProperty.call(outdatedDependencies, moduleId)\n \t\t\t) {\n \t\t\t\tmodule = installedModules[moduleId];\n \t\t\t\tif (module) {\n \t\t\t\t\tmoduleOutdatedDependencies = outdatedDependencies[moduleId];\n \t\t\t\t\tfor (j = 0; j < moduleOutdatedDependencies.length; j++) {\n \t\t\t\t\t\tdependency = moduleOutdatedDependencies[j];\n \t\t\t\t\t\tidx = module.children.indexOf(dependency);\n \t\t\t\t\t\tif (idx >= 0) module.children.splice(idx, 1);\n \t\t\t\t\t}\n \t\t\t\t}\n \t\t\t}\n \t\t}\n\n \t\t// Now in \"apply\" phase\n \t\thotSetStatus(\"apply\");\n\n \t\thotCurrentHash = hotUpdateNewHash;\n\n \t\t// insert new code\n \t\tfor (moduleId in appliedUpdate) {\n \t\t\tif (Object.prototype.hasOwnProperty.call(appliedUpdate, moduleId)) {\n \t\t\t\tmodules[moduleId] = appliedUpdate[moduleId];\n \t\t\t}\n \t\t}\n\n \t\t// call accept handlers\n \t\tvar error = null;\n \t\tfor (moduleId in outdatedDependencies) {\n \t\t\tif (\n \t\t\t\tObject.prototype.hasOwnProperty.call(outdatedDependencies, moduleId)\n \t\t\t) {\n \t\t\t\tmodule = installedModules[moduleId];\n \t\t\t\tif (module) {\n \t\t\t\t\tmoduleOutdatedDependencies = outdatedDependencies[moduleId];\n \t\t\t\t\tvar callbacks = [];\n \t\t\t\t\tfor (i = 0; i < moduleOutdatedDependencies.length; i++) {\n \t\t\t\t\t\tdependency = moduleOutdatedDependencies[i];\n \t\t\t\t\t\tcb = module.hot._acceptedDependencies[dependency];\n \t\t\t\t\t\tif (cb) {\n \t\t\t\t\t\t\tif (callbacks.indexOf(cb) !== -1) continue;\n \t\t\t\t\t\t\tcallbacks.push(cb);\n \t\t\t\t\t\t}\n \t\t\t\t\t}\n \t\t\t\t\tfor (i = 0; i < callbacks.length; i++) {\n \t\t\t\t\t\tcb = callbacks[i];\n \t\t\t\t\t\ttry {\n \t\t\t\t\t\t\tcb(moduleOutdatedDependencies);\n \t\t\t\t\t\t} catch (err) {\n \t\t\t\t\t\t\tif (options.onErrored) {\n \t\t\t\t\t\t\t\toptions.onErrored({\n \t\t\t\t\t\t\t\t\ttype: \"accept-errored\",\n \t\t\t\t\t\t\t\t\tmoduleId: moduleId,\n \t\t\t\t\t\t\t\t\tdependencyId: moduleOutdatedDependencies[i],\n \t\t\t\t\t\t\t\t\terror: err\n \t\t\t\t\t\t\t\t});\n \t\t\t\t\t\t\t}\n \t\t\t\t\t\t\tif (!options.ignoreErrored) {\n \t\t\t\t\t\t\t\tif (!error) error = err;\n \t\t\t\t\t\t\t}\n \t\t\t\t\t\t}\n \t\t\t\t\t}\n \t\t\t\t}\n \t\t\t}\n \t\t}\n\n \t\t// Load self accepted modules\n \t\tfor (i = 0; i < outdatedSelfAcceptedModules.length; i++) {\n \t\t\tvar item = outdatedSelfAcceptedModules[i];\n \t\t\tmoduleId = item.module;\n \t\t\thotCurrentParents = [moduleId];\n \t\t\ttry {\n \t\t\t\t__webpack_require__(moduleId);\n \t\t\t} catch (err) {\n \t\t\t\tif (typeof item.errorHandler === \"function\") {\n \t\t\t\t\ttry {\n \t\t\t\t\t\titem.errorHandler(err);\n \t\t\t\t\t} catch (err2) {\n \t\t\t\t\t\tif (options.onErrored) {\n \t\t\t\t\t\t\toptions.onErrored({\n \t\t\t\t\t\t\t\ttype: \"self-accept-error-handler-errored\",\n \t\t\t\t\t\t\t\tmoduleId: moduleId,\n \t\t\t\t\t\t\t\terror: err2,\n \t\t\t\t\t\t\t\toriginalError: err\n \t\t\t\t\t\t\t});\n \t\t\t\t\t\t}\n \t\t\t\t\t\tif (!options.ignoreErrored) {\n \t\t\t\t\t\t\tif (!error) error = err2;\n \t\t\t\t\t\t}\n \t\t\t\t\t\tif (!error) error = err;\n \t\t\t\t\t}\n \t\t\t\t} else {\n \t\t\t\t\tif (options.onErrored) {\n \t\t\t\t\t\toptions.onErrored({\n \t\t\t\t\t\t\ttype: \"self-accept-errored\",\n \t\t\t\t\t\t\tmoduleId: moduleId,\n \t\t\t\t\t\t\terror: err\n \t\t\t\t\t\t});\n \t\t\t\t\t}\n \t\t\t\t\tif (!options.ignoreErrored) {\n \t\t\t\t\t\tif (!error) error = err;\n \t\t\t\t\t}\n \t\t\t\t}\n \t\t\t}\n \t\t}\n\n \t\t// handle errors in accept handlers and self accepted module load\n \t\tif (error) {\n \t\t\thotSetStatus(\"fail\");\n \t\t\treturn Promise.reject(error);\n \t\t}\n\n \t\thotSetStatus(\"idle\");\n \t\treturn new Promise(function(resolve) {\n \t\t\tresolve(outdatedModules);\n \t\t});\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {},\n \t\t\thot: hotCreateModule(moduleId),\n \t\t\tparents: (hotCurrentParentsTemp = hotCurrentParents, hotCurrentParents = [], hotCurrentParentsTemp),\n \t\t\tchildren: []\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, hotCreateRequire(moduleId));\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// __webpack_hash__\n \t__webpack_require__.h = function() { return hotCurrentHash; };\n\n\n \t// Load entry module and return exports\n \treturn hotCreateRequire(\"./index.js\")(__webpack_require__.s = \"./index.js\");\n","\n// Re-exported modules required for POS vendors\nexport {Spi} from './src/Spi';\nexport {Logger} from './src/Logger';\nexport {Secrets} from './src/Secrets';\nexport {SuccessState} from './src/Messages';\nexport {TransactionOptions, TransactionType, SpiFlow, SpiStatus} from './src/SpiModels';\nexport {PrintingResponse} from './src/Printing';\nexport {RefundResponse, PurchaseResponse, GetLastTransactionResponse, MotoPurchaseResponse} from './src/Purchase';\nexport {TerminalStatusResponse, TerminalBattery} from './src/TerminalStatus';\nexport {CashoutOnlyResponse} from './src/Cashout';\nexport {Settlement} from './src/Settlement';\nexport {RequestIdHelper} from './src/RequestIdHelper';\nexport {DeviceAddressResponseCode} from './src/Service/DeviceService';\nexport {BillStatusResponse, BillRetrievalResult, GetOpenTablesResponse, OpenTablesEntry, BillPaymentFlowEndedResponse} from './src/PayAtTable';\nexport {PreauthResponse} from './src/Preauth';\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}\n\nmodule.exports = _asyncToGenerator;","function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nmodule.exports = _classCallCheck;","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nmodule.exports = _createClass;","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunctionPrototype[toStringTagSymbol] =\n    GeneratorFunction.displayName = \"GeneratorFunction\";\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      prototype[method] = function(arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      if (!(toStringTagSymbol in genFun)) {\n        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n      }\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return Promise.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return Promise.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new Promise(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList) {\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList)\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  Gp[toStringTagSymbol] = \"Generator\";\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n","module.exports = require(\"regenerator-runtime\");\n","/*! MIT License. Copyright 2015-2018 Richard Moore <me@ricmoo.com>. See LICENSE.txt. */\n(function(root) {\n    \"use strict\";\n\n    function checkInt(value) {\n        return (parseInt(value) === value);\n    }\n\n    function checkInts(arrayish) {\n        if (!checkInt(arrayish.length)) { return false; }\n\n        for (var i = 0; i < arrayish.length; i++) {\n            if (!checkInt(arrayish[i]) || arrayish[i] < 0 || arrayish[i] > 255) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    function coerceArray(arg, copy) {\n\n        // ArrayBuffer view\n        if (arg.buffer && arg.name === 'Uint8Array') {\n\n            if (copy) {\n                if (arg.slice) {\n                    arg = arg.slice();\n                } else {\n                    arg = Array.prototype.slice.call(arg);\n                }\n            }\n\n            return arg;\n        }\n\n        // It's an array; check it is a valid representation of a byte\n        if (Array.isArray(arg)) {\n            if (!checkInts(arg)) {\n                throw new Error('Array contains invalid value: ' + arg);\n            }\n\n            return new Uint8Array(arg);\n        }\n\n        // Something else, but behaves like an array (maybe a Buffer? Arguments?)\n        if (checkInt(arg.length) && checkInts(arg)) {\n            return new Uint8Array(arg);\n        }\n\n        throw new Error('unsupported array-like object');\n    }\n\n    function createArray(length) {\n        return new Uint8Array(length);\n    }\n\n    function copyArray(sourceArray, targetArray, targetStart, sourceStart, sourceEnd) {\n        if (sourceStart != null || sourceEnd != null) {\n            if (sourceArray.slice) {\n                sourceArray = sourceArray.slice(sourceStart, sourceEnd);\n            } else {\n                sourceArray = Array.prototype.slice.call(sourceArray, sourceStart, sourceEnd);\n            }\n        }\n        targetArray.set(sourceArray, targetStart);\n    }\n\n\n\n    var convertUtf8 = (function() {\n        function toBytes(text) {\n            var result = [], i = 0;\n            text = encodeURI(text);\n            while (i < text.length) {\n                var c = text.charCodeAt(i++);\n\n                // if it is a % sign, encode the following 2 bytes as a hex value\n                if (c === 37) {\n                    result.push(parseInt(text.substr(i, 2), 16))\n                    i += 2;\n\n                // otherwise, just the actual byte\n                } else {\n                    result.push(c)\n                }\n            }\n\n            return coerceArray(result);\n        }\n\n        function fromBytes(bytes) {\n            var result = [], i = 0;\n\n            while (i < bytes.length) {\n                var c = bytes[i];\n\n                if (c < 128) {\n                    result.push(String.fromCharCode(c));\n                    i++;\n                } else if (c > 191 && c < 224) {\n                    result.push(String.fromCharCode(((c & 0x1f) << 6) | (bytes[i + 1] & 0x3f)));\n                    i += 2;\n                } else {\n                    result.push(String.fromCharCode(((c & 0x0f) << 12) | ((bytes[i + 1] & 0x3f) << 6) | (bytes[i + 2] & 0x3f)));\n                    i += 3;\n                }\n            }\n\n            return result.join('');\n        }\n\n        return {\n            toBytes: toBytes,\n            fromBytes: fromBytes,\n        }\n    })();\n\n    var convertHex = (function() {\n        function toBytes(text) {\n            var result = [];\n            for (var i = 0; i < text.length; i += 2) {\n                result.push(parseInt(text.substr(i, 2), 16));\n            }\n\n            return result;\n        }\n\n        // http://ixti.net/development/javascript/2011/11/11/base64-encodedecode-of-utf8-in-browser-with-js.html\n        var Hex = '0123456789abcdef';\n\n        function fromBytes(bytes) {\n                var result = [];\n                for (var i = 0; i < bytes.length; i++) {\n                    var v = bytes[i];\n                    result.push(Hex[(v & 0xf0) >> 4] + Hex[v & 0x0f]);\n                }\n                return result.join('');\n        }\n\n        return {\n            toBytes: toBytes,\n            fromBytes: fromBytes,\n        }\n    })();\n\n\n    // Number of rounds by keysize\n    var numberOfRounds = {16: 10, 24: 12, 32: 14}\n\n    // Round constant words\n    var rcon = [0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36, 0x6c, 0xd8, 0xab, 0x4d, 0x9a, 0x2f, 0x5e, 0xbc, 0x63, 0xc6, 0x97, 0x35, 0x6a, 0xd4, 0xb3, 0x7d, 0xfa, 0xef, 0xc5, 0x91];\n\n    // S-box and Inverse S-box (S is for Substitution)\n    var S = [0x63, 0x7c, 0x77, 0x7b, 0xf2, 0x6b, 0x6f, 0xc5, 0x30, 0x01, 0x67, 0x2b, 0xfe, 0xd7, 0xab, 0x76, 0xca, 0x82, 0xc9, 0x7d, 0xfa, 0x59, 0x47, 0xf0, 0xad, 0xd4, 0xa2, 0xaf, 0x9c, 0xa4, 0x72, 0xc0, 0xb7, 0xfd, 0x93, 0x26, 0x36, 0x3f, 0xf7, 0xcc, 0x34, 0xa5, 0xe5, 0xf1, 0x71, 0xd8, 0x31, 0x15, 0x04, 0xc7, 0x23, 0xc3, 0x18, 0x96, 0x05, 0x9a, 0x07, 0x12, 0x80, 0xe2, 0xeb, 0x27, 0xb2, 0x75, 0x09, 0x83, 0x2c, 0x1a, 0x1b, 0x6e, 0x5a, 0xa0, 0x52, 0x3b, 0xd6, 0xb3, 0x29, 0xe3, 0x2f, 0x84, 0x53, 0xd1, 0x00, 0xed, 0x20, 0xfc, 0xb1, 0x5b, 0x6a, 0xcb, 0xbe, 0x39, 0x4a, 0x4c, 0x58, 0xcf, 0xd0, 0xef, 0xaa, 0xfb, 0x43, 0x4d, 0x33, 0x85, 0x45, 0xf9, 0x02, 0x7f, 0x50, 0x3c, 0x9f, 0xa8, 0x51, 0xa3, 0x40, 0x8f, 0x92, 0x9d, 0x38, 0xf5, 0xbc, 0xb6, 0xda, 0x21, 0x10, 0xff, 0xf3, 0xd2, 0xcd, 0x0c, 0x13, 0xec, 0x5f, 0x97, 0x44, 0x17, 0xc4, 0xa7, 0x7e, 0x3d, 0x64, 0x5d, 0x19, 0x73, 0x60, 0x81, 0x4f, 0xdc, 0x22, 0x2a, 0x90, 0x88, 0x46, 0xee, 0xb8, 0x14, 0xde, 0x5e, 0x0b, 0xdb, 0xe0, 0x32, 0x3a, 0x0a, 0x49, 0x06, 0x24, 0x5c, 0xc2, 0xd3, 0xac, 0x62, 0x91, 0x95, 0xe4, 0x79, 0xe7, 0xc8, 0x37, 0x6d, 0x8d, 0xd5, 0x4e, 0xa9, 0x6c, 0x56, 0xf4, 0xea, 0x65, 0x7a, 0xae, 0x08, 0xba, 0x78, 0x25, 0x2e, 0x1c, 0xa6, 0xb4, 0xc6, 0xe8, 0xdd, 0x74, 0x1f, 0x4b, 0xbd, 0x8b, 0x8a, 0x70, 0x3e, 0xb5, 0x66, 0x48, 0x03, 0xf6, 0x0e, 0x61, 0x35, 0x57, 0xb9, 0x86, 0xc1, 0x1d, 0x9e, 0xe1, 0xf8, 0x98, 0x11, 0x69, 0xd9, 0x8e, 0x94, 0x9b, 0x1e, 0x87, 0xe9, 0xce, 0x55, 0x28, 0xdf, 0x8c, 0xa1, 0x89, 0x0d, 0xbf, 0xe6, 0x42, 0x68, 0x41, 0x99, 0x2d, 0x0f, 0xb0, 0x54, 0xbb, 0x16];\n    var Si =[0x52, 0x09, 0x6a, 0xd5, 0x30, 0x36, 0xa5, 0x38, 0xbf, 0x40, 0xa3, 0x9e, 0x81, 0xf3, 0xd7, 0xfb, 0x7c, 0xe3, 0x39, 0x82, 0x9b, 0x2f, 0xff, 0x87, 0x34, 0x8e, 0x43, 0x44, 0xc4, 0xde, 0xe9, 0xcb, 0x54, 0x7b, 0x94, 0x32, 0xa6, 0xc2, 0x23, 0x3d, 0xee, 0x4c, 0x95, 0x0b, 0x42, 0xfa, 0xc3, 0x4e, 0x08, 0x2e, 0xa1, 0x66, 0x28, 0xd9, 0x24, 0xb2, 0x76, 0x5b, 0xa2, 0x49, 0x6d, 0x8b, 0xd1, 0x25, 0x72, 0xf8, 0xf6, 0x64, 0x86, 0x68, 0x98, 0x16, 0xd4, 0xa4, 0x5c, 0xcc, 0x5d, 0x65, 0xb6, 0x92, 0x6c, 0x70, 0x48, 0x50, 0xfd, 0xed, 0xb9, 0xda, 0x5e, 0x15, 0x46, 0x57, 0xa7, 0x8d, 0x9d, 0x84, 0x90, 0xd8, 0xab, 0x00, 0x8c, 0xbc, 0xd3, 0x0a, 0xf7, 0xe4, 0x58, 0x05, 0xb8, 0xb3, 0x45, 0x06, 0xd0, 0x2c, 0x1e, 0x8f, 0xca, 0x3f, 0x0f, 0x02, 0xc1, 0xaf, 0xbd, 0x03, 0x01, 0x13, 0x8a, 0x6b, 0x3a, 0x91, 0x11, 0x41, 0x4f, 0x67, 0xdc, 0xea, 0x97, 0xf2, 0xcf, 0xce, 0xf0, 0xb4, 0xe6, 0x73, 0x96, 0xac, 0x74, 0x22, 0xe7, 0xad, 0x35, 0x85, 0xe2, 0xf9, 0x37, 0xe8, 0x1c, 0x75, 0xdf, 0x6e, 0x47, 0xf1, 0x1a, 0x71, 0x1d, 0x29, 0xc5, 0x89, 0x6f, 0xb7, 0x62, 0x0e, 0xaa, 0x18, 0xbe, 0x1b, 0xfc, 0x56, 0x3e, 0x4b, 0xc6, 0xd2, 0x79, 0x20, 0x9a, 0xdb, 0xc0, 0xfe, 0x78, 0xcd, 0x5a, 0xf4, 0x1f, 0xdd, 0xa8, 0x33, 0x88, 0x07, 0xc7, 0x31, 0xb1, 0x12, 0x10, 0x59, 0x27, 0x80, 0xec, 0x5f, 0x60, 0x51, 0x7f, 0xa9, 0x19, 0xb5, 0x4a, 0x0d, 0x2d, 0xe5, 0x7a, 0x9f, 0x93, 0xc9, 0x9c, 0xef, 0xa0, 0xe0, 0x3b, 0x4d, 0xae, 0x2a, 0xf5, 0xb0, 0xc8, 0xeb, 0xbb, 0x3c, 0x83, 0x53, 0x99, 0x61, 0x17, 0x2b, 0x04, 0x7e, 0xba, 0x77, 0xd6, 0x26, 0xe1, 0x69, 0x14, 0x63, 0x55, 0x21, 0x0c, 0x7d];\n\n    // Transformations for encryption\n    var T1 = [0xc66363a5, 0xf87c7c84, 0xee777799, 0xf67b7b8d, 0xfff2f20d, 0xd66b6bbd, 0xde6f6fb1, 0x91c5c554, 0x60303050, 0x02010103, 0xce6767a9, 0x562b2b7d, 0xe7fefe19, 0xb5d7d762, 0x4dababe6, 0xec76769a, 0x8fcaca45, 0x1f82829d, 0x89c9c940, 0xfa7d7d87, 0xeffafa15, 0xb25959eb, 0x8e4747c9, 0xfbf0f00b, 0x41adadec, 0xb3d4d467, 0x5fa2a2fd, 0x45afafea, 0x239c9cbf, 0x53a4a4f7, 0xe4727296, 0x9bc0c05b, 0x75b7b7c2, 0xe1fdfd1c, 0x3d9393ae, 0x4c26266a, 0x6c36365a, 0x7e3f3f41, 0xf5f7f702, 0x83cccc4f, 0x6834345c, 0x51a5a5f4, 0xd1e5e534, 0xf9f1f108, 0xe2717193, 0xabd8d873, 0x62313153, 0x2a15153f, 0x0804040c, 0x95c7c752, 0x46232365, 0x9dc3c35e, 0x30181828, 0x379696a1, 0x0a05050f, 0x2f9a9ab5, 0x0e070709, 0x24121236, 0x1b80809b, 0xdfe2e23d, 0xcdebeb26, 0x4e272769, 0x7fb2b2cd, 0xea75759f, 0x1209091b, 0x1d83839e, 0x582c2c74, 0x341a1a2e, 0x361b1b2d, 0xdc6e6eb2, 0xb45a5aee, 0x5ba0a0fb, 0xa45252f6, 0x763b3b4d, 0xb7d6d661, 0x7db3b3ce, 0x5229297b, 0xdde3e33e, 0x5e2f2f71, 0x13848497, 0xa65353f5, 0xb9d1d168, 0x00000000, 0xc1eded2c, 0x40202060, 0xe3fcfc1f, 0x79b1b1c8, 0xb65b5bed, 0xd46a6abe, 0x8dcbcb46, 0x67bebed9, 0x7239394b, 0x944a4ade, 0x984c4cd4, 0xb05858e8, 0x85cfcf4a, 0xbbd0d06b, 0xc5efef2a, 0x4faaaae5, 0xedfbfb16, 0x864343c5, 0x9a4d4dd7, 0x66333355, 0x11858594, 0x8a4545cf, 0xe9f9f910, 0x04020206, 0xfe7f7f81, 0xa05050f0, 0x783c3c44, 0x259f9fba, 0x4ba8a8e3, 0xa25151f3, 0x5da3a3fe, 0x804040c0, 0x058f8f8a, 0x3f9292ad, 0x219d9dbc, 0x70383848, 0xf1f5f504, 0x63bcbcdf, 0x77b6b6c1, 0xafdada75, 0x42212163, 0x20101030, 0xe5ffff1a, 0xfdf3f30e, 0xbfd2d26d, 0x81cdcd4c, 0x180c0c14, 0x26131335, 0xc3ecec2f, 0xbe5f5fe1, 0x359797a2, 0x884444cc, 0x2e171739, 0x93c4c457, 0x55a7a7f2, 0xfc7e7e82, 0x7a3d3d47, 0xc86464ac, 0xba5d5de7, 0x3219192b, 0xe6737395, 0xc06060a0, 0x19818198, 0x9e4f4fd1, 0xa3dcdc7f, 0x44222266, 0x542a2a7e, 0x3b9090ab, 0x0b888883, 0x8c4646ca, 0xc7eeee29, 0x6bb8b8d3, 0x2814143c, 0xa7dede79, 0xbc5e5ee2, 0x160b0b1d, 0xaddbdb76, 0xdbe0e03b, 0x64323256, 0x743a3a4e, 0x140a0a1e, 0x924949db, 0x0c06060a, 0x4824246c, 0xb85c5ce4, 0x9fc2c25d, 0xbdd3d36e, 0x43acacef, 0xc46262a6, 0x399191a8, 0x319595a4, 0xd3e4e437, 0xf279798b, 0xd5e7e732, 0x8bc8c843, 0x6e373759, 0xda6d6db7, 0x018d8d8c, 0xb1d5d564, 0x9c4e4ed2, 0x49a9a9e0, 0xd86c6cb4, 0xac5656fa, 0xf3f4f407, 0xcfeaea25, 0xca6565af, 0xf47a7a8e, 0x47aeaee9, 0x10080818, 0x6fbabad5, 0xf0787888, 0x4a25256f, 0x5c2e2e72, 0x381c1c24, 0x57a6a6f1, 0x73b4b4c7, 0x97c6c651, 0xcbe8e823, 0xa1dddd7c, 0xe874749c, 0x3e1f1f21, 0x964b4bdd, 0x61bdbddc, 0x0d8b8b86, 0x0f8a8a85, 0xe0707090, 0x7c3e3e42, 0x71b5b5c4, 0xcc6666aa, 0x904848d8, 0x06030305, 0xf7f6f601, 0x1c0e0e12, 0xc26161a3, 0x6a35355f, 0xae5757f9, 0x69b9b9d0, 0x17868691, 0x99c1c158, 0x3a1d1d27, 0x279e9eb9, 0xd9e1e138, 0xebf8f813, 0x2b9898b3, 0x22111133, 0xd26969bb, 0xa9d9d970, 0x078e8e89, 0x339494a7, 0x2d9b9bb6, 0x3c1e1e22, 0x15878792, 0xc9e9e920, 0x87cece49, 0xaa5555ff, 0x50282878, 0xa5dfdf7a, 0x038c8c8f, 0x59a1a1f8, 0x09898980, 0x1a0d0d17, 0x65bfbfda, 0xd7e6e631, 0x844242c6, 0xd06868b8, 0x824141c3, 0x299999b0, 0x5a2d2d77, 0x1e0f0f11, 0x7bb0b0cb, 0xa85454fc, 0x6dbbbbd6, 0x2c16163a];\n    var T2 = [0xa5c66363, 0x84f87c7c, 0x99ee7777, 0x8df67b7b, 0x0dfff2f2, 0xbdd66b6b, 0xb1de6f6f, 0x5491c5c5, 0x50603030, 0x03020101, 0xa9ce6767, 0x7d562b2b, 0x19e7fefe, 0x62b5d7d7, 0xe64dabab, 0x9aec7676, 0x458fcaca, 0x9d1f8282, 0x4089c9c9, 0x87fa7d7d, 0x15effafa, 0xebb25959, 0xc98e4747, 0x0bfbf0f0, 0xec41adad, 0x67b3d4d4, 0xfd5fa2a2, 0xea45afaf, 0xbf239c9c, 0xf753a4a4, 0x96e47272, 0x5b9bc0c0, 0xc275b7b7, 0x1ce1fdfd, 0xae3d9393, 0x6a4c2626, 0x5a6c3636, 0x417e3f3f, 0x02f5f7f7, 0x4f83cccc, 0x5c683434, 0xf451a5a5, 0x34d1e5e5, 0x08f9f1f1, 0x93e27171, 0x73abd8d8, 0x53623131, 0x3f2a1515, 0x0c080404, 0x5295c7c7, 0x65462323, 0x5e9dc3c3, 0x28301818, 0xa1379696, 0x0f0a0505, 0xb52f9a9a, 0x090e0707, 0x36241212, 0x9b1b8080, 0x3ddfe2e2, 0x26cdebeb, 0x694e2727, 0xcd7fb2b2, 0x9fea7575, 0x1b120909, 0x9e1d8383, 0x74582c2c, 0x2e341a1a, 0x2d361b1b, 0xb2dc6e6e, 0xeeb45a5a, 0xfb5ba0a0, 0xf6a45252, 0x4d763b3b, 0x61b7d6d6, 0xce7db3b3, 0x7b522929, 0x3edde3e3, 0x715e2f2f, 0x97138484, 0xf5a65353, 0x68b9d1d1, 0x00000000, 0x2cc1eded, 0x60402020, 0x1fe3fcfc, 0xc879b1b1, 0xedb65b5b, 0xbed46a6a, 0x468dcbcb, 0xd967bebe, 0x4b723939, 0xde944a4a, 0xd4984c4c, 0xe8b05858, 0x4a85cfcf, 0x6bbbd0d0, 0x2ac5efef, 0xe54faaaa, 0x16edfbfb, 0xc5864343, 0xd79a4d4d, 0x55663333, 0x94118585, 0xcf8a4545, 0x10e9f9f9, 0x06040202, 0x81fe7f7f, 0xf0a05050, 0x44783c3c, 0xba259f9f, 0xe34ba8a8, 0xf3a25151, 0xfe5da3a3, 0xc0804040, 0x8a058f8f, 0xad3f9292, 0xbc219d9d, 0x48703838, 0x04f1f5f5, 0xdf63bcbc, 0xc177b6b6, 0x75afdada, 0x63422121, 0x30201010, 0x1ae5ffff, 0x0efdf3f3, 0x6dbfd2d2, 0x4c81cdcd, 0x14180c0c, 0x35261313, 0x2fc3ecec, 0xe1be5f5f, 0xa2359797, 0xcc884444, 0x392e1717, 0x5793c4c4, 0xf255a7a7, 0x82fc7e7e, 0x477a3d3d, 0xacc86464, 0xe7ba5d5d, 0x2b321919, 0x95e67373, 0xa0c06060, 0x98198181, 0xd19e4f4f, 0x7fa3dcdc, 0x66442222, 0x7e542a2a, 0xab3b9090, 0x830b8888, 0xca8c4646, 0x29c7eeee, 0xd36bb8b8, 0x3c281414, 0x79a7dede, 0xe2bc5e5e, 0x1d160b0b, 0x76addbdb, 0x3bdbe0e0, 0x56643232, 0x4e743a3a, 0x1e140a0a, 0xdb924949, 0x0a0c0606, 0x6c482424, 0xe4b85c5c, 0x5d9fc2c2, 0x6ebdd3d3, 0xef43acac, 0xa6c46262, 0xa8399191, 0xa4319595, 0x37d3e4e4, 0x8bf27979, 0x32d5e7e7, 0x438bc8c8, 0x596e3737, 0xb7da6d6d, 0x8c018d8d, 0x64b1d5d5, 0xd29c4e4e, 0xe049a9a9, 0xb4d86c6c, 0xfaac5656, 0x07f3f4f4, 0x25cfeaea, 0xafca6565, 0x8ef47a7a, 0xe947aeae, 0x18100808, 0xd56fbaba, 0x88f07878, 0x6f4a2525, 0x725c2e2e, 0x24381c1c, 0xf157a6a6, 0xc773b4b4, 0x5197c6c6, 0x23cbe8e8, 0x7ca1dddd, 0x9ce87474, 0x213e1f1f, 0xdd964b4b, 0xdc61bdbd, 0x860d8b8b, 0x850f8a8a, 0x90e07070, 0x427c3e3e, 0xc471b5b5, 0xaacc6666, 0xd8904848, 0x05060303, 0x01f7f6f6, 0x121c0e0e, 0xa3c26161, 0x5f6a3535, 0xf9ae5757, 0xd069b9b9, 0x91178686, 0x5899c1c1, 0x273a1d1d, 0xb9279e9e, 0x38d9e1e1, 0x13ebf8f8, 0xb32b9898, 0x33221111, 0xbbd26969, 0x70a9d9d9, 0x89078e8e, 0xa7339494, 0xb62d9b9b, 0x223c1e1e, 0x92158787, 0x20c9e9e9, 0x4987cece, 0xffaa5555, 0x78502828, 0x7aa5dfdf, 0x8f038c8c, 0xf859a1a1, 0x80098989, 0x171a0d0d, 0xda65bfbf, 0x31d7e6e6, 0xc6844242, 0xb8d06868, 0xc3824141, 0xb0299999, 0x775a2d2d, 0x111e0f0f, 0xcb7bb0b0, 0xfca85454, 0xd66dbbbb, 0x3a2c1616];\n    var T3 = [0x63a5c663, 0x7c84f87c, 0x7799ee77, 0x7b8df67b, 0xf20dfff2, 0x6bbdd66b, 0x6fb1de6f, 0xc55491c5, 0x30506030, 0x01030201, 0x67a9ce67, 0x2b7d562b, 0xfe19e7fe, 0xd762b5d7, 0xabe64dab, 0x769aec76, 0xca458fca, 0x829d1f82, 0xc94089c9, 0x7d87fa7d, 0xfa15effa, 0x59ebb259, 0x47c98e47, 0xf00bfbf0, 0xadec41ad, 0xd467b3d4, 0xa2fd5fa2, 0xafea45af, 0x9cbf239c, 0xa4f753a4, 0x7296e472, 0xc05b9bc0, 0xb7c275b7, 0xfd1ce1fd, 0x93ae3d93, 0x266a4c26, 0x365a6c36, 0x3f417e3f, 0xf702f5f7, 0xcc4f83cc, 0x345c6834, 0xa5f451a5, 0xe534d1e5, 0xf108f9f1, 0x7193e271, 0xd873abd8, 0x31536231, 0x153f2a15, 0x040c0804, 0xc75295c7, 0x23654623, 0xc35e9dc3, 0x18283018, 0x96a13796, 0x050f0a05, 0x9ab52f9a, 0x07090e07, 0x12362412, 0x809b1b80, 0xe23ddfe2, 0xeb26cdeb, 0x27694e27, 0xb2cd7fb2, 0x759fea75, 0x091b1209, 0x839e1d83, 0x2c74582c, 0x1a2e341a, 0x1b2d361b, 0x6eb2dc6e, 0x5aeeb45a, 0xa0fb5ba0, 0x52f6a452, 0x3b4d763b, 0xd661b7d6, 0xb3ce7db3, 0x297b5229, 0xe33edde3, 0x2f715e2f, 0x84971384, 0x53f5a653, 0xd168b9d1, 0x00000000, 0xed2cc1ed, 0x20604020, 0xfc1fe3fc, 0xb1c879b1, 0x5bedb65b, 0x6abed46a, 0xcb468dcb, 0xbed967be, 0x394b7239, 0x4ade944a, 0x4cd4984c, 0x58e8b058, 0xcf4a85cf, 0xd06bbbd0, 0xef2ac5ef, 0xaae54faa, 0xfb16edfb, 0x43c58643, 0x4dd79a4d, 0x33556633, 0x85941185, 0x45cf8a45, 0xf910e9f9, 0x02060402, 0x7f81fe7f, 0x50f0a050, 0x3c44783c, 0x9fba259f, 0xa8e34ba8, 0x51f3a251, 0xa3fe5da3, 0x40c08040, 0x8f8a058f, 0x92ad3f92, 0x9dbc219d, 0x38487038, 0xf504f1f5, 0xbcdf63bc, 0xb6c177b6, 0xda75afda, 0x21634221, 0x10302010, 0xff1ae5ff, 0xf30efdf3, 0xd26dbfd2, 0xcd4c81cd, 0x0c14180c, 0x13352613, 0xec2fc3ec, 0x5fe1be5f, 0x97a23597, 0x44cc8844, 0x17392e17, 0xc45793c4, 0xa7f255a7, 0x7e82fc7e, 0x3d477a3d, 0x64acc864, 0x5de7ba5d, 0x192b3219, 0x7395e673, 0x60a0c060, 0x81981981, 0x4fd19e4f, 0xdc7fa3dc, 0x22664422, 0x2a7e542a, 0x90ab3b90, 0x88830b88, 0x46ca8c46, 0xee29c7ee, 0xb8d36bb8, 0x143c2814, 0xde79a7de, 0x5ee2bc5e, 0x0b1d160b, 0xdb76addb, 0xe03bdbe0, 0x32566432, 0x3a4e743a, 0x0a1e140a, 0x49db9249, 0x060a0c06, 0x246c4824, 0x5ce4b85c, 0xc25d9fc2, 0xd36ebdd3, 0xacef43ac, 0x62a6c462, 0x91a83991, 0x95a43195, 0xe437d3e4, 0x798bf279, 0xe732d5e7, 0xc8438bc8, 0x37596e37, 0x6db7da6d, 0x8d8c018d, 0xd564b1d5, 0x4ed29c4e, 0xa9e049a9, 0x6cb4d86c, 0x56faac56, 0xf407f3f4, 0xea25cfea, 0x65afca65, 0x7a8ef47a, 0xaee947ae, 0x08181008, 0xbad56fba, 0x7888f078, 0x256f4a25, 0x2e725c2e, 0x1c24381c, 0xa6f157a6, 0xb4c773b4, 0xc65197c6, 0xe823cbe8, 0xdd7ca1dd, 0x749ce874, 0x1f213e1f, 0x4bdd964b, 0xbddc61bd, 0x8b860d8b, 0x8a850f8a, 0x7090e070, 0x3e427c3e, 0xb5c471b5, 0x66aacc66, 0x48d89048, 0x03050603, 0xf601f7f6, 0x0e121c0e, 0x61a3c261, 0x355f6a35, 0x57f9ae57, 0xb9d069b9, 0x86911786, 0xc15899c1, 0x1d273a1d, 0x9eb9279e, 0xe138d9e1, 0xf813ebf8, 0x98b32b98, 0x11332211, 0x69bbd269, 0xd970a9d9, 0x8e89078e, 0x94a73394, 0x9bb62d9b, 0x1e223c1e, 0x87921587, 0xe920c9e9, 0xce4987ce, 0x55ffaa55, 0x28785028, 0xdf7aa5df, 0x8c8f038c, 0xa1f859a1, 0x89800989, 0x0d171a0d, 0xbfda65bf, 0xe631d7e6, 0x42c68442, 0x68b8d068, 0x41c38241, 0x99b02999, 0x2d775a2d, 0x0f111e0f, 0xb0cb7bb0, 0x54fca854, 0xbbd66dbb, 0x163a2c16];\n    var T4 = [0x6363a5c6, 0x7c7c84f8, 0x777799ee, 0x7b7b8df6, 0xf2f20dff, 0x6b6bbdd6, 0x6f6fb1de, 0xc5c55491, 0x30305060, 0x01010302, 0x6767a9ce, 0x2b2b7d56, 0xfefe19e7, 0xd7d762b5, 0xababe64d, 0x76769aec, 0xcaca458f, 0x82829d1f, 0xc9c94089, 0x7d7d87fa, 0xfafa15ef, 0x5959ebb2, 0x4747c98e, 0xf0f00bfb, 0xadadec41, 0xd4d467b3, 0xa2a2fd5f, 0xafafea45, 0x9c9cbf23, 0xa4a4f753, 0x727296e4, 0xc0c05b9b, 0xb7b7c275, 0xfdfd1ce1, 0x9393ae3d, 0x26266a4c, 0x36365a6c, 0x3f3f417e, 0xf7f702f5, 0xcccc4f83, 0x34345c68, 0xa5a5f451, 0xe5e534d1, 0xf1f108f9, 0x717193e2, 0xd8d873ab, 0x31315362, 0x15153f2a, 0x04040c08, 0xc7c75295, 0x23236546, 0xc3c35e9d, 0x18182830, 0x9696a137, 0x05050f0a, 0x9a9ab52f, 0x0707090e, 0x12123624, 0x80809b1b, 0xe2e23ddf, 0xebeb26cd, 0x2727694e, 0xb2b2cd7f, 0x75759fea, 0x09091b12, 0x83839e1d, 0x2c2c7458, 0x1a1a2e34, 0x1b1b2d36, 0x6e6eb2dc, 0x5a5aeeb4, 0xa0a0fb5b, 0x5252f6a4, 0x3b3b4d76, 0xd6d661b7, 0xb3b3ce7d, 0x29297b52, 0xe3e33edd, 0x2f2f715e, 0x84849713, 0x5353f5a6, 0xd1d168b9, 0x00000000, 0xeded2cc1, 0x20206040, 0xfcfc1fe3, 0xb1b1c879, 0x5b5bedb6, 0x6a6abed4, 0xcbcb468d, 0xbebed967, 0x39394b72, 0x4a4ade94, 0x4c4cd498, 0x5858e8b0, 0xcfcf4a85, 0xd0d06bbb, 0xefef2ac5, 0xaaaae54f, 0xfbfb16ed, 0x4343c586, 0x4d4dd79a, 0x33335566, 0x85859411, 0x4545cf8a, 0xf9f910e9, 0x02020604, 0x7f7f81fe, 0x5050f0a0, 0x3c3c4478, 0x9f9fba25, 0xa8a8e34b, 0x5151f3a2, 0xa3a3fe5d, 0x4040c080, 0x8f8f8a05, 0x9292ad3f, 0x9d9dbc21, 0x38384870, 0xf5f504f1, 0xbcbcdf63, 0xb6b6c177, 0xdada75af, 0x21216342, 0x10103020, 0xffff1ae5, 0xf3f30efd, 0xd2d26dbf, 0xcdcd4c81, 0x0c0c1418, 0x13133526, 0xecec2fc3, 0x5f5fe1be, 0x9797a235, 0x4444cc88, 0x1717392e, 0xc4c45793, 0xa7a7f255, 0x7e7e82fc, 0x3d3d477a, 0x6464acc8, 0x5d5de7ba, 0x19192b32, 0x737395e6, 0x6060a0c0, 0x81819819, 0x4f4fd19e, 0xdcdc7fa3, 0x22226644, 0x2a2a7e54, 0x9090ab3b, 0x8888830b, 0x4646ca8c, 0xeeee29c7, 0xb8b8d36b, 0x14143c28, 0xdede79a7, 0x5e5ee2bc, 0x0b0b1d16, 0xdbdb76ad, 0xe0e03bdb, 0x32325664, 0x3a3a4e74, 0x0a0a1e14, 0x4949db92, 0x06060a0c, 0x24246c48, 0x5c5ce4b8, 0xc2c25d9f, 0xd3d36ebd, 0xacacef43, 0x6262a6c4, 0x9191a839, 0x9595a431, 0xe4e437d3, 0x79798bf2, 0xe7e732d5, 0xc8c8438b, 0x3737596e, 0x6d6db7da, 0x8d8d8c01, 0xd5d564b1, 0x4e4ed29c, 0xa9a9e049, 0x6c6cb4d8, 0x5656faac, 0xf4f407f3, 0xeaea25cf, 0x6565afca, 0x7a7a8ef4, 0xaeaee947, 0x08081810, 0xbabad56f, 0x787888f0, 0x25256f4a, 0x2e2e725c, 0x1c1c2438, 0xa6a6f157, 0xb4b4c773, 0xc6c65197, 0xe8e823cb, 0xdddd7ca1, 0x74749ce8, 0x1f1f213e, 0x4b4bdd96, 0xbdbddc61, 0x8b8b860d, 0x8a8a850f, 0x707090e0, 0x3e3e427c, 0xb5b5c471, 0x6666aacc, 0x4848d890, 0x03030506, 0xf6f601f7, 0x0e0e121c, 0x6161a3c2, 0x35355f6a, 0x5757f9ae, 0xb9b9d069, 0x86869117, 0xc1c15899, 0x1d1d273a, 0x9e9eb927, 0xe1e138d9, 0xf8f813eb, 0x9898b32b, 0x11113322, 0x6969bbd2, 0xd9d970a9, 0x8e8e8907, 0x9494a733, 0x9b9bb62d, 0x1e1e223c, 0x87879215, 0xe9e920c9, 0xcece4987, 0x5555ffaa, 0x28287850, 0xdfdf7aa5, 0x8c8c8f03, 0xa1a1f859, 0x89898009, 0x0d0d171a, 0xbfbfda65, 0xe6e631d7, 0x4242c684, 0x6868b8d0, 0x4141c382, 0x9999b029, 0x2d2d775a, 0x0f0f111e, 0xb0b0cb7b, 0x5454fca8, 0xbbbbd66d, 0x16163a2c];\n\n    // Transformations for decryption\n    var T5 = [0x51f4a750, 0x7e416553, 0x1a17a4c3, 0x3a275e96, 0x3bab6bcb, 0x1f9d45f1, 0xacfa58ab, 0x4be30393, 0x2030fa55, 0xad766df6, 0x88cc7691, 0xf5024c25, 0x4fe5d7fc, 0xc52acbd7, 0x26354480, 0xb562a38f, 0xdeb15a49, 0x25ba1b67, 0x45ea0e98, 0x5dfec0e1, 0xc32f7502, 0x814cf012, 0x8d4697a3, 0x6bd3f9c6, 0x038f5fe7, 0x15929c95, 0xbf6d7aeb, 0x955259da, 0xd4be832d, 0x587421d3, 0x49e06929, 0x8ec9c844, 0x75c2896a, 0xf48e7978, 0x99583e6b, 0x27b971dd, 0xbee14fb6, 0xf088ad17, 0xc920ac66, 0x7dce3ab4, 0x63df4a18, 0xe51a3182, 0x97513360, 0x62537f45, 0xb16477e0, 0xbb6bae84, 0xfe81a01c, 0xf9082b94, 0x70486858, 0x8f45fd19, 0x94de6c87, 0x527bf8b7, 0xab73d323, 0x724b02e2, 0xe31f8f57, 0x6655ab2a, 0xb2eb2807, 0x2fb5c203, 0x86c57b9a, 0xd33708a5, 0x302887f2, 0x23bfa5b2, 0x02036aba, 0xed16825c, 0x8acf1c2b, 0xa779b492, 0xf307f2f0, 0x4e69e2a1, 0x65daf4cd, 0x0605bed5, 0xd134621f, 0xc4a6fe8a, 0x342e539d, 0xa2f355a0, 0x058ae132, 0xa4f6eb75, 0x0b83ec39, 0x4060efaa, 0x5e719f06, 0xbd6e1051, 0x3e218af9, 0x96dd063d, 0xdd3e05ae, 0x4de6bd46, 0x91548db5, 0x71c45d05, 0x0406d46f, 0x605015ff, 0x1998fb24, 0xd6bde997, 0x894043cc, 0x67d99e77, 0xb0e842bd, 0x07898b88, 0xe7195b38, 0x79c8eedb, 0xa17c0a47, 0x7c420fe9, 0xf8841ec9, 0x00000000, 0x09808683, 0x322bed48, 0x1e1170ac, 0x6c5a724e, 0xfd0efffb, 0x0f853856, 0x3daed51e, 0x362d3927, 0x0a0fd964, 0x685ca621, 0x9b5b54d1, 0x24362e3a, 0x0c0a67b1, 0x9357e70f, 0xb4ee96d2, 0x1b9b919e, 0x80c0c54f, 0x61dc20a2, 0x5a774b69, 0x1c121a16, 0xe293ba0a, 0xc0a02ae5, 0x3c22e043, 0x121b171d, 0x0e090d0b, 0xf28bc7ad, 0x2db6a8b9, 0x141ea9c8, 0x57f11985, 0xaf75074c, 0xee99ddbb, 0xa37f60fd, 0xf701269f, 0x5c72f5bc, 0x44663bc5, 0x5bfb7e34, 0x8b432976, 0xcb23c6dc, 0xb6edfc68, 0xb8e4f163, 0xd731dcca, 0x42638510, 0x13972240, 0x84c61120, 0x854a247d, 0xd2bb3df8, 0xaef93211, 0xc729a16d, 0x1d9e2f4b, 0xdcb230f3, 0x0d8652ec, 0x77c1e3d0, 0x2bb3166c, 0xa970b999, 0x119448fa, 0x47e96422, 0xa8fc8cc4, 0xa0f03f1a, 0x567d2cd8, 0x223390ef, 0x87494ec7, 0xd938d1c1, 0x8ccaa2fe, 0x98d40b36, 0xa6f581cf, 0xa57ade28, 0xdab78e26, 0x3fadbfa4, 0x2c3a9de4, 0x5078920d, 0x6a5fcc9b, 0x547e4662, 0xf68d13c2, 0x90d8b8e8, 0x2e39f75e, 0x82c3aff5, 0x9f5d80be, 0x69d0937c, 0x6fd52da9, 0xcf2512b3, 0xc8ac993b, 0x10187da7, 0xe89c636e, 0xdb3bbb7b, 0xcd267809, 0x6e5918f4, 0xec9ab701, 0x834f9aa8, 0xe6956e65, 0xaaffe67e, 0x21bccf08, 0xef15e8e6, 0xbae79bd9, 0x4a6f36ce, 0xea9f09d4, 0x29b07cd6, 0x31a4b2af, 0x2a3f2331, 0xc6a59430, 0x35a266c0, 0x744ebc37, 0xfc82caa6, 0xe090d0b0, 0x33a7d815, 0xf104984a, 0x41ecdaf7, 0x7fcd500e, 0x1791f62f, 0x764dd68d, 0x43efb04d, 0xccaa4d54, 0xe49604df, 0x9ed1b5e3, 0x4c6a881b, 0xc12c1fb8, 0x4665517f, 0x9d5eea04, 0x018c355d, 0xfa877473, 0xfb0b412e, 0xb3671d5a, 0x92dbd252, 0xe9105633, 0x6dd64713, 0x9ad7618c, 0x37a10c7a, 0x59f8148e, 0xeb133c89, 0xcea927ee, 0xb761c935, 0xe11ce5ed, 0x7a47b13c, 0x9cd2df59, 0x55f2733f, 0x1814ce79, 0x73c737bf, 0x53f7cdea, 0x5ffdaa5b, 0xdf3d6f14, 0x7844db86, 0xcaaff381, 0xb968c43e, 0x3824342c, 0xc2a3405f, 0x161dc372, 0xbce2250c, 0x283c498b, 0xff0d9541, 0x39a80171, 0x080cb3de, 0xd8b4e49c, 0x6456c190, 0x7bcb8461, 0xd532b670, 0x486c5c74, 0xd0b85742];\n    var T6 = [0x5051f4a7, 0x537e4165, 0xc31a17a4, 0x963a275e, 0xcb3bab6b, 0xf11f9d45, 0xabacfa58, 0x934be303, 0x552030fa, 0xf6ad766d, 0x9188cc76, 0x25f5024c, 0xfc4fe5d7, 0xd7c52acb, 0x80263544, 0x8fb562a3, 0x49deb15a, 0x6725ba1b, 0x9845ea0e, 0xe15dfec0, 0x02c32f75, 0x12814cf0, 0xa38d4697, 0xc66bd3f9, 0xe7038f5f, 0x9515929c, 0xebbf6d7a, 0xda955259, 0x2dd4be83, 0xd3587421, 0x2949e069, 0x448ec9c8, 0x6a75c289, 0x78f48e79, 0x6b99583e, 0xdd27b971, 0xb6bee14f, 0x17f088ad, 0x66c920ac, 0xb47dce3a, 0x1863df4a, 0x82e51a31, 0x60975133, 0x4562537f, 0xe0b16477, 0x84bb6bae, 0x1cfe81a0, 0x94f9082b, 0x58704868, 0x198f45fd, 0x8794de6c, 0xb7527bf8, 0x23ab73d3, 0xe2724b02, 0x57e31f8f, 0x2a6655ab, 0x07b2eb28, 0x032fb5c2, 0x9a86c57b, 0xa5d33708, 0xf2302887, 0xb223bfa5, 0xba02036a, 0x5ced1682, 0x2b8acf1c, 0x92a779b4, 0xf0f307f2, 0xa14e69e2, 0xcd65daf4, 0xd50605be, 0x1fd13462, 0x8ac4a6fe, 0x9d342e53, 0xa0a2f355, 0x32058ae1, 0x75a4f6eb, 0x390b83ec, 0xaa4060ef, 0x065e719f, 0x51bd6e10, 0xf93e218a, 0x3d96dd06, 0xaedd3e05, 0x464de6bd, 0xb591548d, 0x0571c45d, 0x6f0406d4, 0xff605015, 0x241998fb, 0x97d6bde9, 0xcc894043, 0x7767d99e, 0xbdb0e842, 0x8807898b, 0x38e7195b, 0xdb79c8ee, 0x47a17c0a, 0xe97c420f, 0xc9f8841e, 0x00000000, 0x83098086, 0x48322bed, 0xac1e1170, 0x4e6c5a72, 0xfbfd0eff, 0x560f8538, 0x1e3daed5, 0x27362d39, 0x640a0fd9, 0x21685ca6, 0xd19b5b54, 0x3a24362e, 0xb10c0a67, 0x0f9357e7, 0xd2b4ee96, 0x9e1b9b91, 0x4f80c0c5, 0xa261dc20, 0x695a774b, 0x161c121a, 0x0ae293ba, 0xe5c0a02a, 0x433c22e0, 0x1d121b17, 0x0b0e090d, 0xadf28bc7, 0xb92db6a8, 0xc8141ea9, 0x8557f119, 0x4caf7507, 0xbbee99dd, 0xfda37f60, 0x9ff70126, 0xbc5c72f5, 0xc544663b, 0x345bfb7e, 0x768b4329, 0xdccb23c6, 0x68b6edfc, 0x63b8e4f1, 0xcad731dc, 0x10426385, 0x40139722, 0x2084c611, 0x7d854a24, 0xf8d2bb3d, 0x11aef932, 0x6dc729a1, 0x4b1d9e2f, 0xf3dcb230, 0xec0d8652, 0xd077c1e3, 0x6c2bb316, 0x99a970b9, 0xfa119448, 0x2247e964, 0xc4a8fc8c, 0x1aa0f03f, 0xd8567d2c, 0xef223390, 0xc787494e, 0xc1d938d1, 0xfe8ccaa2, 0x3698d40b, 0xcfa6f581, 0x28a57ade, 0x26dab78e, 0xa43fadbf, 0xe42c3a9d, 0x0d507892, 0x9b6a5fcc, 0x62547e46, 0xc2f68d13, 0xe890d8b8, 0x5e2e39f7, 0xf582c3af, 0xbe9f5d80, 0x7c69d093, 0xa96fd52d, 0xb3cf2512, 0x3bc8ac99, 0xa710187d, 0x6ee89c63, 0x7bdb3bbb, 0x09cd2678, 0xf46e5918, 0x01ec9ab7, 0xa8834f9a, 0x65e6956e, 0x7eaaffe6, 0x0821bccf, 0xe6ef15e8, 0xd9bae79b, 0xce4a6f36, 0xd4ea9f09, 0xd629b07c, 0xaf31a4b2, 0x312a3f23, 0x30c6a594, 0xc035a266, 0x37744ebc, 0xa6fc82ca, 0xb0e090d0, 0x1533a7d8, 0x4af10498, 0xf741ecda, 0x0e7fcd50, 0x2f1791f6, 0x8d764dd6, 0x4d43efb0, 0x54ccaa4d, 0xdfe49604, 0xe39ed1b5, 0x1b4c6a88, 0xb8c12c1f, 0x7f466551, 0x049d5eea, 0x5d018c35, 0x73fa8774, 0x2efb0b41, 0x5ab3671d, 0x5292dbd2, 0x33e91056, 0x136dd647, 0x8c9ad761, 0x7a37a10c, 0x8e59f814, 0x89eb133c, 0xeecea927, 0x35b761c9, 0xede11ce5, 0x3c7a47b1, 0x599cd2df, 0x3f55f273, 0x791814ce, 0xbf73c737, 0xea53f7cd, 0x5b5ffdaa, 0x14df3d6f, 0x867844db, 0x81caaff3, 0x3eb968c4, 0x2c382434, 0x5fc2a340, 0x72161dc3, 0x0cbce225, 0x8b283c49, 0x41ff0d95, 0x7139a801, 0xde080cb3, 0x9cd8b4e4, 0x906456c1, 0x617bcb84, 0x70d532b6, 0x74486c5c, 0x42d0b857];\n    var T7 = [0xa75051f4, 0x65537e41, 0xa4c31a17, 0x5e963a27, 0x6bcb3bab, 0x45f11f9d, 0x58abacfa, 0x03934be3, 0xfa552030, 0x6df6ad76, 0x769188cc, 0x4c25f502, 0xd7fc4fe5, 0xcbd7c52a, 0x44802635, 0xa38fb562, 0x5a49deb1, 0x1b6725ba, 0x0e9845ea, 0xc0e15dfe, 0x7502c32f, 0xf012814c, 0x97a38d46, 0xf9c66bd3, 0x5fe7038f, 0x9c951592, 0x7aebbf6d, 0x59da9552, 0x832dd4be, 0x21d35874, 0x692949e0, 0xc8448ec9, 0x896a75c2, 0x7978f48e, 0x3e6b9958, 0x71dd27b9, 0x4fb6bee1, 0xad17f088, 0xac66c920, 0x3ab47dce, 0x4a1863df, 0x3182e51a, 0x33609751, 0x7f456253, 0x77e0b164, 0xae84bb6b, 0xa01cfe81, 0x2b94f908, 0x68587048, 0xfd198f45, 0x6c8794de, 0xf8b7527b, 0xd323ab73, 0x02e2724b, 0x8f57e31f, 0xab2a6655, 0x2807b2eb, 0xc2032fb5, 0x7b9a86c5, 0x08a5d337, 0x87f23028, 0xa5b223bf, 0x6aba0203, 0x825ced16, 0x1c2b8acf, 0xb492a779, 0xf2f0f307, 0xe2a14e69, 0xf4cd65da, 0xbed50605, 0x621fd134, 0xfe8ac4a6, 0x539d342e, 0x55a0a2f3, 0xe132058a, 0xeb75a4f6, 0xec390b83, 0xefaa4060, 0x9f065e71, 0x1051bd6e, 0x8af93e21, 0x063d96dd, 0x05aedd3e, 0xbd464de6, 0x8db59154, 0x5d0571c4, 0xd46f0406, 0x15ff6050, 0xfb241998, 0xe997d6bd, 0x43cc8940, 0x9e7767d9, 0x42bdb0e8, 0x8b880789, 0x5b38e719, 0xeedb79c8, 0x0a47a17c, 0x0fe97c42, 0x1ec9f884, 0x00000000, 0x86830980, 0xed48322b, 0x70ac1e11, 0x724e6c5a, 0xfffbfd0e, 0x38560f85, 0xd51e3dae, 0x3927362d, 0xd9640a0f, 0xa621685c, 0x54d19b5b, 0x2e3a2436, 0x67b10c0a, 0xe70f9357, 0x96d2b4ee, 0x919e1b9b, 0xc54f80c0, 0x20a261dc, 0x4b695a77, 0x1a161c12, 0xba0ae293, 0x2ae5c0a0, 0xe0433c22, 0x171d121b, 0x0d0b0e09, 0xc7adf28b, 0xa8b92db6, 0xa9c8141e, 0x198557f1, 0x074caf75, 0xddbbee99, 0x60fda37f, 0x269ff701, 0xf5bc5c72, 0x3bc54466, 0x7e345bfb, 0x29768b43, 0xc6dccb23, 0xfc68b6ed, 0xf163b8e4, 0xdccad731, 0x85104263, 0x22401397, 0x112084c6, 0x247d854a, 0x3df8d2bb, 0x3211aef9, 0xa16dc729, 0x2f4b1d9e, 0x30f3dcb2, 0x52ec0d86, 0xe3d077c1, 0x166c2bb3, 0xb999a970, 0x48fa1194, 0x642247e9, 0x8cc4a8fc, 0x3f1aa0f0, 0x2cd8567d, 0x90ef2233, 0x4ec78749, 0xd1c1d938, 0xa2fe8cca, 0x0b3698d4, 0x81cfa6f5, 0xde28a57a, 0x8e26dab7, 0xbfa43fad, 0x9de42c3a, 0x920d5078, 0xcc9b6a5f, 0x4662547e, 0x13c2f68d, 0xb8e890d8, 0xf75e2e39, 0xaff582c3, 0x80be9f5d, 0x937c69d0, 0x2da96fd5, 0x12b3cf25, 0x993bc8ac, 0x7da71018, 0x636ee89c, 0xbb7bdb3b, 0x7809cd26, 0x18f46e59, 0xb701ec9a, 0x9aa8834f, 0x6e65e695, 0xe67eaaff, 0xcf0821bc, 0xe8e6ef15, 0x9bd9bae7, 0x36ce4a6f, 0x09d4ea9f, 0x7cd629b0, 0xb2af31a4, 0x23312a3f, 0x9430c6a5, 0x66c035a2, 0xbc37744e, 0xcaa6fc82, 0xd0b0e090, 0xd81533a7, 0x984af104, 0xdaf741ec, 0x500e7fcd, 0xf62f1791, 0xd68d764d, 0xb04d43ef, 0x4d54ccaa, 0x04dfe496, 0xb5e39ed1, 0x881b4c6a, 0x1fb8c12c, 0x517f4665, 0xea049d5e, 0x355d018c, 0x7473fa87, 0x412efb0b, 0x1d5ab367, 0xd25292db, 0x5633e910, 0x47136dd6, 0x618c9ad7, 0x0c7a37a1, 0x148e59f8, 0x3c89eb13, 0x27eecea9, 0xc935b761, 0xe5ede11c, 0xb13c7a47, 0xdf599cd2, 0x733f55f2, 0xce791814, 0x37bf73c7, 0xcdea53f7, 0xaa5b5ffd, 0x6f14df3d, 0xdb867844, 0xf381caaf, 0xc43eb968, 0x342c3824, 0x405fc2a3, 0xc372161d, 0x250cbce2, 0x498b283c, 0x9541ff0d, 0x017139a8, 0xb3de080c, 0xe49cd8b4, 0xc1906456, 0x84617bcb, 0xb670d532, 0x5c74486c, 0x5742d0b8];\n    var T8 = [0xf4a75051, 0x4165537e, 0x17a4c31a, 0x275e963a, 0xab6bcb3b, 0x9d45f11f, 0xfa58abac, 0xe303934b, 0x30fa5520, 0x766df6ad, 0xcc769188, 0x024c25f5, 0xe5d7fc4f, 0x2acbd7c5, 0x35448026, 0x62a38fb5, 0xb15a49de, 0xba1b6725, 0xea0e9845, 0xfec0e15d, 0x2f7502c3, 0x4cf01281, 0x4697a38d, 0xd3f9c66b, 0x8f5fe703, 0x929c9515, 0x6d7aebbf, 0x5259da95, 0xbe832dd4, 0x7421d358, 0xe0692949, 0xc9c8448e, 0xc2896a75, 0x8e7978f4, 0x583e6b99, 0xb971dd27, 0xe14fb6be, 0x88ad17f0, 0x20ac66c9, 0xce3ab47d, 0xdf4a1863, 0x1a3182e5, 0x51336097, 0x537f4562, 0x6477e0b1, 0x6bae84bb, 0x81a01cfe, 0x082b94f9, 0x48685870, 0x45fd198f, 0xde6c8794, 0x7bf8b752, 0x73d323ab, 0x4b02e272, 0x1f8f57e3, 0x55ab2a66, 0xeb2807b2, 0xb5c2032f, 0xc57b9a86, 0x3708a5d3, 0x2887f230, 0xbfa5b223, 0x036aba02, 0x16825ced, 0xcf1c2b8a, 0x79b492a7, 0x07f2f0f3, 0x69e2a14e, 0xdaf4cd65, 0x05bed506, 0x34621fd1, 0xa6fe8ac4, 0x2e539d34, 0xf355a0a2, 0x8ae13205, 0xf6eb75a4, 0x83ec390b, 0x60efaa40, 0x719f065e, 0x6e1051bd, 0x218af93e, 0xdd063d96, 0x3e05aedd, 0xe6bd464d, 0x548db591, 0xc45d0571, 0x06d46f04, 0x5015ff60, 0x98fb2419, 0xbde997d6, 0x4043cc89, 0xd99e7767, 0xe842bdb0, 0x898b8807, 0x195b38e7, 0xc8eedb79, 0x7c0a47a1, 0x420fe97c, 0x841ec9f8, 0x00000000, 0x80868309, 0x2bed4832, 0x1170ac1e, 0x5a724e6c, 0x0efffbfd, 0x8538560f, 0xaed51e3d, 0x2d392736, 0x0fd9640a, 0x5ca62168, 0x5b54d19b, 0x362e3a24, 0x0a67b10c, 0x57e70f93, 0xee96d2b4, 0x9b919e1b, 0xc0c54f80, 0xdc20a261, 0x774b695a, 0x121a161c, 0x93ba0ae2, 0xa02ae5c0, 0x22e0433c, 0x1b171d12, 0x090d0b0e, 0x8bc7adf2, 0xb6a8b92d, 0x1ea9c814, 0xf1198557, 0x75074caf, 0x99ddbbee, 0x7f60fda3, 0x01269ff7, 0x72f5bc5c, 0x663bc544, 0xfb7e345b, 0x4329768b, 0x23c6dccb, 0xedfc68b6, 0xe4f163b8, 0x31dccad7, 0x63851042, 0x97224013, 0xc6112084, 0x4a247d85, 0xbb3df8d2, 0xf93211ae, 0x29a16dc7, 0x9e2f4b1d, 0xb230f3dc, 0x8652ec0d, 0xc1e3d077, 0xb3166c2b, 0x70b999a9, 0x9448fa11, 0xe9642247, 0xfc8cc4a8, 0xf03f1aa0, 0x7d2cd856, 0x3390ef22, 0x494ec787, 0x38d1c1d9, 0xcaa2fe8c, 0xd40b3698, 0xf581cfa6, 0x7ade28a5, 0xb78e26da, 0xadbfa43f, 0x3a9de42c, 0x78920d50, 0x5fcc9b6a, 0x7e466254, 0x8d13c2f6, 0xd8b8e890, 0x39f75e2e, 0xc3aff582, 0x5d80be9f, 0xd0937c69, 0xd52da96f, 0x2512b3cf, 0xac993bc8, 0x187da710, 0x9c636ee8, 0x3bbb7bdb, 0x267809cd, 0x5918f46e, 0x9ab701ec, 0x4f9aa883, 0x956e65e6, 0xffe67eaa, 0xbccf0821, 0x15e8e6ef, 0xe79bd9ba, 0x6f36ce4a, 0x9f09d4ea, 0xb07cd629, 0xa4b2af31, 0x3f23312a, 0xa59430c6, 0xa266c035, 0x4ebc3774, 0x82caa6fc, 0x90d0b0e0, 0xa7d81533, 0x04984af1, 0xecdaf741, 0xcd500e7f, 0x91f62f17, 0x4dd68d76, 0xefb04d43, 0xaa4d54cc, 0x9604dfe4, 0xd1b5e39e, 0x6a881b4c, 0x2c1fb8c1, 0x65517f46, 0x5eea049d, 0x8c355d01, 0x877473fa, 0x0b412efb, 0x671d5ab3, 0xdbd25292, 0x105633e9, 0xd647136d, 0xd7618c9a, 0xa10c7a37, 0xf8148e59, 0x133c89eb, 0xa927eece, 0x61c935b7, 0x1ce5ede1, 0x47b13c7a, 0xd2df599c, 0xf2733f55, 0x14ce7918, 0xc737bf73, 0xf7cdea53, 0xfdaa5b5f, 0x3d6f14df, 0x44db8678, 0xaff381ca, 0x68c43eb9, 0x24342c38, 0xa3405fc2, 0x1dc37216, 0xe2250cbc, 0x3c498b28, 0x0d9541ff, 0xa8017139, 0x0cb3de08, 0xb4e49cd8, 0x56c19064, 0xcb84617b, 0x32b670d5, 0x6c5c7448, 0xb85742d0];\n\n    // Transformations for decryption key expansion\n    var U1 = [0x00000000, 0x0e090d0b, 0x1c121a16, 0x121b171d, 0x3824342c, 0x362d3927, 0x24362e3a, 0x2a3f2331, 0x70486858, 0x7e416553, 0x6c5a724e, 0x62537f45, 0x486c5c74, 0x4665517f, 0x547e4662, 0x5a774b69, 0xe090d0b0, 0xee99ddbb, 0xfc82caa6, 0xf28bc7ad, 0xd8b4e49c, 0xd6bde997, 0xc4a6fe8a, 0xcaaff381, 0x90d8b8e8, 0x9ed1b5e3, 0x8ccaa2fe, 0x82c3aff5, 0xa8fc8cc4, 0xa6f581cf, 0xb4ee96d2, 0xbae79bd9, 0xdb3bbb7b, 0xd532b670, 0xc729a16d, 0xc920ac66, 0xe31f8f57, 0xed16825c, 0xff0d9541, 0xf104984a, 0xab73d323, 0xa57ade28, 0xb761c935, 0xb968c43e, 0x9357e70f, 0x9d5eea04, 0x8f45fd19, 0x814cf012, 0x3bab6bcb, 0x35a266c0, 0x27b971dd, 0x29b07cd6, 0x038f5fe7, 0x0d8652ec, 0x1f9d45f1, 0x119448fa, 0x4be30393, 0x45ea0e98, 0x57f11985, 0x59f8148e, 0x73c737bf, 0x7dce3ab4, 0x6fd52da9, 0x61dc20a2, 0xad766df6, 0xa37f60fd, 0xb16477e0, 0xbf6d7aeb, 0x955259da, 0x9b5b54d1, 0x894043cc, 0x87494ec7, 0xdd3e05ae, 0xd33708a5, 0xc12c1fb8, 0xcf2512b3, 0xe51a3182, 0xeb133c89, 0xf9082b94, 0xf701269f, 0x4de6bd46, 0x43efb04d, 0x51f4a750, 0x5ffdaa5b, 0x75c2896a, 0x7bcb8461, 0x69d0937c, 0x67d99e77, 0x3daed51e, 0x33a7d815, 0x21bccf08, 0x2fb5c203, 0x058ae132, 0x0b83ec39, 0x1998fb24, 0x1791f62f, 0x764dd68d, 0x7844db86, 0x6a5fcc9b, 0x6456c190, 0x4e69e2a1, 0x4060efaa, 0x527bf8b7, 0x5c72f5bc, 0x0605bed5, 0x080cb3de, 0x1a17a4c3, 0x141ea9c8, 0x3e218af9, 0x302887f2, 0x223390ef, 0x2c3a9de4, 0x96dd063d, 0x98d40b36, 0x8acf1c2b, 0x84c61120, 0xaef93211, 0xa0f03f1a, 0xb2eb2807, 0xbce2250c, 0xe6956e65, 0xe89c636e, 0xfa877473, 0xf48e7978, 0xdeb15a49, 0xd0b85742, 0xc2a3405f, 0xccaa4d54, 0x41ecdaf7, 0x4fe5d7fc, 0x5dfec0e1, 0x53f7cdea, 0x79c8eedb, 0x77c1e3d0, 0x65daf4cd, 0x6bd3f9c6, 0x31a4b2af, 0x3fadbfa4, 0x2db6a8b9, 0x23bfa5b2, 0x09808683, 0x07898b88, 0x15929c95, 0x1b9b919e, 0xa17c0a47, 0xaf75074c, 0xbd6e1051, 0xb3671d5a, 0x99583e6b, 0x97513360, 0x854a247d, 0x8b432976, 0xd134621f, 0xdf3d6f14, 0xcd267809, 0xc32f7502, 0xe9105633, 0xe7195b38, 0xf5024c25, 0xfb0b412e, 0x9ad7618c, 0x94de6c87, 0x86c57b9a, 0x88cc7691, 0xa2f355a0, 0xacfa58ab, 0xbee14fb6, 0xb0e842bd, 0xea9f09d4, 0xe49604df, 0xf68d13c2, 0xf8841ec9, 0xd2bb3df8, 0xdcb230f3, 0xcea927ee, 0xc0a02ae5, 0x7a47b13c, 0x744ebc37, 0x6655ab2a, 0x685ca621, 0x42638510, 0x4c6a881b, 0x5e719f06, 0x5078920d, 0x0a0fd964, 0x0406d46f, 0x161dc372, 0x1814ce79, 0x322bed48, 0x3c22e043, 0x2e39f75e, 0x2030fa55, 0xec9ab701, 0xe293ba0a, 0xf088ad17, 0xfe81a01c, 0xd4be832d, 0xdab78e26, 0xc8ac993b, 0xc6a59430, 0x9cd2df59, 0x92dbd252, 0x80c0c54f, 0x8ec9c844, 0xa4f6eb75, 0xaaffe67e, 0xb8e4f163, 0xb6edfc68, 0x0c0a67b1, 0x02036aba, 0x10187da7, 0x1e1170ac, 0x342e539d, 0x3a275e96, 0x283c498b, 0x26354480, 0x7c420fe9, 0x724b02e2, 0x605015ff, 0x6e5918f4, 0x44663bc5, 0x4a6f36ce, 0x587421d3, 0x567d2cd8, 0x37a10c7a, 0x39a80171, 0x2bb3166c, 0x25ba1b67, 0x0f853856, 0x018c355d, 0x13972240, 0x1d9e2f4b, 0x47e96422, 0x49e06929, 0x5bfb7e34, 0x55f2733f, 0x7fcd500e, 0x71c45d05, 0x63df4a18, 0x6dd64713, 0xd731dcca, 0xd938d1c1, 0xcb23c6dc, 0xc52acbd7, 0xef15e8e6, 0xe11ce5ed, 0xf307f2f0, 0xfd0efffb, 0xa779b492, 0xa970b999, 0xbb6bae84, 0xb562a38f, 0x9f5d80be, 0x91548db5, 0x834f9aa8, 0x8d4697a3];\n    var U2 = [0x00000000, 0x0b0e090d, 0x161c121a, 0x1d121b17, 0x2c382434, 0x27362d39, 0x3a24362e, 0x312a3f23, 0x58704868, 0x537e4165, 0x4e6c5a72, 0x4562537f, 0x74486c5c, 0x7f466551, 0x62547e46, 0x695a774b, 0xb0e090d0, 0xbbee99dd, 0xa6fc82ca, 0xadf28bc7, 0x9cd8b4e4, 0x97d6bde9, 0x8ac4a6fe, 0x81caaff3, 0xe890d8b8, 0xe39ed1b5, 0xfe8ccaa2, 0xf582c3af, 0xc4a8fc8c, 0xcfa6f581, 0xd2b4ee96, 0xd9bae79b, 0x7bdb3bbb, 0x70d532b6, 0x6dc729a1, 0x66c920ac, 0x57e31f8f, 0x5ced1682, 0x41ff0d95, 0x4af10498, 0x23ab73d3, 0x28a57ade, 0x35b761c9, 0x3eb968c4, 0x0f9357e7, 0x049d5eea, 0x198f45fd, 0x12814cf0, 0xcb3bab6b, 0xc035a266, 0xdd27b971, 0xd629b07c, 0xe7038f5f, 0xec0d8652, 0xf11f9d45, 0xfa119448, 0x934be303, 0x9845ea0e, 0x8557f119, 0x8e59f814, 0xbf73c737, 0xb47dce3a, 0xa96fd52d, 0xa261dc20, 0xf6ad766d, 0xfda37f60, 0xe0b16477, 0xebbf6d7a, 0xda955259, 0xd19b5b54, 0xcc894043, 0xc787494e, 0xaedd3e05, 0xa5d33708, 0xb8c12c1f, 0xb3cf2512, 0x82e51a31, 0x89eb133c, 0x94f9082b, 0x9ff70126, 0x464de6bd, 0x4d43efb0, 0x5051f4a7, 0x5b5ffdaa, 0x6a75c289, 0x617bcb84, 0x7c69d093, 0x7767d99e, 0x1e3daed5, 0x1533a7d8, 0x0821bccf, 0x032fb5c2, 0x32058ae1, 0x390b83ec, 0x241998fb, 0x2f1791f6, 0x8d764dd6, 0x867844db, 0x9b6a5fcc, 0x906456c1, 0xa14e69e2, 0xaa4060ef, 0xb7527bf8, 0xbc5c72f5, 0xd50605be, 0xde080cb3, 0xc31a17a4, 0xc8141ea9, 0xf93e218a, 0xf2302887, 0xef223390, 0xe42c3a9d, 0x3d96dd06, 0x3698d40b, 0x2b8acf1c, 0x2084c611, 0x11aef932, 0x1aa0f03f, 0x07b2eb28, 0x0cbce225, 0x65e6956e, 0x6ee89c63, 0x73fa8774, 0x78f48e79, 0x49deb15a, 0x42d0b857, 0x5fc2a340, 0x54ccaa4d, 0xf741ecda, 0xfc4fe5d7, 0xe15dfec0, 0xea53f7cd, 0xdb79c8ee, 0xd077c1e3, 0xcd65daf4, 0xc66bd3f9, 0xaf31a4b2, 0xa43fadbf, 0xb92db6a8, 0xb223bfa5, 0x83098086, 0x8807898b, 0x9515929c, 0x9e1b9b91, 0x47a17c0a, 0x4caf7507, 0x51bd6e10, 0x5ab3671d, 0x6b99583e, 0x60975133, 0x7d854a24, 0x768b4329, 0x1fd13462, 0x14df3d6f, 0x09cd2678, 0x02c32f75, 0x33e91056, 0x38e7195b, 0x25f5024c, 0x2efb0b41, 0x8c9ad761, 0x8794de6c, 0x9a86c57b, 0x9188cc76, 0xa0a2f355, 0xabacfa58, 0xb6bee14f, 0xbdb0e842, 0xd4ea9f09, 0xdfe49604, 0xc2f68d13, 0xc9f8841e, 0xf8d2bb3d, 0xf3dcb230, 0xeecea927, 0xe5c0a02a, 0x3c7a47b1, 0x37744ebc, 0x2a6655ab, 0x21685ca6, 0x10426385, 0x1b4c6a88, 0x065e719f, 0x0d507892, 0x640a0fd9, 0x6f0406d4, 0x72161dc3, 0x791814ce, 0x48322bed, 0x433c22e0, 0x5e2e39f7, 0x552030fa, 0x01ec9ab7, 0x0ae293ba, 0x17f088ad, 0x1cfe81a0, 0x2dd4be83, 0x26dab78e, 0x3bc8ac99, 0x30c6a594, 0x599cd2df, 0x5292dbd2, 0x4f80c0c5, 0x448ec9c8, 0x75a4f6eb, 0x7eaaffe6, 0x63b8e4f1, 0x68b6edfc, 0xb10c0a67, 0xba02036a, 0xa710187d, 0xac1e1170, 0x9d342e53, 0x963a275e, 0x8b283c49, 0x80263544, 0xe97c420f, 0xe2724b02, 0xff605015, 0xf46e5918, 0xc544663b, 0xce4a6f36, 0xd3587421, 0xd8567d2c, 0x7a37a10c, 0x7139a801, 0x6c2bb316, 0x6725ba1b, 0x560f8538, 0x5d018c35, 0x40139722, 0x4b1d9e2f, 0x2247e964, 0x2949e069, 0x345bfb7e, 0x3f55f273, 0x0e7fcd50, 0x0571c45d, 0x1863df4a, 0x136dd647, 0xcad731dc, 0xc1d938d1, 0xdccb23c6, 0xd7c52acb, 0xe6ef15e8, 0xede11ce5, 0xf0f307f2, 0xfbfd0eff, 0x92a779b4, 0x99a970b9, 0x84bb6bae, 0x8fb562a3, 0xbe9f5d80, 0xb591548d, 0xa8834f9a, 0xa38d4697];\n    var U3 = [0x00000000, 0x0d0b0e09, 0x1a161c12, 0x171d121b, 0x342c3824, 0x3927362d, 0x2e3a2436, 0x23312a3f, 0x68587048, 0x65537e41, 0x724e6c5a, 0x7f456253, 0x5c74486c, 0x517f4665, 0x4662547e, 0x4b695a77, 0xd0b0e090, 0xddbbee99, 0xcaa6fc82, 0xc7adf28b, 0xe49cd8b4, 0xe997d6bd, 0xfe8ac4a6, 0xf381caaf, 0xb8e890d8, 0xb5e39ed1, 0xa2fe8cca, 0xaff582c3, 0x8cc4a8fc, 0x81cfa6f5, 0x96d2b4ee, 0x9bd9bae7, 0xbb7bdb3b, 0xb670d532, 0xa16dc729, 0xac66c920, 0x8f57e31f, 0x825ced16, 0x9541ff0d, 0x984af104, 0xd323ab73, 0xde28a57a, 0xc935b761, 0xc43eb968, 0xe70f9357, 0xea049d5e, 0xfd198f45, 0xf012814c, 0x6bcb3bab, 0x66c035a2, 0x71dd27b9, 0x7cd629b0, 0x5fe7038f, 0x52ec0d86, 0x45f11f9d, 0x48fa1194, 0x03934be3, 0x0e9845ea, 0x198557f1, 0x148e59f8, 0x37bf73c7, 0x3ab47dce, 0x2da96fd5, 0x20a261dc, 0x6df6ad76, 0x60fda37f, 0x77e0b164, 0x7aebbf6d, 0x59da9552, 0x54d19b5b, 0x43cc8940, 0x4ec78749, 0x05aedd3e, 0x08a5d337, 0x1fb8c12c, 0x12b3cf25, 0x3182e51a, 0x3c89eb13, 0x2b94f908, 0x269ff701, 0xbd464de6, 0xb04d43ef, 0xa75051f4, 0xaa5b5ffd, 0x896a75c2, 0x84617bcb, 0x937c69d0, 0x9e7767d9, 0xd51e3dae, 0xd81533a7, 0xcf0821bc, 0xc2032fb5, 0xe132058a, 0xec390b83, 0xfb241998, 0xf62f1791, 0xd68d764d, 0xdb867844, 0xcc9b6a5f, 0xc1906456, 0xe2a14e69, 0xefaa4060, 0xf8b7527b, 0xf5bc5c72, 0xbed50605, 0xb3de080c, 0xa4c31a17, 0xa9c8141e, 0x8af93e21, 0x87f23028, 0x90ef2233, 0x9de42c3a, 0x063d96dd, 0x0b3698d4, 0x1c2b8acf, 0x112084c6, 0x3211aef9, 0x3f1aa0f0, 0x2807b2eb, 0x250cbce2, 0x6e65e695, 0x636ee89c, 0x7473fa87, 0x7978f48e, 0x5a49deb1, 0x5742d0b8, 0x405fc2a3, 0x4d54ccaa, 0xdaf741ec, 0xd7fc4fe5, 0xc0e15dfe, 0xcdea53f7, 0xeedb79c8, 0xe3d077c1, 0xf4cd65da, 0xf9c66bd3, 0xb2af31a4, 0xbfa43fad, 0xa8b92db6, 0xa5b223bf, 0x86830980, 0x8b880789, 0x9c951592, 0x919e1b9b, 0x0a47a17c, 0x074caf75, 0x1051bd6e, 0x1d5ab367, 0x3e6b9958, 0x33609751, 0x247d854a, 0x29768b43, 0x621fd134, 0x6f14df3d, 0x7809cd26, 0x7502c32f, 0x5633e910, 0x5b38e719, 0x4c25f502, 0x412efb0b, 0x618c9ad7, 0x6c8794de, 0x7b9a86c5, 0x769188cc, 0x55a0a2f3, 0x58abacfa, 0x4fb6bee1, 0x42bdb0e8, 0x09d4ea9f, 0x04dfe496, 0x13c2f68d, 0x1ec9f884, 0x3df8d2bb, 0x30f3dcb2, 0x27eecea9, 0x2ae5c0a0, 0xb13c7a47, 0xbc37744e, 0xab2a6655, 0xa621685c, 0x85104263, 0x881b4c6a, 0x9f065e71, 0x920d5078, 0xd9640a0f, 0xd46f0406, 0xc372161d, 0xce791814, 0xed48322b, 0xe0433c22, 0xf75e2e39, 0xfa552030, 0xb701ec9a, 0xba0ae293, 0xad17f088, 0xa01cfe81, 0x832dd4be, 0x8e26dab7, 0x993bc8ac, 0x9430c6a5, 0xdf599cd2, 0xd25292db, 0xc54f80c0, 0xc8448ec9, 0xeb75a4f6, 0xe67eaaff, 0xf163b8e4, 0xfc68b6ed, 0x67b10c0a, 0x6aba0203, 0x7da71018, 0x70ac1e11, 0x539d342e, 0x5e963a27, 0x498b283c, 0x44802635, 0x0fe97c42, 0x02e2724b, 0x15ff6050, 0x18f46e59, 0x3bc54466, 0x36ce4a6f, 0x21d35874, 0x2cd8567d, 0x0c7a37a1, 0x017139a8, 0x166c2bb3, 0x1b6725ba, 0x38560f85, 0x355d018c, 0x22401397, 0x2f4b1d9e, 0x642247e9, 0x692949e0, 0x7e345bfb, 0x733f55f2, 0x500e7fcd, 0x5d0571c4, 0x4a1863df, 0x47136dd6, 0xdccad731, 0xd1c1d938, 0xc6dccb23, 0xcbd7c52a, 0xe8e6ef15, 0xe5ede11c, 0xf2f0f307, 0xfffbfd0e, 0xb492a779, 0xb999a970, 0xae84bb6b, 0xa38fb562, 0x80be9f5d, 0x8db59154, 0x9aa8834f, 0x97a38d46];\n    var U4 = [0x00000000, 0x090d0b0e, 0x121a161c, 0x1b171d12, 0x24342c38, 0x2d392736, 0x362e3a24, 0x3f23312a, 0x48685870, 0x4165537e, 0x5a724e6c, 0x537f4562, 0x6c5c7448, 0x65517f46, 0x7e466254, 0x774b695a, 0x90d0b0e0, 0x99ddbbee, 0x82caa6fc, 0x8bc7adf2, 0xb4e49cd8, 0xbde997d6, 0xa6fe8ac4, 0xaff381ca, 0xd8b8e890, 0xd1b5e39e, 0xcaa2fe8c, 0xc3aff582, 0xfc8cc4a8, 0xf581cfa6, 0xee96d2b4, 0xe79bd9ba, 0x3bbb7bdb, 0x32b670d5, 0x29a16dc7, 0x20ac66c9, 0x1f8f57e3, 0x16825ced, 0x0d9541ff, 0x04984af1, 0x73d323ab, 0x7ade28a5, 0x61c935b7, 0x68c43eb9, 0x57e70f93, 0x5eea049d, 0x45fd198f, 0x4cf01281, 0xab6bcb3b, 0xa266c035, 0xb971dd27, 0xb07cd629, 0x8f5fe703, 0x8652ec0d, 0x9d45f11f, 0x9448fa11, 0xe303934b, 0xea0e9845, 0xf1198557, 0xf8148e59, 0xc737bf73, 0xce3ab47d, 0xd52da96f, 0xdc20a261, 0x766df6ad, 0x7f60fda3, 0x6477e0b1, 0x6d7aebbf, 0x5259da95, 0x5b54d19b, 0x4043cc89, 0x494ec787, 0x3e05aedd, 0x3708a5d3, 0x2c1fb8c1, 0x2512b3cf, 0x1a3182e5, 0x133c89eb, 0x082b94f9, 0x01269ff7, 0xe6bd464d, 0xefb04d43, 0xf4a75051, 0xfdaa5b5f, 0xc2896a75, 0xcb84617b, 0xd0937c69, 0xd99e7767, 0xaed51e3d, 0xa7d81533, 0xbccf0821, 0xb5c2032f, 0x8ae13205, 0x83ec390b, 0x98fb2419, 0x91f62f17, 0x4dd68d76, 0x44db8678, 0x5fcc9b6a, 0x56c19064, 0x69e2a14e, 0x60efaa40, 0x7bf8b752, 0x72f5bc5c, 0x05bed506, 0x0cb3de08, 0x17a4c31a, 0x1ea9c814, 0x218af93e, 0x2887f230, 0x3390ef22, 0x3a9de42c, 0xdd063d96, 0xd40b3698, 0xcf1c2b8a, 0xc6112084, 0xf93211ae, 0xf03f1aa0, 0xeb2807b2, 0xe2250cbc, 0x956e65e6, 0x9c636ee8, 0x877473fa, 0x8e7978f4, 0xb15a49de, 0xb85742d0, 0xa3405fc2, 0xaa4d54cc, 0xecdaf741, 0xe5d7fc4f, 0xfec0e15d, 0xf7cdea53, 0xc8eedb79, 0xc1e3d077, 0xdaf4cd65, 0xd3f9c66b, 0xa4b2af31, 0xadbfa43f, 0xb6a8b92d, 0xbfa5b223, 0x80868309, 0x898b8807, 0x929c9515, 0x9b919e1b, 0x7c0a47a1, 0x75074caf, 0x6e1051bd, 0x671d5ab3, 0x583e6b99, 0x51336097, 0x4a247d85, 0x4329768b, 0x34621fd1, 0x3d6f14df, 0x267809cd, 0x2f7502c3, 0x105633e9, 0x195b38e7, 0x024c25f5, 0x0b412efb, 0xd7618c9a, 0xde6c8794, 0xc57b9a86, 0xcc769188, 0xf355a0a2, 0xfa58abac, 0xe14fb6be, 0xe842bdb0, 0x9f09d4ea, 0x9604dfe4, 0x8d13c2f6, 0x841ec9f8, 0xbb3df8d2, 0xb230f3dc, 0xa927eece, 0xa02ae5c0, 0x47b13c7a, 0x4ebc3774, 0x55ab2a66, 0x5ca62168, 0x63851042, 0x6a881b4c, 0x719f065e, 0x78920d50, 0x0fd9640a, 0x06d46f04, 0x1dc37216, 0x14ce7918, 0x2bed4832, 0x22e0433c, 0x39f75e2e, 0x30fa5520, 0x9ab701ec, 0x93ba0ae2, 0x88ad17f0, 0x81a01cfe, 0xbe832dd4, 0xb78e26da, 0xac993bc8, 0xa59430c6, 0xd2df599c, 0xdbd25292, 0xc0c54f80, 0xc9c8448e, 0xf6eb75a4, 0xffe67eaa, 0xe4f163b8, 0xedfc68b6, 0x0a67b10c, 0x036aba02, 0x187da710, 0x1170ac1e, 0x2e539d34, 0x275e963a, 0x3c498b28, 0x35448026, 0x420fe97c, 0x4b02e272, 0x5015ff60, 0x5918f46e, 0x663bc544, 0x6f36ce4a, 0x7421d358, 0x7d2cd856, 0xa10c7a37, 0xa8017139, 0xb3166c2b, 0xba1b6725, 0x8538560f, 0x8c355d01, 0x97224013, 0x9e2f4b1d, 0xe9642247, 0xe0692949, 0xfb7e345b, 0xf2733f55, 0xcd500e7f, 0xc45d0571, 0xdf4a1863, 0xd647136d, 0x31dccad7, 0x38d1c1d9, 0x23c6dccb, 0x2acbd7c5, 0x15e8e6ef, 0x1ce5ede1, 0x07f2f0f3, 0x0efffbfd, 0x79b492a7, 0x70b999a9, 0x6bae84bb, 0x62a38fb5, 0x5d80be9f, 0x548db591, 0x4f9aa883, 0x4697a38d];\n\n    function convertToInt32(bytes) {\n        var result = [];\n        for (var i = 0; i < bytes.length; i += 4) {\n            result.push(\n                (bytes[i    ] << 24) |\n                (bytes[i + 1] << 16) |\n                (bytes[i + 2] <<  8) |\n                 bytes[i + 3]\n            );\n        }\n        return result;\n    }\n\n    var AES = function(key) {\n        if (!(this instanceof AES)) {\n            throw Error('AES must be instanitated with `new`');\n        }\n\n        Object.defineProperty(this, 'key', {\n            value: coerceArray(key, true)\n        });\n\n        this._prepare();\n    }\n\n\n    AES.prototype._prepare = function() {\n\n        var rounds = numberOfRounds[this.key.length];\n        if (rounds == null) {\n            throw new Error('invalid key size (must be 16, 24 or 32 bytes)');\n        }\n\n        // encryption round keys\n        this._Ke = [];\n\n        // decryption round keys\n        this._Kd = [];\n\n        for (var i = 0; i <= rounds; i++) {\n            this._Ke.push([0, 0, 0, 0]);\n            this._Kd.push([0, 0, 0, 0]);\n        }\n\n        var roundKeyCount = (rounds + 1) * 4;\n        var KC = this.key.length / 4;\n\n        // convert the key into ints\n        var tk = convertToInt32(this.key);\n\n        // copy values into round key arrays\n        var index;\n        for (var i = 0; i < KC; i++) {\n            index = i >> 2;\n            this._Ke[index][i % 4] = tk[i];\n            this._Kd[rounds - index][i % 4] = tk[i];\n        }\n\n        // key expansion (fips-197 section 5.2)\n        var rconpointer = 0;\n        var t = KC, tt;\n        while (t < roundKeyCount) {\n            tt = tk[KC - 1];\n            tk[0] ^= ((S[(tt >> 16) & 0xFF] << 24) ^\n                      (S[(tt >>  8) & 0xFF] << 16) ^\n                      (S[ tt        & 0xFF] <<  8) ^\n                       S[(tt >> 24) & 0xFF]        ^\n                      (rcon[rconpointer] << 24));\n            rconpointer += 1;\n\n            // key expansion (for non-256 bit)\n            if (KC != 8) {\n                for (var i = 1; i < KC; i++) {\n                    tk[i] ^= tk[i - 1];\n                }\n\n            // key expansion for 256-bit keys is \"slightly different\" (fips-197)\n            } else {\n                for (var i = 1; i < (KC / 2); i++) {\n                    tk[i] ^= tk[i - 1];\n                }\n                tt = tk[(KC / 2) - 1];\n\n                tk[KC / 2] ^= (S[ tt        & 0xFF]        ^\n                              (S[(tt >>  8) & 0xFF] <<  8) ^\n                              (S[(tt >> 16) & 0xFF] << 16) ^\n                              (S[(tt >> 24) & 0xFF] << 24));\n\n                for (var i = (KC / 2) + 1; i < KC; i++) {\n                    tk[i] ^= tk[i - 1];\n                }\n            }\n\n            // copy values into round key arrays\n            var i = 0, r, c;\n            while (i < KC && t < roundKeyCount) {\n                r = t >> 2;\n                c = t % 4;\n                this._Ke[r][c] = tk[i];\n                this._Kd[rounds - r][c] = tk[i++];\n                t++;\n            }\n        }\n\n        // inverse-cipher-ify the decryption round key (fips-197 section 5.3)\n        for (var r = 1; r < rounds; r++) {\n            for (var c = 0; c < 4; c++) {\n                tt = this._Kd[r][c];\n                this._Kd[r][c] = (U1[(tt >> 24) & 0xFF] ^\n                                  U2[(tt >> 16) & 0xFF] ^\n                                  U3[(tt >>  8) & 0xFF] ^\n                                  U4[ tt        & 0xFF]);\n            }\n        }\n    }\n\n    AES.prototype.encrypt = function(plaintext) {\n        if (plaintext.length != 16) {\n            throw new Error('invalid plaintext size (must be 16 bytes)');\n        }\n\n        var rounds = this._Ke.length - 1;\n        var a = [0, 0, 0, 0];\n\n        // convert plaintext to (ints ^ key)\n        var t = convertToInt32(plaintext);\n        for (var i = 0; i < 4; i++) {\n            t[i] ^= this._Ke[0][i];\n        }\n\n        // apply round transforms\n        for (var r = 1; r < rounds; r++) {\n            for (var i = 0; i < 4; i++) {\n                a[i] = (T1[(t[ i         ] >> 24) & 0xff] ^\n                        T2[(t[(i + 1) % 4] >> 16) & 0xff] ^\n                        T3[(t[(i + 2) % 4] >>  8) & 0xff] ^\n                        T4[ t[(i + 3) % 4]        & 0xff] ^\n                        this._Ke[r][i]);\n            }\n            t = a.slice();\n        }\n\n        // the last round is special\n        var result = createArray(16), tt;\n        for (var i = 0; i < 4; i++) {\n            tt = this._Ke[rounds][i];\n            result[4 * i    ] = (S[(t[ i         ] >> 24) & 0xff] ^ (tt >> 24)) & 0xff;\n            result[4 * i + 1] = (S[(t[(i + 1) % 4] >> 16) & 0xff] ^ (tt >> 16)) & 0xff;\n            result[4 * i + 2] = (S[(t[(i + 2) % 4] >>  8) & 0xff] ^ (tt >>  8)) & 0xff;\n            result[4 * i + 3] = (S[ t[(i + 3) % 4]        & 0xff] ^  tt       ) & 0xff;\n        }\n\n        return result;\n    }\n\n    AES.prototype.decrypt = function(ciphertext) {\n        if (ciphertext.length != 16) {\n            throw new Error('invalid ciphertext size (must be 16 bytes)');\n        }\n\n        var rounds = this._Kd.length - 1;\n        var a = [0, 0, 0, 0];\n\n        // convert plaintext to (ints ^ key)\n        var t = convertToInt32(ciphertext);\n        for (var i = 0; i < 4; i++) {\n            t[i] ^= this._Kd[0][i];\n        }\n\n        // apply round transforms\n        for (var r = 1; r < rounds; r++) {\n            for (var i = 0; i < 4; i++) {\n                a[i] = (T5[(t[ i          ] >> 24) & 0xff] ^\n                        T6[(t[(i + 3) % 4] >> 16) & 0xff] ^\n                        T7[(t[(i + 2) % 4] >>  8) & 0xff] ^\n                        T8[ t[(i + 1) % 4]        & 0xff] ^\n                        this._Kd[r][i]);\n            }\n            t = a.slice();\n        }\n\n        // the last round is special\n        var result = createArray(16), tt;\n        for (var i = 0; i < 4; i++) {\n            tt = this._Kd[rounds][i];\n            result[4 * i    ] = (Si[(t[ i         ] >> 24) & 0xff] ^ (tt >> 24)) & 0xff;\n            result[4 * i + 1] = (Si[(t[(i + 3) % 4] >> 16) & 0xff] ^ (tt >> 16)) & 0xff;\n            result[4 * i + 2] = (Si[(t[(i + 2) % 4] >>  8) & 0xff] ^ (tt >>  8)) & 0xff;\n            result[4 * i + 3] = (Si[ t[(i + 1) % 4]        & 0xff] ^  tt       ) & 0xff;\n        }\n\n        return result;\n    }\n\n\n    /**\n     *  Mode Of Operation - Electonic Codebook (ECB)\n     */\n    var ModeOfOperationECB = function(key) {\n        if (!(this instanceof ModeOfOperationECB)) {\n            throw Error('AES must be instanitated with `new`');\n        }\n\n        this.description = \"Electronic Code Block\";\n        this.name = \"ecb\";\n\n        this._aes = new AES(key);\n    }\n\n    ModeOfOperationECB.prototype.encrypt = function(plaintext) {\n        plaintext = coerceArray(plaintext);\n\n        if ((plaintext.length % 16) !== 0) {\n            throw new Error('invalid plaintext size (must be multiple of 16 bytes)');\n        }\n\n        var ciphertext = createArray(plaintext.length);\n        var block = createArray(16);\n\n        for (var i = 0; i < plaintext.length; i += 16) {\n            copyArray(plaintext, block, 0, i, i + 16);\n            block = this._aes.encrypt(block);\n            copyArray(block, ciphertext, i);\n        }\n\n        return ciphertext;\n    }\n\n    ModeOfOperationECB.prototype.decrypt = function(ciphertext) {\n        ciphertext = coerceArray(ciphertext);\n\n        if ((ciphertext.length % 16) !== 0) {\n            throw new Error('invalid ciphertext size (must be multiple of 16 bytes)');\n        }\n\n        var plaintext = createArray(ciphertext.length);\n        var block = createArray(16);\n\n        for (var i = 0; i < ciphertext.length; i += 16) {\n            copyArray(ciphertext, block, 0, i, i + 16);\n            block = this._aes.decrypt(block);\n            copyArray(block, plaintext, i);\n        }\n\n        return plaintext;\n    }\n\n\n    /**\n     *  Mode Of Operation - Cipher Block Chaining (CBC)\n     */\n    var ModeOfOperationCBC = function(key, iv) {\n        if (!(this instanceof ModeOfOperationCBC)) {\n            throw Error('AES must be instanitated with `new`');\n        }\n\n        this.description = \"Cipher Block Chaining\";\n        this.name = \"cbc\";\n\n        if (!iv) {\n            iv = createArray(16);\n\n        } else if (iv.length != 16) {\n            throw new Error('invalid initialation vector size (must be 16 bytes)');\n        }\n\n        this._lastCipherblock = coerceArray(iv, true);\n\n        this._aes = new AES(key);\n    }\n\n    ModeOfOperationCBC.prototype.encrypt = function(plaintext) {\n        plaintext = coerceArray(plaintext);\n\n        if ((plaintext.length % 16) !== 0) {\n            throw new Error('invalid plaintext size (must be multiple of 16 bytes)');\n        }\n\n        var ciphertext = createArray(plaintext.length);\n        var block = createArray(16);\n\n        for (var i = 0; i < plaintext.length; i += 16) {\n            copyArray(plaintext, block, 0, i, i + 16);\n\n            for (var j = 0; j < 16; j++) {\n                block[j] ^= this._lastCipherblock[j];\n            }\n\n            this._lastCipherblock = this._aes.encrypt(block);\n            copyArray(this._lastCipherblock, ciphertext, i);\n        }\n\n        return ciphertext;\n    }\n\n    ModeOfOperationCBC.prototype.decrypt = function(ciphertext) {\n        ciphertext = coerceArray(ciphertext);\n\n        if ((ciphertext.length % 16) !== 0) {\n            throw new Error('invalid ciphertext size (must be multiple of 16 bytes)');\n        }\n\n        var plaintext = createArray(ciphertext.length);\n        var block = createArray(16);\n\n        for (var i = 0; i < ciphertext.length; i += 16) {\n            copyArray(ciphertext, block, 0, i, i + 16);\n            block = this._aes.decrypt(block);\n\n            for (var j = 0; j < 16; j++) {\n                plaintext[i + j] = block[j] ^ this._lastCipherblock[j];\n            }\n\n            copyArray(ciphertext, this._lastCipherblock, 0, i, i + 16);\n        }\n\n        return plaintext;\n    }\n\n\n    /**\n     *  Mode Of Operation - Cipher Feedback (CFB)\n     */\n    var ModeOfOperationCFB = function(key, iv, segmentSize) {\n        if (!(this instanceof ModeOfOperationCFB)) {\n            throw Error('AES must be instanitated with `new`');\n        }\n\n        this.description = \"Cipher Feedback\";\n        this.name = \"cfb\";\n\n        if (!iv) {\n            iv = createArray(16);\n\n        } else if (iv.length != 16) {\n            throw new Error('invalid initialation vector size (must be 16 size)');\n        }\n\n        if (!segmentSize) { segmentSize = 1; }\n\n        this.segmentSize = segmentSize;\n\n        this._shiftRegister = coerceArray(iv, true);\n\n        this._aes = new AES(key);\n    }\n\n    ModeOfOperationCFB.prototype.encrypt = function(plaintext) {\n        if ((plaintext.length % this.segmentSize) != 0) {\n            throw new Error('invalid plaintext size (must be segmentSize bytes)');\n        }\n\n        var encrypted = coerceArray(plaintext, true);\n\n        var xorSegment;\n        for (var i = 0; i < encrypted.length; i += this.segmentSize) {\n            xorSegment = this._aes.encrypt(this._shiftRegister);\n            for (var j = 0; j < this.segmentSize; j++) {\n                encrypted[i + j] ^= xorSegment[j];\n            }\n\n            // Shift the register\n            copyArray(this._shiftRegister, this._shiftRegister, 0, this.segmentSize);\n            copyArray(encrypted, this._shiftRegister, 16 - this.segmentSize, i, i + this.segmentSize);\n        }\n\n        return encrypted;\n    }\n\n    ModeOfOperationCFB.prototype.decrypt = function(ciphertext) {\n        if ((ciphertext.length % this.segmentSize) != 0) {\n            throw new Error('invalid ciphertext size (must be segmentSize bytes)');\n        }\n\n        var plaintext = coerceArray(ciphertext, true);\n\n        var xorSegment;\n        for (var i = 0; i < plaintext.length; i += this.segmentSize) {\n            xorSegment = this._aes.encrypt(this._shiftRegister);\n\n            for (var j = 0; j < this.segmentSize; j++) {\n                plaintext[i + j] ^= xorSegment[j];\n            }\n\n            // Shift the register\n            copyArray(this._shiftRegister, this._shiftRegister, 0, this.segmentSize);\n            copyArray(ciphertext, this._shiftRegister, 16 - this.segmentSize, i, i + this.segmentSize);\n        }\n\n        return plaintext;\n    }\n\n    /**\n     *  Mode Of Operation - Output Feedback (OFB)\n     */\n    var ModeOfOperationOFB = function(key, iv) {\n        if (!(this instanceof ModeOfOperationOFB)) {\n            throw Error('AES must be instanitated with `new`');\n        }\n\n        this.description = \"Output Feedback\";\n        this.name = \"ofb\";\n\n        if (!iv) {\n            iv = createArray(16);\n\n        } else if (iv.length != 16) {\n            throw new Error('invalid initialation vector size (must be 16 bytes)');\n        }\n\n        this._lastPrecipher = coerceArray(iv, true);\n        this._lastPrecipherIndex = 16;\n\n        this._aes = new AES(key);\n    }\n\n    ModeOfOperationOFB.prototype.encrypt = function(plaintext) {\n        var encrypted = coerceArray(plaintext, true);\n\n        for (var i = 0; i < encrypted.length; i++) {\n            if (this._lastPrecipherIndex === 16) {\n                this._lastPrecipher = this._aes.encrypt(this._lastPrecipher);\n                this._lastPrecipherIndex = 0;\n            }\n            encrypted[i] ^= this._lastPrecipher[this._lastPrecipherIndex++];\n        }\n\n        return encrypted;\n    }\n\n    // Decryption is symetric\n    ModeOfOperationOFB.prototype.decrypt = ModeOfOperationOFB.prototype.encrypt;\n\n\n    /**\n     *  Counter object for CTR common mode of operation\n     */\n    var Counter = function(initialValue) {\n        if (!(this instanceof Counter)) {\n            throw Error('Counter must be instanitated with `new`');\n        }\n\n        // We allow 0, but anything false-ish uses the default 1\n        if (initialValue !== 0 && !initialValue) { initialValue = 1; }\n\n        if (typeof(initialValue) === 'number') {\n            this._counter = createArray(16);\n            this.setValue(initialValue);\n\n        } else {\n            this.setBytes(initialValue);\n        }\n    }\n\n    Counter.prototype.setValue = function(value) {\n        if (typeof(value) !== 'number' || parseInt(value) != value) {\n            throw new Error('invalid counter value (must be an integer)');\n        }\n\n        // We cannot safely handle numbers beyond the safe range for integers\n        if (value > Number.MAX_SAFE_INTEGER) {\n            throw new Error('integer value out of safe range');\n        }\n\n        for (var index = 15; index >= 0; --index) {\n            this._counter[index] = value % 256;\n            value = parseInt(value / 256);\n        }\n    }\n\n    Counter.prototype.setBytes = function(bytes) {\n        bytes = coerceArray(bytes, true);\n\n        if (bytes.length != 16) {\n            throw new Error('invalid counter bytes size (must be 16 bytes)');\n        }\n\n        this._counter = bytes;\n    };\n\n    Counter.prototype.increment = function() {\n        for (var i = 15; i >= 0; i--) {\n            if (this._counter[i] === 255) {\n                this._counter[i] = 0;\n            } else {\n                this._counter[i]++;\n                break;\n            }\n        }\n    }\n\n\n    /**\n     *  Mode Of Operation - Counter (CTR)\n     */\n    var ModeOfOperationCTR = function(key, counter) {\n        if (!(this instanceof ModeOfOperationCTR)) {\n            throw Error('AES must be instanitated with `new`');\n        }\n\n        this.description = \"Counter\";\n        this.name = \"ctr\";\n\n        if (!(counter instanceof Counter)) {\n            counter = new Counter(counter)\n        }\n\n        this._counter = counter;\n\n        this._remainingCounter = null;\n        this._remainingCounterIndex = 16;\n\n        this._aes = new AES(key);\n    }\n\n    ModeOfOperationCTR.prototype.encrypt = function(plaintext) {\n        var encrypted = coerceArray(plaintext, true);\n\n        for (var i = 0; i < encrypted.length; i++) {\n            if (this._remainingCounterIndex === 16) {\n                this._remainingCounter = this._aes.encrypt(this._counter._counter);\n                this._remainingCounterIndex = 0;\n                this._counter.increment();\n            }\n            encrypted[i] ^= this._remainingCounter[this._remainingCounterIndex++];\n        }\n\n        return encrypted;\n    }\n\n    // Decryption is symetric\n    ModeOfOperationCTR.prototype.decrypt = ModeOfOperationCTR.prototype.encrypt;\n\n\n    ///////////////////////\n    // Padding\n\n    // See:https://tools.ietf.org/html/rfc2315\n    function pkcs7pad(data) {\n        data = coerceArray(data, true);\n        var padder = 16 - (data.length % 16);\n        var result = createArray(data.length + padder);\n        copyArray(data, result);\n        for (var i = data.length; i < result.length; i++) {\n            result[i] = padder;\n        }\n        return result;\n    }\n\n    function pkcs7strip(data) {\n        data = coerceArray(data, true);\n        if (data.length < 16) { throw new Error('PKCS#7 invalid length'); }\n\n        var padder = data[data.length - 1];\n        if (padder > 16) { throw new Error('PKCS#7 padding byte out of range'); }\n\n        var length = data.length - padder;\n        for (var i = 0; i < padder; i++) {\n            if (data[length + i] !== padder) {\n                throw new Error('PKCS#7 invalid padding byte');\n            }\n        }\n\n        var result = createArray(length);\n        copyArray(data, result, 0, 0, length);\n        return result;\n    }\n\n    ///////////////////////\n    // Exporting\n\n\n    // The block cipher\n    var aesjs = {\n        AES: AES,\n        Counter: Counter,\n\n        ModeOfOperation: {\n            ecb: ModeOfOperationECB,\n            cbc: ModeOfOperationCBC,\n            cfb: ModeOfOperationCFB,\n            ofb: ModeOfOperationOFB,\n            ctr: ModeOfOperationCTR\n        },\n\n        utils: {\n            hex: convertHex,\n            utf8: convertUtf8\n        },\n\n        padding: {\n            pkcs7: {\n                pad: pkcs7pad,\n                strip: pkcs7strip\n            }\n        },\n\n        _arrayTest: {\n            coerceArray: coerceArray,\n            createArray: createArray,\n            copyArray: copyArray,\n        }\n    };\n\n\n    // node.js\n    if (typeof exports !== 'undefined') {\n        module.exports = aesjs\n\n    // RequireJS/AMD\n    // http://www.requirejs.org/docs/api.html\n    // https://github.com/amdjs/amdjs-api/wiki/AMD\n    } else if (typeof(define) === 'function' && define.amd) {\n        define([], function() { return aesjs; });\n\n    // Web Browsers\n    } else {\n\n        // If there was an existing library at \"aesjs\" make sure it's still available\n        if (root.aesjs) {\n            aesjs._aesjs = root.aesjs;\n        }\n\n        root.aesjs = aesjs;\n    }\n\n\n})(this);\n","(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    Buffer = require('buffer').Buffer;\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n    }\n\n    if (base === 16) {\n      this._parseHex(number, start);\n    } else {\n      this._parseBase(number, base, start);\n    }\n\n    if (number[0] === '-') {\n      this.negative = 1;\n    }\n\n    this.strip();\n\n    if (endian !== 'le') return;\n\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [ number & 0x3ffffff ];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [ 0 ];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this.strip();\n  };\n\n  function parseHex (str, start, end) {\n    var r = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r <<= 4;\n\n      // 'a' - 'f'\n      if (c >= 49 && c <= 54) {\n        r |= c - 49 + 0xa;\n\n      // 'A' - 'F'\n      } else if (c >= 17 && c <= 22) {\n        r |= c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        r |= c & 0xf;\n      }\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    // Scan 24-bit chunks and add them to the number\n    var off = 0;\n    for (i = number.length - 6, j = 0; i >= start; i -= 6) {\n      w = parseHex(number, i, i + 6);\n      this.words[j] |= (w << off) & 0x3ffffff;\n      // NOTE: `0x3fffff` is intentional here, 26bits max shift + 24bit hex limb\n      this.words[j + 1] |= w >>> (26 - off) & 0x3fffff;\n      off += 24;\n      if (off >= 26) {\n        off -= 26;\n        j++;\n      }\n    }\n    if (i + 6 !== start) {\n      w = parseHex(number, start, i + 6);\n      this.words[j] |= (w << off) & 0x3ffffff;\n      this.words[j + 1] |= w >>> (26 - off) & 0x3fffff;\n    }\n    this.strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        r += c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        r += c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        r += c;\n      }\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [ 0 ];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype.strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  BN.prototype.inspect = function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  };\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16);\n  };\n\n  BN.prototype.toBuffer = function toBuffer (endian, length) {\n    assert(typeof Buffer !== 'undefined');\n    return this.toArrayLike(Buffer, endian, length);\n  };\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    this.strip();\n    var littleEndian = endian === 'le';\n    var res = new ArrayType(reqLength);\n\n    var b, i;\n    var q = this.clone();\n    if (!littleEndian) {\n      // Assume big-endian\n      for (i = 0; i < reqLength - byteLength; i++) {\n        res[i] = 0;\n      }\n\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[reqLength - i - 1] = b;\n      }\n    } else {\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[i] = b;\n      }\n\n      for (; i < reqLength; i++) {\n        res[i] = 0;\n      }\n    }\n\n    return res;\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] & (1 << wbit)) >>> wbit;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this.strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this.strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this.strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    var fftm = new FFTM();\n    return fftm.mulp(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out.strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this.strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) < num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this.strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this.strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q.strip();\n    }\n    a.strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || r2 === 1 && cmp === 0) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modn = function modn (num) {\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return acc;\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this.strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      r.strip();\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n    return a.umod(this.m)._forceRed(this);\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n","/*\n A JavaScript implementation of the SHA family of hashes, as\n defined in FIPS PUB 180-4 and FIPS PUB 202, as well as the corresponding\n HMAC implementation as defined in FIPS PUB 198a\n\n Copyright Brian Turek 2008-2017\n Distributed under the BSD License\n See http://caligatio.github.com/jsSHA/ for more information\n\n Several functions taken from Paul Johnston\n*/\n'use strict';(function(Y){function C(c,a,b){var e=0,h=[],n=0,g,l,d,f,m,q,u,r,I=!1,v=[],w=[],t,y=!1,z=!1,x=-1;b=b||{};g=b.encoding||\"UTF8\";t=b.numRounds||1;if(t!==parseInt(t,10)||1>t)throw Error(\"numRounds must a integer >= 1\");if(\"SHA-1\"===c)m=512,q=K,u=Z,f=160,r=function(a){return a.slice()};else if(0===c.lastIndexOf(\"SHA-\",0))if(q=function(a,b){return L(a,b,c)},u=function(a,b,h,e){var k,f;if(\"SHA-224\"===c||\"SHA-256\"===c)k=(b+65>>>9<<4)+15,f=16;else if(\"SHA-384\"===c||\"SHA-512\"===c)k=(b+129>>>10<<\n5)+31,f=32;else throw Error(\"Unexpected error in SHA-2 implementation\");for(;a.length<=k;)a.push(0);a[b>>>5]|=128<<24-b%32;b=b+h;a[k]=b&4294967295;a[k-1]=b/4294967296|0;h=a.length;for(b=0;b<h;b+=f)e=L(a.slice(b,b+f),e,c);if(\"SHA-224\"===c)a=[e[0],e[1],e[2],e[3],e[4],e[5],e[6]];else if(\"SHA-256\"===c)a=e;else if(\"SHA-384\"===c)a=[e[0].a,e[0].b,e[1].a,e[1].b,e[2].a,e[2].b,e[3].a,e[3].b,e[4].a,e[4].b,e[5].a,e[5].b];else if(\"SHA-512\"===c)a=[e[0].a,e[0].b,e[1].a,e[1].b,e[2].a,e[2].b,e[3].a,e[3].b,e[4].a,\ne[4].b,e[5].a,e[5].b,e[6].a,e[6].b,e[7].a,e[7].b];else throw Error(\"Unexpected error in SHA-2 implementation\");return a},r=function(a){return a.slice()},\"SHA-224\"===c)m=512,f=224;else if(\"SHA-256\"===c)m=512,f=256;else if(\"SHA-384\"===c)m=1024,f=384;else if(\"SHA-512\"===c)m=1024,f=512;else throw Error(\"Chosen SHA variant is not supported\");else if(0===c.lastIndexOf(\"SHA3-\",0)||0===c.lastIndexOf(\"SHAKE\",0)){var F=6;q=D;r=function(a){var c=[],e;for(e=0;5>e;e+=1)c[e]=a[e].slice();return c};x=1;if(\"SHA3-224\"===\nc)m=1152,f=224;else if(\"SHA3-256\"===c)m=1088,f=256;else if(\"SHA3-384\"===c)m=832,f=384;else if(\"SHA3-512\"===c)m=576,f=512;else if(\"SHAKE128\"===c)m=1344,f=-1,F=31,z=!0;else if(\"SHAKE256\"===c)m=1088,f=-1,F=31,z=!0;else throw Error(\"Chosen SHA variant is not supported\");u=function(a,c,e,b,h){e=m;var k=F,f,g=[],n=e>>>5,l=0,d=c>>>5;for(f=0;f<d&&c>=e;f+=n)b=D(a.slice(f,f+n),b),c-=e;a=a.slice(f);for(c%=e;a.length<n;)a.push(0);f=c>>>3;a[f>>2]^=k<<f%4*8;a[n-1]^=2147483648;for(b=D(a,b);32*g.length<h;){a=b[l%\n5][l/5|0];g.push(a.b);if(32*g.length>=h)break;g.push(a.a);l+=1;0===64*l%e&&D(null,b)}return g}}else throw Error(\"Chosen SHA variant is not supported\");d=M(a,g,x);l=A(c);this.setHMACKey=function(a,b,h){var k;if(!0===I)throw Error(\"HMAC key already set\");if(!0===y)throw Error(\"Cannot set HMAC key after calling update\");if(!0===z)throw Error(\"SHAKE is not supported for HMAC\");g=(h||{}).encoding||\"UTF8\";b=M(b,g,x)(a);a=b.binLen;b=b.value;k=m>>>3;h=k/4-1;if(k<a/8){for(b=u(b,a,0,A(c),f);b.length<=h;)b.push(0);\nb[h]&=4294967040}else if(k>a/8){for(;b.length<=h;)b.push(0);b[h]&=4294967040}for(a=0;a<=h;a+=1)v[a]=b[a]^909522486,w[a]=b[a]^1549556828;l=q(v,l);e=m;I=!0};this.update=function(a){var c,b,k,f=0,g=m>>>5;c=d(a,h,n);a=c.binLen;b=c.value;c=a>>>5;for(k=0;k<c;k+=g)f+m<=a&&(l=q(b.slice(k,k+g),l),f+=m);e+=f;h=b.slice(f>>>5);n=a%m;y=!0};this.getHash=function(a,b){var k,g,d,m;if(!0===I)throw Error(\"Cannot call getHash after setting HMAC key\");d=N(b);if(!0===z){if(-1===d.shakeLen)throw Error(\"shakeLen must be specified in options\");\nf=d.shakeLen}switch(a){case \"HEX\":k=function(a){return O(a,f,x,d)};break;case \"B64\":k=function(a){return P(a,f,x,d)};break;case \"BYTES\":k=function(a){return Q(a,f,x)};break;case \"ARRAYBUFFER\":try{g=new ArrayBuffer(0)}catch(p){throw Error(\"ARRAYBUFFER not supported by this environment\");}k=function(a){return R(a,f,x)};break;default:throw Error(\"format must be HEX, B64, BYTES, or ARRAYBUFFER\");}m=u(h.slice(),n,e,r(l),f);for(g=1;g<t;g+=1)!0===z&&0!==f%32&&(m[m.length-1]&=16777215>>>24-f%32),m=u(m,f,\n0,A(c),f);return k(m)};this.getHMAC=function(a,b){var k,g,d,p;if(!1===I)throw Error(\"Cannot call getHMAC without first setting HMAC key\");d=N(b);switch(a){case \"HEX\":k=function(a){return O(a,f,x,d)};break;case \"B64\":k=function(a){return P(a,f,x,d)};break;case \"BYTES\":k=function(a){return Q(a,f,x)};break;case \"ARRAYBUFFER\":try{k=new ArrayBuffer(0)}catch(v){throw Error(\"ARRAYBUFFER not supported by this environment\");}k=function(a){return R(a,f,x)};break;default:throw Error(\"outputFormat must be HEX, B64, BYTES, or ARRAYBUFFER\");\n}g=u(h.slice(),n,e,r(l),f);p=q(w,A(c));p=u(g,f,m,p,f);return k(p)}}function b(c,a){this.a=c;this.b=a}function O(c,a,b,e){var h=\"\";a/=8;var n,g,d;d=-1===b?3:0;for(n=0;n<a;n+=1)g=c[n>>>2]>>>8*(d+n%4*b),h+=\"0123456789abcdef\".charAt(g>>>4&15)+\"0123456789abcdef\".charAt(g&15);return e.outputUpper?h.toUpperCase():h}function P(c,a,b,e){var h=\"\",n=a/8,g,d,p,f;f=-1===b?3:0;for(g=0;g<n;g+=3)for(d=g+1<n?c[g+1>>>2]:0,p=g+2<n?c[g+2>>>2]:0,p=(c[g>>>2]>>>8*(f+g%4*b)&255)<<16|(d>>>8*(f+(g+1)%4*b)&255)<<8|p>>>8*(f+\n(g+2)%4*b)&255,d=0;4>d;d+=1)8*g+6*d<=a?h+=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\".charAt(p>>>6*(3-d)&63):h+=e.b64Pad;return h}function Q(c,a,b){var e=\"\";a/=8;var h,d,g;g=-1===b?3:0;for(h=0;h<a;h+=1)d=c[h>>>2]>>>8*(g+h%4*b)&255,e+=String.fromCharCode(d);return e}function R(c,a,b){a/=8;var e,h=new ArrayBuffer(a),d,g;g=new Uint8Array(h);d=-1===b?3:0;for(e=0;e<a;e+=1)g[e]=c[e>>>2]>>>8*(d+e%4*b)&255;return h}function N(c){var a={outputUpper:!1,b64Pad:\"=\",shakeLen:-1};c=c||{};\na.outputUpper=c.outputUpper||!1;!0===c.hasOwnProperty(\"b64Pad\")&&(a.b64Pad=c.b64Pad);if(!0===c.hasOwnProperty(\"shakeLen\")){if(0!==c.shakeLen%8)throw Error(\"shakeLen must be a multiple of 8\");a.shakeLen=c.shakeLen}if(\"boolean\"!==typeof a.outputUpper)throw Error(\"Invalid outputUpper formatting option\");if(\"string\"!==typeof a.b64Pad)throw Error(\"Invalid b64Pad formatting option\");return a}function M(c,a,b){switch(a){case \"UTF8\":case \"UTF16BE\":case \"UTF16LE\":break;default:throw Error(\"encoding must be UTF8, UTF16BE, or UTF16LE\");\n}switch(c){case \"HEX\":c=function(a,c,d){var g=a.length,l,p,f,m,q,u;if(0!==g%2)throw Error(\"String of HEX type must be in byte increments\");c=c||[0];d=d||0;q=d>>>3;u=-1===b?3:0;for(l=0;l<g;l+=2){p=parseInt(a.substr(l,2),16);if(isNaN(p))throw Error(\"String of HEX type contains invalid characters\");m=(l>>>1)+q;for(f=m>>>2;c.length<=f;)c.push(0);c[f]|=p<<8*(u+m%4*b)}return{value:c,binLen:4*g+d}};break;case \"TEXT\":c=function(c,h,d){var g,l,p=0,f,m,q,u,r,t;h=h||[0];d=d||0;q=d>>>3;if(\"UTF8\"===a)for(t=-1===\nb?3:0,f=0;f<c.length;f+=1)for(g=c.charCodeAt(f),l=[],128>g?l.push(g):2048>g?(l.push(192|g>>>6),l.push(128|g&63)):55296>g||57344<=g?l.push(224|g>>>12,128|g>>>6&63,128|g&63):(f+=1,g=65536+((g&1023)<<10|c.charCodeAt(f)&1023),l.push(240|g>>>18,128|g>>>12&63,128|g>>>6&63,128|g&63)),m=0;m<l.length;m+=1){r=p+q;for(u=r>>>2;h.length<=u;)h.push(0);h[u]|=l[m]<<8*(t+r%4*b);p+=1}else if(\"UTF16BE\"===a||\"UTF16LE\"===a)for(t=-1===b?2:0,l=\"UTF16LE\"===a&&1!==b||\"UTF16LE\"!==a&&1===b,f=0;f<c.length;f+=1){g=c.charCodeAt(f);\n!0===l&&(m=g&255,g=m<<8|g>>>8);r=p+q;for(u=r>>>2;h.length<=u;)h.push(0);h[u]|=g<<8*(t+r%4*b);p+=2}return{value:h,binLen:8*p+d}};break;case \"B64\":c=function(a,c,d){var g=0,l,p,f,m,q,u,r,t;if(-1===a.search(/^[a-zA-Z0-9=+\\/]+$/))throw Error(\"Invalid character in base-64 string\");p=a.indexOf(\"=\");a=a.replace(/\\=/g,\"\");if(-1!==p&&p<a.length)throw Error(\"Invalid '=' found in base-64 string\");c=c||[0];d=d||0;u=d>>>3;t=-1===b?3:0;for(p=0;p<a.length;p+=4){q=a.substr(p,4);for(f=m=0;f<q.length;f+=1)l=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\".indexOf(q[f]),\nm|=l<<18-6*f;for(f=0;f<q.length-1;f+=1){r=g+u;for(l=r>>>2;c.length<=l;)c.push(0);c[l]|=(m>>>16-8*f&255)<<8*(t+r%4*b);g+=1}}return{value:c,binLen:8*g+d}};break;case \"BYTES\":c=function(a,c,d){var g,l,p,f,m,q;c=c||[0];d=d||0;p=d>>>3;q=-1===b?3:0;for(l=0;l<a.length;l+=1)g=a.charCodeAt(l),m=l+p,f=m>>>2,c.length<=f&&c.push(0),c[f]|=g<<8*(q+m%4*b);return{value:c,binLen:8*a.length+d}};break;case \"ARRAYBUFFER\":try{c=new ArrayBuffer(0)}catch(e){throw Error(\"ARRAYBUFFER not supported by this environment\");}c=\nfunction(a,c,d){var g,l,p,f,m,q;c=c||[0];d=d||0;l=d>>>3;m=-1===b?3:0;q=new Uint8Array(a);for(g=0;g<a.byteLength;g+=1)f=g+l,p=f>>>2,c.length<=p&&c.push(0),c[p]|=q[g]<<8*(m+f%4*b);return{value:c,binLen:8*a.byteLength+d}};break;default:throw Error(\"format must be HEX, TEXT, B64, BYTES, or ARRAYBUFFER\");}return c}function y(c,a){return c<<a|c>>>32-a}function S(c,a){return 32<a?(a-=32,new b(c.b<<a|c.a>>>32-a,c.a<<a|c.b>>>32-a)):0!==a?new b(c.a<<a|c.b>>>32-a,c.b<<a|c.a>>>32-a):c}function w(c,a){return c>>>\na|c<<32-a}function t(c,a){var k=null,k=new b(c.a,c.b);return k=32>=a?new b(k.a>>>a|k.b<<32-a&4294967295,k.b>>>a|k.a<<32-a&4294967295):new b(k.b>>>a-32|k.a<<64-a&4294967295,k.a>>>a-32|k.b<<64-a&4294967295)}function T(c,a){var k=null;return k=32>=a?new b(c.a>>>a,c.b>>>a|c.a<<32-a&4294967295):new b(0,c.a>>>a-32)}function aa(c,a,b){return c&a^~c&b}function ba(c,a,k){return new b(c.a&a.a^~c.a&k.a,c.b&a.b^~c.b&k.b)}function U(c,a,b){return c&a^c&b^a&b}function ca(c,a,k){return new b(c.a&a.a^c.a&k.a^a.a&\nk.a,c.b&a.b^c.b&k.b^a.b&k.b)}function da(c){return w(c,2)^w(c,13)^w(c,22)}function ea(c){var a=t(c,28),k=t(c,34);c=t(c,39);return new b(a.a^k.a^c.a,a.b^k.b^c.b)}function fa(c){return w(c,6)^w(c,11)^w(c,25)}function ga(c){var a=t(c,14),k=t(c,18);c=t(c,41);return new b(a.a^k.a^c.a,a.b^k.b^c.b)}function ha(c){return w(c,7)^w(c,18)^c>>>3}function ia(c){var a=t(c,1),k=t(c,8);c=T(c,7);return new b(a.a^k.a^c.a,a.b^k.b^c.b)}function ja(c){return w(c,17)^w(c,19)^c>>>10}function ka(c){var a=t(c,19),k=t(c,61);\nc=T(c,6);return new b(a.a^k.a^c.a,a.b^k.b^c.b)}function G(c,a){var b=(c&65535)+(a&65535);return((c>>>16)+(a>>>16)+(b>>>16)&65535)<<16|b&65535}function la(c,a,b,e){var h=(c&65535)+(a&65535)+(b&65535)+(e&65535);return((c>>>16)+(a>>>16)+(b>>>16)+(e>>>16)+(h>>>16)&65535)<<16|h&65535}function H(c,a,b,e,h){var d=(c&65535)+(a&65535)+(b&65535)+(e&65535)+(h&65535);return((c>>>16)+(a>>>16)+(b>>>16)+(e>>>16)+(h>>>16)+(d>>>16)&65535)<<16|d&65535}function ma(c,a){var d,e,h;d=(c.b&65535)+(a.b&65535);e=(c.b>>>16)+\n(a.b>>>16)+(d>>>16);h=(e&65535)<<16|d&65535;d=(c.a&65535)+(a.a&65535)+(e>>>16);e=(c.a>>>16)+(a.a>>>16)+(d>>>16);return new b((e&65535)<<16|d&65535,h)}function na(c,a,d,e){var h,n,g;h=(c.b&65535)+(a.b&65535)+(d.b&65535)+(e.b&65535);n=(c.b>>>16)+(a.b>>>16)+(d.b>>>16)+(e.b>>>16)+(h>>>16);g=(n&65535)<<16|h&65535;h=(c.a&65535)+(a.a&65535)+(d.a&65535)+(e.a&65535)+(n>>>16);n=(c.a>>>16)+(a.a>>>16)+(d.a>>>16)+(e.a>>>16)+(h>>>16);return new b((n&65535)<<16|h&65535,g)}function oa(c,a,d,e,h){var n,g,l;n=(c.b&\n65535)+(a.b&65535)+(d.b&65535)+(e.b&65535)+(h.b&65535);g=(c.b>>>16)+(a.b>>>16)+(d.b>>>16)+(e.b>>>16)+(h.b>>>16)+(n>>>16);l=(g&65535)<<16|n&65535;n=(c.a&65535)+(a.a&65535)+(d.a&65535)+(e.a&65535)+(h.a&65535)+(g>>>16);g=(c.a>>>16)+(a.a>>>16)+(d.a>>>16)+(e.a>>>16)+(h.a>>>16)+(n>>>16);return new b((g&65535)<<16|n&65535,l)}function B(c,a){return new b(c.a^a.a,c.b^a.b)}function A(c){var a=[],d;if(\"SHA-1\"===c)a=[1732584193,4023233417,2562383102,271733878,3285377520];else if(0===c.lastIndexOf(\"SHA-\",0))switch(a=\n[3238371032,914150663,812702999,4144912697,4290775857,1750603025,1694076839,3204075428],d=[1779033703,3144134277,1013904242,2773480762,1359893119,2600822924,528734635,1541459225],c){case \"SHA-224\":break;case \"SHA-256\":a=d;break;case \"SHA-384\":a=[new b(3418070365,a[0]),new b(1654270250,a[1]),new b(2438529370,a[2]),new b(355462360,a[3]),new b(1731405415,a[4]),new b(41048885895,a[5]),new b(3675008525,a[6]),new b(1203062813,a[7])];break;case \"SHA-512\":a=[new b(d[0],4089235720),new b(d[1],2227873595),\nnew b(d[2],4271175723),new b(d[3],1595750129),new b(d[4],2917565137),new b(d[5],725511199),new b(d[6],4215389547),new b(d[7],327033209)];break;default:throw Error(\"Unknown SHA variant\");}else if(0===c.lastIndexOf(\"SHA3-\",0)||0===c.lastIndexOf(\"SHAKE\",0))for(c=0;5>c;c+=1)a[c]=[new b(0,0),new b(0,0),new b(0,0),new b(0,0),new b(0,0)];else throw Error(\"No SHA variants supported\");return a}function K(c,a){var b=[],e,d,n,g,l,p,f;e=a[0];d=a[1];n=a[2];g=a[3];l=a[4];for(f=0;80>f;f+=1)b[f]=16>f?c[f]:y(b[f-\n3]^b[f-8]^b[f-14]^b[f-16],1),p=20>f?H(y(e,5),d&n^~d&g,l,1518500249,b[f]):40>f?H(y(e,5),d^n^g,l,1859775393,b[f]):60>f?H(y(e,5),U(d,n,g),l,2400959708,b[f]):H(y(e,5),d^n^g,l,3395469782,b[f]),l=g,g=n,n=y(d,30),d=e,e=p;a[0]=G(e,a[0]);a[1]=G(d,a[1]);a[2]=G(n,a[2]);a[3]=G(g,a[3]);a[4]=G(l,a[4]);return a}function Z(c,a,b,e){var d;for(d=(a+65>>>9<<4)+15;c.length<=d;)c.push(0);c[a>>>5]|=128<<24-a%32;a+=b;c[d]=a&4294967295;c[d-1]=a/4294967296|0;a=c.length;for(d=0;d<a;d+=16)e=K(c.slice(d,d+16),e);return e}function L(c,\na,k){var e,h,n,g,l,p,f,m,q,u,r,t,v,w,y,A,z,x,F,B,C,D,E=[],J;if(\"SHA-224\"===k||\"SHA-256\"===k)u=64,t=1,D=Number,v=G,w=la,y=H,A=ha,z=ja,x=da,F=fa,C=U,B=aa,J=d;else if(\"SHA-384\"===k||\"SHA-512\"===k)u=80,t=2,D=b,v=ma,w=na,y=oa,A=ia,z=ka,x=ea,F=ga,C=ca,B=ba,J=V;else throw Error(\"Unexpected error in SHA-2 implementation\");k=a[0];e=a[1];h=a[2];n=a[3];g=a[4];l=a[5];p=a[6];f=a[7];for(r=0;r<u;r+=1)16>r?(q=r*t,m=c.length<=q?0:c[q],q=c.length<=q+1?0:c[q+1],E[r]=new D(m,q)):E[r]=w(z(E[r-2]),E[r-7],A(E[r-15]),E[r-\n16]),m=y(f,F(g),B(g,l,p),J[r],E[r]),q=v(x(k),C(k,e,h)),f=p,p=l,l=g,g=v(n,m),n=h,h=e,e=k,k=v(m,q);a[0]=v(k,a[0]);a[1]=v(e,a[1]);a[2]=v(h,a[2]);a[3]=v(n,a[3]);a[4]=v(g,a[4]);a[5]=v(l,a[5]);a[6]=v(p,a[6]);a[7]=v(f,a[7]);return a}function D(c,a){var d,e,h,n,g=[],l=[];if(null!==c)for(e=0;e<c.length;e+=2)a[(e>>>1)%5][(e>>>1)/5|0]=B(a[(e>>>1)%5][(e>>>1)/5|0],new b(c[e+1],c[e]));for(d=0;24>d;d+=1){n=A(\"SHA3-\");for(e=0;5>e;e+=1){h=a[e][0];var p=a[e][1],f=a[e][2],m=a[e][3],q=a[e][4];g[e]=new b(h.a^p.a^f.a^\nm.a^q.a,h.b^p.b^f.b^m.b^q.b)}for(e=0;5>e;e+=1)l[e]=B(g[(e+4)%5],S(g[(e+1)%5],1));for(e=0;5>e;e+=1)for(h=0;5>h;h+=1)a[e][h]=B(a[e][h],l[e]);for(e=0;5>e;e+=1)for(h=0;5>h;h+=1)n[h][(2*e+3*h)%5]=S(a[e][h],W[e][h]);for(e=0;5>e;e+=1)for(h=0;5>h;h+=1)a[e][h]=B(n[e][h],new b(~n[(e+1)%5][h].a&n[(e+2)%5][h].a,~n[(e+1)%5][h].b&n[(e+2)%5][h].b));a[0][0]=B(a[0][0],X[d])}return a}var d,V,W,X;d=[1116352408,1899447441,3049323471,3921009573,961987163,1508970993,2453635748,2870763221,3624381080,310598401,607225278,\n1426881987,1925078388,2162078206,2614888103,3248222580,3835390401,4022224774,264347078,604807628,770255983,1249150122,1555081692,1996064986,2554220882,2821834349,2952996808,3210313671,3336571891,3584528711,113926993,338241895,666307205,773529912,1294757372,1396182291,1695183700,1986661051,2177026350,2456956037,2730485921,2820302411,3259730800,3345764771,3516065817,3600352804,4094571909,275423344,430227734,506948616,659060556,883997877,958139571,1322822218,1537002063,1747873779,1955562222,2024104815,\n2227730452,2361852424,2428436474,2756734187,3204031479,3329325298];V=[new b(d[0],3609767458),new b(d[1],602891725),new b(d[2],3964484399),new b(d[3],2173295548),new b(d[4],4081628472),new b(d[5],3053834265),new b(d[6],2937671579),new b(d[7],3664609560),new b(d[8],2734883394),new b(d[9],1164996542),new b(d[10],1323610764),new b(d[11],3590304994),new b(d[12],4068182383),new b(d[13],991336113),new b(d[14],633803317),new b(d[15],3479774868),new b(d[16],2666613458),new b(d[17],944711139),new b(d[18],2341262773),\nnew b(d[19],2007800933),new b(d[20],1495990901),new b(d[21],1856431235),new b(d[22],3175218132),new b(d[23],2198950837),new b(d[24],3999719339),new b(d[25],766784016),new b(d[26],2566594879),new b(d[27],3203337956),new b(d[28],1034457026),new b(d[29],2466948901),new b(d[30],3758326383),new b(d[31],168717936),new b(d[32],1188179964),new b(d[33],1546045734),new b(d[34],1522805485),new b(d[35],2643833823),new b(d[36],2343527390),new b(d[37],1014477480),new b(d[38],1206759142),new b(d[39],344077627),\nnew b(d[40],1290863460),new b(d[41],3158454273),new b(d[42],3505952657),new b(d[43],106217008),new b(d[44],3606008344),new b(d[45],1432725776),new b(d[46],1467031594),new b(d[47],851169720),new b(d[48],3100823752),new b(d[49],1363258195),new b(d[50],3750685593),new b(d[51],3785050280),new b(d[52],3318307427),new b(d[53],3812723403),new b(d[54],2003034995),new b(d[55],3602036899),new b(d[56],1575990012),new b(d[57],1125592928),new b(d[58],2716904306),new b(d[59],442776044),new b(d[60],593698344),new b(d[61],\n3733110249),new b(d[62],2999351573),new b(d[63],3815920427),new b(3391569614,3928383900),new b(3515267271,566280711),new b(3940187606,3454069534),new b(4118630271,4000239992),new b(116418474,1914138554),new b(174292421,2731055270),new b(289380356,3203993006),new b(460393269,320620315),new b(685471733,587496836),new b(852142971,1086792851),new b(1017036298,365543100),new b(1126000580,2618297676),new b(1288033470,3409855158),new b(1501505948,4234509866),new b(1607167915,987167468),new b(1816402316,\n1246189591)];X=[new b(0,1),new b(0,32898),new b(2147483648,32906),new b(2147483648,2147516416),new b(0,32907),new b(0,2147483649),new b(2147483648,2147516545),new b(2147483648,32777),new b(0,138),new b(0,136),new b(0,2147516425),new b(0,2147483658),new b(0,2147516555),new b(2147483648,139),new b(2147483648,32905),new b(2147483648,32771),new b(2147483648,32770),new b(2147483648,128),new b(0,32778),new b(2147483648,2147483658),new b(2147483648,2147516545),new b(2147483648,32896),new b(0,2147483649),\nnew b(2147483648,2147516424)];W=[[0,36,3,41,18],[1,44,10,45,2],[62,6,43,15,61],[28,55,25,21,56],[27,20,39,8,14]];\"function\"===typeof define&&define.amd?define(function(){return C}):\"undefined\"!==typeof exports?(\"undefined\"!==typeof module&&module.exports&&(module.exports=C),exports=C):Y.jsSHA=C})(this);\n","module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","import {Message, Events, SuccessState} from './Messages';\nimport {SpiConfig, TransactionOptions} from './SpiModels';\nimport {RequestIdHelper} from './RequestIdHelper';\n\nexport class CashoutOnlyRequest\n{  \n    constructor(amountCents, posRefId)\n    {\n        this.PosRefId = posRefId;\n        this.CashoutAmount = amountCents;\n\n        this.SurchargeAmount = null;\n        this.Config = new SpiConfig();\n        this.Options = new TransactionOptions();\n    }\n    \n    ToMessage()\n    {\n        var data = {\n            \"pos_ref_id\": this.PosRefId,\n            \"cash_amount\": this.CashoutAmount,\n            \"surcharge_amount\": this.SurchargeAmount\n        };\n\n        this.Config.EnabledPrintMerchantCopy = true;\n        this.Config.EnabledPromptForCustomerCopyOnEftpos = true;\n        this.Config.EnabledSignatureFlowOnEftpos = true;\n        this.Config.AddReceiptConfig(data);\n        this.Options.AddOptions(data);\n\n        return new Message(RequestIdHelper.Id(\"cshout\"), Events.CashoutOnlyRequest, data, true);\n    }\n}\n\nexport class CashoutOnlyResponse\n{\n    constructor(m)\n    {\n        this._m = m;\n        this.RequestId = m.Id;\n        this.PosRefId = m.Data.pos_ref_id;\n        this.SchemeName = m.Data.scheme_name;\n        this.Success = m.GetSuccessState() == SuccessState.Success;\n    }\n\n    GetRRN()\n    {\n        return this._m.Data[\"rrn\"];\n    }\n\n    GetCashoutAmount()\n    {\n        return this._m.Data[\"cash_amount\"];\n    }\n\n    GetBankNonCashAmount()\n    {\n        return this._m.Data[\"bank_noncash_amount\"];\n    }\n\n    GetBankCashAmount()\n    {\n        return this._m.Data[\"bank_cash_amount\"];\n    }\n    \n    GetCustomerReceipt()\n    {\n        return this._m.Data[\"customer_receipt\"];\n    }\n\n    GetMerchantReceipt()\n    {\n        return this._m.Data[\"merchant_receipt\"];\n    }\n    \n    GetResponseText()\n    {\n        return this._m.Data[\"host_response_text\"];\n    }\n\n    GetResponseCode()\n    {\n        return this._m.Data[\"host_response_code\"];\n    }\n    \n    GetTerminalReferenceId()\n    {\n        return this._m.Data[\"terminal_ref_id\"];\n    }\n\n    GetAccountType()\n    {\n        return this._m.Data[\"account_type\"];\n    }\n\n    GetAuthCode()\n    {\n        return this._m.Data[\"auth_code\"];\n    }\n\n    GetBankDate()\n    {\n        return this._m.Data[\"bank_date\"];\n    }\n\n    GetBankTime()\n    {\n        return this._m.Data[\"bank_time\"];\n    }\n    \n    GetMaskedPan()\n    {\n        return this._m.Data[\"masked_pan\"];\n    }\n    \n    GetTerminalId()\n    {\n        return this._m.Data[\"terminal_id\"];\n    }\n\n    WasMerchantReceiptPrinted()\n    {\n        return this._m.Data[\"merchant_receipt_printed\"];\n    }\n\n    WasCustomerReceiptPrinted()\n    {\n        return this._m.Data[\"customer_receipt_printed\"];\n    }\n    \n    GetSurchargeAmount()\n    {\n        return this._m.Data[\"surcharge_amount\"];\n    }\n\n    GetResponseValue(attribute)\n    {\n        return this._m.Data[attribute];\n    }\n\n}","export const ConnectionState = {\n    Disconnected: 'Disconnected',\n    Connecting: 'Connecting',\n    Connected: 'Connected'\n};\n\nexport const SPI_PROTOCOL   = 'spi.2.5.0';\n\nexport class ConnectionStateEventArgs\n{\n    constructor(connectionState) {\n        this.ConnectionState = connectionState;\n    }\n}\n\nexport class MessageEventArgs\n{\n    constructor(message) {\n        this.Message = message;\n    }\n}\n\nexport class Connection {\n    constructor() {\n        this.Address    = null;\n        this.Connected  = false;\n        this.State      = ConnectionState.Disconnected;\n        this.SpiProtocol = SPI_PROTOCOL;\n        this._ws        = null;\n\n        if(typeof WebSocket === 'undefined') {\n            throw new Error('Environment does not support WebSockets');\n        }\n    }\n\n    Connect(UseSecureWebSockets) {\n        if(this.State === ConnectionState.Connected || this.State === ConnectionState.Connecting) {\n            // already connected or connecting. disconnect first.\n            return;\n        }\n\n        this.State = ConnectionState.Connecting;\n\n        //Create a new socket instance specifying the url, SPI protocol and Websocket to use.\n        //The will create a TCP/IP socket connection to the provided URL and perform HTTP websocket negotiation\n        this._ws           = new WebSocket(this.Address, this.SpiProtocol);\n        this._ws.onopen    = () => this.pollWebSocketConnection();\n        this._ws.onmessage = (payload) => this.onMessageReceived(payload);\n        this._ws.onclose   = () => this.onClosed();\n        this._ws.onerror   = (err) => this.onError(err);\n\n        document.dispatchEvent(new CustomEvent('ConnectionStatusChanged', {detail: new ConnectionStateEventArgs(ConnectionState.Connecting)}));\n    }\n\n    Disconnect() {\n        if (this.State == ConnectionState.Disconnected) return;\n\n        if(this._ws && this._ws.readyState != this._ws.CLOSED) {\n            this._ws.close();\n        }\n\n        if (this._ws) {\n            this._ws.onopen    = null;\n            this._ws.onmessage = null;\n            this._ws.onclose   = null;\n            this._ws.onerror   = null;\n        }\n\n        this.onClosed();\n    }\n\n    Send(message) {\n        this._ws.send(message);\n    }\n\n    onOpened() {\n        this.State = ConnectionState.Connected;\n        this.Connected = true;\n        document.dispatchEvent(new CustomEvent('ConnectionStatusChanged', {detail: new ConnectionStateEventArgs(ConnectionState.Connected)}));\n    }\n\n    onClosed() {\n        this.Connected = false;\n        this.State = ConnectionState.Disconnected;\n        this._ws = null;\n        document.dispatchEvent(new CustomEvent('ConnectionStatusChanged', {detail: new ConnectionStateEventArgs(ConnectionState.Disconnected)}));\n    }\n\n    pollWebSocketConnection(count = 0) {\n        \n        if(this._ws.readyState === this._ws.OPEN) {\n            this.onOpened();\n            return true;\n        } else if(count < 25) {\n            count++;\n            setTimeout(() => this.pollWebSocketConnection(count), 200);\n        } else {\n            this.Disconnect();\n            return false;\n        }\n    }\n\n    onMessageReceived(message) {\n        document.dispatchEvent(new CustomEvent('MessageReceived', {detail: new MessageEventArgs(message.data)}));\n    }\n\n    onError(err) {\n        document.dispatchEvent(new CustomEvent('ErrorReceived', {detail: new MessageEventArgs(err)}));\n    }\n}\n","import jsSHA from 'jssha';\nimport aesjs from 'aes-js';\n\nexport class Crypto {\n    \n    constructor() {\n\n    }\n\n    // <summary>\n    // Encrypt a block using CBC and PKCS7.\n    // </summary>\n    // <param name=\"key\">The key value</param>\n    // <param name=\"data\">The message to encrypt</param>\n    // <returns>Returns the resulting encrypted string data as HEX.</returns>\n    static AesEncrypt (key, data) {\n        let bytes = aesjs.utils.hex.toBytes(key);\n        const iv = [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 ];\n        const textBytes = aesjs.padding.pkcs7.pad(aesjs.utils.utf8.toBytes(data));\n        const aesCbc = new aesjs.ModeOfOperation.cbc(bytes, iv);\n        const encryptedBytes = aesCbc.encrypt(textBytes);\n        const encryptedString = aesjs.utils.hex.fromBytes(encryptedBytes);\n\n        return encryptedString;\n    }\n    \n    // <summary>\n    // Decrypt a block using a CBC and PKCS7.\n    // </summary>\n    // <param name=\"key\">The key value</param>\n    // <param name=\"data\">the data to decrypt</param>\n    // <returns>Returns the resulting data decrypted in plaintext.</returns>\n    static AesDecrypt(key, data) {\n        let bytes = aesjs.utils.hex.toBytes(key);\n        const iv = [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 ];\n        const encryptedBytes = aesjs.utils.hex.toBytes(data);\n        const aesCbc = new aesjs.ModeOfOperation.cbc(bytes, iv);\n        const decryptedBytes = aesCbc.decrypt(encryptedBytes);\n        const decrypted = aesjs.utils.utf8.fromBytes(aesjs.padding.pkcs7.strip(decryptedBytes));\n    \n        return decrypted;\n    }\n\n    // <summary>\n    // Calculates the HMACSHA256 signature of a message.\n    // </summary>\n    // <param name=\"key\">The Hmac Key as HEX</param>\n    // <param name=\"messageToSign\">The message to sign</param>\n    // <returns>The HMACSHA256 signature as a hex string</returns>\n    static HmacSignature(key, messageToSign) {\n        let shaObj = new jsSHA(\"SHA-256\", \"TEXT\");\n\n        shaObj.setHMACKey(key,'HEX');\n        shaObj.update(messageToSign);\n        \n        return shaObj.getHMAC(\"HEX\");\n    }\n\n\n    /**\n     * This utility function calculates the SHA-256 value in hexadecimal format\n     * @param {String} value the value to be hashed\n     */\n    static GenerateHash(value) {\n        let shaObj = new jsSHA('SHA-256', 'HEX');\n        shaObj.update(value);\n        const shaHash = shaObj.getHash('HEX');\n        return shaHash;\n    }\n}\n","import BN from 'bn.js';\n\n// This creates the private and public keys for diffie-hellman (https://en.wikipedia.org/wiki/Diffie%E2%80%93Hellman_key_exchange#Cryptographic_explanation)\n// REQUIREMENTS: bn.js\n// ASSUMPTIONS: Inputs to the functions are hexadecimal strings\n\n// <summary>\n// This class implements the Diffie-Hellman algorithm using BigIntegers.\n// It can do the 3 main things:\n// 1. Generate a random Private Key for you.\n// 2. Generate your Public Key based on your Private Key.\n// 3. Generate the Secret given their Public Key and your Private Key\n// p and g are the shared constants for the algorithm, aka primeP and primeG.\n// </summary>\nexport class DiffieHellman {\n\n    constructor () {\n\n    }\n\n    // <summary>\n    // Generates a random Private Key that you can use.\n    // </summary>\n    // <param name=\"p\"></param>\n    // <returns>Random Private Key</returns>\n    RandomPrivateKey(maxValue) {\n        let maxValueBN      = new BN(maxValue);\n        let shiftDistance   = Math.floor((Math.random() * 1000) + 1);\n        let randBitInt      = maxValueBN.shrn(shiftDistance); // Right shift divides by a power of 2\n        let min             = new BN(2);\n\n        if(randBitInt.cmp(min) == -1) {\n            return min;\n        }\n\n        return randBitInt;\n    }\n\n    // <summary>\n    // Calculates the Public Key from a Private Key.\n    // </summary>\n    // <param name=\"p\"></param>\n    // <param name=\"g\"></param>\n    // <param name=\"privateKey\"></param>\n    // <returns>Public Key (Hex)</returns>\n    PublicKey(p, g, privateKey) {\n        const aHex = new BN(privateKey, 16);\n        const gHex = new BN(g, 16);\n        const montPrime = BN.mont(new BN(p, 16));\n        const gRed = gHex.toRed(montPrime);\n        const secret = gRed.redPow(aHex).fromRed().toString(16);\n\n        return secret;  \n    }\n\n    // <summary>\n    // Calculates the shared secret given their Public Key (A) and your Private Key (b)\n    // </summary>\n    // <param name=\"p\"></param>\n    // <param name=\"theirPublicKey\"></param>\n    // <param name=\"yourPrivateKey\"></param>\n    // <returns></returns>\n    Secret(p, theirPublicKey, yourPrivateKey) {\n        const bHex = new BN(theirPublicKey, 16);\n        const AHex = new BN(yourPrivateKey, 16);\n        const montPrime = BN.mont(new BN(p, 16));\n        const BRed = bHex.toRed(montPrime);\n\n        return BRed.redPow(AHex).fromRed().toString(16).toUpperCase();\n    }\n\n}\n","import {Events, Message} from './Messages';\nimport {Crypto} from './Crypto';\nimport {Secrets} from './Secrets';\n\nexport class KeyRollingHelper {\n    static PerformKeyRolling(krRequest, currentSecrets)\n    {\n        let m = new Message(krRequest.Id, Events.KeyRollResponse, {\"status\": \"confirmed\"}, true);\n        let newSecrets = new Secrets(Crypto.GenerateHash(currentSecrets.EncKey).toUpperCase(),Crypto.GenerateHash(currentSecrets.HmacKey).toUpperCase());\n        return new KeyRollingResult(m, newSecrets);\n    }\n}\n\nexport class KeyRollingResult {\n    constructor(keyRollingConfirmation, newSecrets) {\n        this.KeyRollingConfirmation = keyRollingConfirmation;\n        this.NewSecrets = newSecrets;\n    }\n}\n","export class Logger {\n    constructor(element, lineSeperator = '\\n') {\n        this.buffer     = [];\n        this.element    = element;\n        this.lineSeperator = lineSeperator;\n    }\n\n    Info(...args) {\n        this.buffer.push(args.join(' '));\n        this._render();\n    }\n\n    Debug(...args) {\n        this.buffer.push(args.join(' '));\n        this._render();\n    }\n\n    Warn(...args) {\n        this.buffer.push(args.join(' '));\n        this._render();\n    }\n\n    Error(...args) {\n        this.buffer.push(args.join(' '));\n        this._render();\n    }\n\n    Console(...args) {\n        console.log(args.join(' '));\n    }\n\n    _render() {\n        this.element.innerText = this.buffer.join(this.lineSeperator);\n        this.element.scrollTop = this.element.scrollHeight;\n    }\n\n    Clear() {\n        this.buffer = [];\n        this._render();\n    }\n}\n","import {Crypto} from './Crypto';\n\n// <summary>\n// Events statically declares the various event names in messages.\n// </summary>\nexport const Events = {\n     PairRequest : \"pair_request\",\n     KeyRequest : \"key_request\",\n     KeyResponse : \"key_response\",\n     KeyCheck : \"key_check\",\n     PairResponse : \"pair_response\",\n     DropKeysAdvice : \"drop_keys\",\n\n     LoginRequest : \"login_request\",\n     LoginResponse : \"login_response\",\n\n     Ping : \"ping\",\n     Pong : \"pong\",\n\n     PurchaseRequest : \"purchase\",\n     PurchaseResponse : \"purchase_response\",\n     CancelTransactionRequest : \"cancel_transaction\",\n     CancelTransactionResponse : \"cancel_response\",\n     GetLastTransactionRequest : \"get_last_transaction\",\n     GetLastTransactionResponse : \"last_transaction\",\n     RefundRequest : \"refund\",\n     RefundResponse : \"refund_response\",\n     SignatureRequired : \"signature_required\",\n     SignatureDeclined : \"signature_decline\",\n     SignatureAccepted : \"signature_accept\",\n     AuthCodeRequired : \"authorisation_code_required\",\n     AuthCodeAdvice : \"authorisation_code_advice\",\n\n     CashoutOnlyRequest : \"cash\",\n     CashoutOnlyResponse : \"cash_response\",\n\n     MotoPurchaseRequest : \"moto_purchase\",\n     MotoPurchaseResponse : \"moto_purchase_response\",\n\n     SettleRequest : \"settle\",\n     SettleResponse : \"settle_response\",\n     SettlementEnquiryRequest : \"settlement_enquiry\",\n     SettlementEnquiryResponse : \"settlement_enquiry_response\",\n\n     SetPosInfoRequest : \"set_pos_info\",\n     SetPosInfoResponse : \"set_pos_info_response\",\n\n     KeyRollRequest : \"request_use_next_keys\",\n     KeyRollResponse : \"response_use_next_keys\",\n\n     Error : \"error\",\n    \n     InvalidHmacSignature : \"_INVALID_SIGNATURE_\",\n\n    // Pay At Table Related Messages\n    PayAtTableGetTableConfig : \"get_table_config\", // incoming. When eftpos wants to ask us for P@T configuration.\n    PayAtTableSetTableConfig : \"set_table_config\", // outgoing. When we want to instruct eftpos with the P@T configuration.\n    PayAtTableGetBillDetails : \"get_bill_details\", // incoming. When eftpos wants to aretrieve the bill for a table.\n    PayAtTableBillDetails : \"bill_details\",        // outgoing. We reply with this when eftpos requests to us get_bill_details.\n    PayAtTableBillPayment : \"bill_payment\",        // incoming. When the eftpos advices \n\n    PrintingRequest : \"print\",\n    PrintingResponse : \"print_response\",\n\n    TerminalStatusRequest : \"get_terminal_status\",\n    TerminalStatusResponse : \"terminal_status\",\n\n    BatteryLevelChanged : \"battery_level_changed\",\n\n    PayAtTableGetOpenTables: \"get_open_tables\",\n    PayAtTableOpenTables: \"open_tables\",\n\n    PayAtTableBillPaymentFlowEnded: \"bill_payment_flow_ended\"\n};\n\nexport const SuccessState = {\n    Unknown: 'Unknown', Success: 'Success', Failed: 'Failed'\n};\n\n// <summary>\n// MessageStamp represents what is required to turn an outgoing Message into Json\n// including encryption and date setting.\n// </summary>\nexport class MessageStamp {\n    constructor(posId, secrets, serverTimeDelta) {\n        this.PosId = posId;\n        this.Secrets = secrets;\n        this.ServerTimeDelta = serverTimeDelta;\n    }\n}\n\n// <summary>\n// MessageEnvelope represents the outer structure of any message that is exchanged\n// between the Pos and the PinPad and vice-versa.\n// See http://www.simplepaymentapi.com/#/api/message-encryption\n// </summary>\nexport class MessageEnvelope {\n    constructor(message, enc, hmac, posId) {\n        // <summary>\n        // The Message field is set only when in Un-encrypted form.\n        // In fact it is the only field in an envelope in the Un-Encrypted form.\n        // </summary>\n        this.Message = message;\n\n        // <summary>\n        // The enc field is set only when in Encrypted form.\n        // It contains the encrypted Json of another MessageEnvelope \n        // </summary>\n        this.Enc = enc;\n\n        // <summary>\n        // The hmac field is set only when in Encrypted form.\n        // It is the signature of the \"enc\" field.\n        // </summary>\n        this.Hmac = hmac;\n\n        // <summary>\n        // The pos_id field is only filled for outgoing Encrypted messages.\n        // </summary>\n        this.PosId = posId;\n    }\n\n    toJSON() {\n        return {\n            message: this.Message,\n            enc: this.Enc,\n            hmac: this.Hmac,\n            pos_id: this.PosId\n        }\n    }\n}\n\n// <summary>\n// Message represents the contents of a Message.\n// See http://www.simplepaymentapi.com/#/api/message-encryption\n// </summary>\nexport class Message {\n    constructor(id, eventName, data, needsEncryption) {\n        this.Id = id;\n        this.EventName = eventName;\n        this.Data = data;\n        this.DateTimeStamp = '';\n        this.PosId = ''; // Pos_id is set here only for outgoing Un-encrypted messages. \n        this.IncommingHmac = ''; // Sometimes the logic around the incoming message might need access to the sugnature, for example in the key_check.\n        this._needsEncryption = needsEncryption; // Denotes whether an outgoing message needs to be encrypted in ToJson()\n        this.DecryptedJson = ''; // Set on an incoming message just so you can have a look at what it looked like in its json form.\n    }\n\n    GetSuccessState() {\n        if(!this.Data || typeof this.Data.success === \"undefined\") {\n            return SuccessState.Unknown;\n        }\n\n        return this.Data.success ? SuccessState.Success : SuccessState.Failed;\n    }\n\n    GetError() {\n        return this.Data.error_reason ? this.Data.error_reason : \"\";\n    }\n\n    GetErrorDetail() {\n        return this.Data.error_detail;\n    }\n\n    GetServerTimeDelta()\n    {\n        let now = Date.now();\n        \n        // Stamp format: 2018-04-19T01:42:38.279\n        let dts = this.DateTimeStamp.split(/[\\-\\+\\. :T]/);\n        let msgTime = new Date(\n            // year, month, date\n            dts[0], dts[1] - 1, dts[2],\n            // hour, minute, second, millis\n            dts[3], dts[4], dts[5], dts[6]\n        ).getTime(); // Local time zone\n\n        return msgTime - now;\n    }\n\n    // Helper method to parse bank date format 20042018 (ddMMyyyy)\n    static ParseBankDate(bankDate) {\n        if(bankDate.length !== 8) return null;\n\n        return new Date(`${bankDate.substr(4,4)}-${bankDate.substr(2,2)}-${bankDate.substr(0,2)}`);\n    }\n\n    // Parses a bank date & time str from \"05Oct17\" / \"05:00\" (\"ddMMMyy/HH:mm\") into date obj\n    static ParseBankDateTimeStr(date, time) {\n        return new Date(`${date.substr(0,2)} ${date.substr(2,3)} ${date.substr(5,2)} ${time}`);\n    }\n\n    static FromJson(msgJson, secrets) {\n        let env = JSON.parse(msgJson);\n\n        if(env.message != null) {\n            let message = new Message(env.message.id, env.message.event, env.message.data, false);\n            message.DecryptedJson = msgJson;\n            return message;\n        }\n\n        if (secrets == null)\n        {\n            // This may happen if we somehow received an encrypted message from eftpos but we're not configered with secrets.\n            // For example, if we cancel the pairing process a little late in the game and we get an encrypted key_check message after we've dropped the keys.\n            return new Message(\"UNKNOWN\", \"NOSECRETS\", null, false);\n        }\n\n        // Its encrypted, verify sig\n        let sig = Crypto.HmacSignature(secrets.HmacKey, env.enc);\n        if (sig.toUpperCase() != env.hmac) {\n            return new Message(\"_\", Events.InvalidHmacSignature, null, false);\n        }\n\n        let decryptedJson = Crypto.AesDecrypt(secrets.EncKey, env.enc);\n\n        try {\n            let decryptedMsg = JSON.parse(decryptedJson);\n\n            let message = new Message(decryptedMsg.message.id, decryptedMsg.message.event, decryptedMsg.message.data, true);\n\n            message.DateTimeStamp = decryptedMsg.message.datetime;\n            message.PosId = decryptedMsg.message.pos_id;\n            message.IncomingHmac = env.hmac; \n            message.DecryptedJson = decryptedJson;\n\n            return message;\n\n        } catch(e) {\n            return new Message(\"UNKNOWN\", \"UNPARSEABLE\", {\"msg\": decryptedJson}, false);\n        }\n    }\n\n    ToJson(stamp) {\n        let now = Date.now();\n        let tzoffset = new Date().getTimezoneOffset() * 60 * 1000;\n        let adjustedTime = new Date(now - tzoffset + stamp.ServerTimeDelta);\n\n        // Format date: \"yyyy-MM-ddTHH:mm:ss.fff\"\n        this.DateTimeStamp = adjustedTime.toISOString().slice(0,-1);\n        this.PosId = stamp.PosId;\n        \n        var envelope = {\n            message: {\n                id: this.Id,\n                event: this.EventName,\n                data: this.Data,\n                datetime: this.DateTimeStamp\n            }\n        };\n\n        if (!this._needsEncryption) {\n            // Unencrypted Messages need PosID inside the message\n            envelope.message.pos_id = this.PosId\n        }\n        this.DecryptedJson = JSON.stringify(envelope);\n\n        if (!this._needsEncryption) {\n            return this.DecryptedJson;\n        }\n\n        let encMsg = Crypto.AesEncrypt(stamp.Secrets.EncKey, this.DecryptedJson);\n        let hmacSig = Crypto.HmacSignature(stamp.Secrets.HmacKey, encMsg);\n        let encrMessageEnvelope = {enc: encMsg, hmac: hmacSig.toUpperCase(), pos_id: stamp.PosId};\n\n        return JSON.stringify(encrMessageEnvelope);\n    }\n}\n","import {Events, Message} from './Messages';\nimport {RequestIdHelper} from './RequestIdHelper';\n\n// <summary>\n// Pairing Interaction 1: Outgoing\n// </summary>\nexport class PairRequest {\n    ToMessage() {\n        let data = {padding: true};\n        return new Message(RequestIdHelper.Id(\"pr\"), Events.PairRequest, data, false);\n    }\n}\n\n// Pairing Interaction 2: Incoming\nexport class KeyRequest {\n    constructor(m) {\n        this.RequestId = m.Id;\n        this.Aenc = m.Data.enc.A;\n        this.Ahmac = m.Data.hmac.A;\n    }\n}\n\n// Pairing Interaction 3: Outgoing\nexport class KeyResponse {\n    constructor(requestId, Benc, Bhmac) {\n        this.RequestId = requestId;\n        this.Benc = Benc;\n        this.Bhmac = Bhmac;\n    }\n\n    ToMessage() {\n        let data = {\n            enc: {\n                B: this.Benc\n            },\n            hmac: {\n                B: this.Bhmac\n            }\n        };\n\n        return new Message(this.RequestId, Events.KeyResponse, data, false);\n    }\n}\n\n// Pairing Interaction 4: Incoming\nexport class KeyCheck {\n    constructor(m) {\n        this.ConfirmationCode = m.IncomingHmac.substring(0,6);\n    }\n}\n\n// Pairing Interaction 5: Incoming\nexport class PairResponse {\n    constructor(m) {\n        this.Success = m.Data.success;\n    }\n}\n\n// Holder class for Secrets and KeyResponse, so that we can use them together in method signatures.\nexport class SecretsAndKeyResponse {\n    constructor(secrets, keyResponse) {\n        this.Secrets = secrets;\n        this.KeyResponse = keyResponse;\n    }\n}\n\nexport class DropKeysRequest\n{\n    ToMessage()\n    {\n        return new Message(RequestIdHelper.Id(\"drpkys\"), Events.DropKeysAdvice, null, true);\n    }\n}","import {PairRequest, KeyResponse, SecretsAndKeyResponse} from './Pairing';\nimport {Secrets} from './Secrets';\nimport {Crypto} from './Crypto';\nimport {DiffieHellman} from './DiffieHellman';\n\n// This is the generator used for diffie-hellman in 2048-bit MODP Group 14 as per (https://tools.ietf.org/html/rfc3526#section-3)\nexport const GENERATOR = 2;\n\n// This is the prime used for diffie-hellman using 2048-bit MODP Group 14 as per (https://tools.ietf.org/html/rfc3526#section-3)\nexport const GROUP14_2048_BIT_MODP = 'FFFFFFFFFFFFFFFFC90FDAA22168C234C4C6628B80DC1CD129024E088A67CC74020BBEA63B139B22514A08798E3404DDEF9519B3CD3A431B302B0A6DF25F14374FE1356D6D51C245E485B576625E7EC6F44C42E9A637ED6B0BFF5CB6F406B7EDEE386BFB5A899FA5AE9F24117C4B1FE649286651ECE45B3DC2007CB8A163BF0598DA48361C55D39A69163FA8FD24CF5F83655D23DCA3AD961C62F356208552BB9ED529077096966D670C354E4ABC9804F1746C08CA18217C32905E462E36CE3BE39E772C180E86039B2783A2EC07A28FB5C55DF06F4C52C9DE2BCBF6955817183995497CEA956AE515D2261898FA051015728E5A8AACAA68FFFFFFFFFFFFFFFF';\n\n// <summary>\n// This static class helps you with the pairing process as documented here:\n// http://www.simplepaymentapi.com/#/api/pairing-process\n// </summary>\nexport class PairingHelper {\n    // <summary>\n    // Generates a pairing Request.\n    // </summary>\n    // <returns>New PairRequest</returns>\n    static NewPairRequest() {\n        return new PairRequest();\n    }\n\n    // <summary>\n    // Calculates/Generates Secrets and KeyResponse given an incoming KeyRequest.\n    // </summary>\n    // <param name=\"keyRequest\"></param>\n    // <returns>Secrets and KeyResponse to send back.</returns>\n    GenerateSecretsAndKeyResponse(keyRequest) {\n        let encPubAndSec = this._calculateMyPublicKeyAndSecret(keyRequest.Aenc);\n        let Benc = encPubAndSec.MyPublicKey;\n        let Senc = encPubAndSec.SharedSecretKey;\n\n        let hmacPubAndSec = this._calculateMyPublicKeyAndSecret(keyRequest.Ahmac);\n        let Bhmac = hmacPubAndSec.MyPublicKey;\n        let Shmac = hmacPubAndSec.SharedSecretKey;\n        \n        let secrets = new Secrets(Senc, Shmac);\n        let keyResponse = new KeyResponse(keyRequest.RequestId, Benc, Bhmac);\n\n        return new SecretsAndKeyResponse(secrets, keyResponse);\n    }\n\n    // <summary>\n    // Turns an incoming \"A\" value from the PinPad into the outgoing \"B\" value \n    // and the secret value using DiffieHelmman helper.\n    // </summary>\n    // <param name=\"theirPublicKey\">The incoming A value</param>\n    // <returns>Your B value and the Secret</returns>\n    _calculateMyPublicKeyAndSecret(theirPublicKey) {\n\n        let diffieHellman = new DiffieHellman();\n        let myPrivateBI = diffieHellman.RandomPrivateKey(GROUP14_2048_BIT_MODP);\n        let myPublicBI = diffieHellman.PublicKey(GROUP14_2048_BIT_MODP, GENERATOR, myPrivateBI);\n        let secretBI = diffieHellman.Secret(GROUP14_2048_BIT_MODP, theirPublicKey, myPrivateBI);\n\n        let secret = this.DHSecretToSPISecret(secretBI);\n\n        return new PublicKeyAndSecret(myPublicBI, secret);\n    }\n\n    // <summary>\n    // Converts the DH secret BigInteger into the hex-string to be used as the secret.\n    // There are some \"gotchyas\" here which is why this piece of work is abstracted so it can be tested separately.\n    // See: http://www.simplepaymentapi.com/#/api/pairing-process\n    // </summary>\n    // <param name=\"secretBI\">Secret as BigInteger</param>\n    // <returns>Secret as Hex-String</returns>\n    DHSecretToSPISecret(secret)\n    {      \n        // If the calculated hexadecimal secret doesn't have an even number of characters, we add an extra 0 to the start. This allows SHA-256 to operate on the hexadecimal secret as if it were a hexadecimal representation of a string.\n        if (secret.length % 2 === 1){\n            secret = '0' + secret;\n        }\n\n        secret = secret.padStart(512, '0');\n\n        // We sha256 that byte array and return the hex string result\n        return Crypto.GenerateHash(secret);\n    }\n}\n\n// <summary>\n// Internal Holder class for Public and Secret, so that we can use them together in method signatures. \n// </summary>\nexport class PublicKeyAndSecret {\n    constructor(myPublicKey, sharedSecretKey) {\n        this.MyPublicKey = myPublicKey;\n        this.SharedSecretKey = sharedSecretKey;\n    }\n}","import {Events, Message} from './Messages';\nimport {PurchaseResponse} from './Purchase';\n\n// <summary>\n// This class represents the BillDetails that the POS will be asked for throughout a PayAtTable flow.\n// </summary>\nexport class BillStatusResponse\n{\n    constructor() {\n        // <summary>\n        // Set this Error accordingly if you are not able to return the BillDetails that were asked from you.\n        // </summary>\n        this.Result = null;\n        \n        // <summary>\n        // This is a unique identifier that you assign to each bill.\n        // It migt be for example, the timestamp of when the cover was opened.\n        // </summary>\n        this.BillId = null;\n        \n        // <summary>\n        // This is the table id that this bill was for.\n        // The waiter will enter it on the Eftpos at the start of the PayAtTable flow and the Eftpos will \n        // retrieve the bill using the table id. \n        // </summary>\n        this.TableId = null;\n\n        this.OperatorId = null;\n        \n        // <summary>\n        // The Total Amount on this bill, in cents.\n        // </summary>\n        this.TotalAmount = 0;\n        \n        // <summary>\n        // The currently outsanding amount on this bill, in cents.\n        // </summary>\n        this.OutstandingAmount = 0;\n\n        // <summary>\n        // Your POS is required to persist some state on behalf of the Eftpos so the Eftpos can recover state.\n        // It is just a piece of string that you save against your billId.\n        // WHenever you're asked for BillDetails, make sure you return this piece of data if you have it.\n        // </summary>\n        this.BillData = \"\";\n    }\n\n    getBillPaymentHistory()\n    {\n        if (!this.BillData)\n        {\n            return [];\n        }\n        \n        let billPaymentHistory = [];\n        let savedBillData = JSON.parse(this.BillData);\n\n        return savedBillData.map((bill) => {\n            return new PaymentHistoryEntry(bill.payment_type, bill.payment_summary);\n        });\n    }\n\n    static ToBillData(ph)\n    {\n        if (ph.length < 1)\n        {\n            return \"\";\n        }\n\n        return JSON.stringify(ph);\n    }\n    \n    ToMessage(messageId)\n    {\n        var data = {\n            \"success\": this.Result==BillRetrievalResult.SUCCESS\n        };\n        \n        if (this.BillId) data.bill_id = this.BillId;\n        if (this.TableId) data.table_id = this.TableId;\n\n        if (this.Result == BillRetrievalResult.SUCCESS)\n        {\n            data.bill_total_amount = this.TotalAmount;\n            data.bill_outstanding_amount = this.OutstandingAmount;\n            data.bill_payment_history = this.getBillPaymentHistory();\n        }\n        else\n        {\n            data.error_reason = this.Result.toString();\n            data.error_detail = this.Result.toString();\n        }\n\n        return new Message(messageId, Events.PayAtTableBillDetails, data, true);\n    }\n}\n\nexport const BillRetrievalResult = \n{\n    SUCCESS: 'SUCCESS',\n    INVALID_TABLE_ID: 'INVALID_TABLE_ID',\n    INVALID_BILL_ID: 'INVALID_BILL_ID',\n    INVALID_OPERATOR_ID: 'INVALID_OPERATOR_ID'\n};\n\nexport const PaymentType = \n{\n    CARD: 'CARD',\n    CASH: 'CASH' \n};\n\nexport class BillPayment\n{\n    constructor(m)\n    {\n        this._incomingAdvice = m;\n        this.BillId = this._incomingAdvice.Data[\"bill_id\"];\n        this.TableId = this._incomingAdvice.Data[\"table_id\"];\n        this.OperatorId = this._incomingAdvice.Data[\"operator_id\"];\n        this.PaymentFlowStarted = null;\n        \n        var pt = this._incomingAdvice.Data[\"payment_type\"];\n        this.PaymentType = pt;\n        \n        // this is when we ply the sub object \"payment_details\" into a purchase response for convenience.\n        var purchaseMsg = new Message(m.Id, \"payment_details\", m.Data[\"payment_details\"], false);\n        this.PurchaseResponse = new PurchaseResponse(purchaseMsg);\n\n        this.PurchaseAmount = this.PurchaseResponse.GetPurchaseAmount();\n        this.TipAmount = this.PurchaseResponse.GetTipAmount();\n        this.SurchargeAmount = this.PurchaseResponse.GetSurchargeAmount();\n    }\n}\n\nexport class PaymentHistoryEntry\n{\n    constructor(paymentType, paymentSummary)\n    {\n        this.PaymentType = paymentType;\n        this.PaymentSummary = paymentSummary;\n    }\n\n    toJSON() {\n        return {\n            payment_type: this.PaymentType,\n            payment_summary: this.PaymentSummary\n        };\n    }\n    \n    GetTerminalRefId()\n    {\n        return this.PaymentSummary[\"terminal_ref_id\"];\n    }\n}\n\nexport class PayAtTableConfig\n{\n    constructor() {\n        this.PayAtTabledEnabled = false;\n        this.OperatorIdEnabled = false;\n        this.SplitByAmountEnabled = false;\n        this.EqualSplitEnabled = false;\n        this.TableRetrievalEnabled = false;\n     \n        this.TippingEnabled = false;\n    \n        this.SummaryReportEnabled = false;\n    \n        this.LabelPayButton = '';\n        this.LabelOperatorId = '';\n        this.LabelTableId = '';\n    \n        // \n        // <summary>\n        // Fill in with operator ids that the eftpos terminal will validate against. \n        // Leave Empty to allow any operator_id through. \n        // </summary>\n       this.AllowedOperatorIds = [];\n    }\n\n    ToMessage(messageId)\n    {\n        var data = {\n            \"pay_at_table_enabled\": this.PayAtTabledEnabled,\n            \"operator_id_enabled\": this.OperatorIdEnabled,\n            \"split_by_amount_enabled\": this.SplitByAmountEnabled,\n            \"equal_split_enabled\": this.EqualSplitEnabled,\n            \"tipping_enabled\": this.TippingEnabled,\n            \"summary_report_enabled\": this.SummaryReportEnabled,\n            \"pay_button_label\": this.LabelPayButton,\n            \"operator_id_label\": this.LabelOperatorId,\n            \"table_id_label\": this.LabelTableId,\n            \"operator_id_list\": this.AllowedOperatorIds,\n            \"table_retrieval_enabled\": this.TableRetrievalEnabled,\n        };\n\n        return new Message(messageId, Events.PayAtTableSetTableConfig, data, true);\n    }\n    \n    static FeatureDisableMessage(messageId) {\n        var data = {\n            \"pay_at_table_enabled\": false\n        };\n        return new Message(messageId, Events.PayAtTableSetTableConfig, data, true);\n    }\n}\n\n// <summary>\n// These attributes work for COM interop.\n// </summary>\nexport class GetOpenTablesResponse\n{\n    constructor() {\n        /// <summary>\n        /// Your POS is required to persist some state on behalf of the Eftpos so the Eftpos can recover state.\n        /// It is just a piece of string that you save against your operatorId.\n        /// Whenever you're asked for OpenTables, make sure you return this piece of data if you have it.\n        /// </summary>\n        this.TableData = null;\n    }\n\n    GetOpenTables()\n    {\n        if (!this.TableData)\n        {\n            return [];\n        }\n\n        return JSON.parse(this.TableData);\n    }\n\n    ToMessage(messageId)\n    {\n        var data = {\n            tables: this.GetOpenTables()\n        };\n\n        return new Message(messageId, Events.PayAtTableOpenTables, data, true);\n    }\n}\n\n// <summary>\n// These attributes work for COM interop.\n// </summary>\nexport class OpenTablesEntry\n{\n    constructor() {\n        this.TableId = null;\n        this.Label = null;\n        this.BillOutstandingAmount = null;\n    }\n\n    toJSON() {\n        return {\n            table_id: this.TableId,\n            label: this.Label,\n            bill_outstanding_amount: this.BillOutstandingAmount\n        }\n    }\n}\n\n/// <summary>\n/// These attributes work for COM interop.\n/// </summary>\n\nexport class BillPaymentFlowEndedResponse\n{\n    constructor(m)\n    {\n        this.BillId = m.Data.bill_id;\n        this.BillOutstandingAmount = m.Data.bill_outstanding_amount;\n        this.BillTotalAmount = m.Data.bill_total_amount;\n        this.OperatorId = m.Data.operator_id;\n        this.TableId = m.Data.table_id;\n        this.CardTotalCount = m.Data.card_total_count;\n        this.CardTotalAmount = m.Data.card_total_amount;\n        this.CashTotalCount = m.Data.cash_total_count;\n        this.CashTotalAmount = m.Data.cash_total_amount;\n    }\n}\n","import {RequestIdHelper} from './RequestIdHelper';\nimport {Events, Message} from './Messages';\n\nexport class PongHelper\n{\n    static GeneratePongRessponse(ping)\n    {\n        return new Message(ping.Id, Events.Pong, null, true);\n    }\n}\n\nexport class PingHelper\n{\n    static GeneratePingRequest()\n    {\n        return new Message(RequestIdHelper.Id(\"ping\"), Events.Ping, null, true);\n    }\n}\n","import {Message, Events, SuccessState} from './Messages';\nimport {RequestIdHelper} from './RequestIdHelper';\n\nexport class SetPosInfoRequest\n{\n    constructor(version, vendorId, libraryLanguage, libraryVersion, otherInfo)\n    {\n        this._version = version;\n        this._vendorId = vendorId;\n        this._libraryLanguage = libraryLanguage;\n        this._libraryVersion = libraryVersion;\n        this._otherInfo = otherInfo;\n    }\n\n    toMessage()\n    {\n        var data = {\n            pos_version: this._version,\n            pos_vendor_id: this._vendorId,\n            library_language: this._libraryLanguage,\n            library_version: this._libraryVersion,\n            other_info: this._otherInfo\n        };\n\n        return new Message(RequestIdHelper.Id(\"prav\"), Events.SetPosInfoRequest, data, true);\n    }\n}\n\nexport class SetPosInfoResponse\n{\n    constructor(m)\n    {\n        this._success = m.GetSuccessState() == SuccessState.Success;\n        this._m = m;\n    }\n    isSuccess()\n    {\n        return this._success;\n    }\n    getErrorReason()\n    {\n        return this._m.Data.error_reason;\n    }\n    getErrorDetail()\n    {\n        return this._m.Data.error_detail;\n    }\n    getResponseValueWithAttribute(attribute)\n    {\n        return this._m.Data[attribute];\n    }\n}\n\nexport class DeviceInfo\n{\n    static GetAppDeviceInfo()\n    {\n        var deviceInfo = {};\n        deviceInfo['device_system'] = navigator.userAgent;\n        // deviceInfo.Add(\"device_system\", Environment.OSVersion.Platform.ToString() + \" \" + Environment.OSVersion.Version.ToString());\n        return deviceInfo;\n    }\n}\n","import {RequestIdHelper} from './RequestIdHelper';\nimport {Message} from './Messages';\nimport {PurchaseResponse} from './Purchase';\nimport {SpiConfig, TransactionOptions} from './SpiModels';\n\nexport const PreauthEvents = \n{\n    AccountVerifyRequest: \"account_verify\",\n    AccountVerifyResponse: \"account_verify_response\",\n    \n    PreauthOpenRequest : \"preauth\",\n    PreauthOpenResponse : \"preauth_response\",\n\n    PreauthTopupRequest: \"preauth_topup\",\n    PreauthTopupResponse: \"preauth_topup_response\",\n\n    PreauthExtendRequest: \"preauth_extend\",\n    PreauthExtendResponse: \"preauth_extend_response\",\n\n    PreauthPartialCancellationRequest : \"preauth_partial_cancellation\",\n    PreauthPartialCancellationResponse : \"preauth_partial_cancellation_response\",\n    \n    PreauthCancellationRequest : \"preauth_cancellation\",\n    PreauthCancellationResponse : \"preauth_cancellation_response\",\n\n    PreauthCompleteRequest : \"completion\",\n    PreauthCompleteResponse : \"completion_response\"\n};\n\nexport class AccountVerifyRequest\n{\n    constructor(posRefId)\n    {\n        this.PosRefId = posRefId;\n    }\n\n    ToMessage()\n    {\n        var data = {\n            \"pos_ref_id\": this.PosRefId\n        };\n\n        return new Message(RequestIdHelper.Id(\"prav\"), PreauthEvents.AccountVerifyRequest, data, true);\n    }\n}\n\nexport class AccountVerifyResponse\n{\n    constructor(m)\n    {\n        this.Details = new PurchaseResponse(m);\n        this.PosRefId = this.Details.PosRefId;\n        this._m = m;\n    }\n}\n\nexport class PreauthOpenRequest\n{\n    constructor(amountCents, posRefId)\n    {\n        this.PosRefId = posRefId;\n        this.PreauthAmount = amountCents;\n        this.Config = new SpiConfig();\n        this.Options = new TransactionOptions();\n    }\n\n    ToMessage()\n    {\n        var data = {\n            \"pos_ref_id\": this.PosRefId,\n            \"preauth_amount\": this.PreauthAmount\n        };\n\n        this.Config.EnabledPrintMerchantCopy = true;\n        this.Config.EnabledPromptForCustomerCopyOnEftpos = true;\n        this.Config.EnabledSignatureFlowOnEftpos = true;\n        this.Config.AddReceiptConfig(data);\n        this.Options.AddOptions(data);\n        return new Message(RequestIdHelper.Id(\"prac\"), PreauthEvents.PreauthOpenRequest, data, true);\n    }\n}\n\nexport class PreauthTopupRequest\n{\n    constructor(preauthId, topupAmountCents, posRefId)\n    {\n        this.PreauthId = preauthId;\n        this.TopupAmount = topupAmountCents;\n        this.PosRefId = posRefId;\n        this.Config = new SpiConfig();\n        this.Options = new TransactionOptions();\n    }\n\n    ToMessage()\n    {\n        var data = {\n            \"pos_ref_id\": this.PosRefId,\n            \"preauth_id\": this.PreauthId,\n            \"topup_amount\": this.TopupAmount\n        };\n\n        this.Config.EnabledPrintMerchantCopy = true;\n        this.Config.EnabledPromptForCustomerCopyOnEftpos = true;\n        this.Config.EnabledSignatureFlowOnEftpos = true;\n        this.Config.AddReceiptConfig(data);\n        this.Options.AddOptions(data);\n        return new Message(RequestIdHelper.Id(\"prtu\"), PreauthEvents.PreauthTopupRequest, data, true);\n    }\n}\n\nexport class PreauthPartialCancellationRequest\n{\n    constructor(preauthId, partialCancellationAmountCents, posRefId)\n    {\n        this.PreauthId = preauthId;\n        this.PartialCancellationAmount = partialCancellationAmountCents;\n        this.PosRefId = posRefId;\n        this.Config = new SpiConfig();\n        this.Options = new TransactionOptions();\n    }\n\n    ToMessage()\n    {\n        var data = {\n            \"pos_ref_id\": this.PosRefId,\n            \"preauth_id\": this.PreauthId,\n            \"preauth_cancel_amount\": this.PartialCancellationAmount\n        };\n\n        this.Config.EnabledPrintMerchantCopy = true;\n        this.Config.EnabledPromptForCustomerCopyOnEftpos = true;\n        this.Config.EnabledSignatureFlowOnEftpos = true;\n        this.Config.AddReceiptConfig(data);\n        this.Options.AddOptions(data);\n        return new Message(RequestIdHelper.Id(\"prpc\"), PreauthEvents.PreauthPartialCancellationRequest, data, true);\n    }\n}\n\nexport class PreauthExtendRequest\n{\n    constructor(preauthId, posRefId)\n    {\n        this.PreauthId = preauthId;\n        this.PosRefId = posRefId;\n        this.Config = new SpiConfig();\n        this.Options = new TransactionOptions();\n    }\n\n    ToMessage()\n    {\n        var data = {\n            \"pos_ref_id\": this.PosRefId,\n            \"preauth_id\": this.PreauthId\n        };\n\n        this.Config.EnabledPrintMerchantCopy = true;\n        this.Config.EnabledPromptForCustomerCopyOnEftpos = true;\n        this.Config.EnabledSignatureFlowOnEftpos = true;\n        this.Config.AddReceiptConfig(data);\n        this.Options.AddOptions(data);\n        return new Message(RequestIdHelper.Id(\"prext\"), PreauthEvents.PreauthExtendRequest, data, true);\n    }\n}\n\nexport class PreauthCancelRequest\n{\n    constructor(preauthId, posRefId)\n    {\n        this.PreauthId = preauthId;\n        this.PosRefId = posRefId;\n        this.Config = new SpiConfig();\n        this.Options = new TransactionOptions();\n    }\n\n    ToMessage()\n    {\n        var data = {\n            \"pos_ref_id\": this.PosRefId,\n            \"preauth_id\": this.PreauthId\n        };\n\n        this.Config.EnabledPrintMerchantCopy = true;\n        this.Config.EnabledPromptForCustomerCopyOnEftpos = true;\n        this.Config.EnabledSignatureFlowOnEftpos = true;\n        this.Config.AddReceiptConfig(data);\n        this.Options.AddOptions(data);\n        return new Message(RequestIdHelper.Id(\"prac\"), PreauthEvents.PreauthCancellationRequest, data, true);\n    }\n}\n\nexport class PreauthCompletionRequest\n{\n    constructor(preauthId, completionAmountCents, posRefId, surchargeAmount)\n    {\n        this.PreauthId = preauthId;\n        this.CompletionAmount = completionAmountCents;\n        this.PosRefId = posRefId;\n        this.SurchargeAmount = surchargeAmount;\n        this.Config = new SpiConfig();\n        this.Options = new TransactionOptions();\n    }\n\n    ToMessage()\n    {\n        var data = {\n            \"pos_ref_id\": this.PosRefId,\n            \"preauth_id\": this.PreauthId,\n            \"completion_amount\": this.CompletionAmount,\n            \"surcharge_amount\": this.SurchargeAmount\n        };\n\n        this.Config.EnabledPrintMerchantCopy = true;\n        this.Config.EnabledPromptForCustomerCopyOnEftpos = true;\n        this.Config.EnabledSignatureFlowOnEftpos = true;\n        this.Config.AddReceiptConfig(data);\n        this.Options.AddOptions(data);\n        return new Message(RequestIdHelper.Id(\"prac\"), PreauthEvents.PreauthCompleteRequest, data, true);\n    }\n}\n\nexport class PreauthResponse\n{\n    constructor(m)\n    {\n        this.PreauthId = m.Data[\"preauth_id\"];\n        this.Details = new PurchaseResponse(m);\n        this.PosRefId = this.Details.PosRefId;\n        this._m = m;\n    }\n\n    GetBalanceAmount()\n    {\n        var txType = this._m.Data[\"transaction_type\"];\n        switch (txType)\n        {\n            case \"PRE-AUTH\":\n                return this._m.Data[\"preauth_amount\"];\n            case \"TOPUP\":\n                return this._m.Data[\"balance_amount\"];\n            case \"CANCEL\": // PARTIAL CANCELLATION\n                return this._m.Data[\"balance_amount\"];\n            case \"PRE-AUTH EXT\":\n                return this._m.Data[\"balance_amount\"];\n            case \"PCOMP\":\n                return 0; // Balance is 0 after completion\n            case \"PRE-AUTH CANCEL\":\n                return 0; // Balance is 0 after cancellation\n            default:\n                return 0;\n        }\n    }\n\n    GetPreviousBalanceAmount()\n    {\n        var txType = this._m.Data[\"transaction_type\"];\n        switch (txType)\n        {   \n            case \"PRE-AUTH\":\n                return 0;\n            case \"TOPUP\":\n                return this._m.Data[\"existing_preauth_amount\"];\n            case \"CANCEL\": // PARTIAL CANCELLATION\n                return this._m.Data[\"existing_preauth_amount\"];\n            case \"PRE-AUTH EXT\":\n                return this._m.Data[\"existing_preauth_amount\"];\n            case \"PCOMP\":\n                // THIS IS TECHNICALLY NOT CORRECT WHEN COMPLETION HAPPENS FOR A PARTIAL AMOUNT.\n                // BUT UNFORTUNATELY, THIS RESPONSE DOES NOT CONTAIN \"existing_preauth_amount\".\n                // SO \"completion_amount\" IS THE CLOSEST WE HAVE.\n                return this._m.Data[\"completion_amount\"];\n            case \"PRE-AUTH CANCEL\":\n                return this._m.Data[\"preauth_amount\"];\n            default:\n                return 0;\n        }\n    }\n    \n    GetCompletionAmount()\n    {\n        var txType = this._m.Data[\"transaction_type\"];\n        switch (txType)\n        {   \n            case \"PCOMP\":\n                return this._m.Data[\"completion_amount\"];\n            default:\n                return 0;\n        }\n\n    }\n\n    GetSurchargeAmount()\n    {\n        var txType = this._m.Data[\"transaction_type\"];\n        switch (txType)\n        {\n            case \"PCOMP\":\n                return this._m.Data[\"surcharge_amount\"];\n            default:\n                return 0;\n        }\n    }\n\n    WasMerchantReceiptPrinted()\n    {\n        return this._m.Data[\"merchant_receipt_printed\"];\n    }\n\n    WasCustomerReceiptPrinted()\n    {\n        return this._m.Data[\"customer_receipt_printed\"];\n    }\n}","import {Events, Message, SuccessState} from './Messages';\nimport {RequestIdHelper} from './RequestIdHelper';\n\nexport class PrintingRequest\n{\n    constructor(key, payload)\n    {\n        this._key = key;\n        this._payload = payload;\n    }\n\n    toMessage()\n    {\n        var data = {\n            \"key\": this._key,\n            \"payload\": this._payload\n        };\n\n        return new Message(RequestIdHelper.Id(\"print\"), Events.PrintingRequest, data, true);\n    }\n}\n\nexport class PrintingResponse\n{\n    constructor(m)\n    {\n        this._success = m.GetSuccessState() == SuccessState.Success;\n        this._m = m;\n    }\n    isSuccess()\n    {\n        return this._success;\n    }\n    getErrorReason()\n    {\n        return this._m.Data.error_reason;\n    }\n    getErrorDetail()\n    {\n        return this._m.Data.error_detail;\n    }\n    getResponseValueWithAttribute(attribute)\n    {\n        return this._m.Data[attribute];\n    }\n}\n\n/**\n * This class is a mock printer for the terminal to print Receipts\n */\nexport class Printer {\n    constructor(element) {\n        this.buffer     = [];\n        this.element    = element;\n    }\n\n    print(...args) {\n        this.buffer.push(args.join(' '));\n        this._render();\n    }\n\n    _render() {\n        this.element.innerText = this.buffer.join(`\\n\\n \\\\/\\\\/\\\\/\\\\/\\\\/\\\\/\\\\/\\\\/\\\\/\\\\/\\\\/\\\\/\\\\/\\\\/\\\\/ \\n\\n`);\n        this.element.scrollTop = this.element.scrollHeight;\n    }\n\n    Clear() {\n        this.buffer = [];\n        this._render();\n    }\n}","import {Events, SuccessState, Message} from './Messages';\nimport {RequestIdHelper} from './RequestIdHelper';\nimport {SpiConfig, TransactionOptions} from './SpiModels';\n\nexport class PurchaseRequest {\n    constructor(amountCents, posRefId) {\n        this.PosRefId = posRefId;\n        this.PurchaseAmount = amountCents;\n        this.TipAmount = 0;\n        this.CashoutAmount = 0;\n        this.PromptForCashout = false;\n        this.SurchargeAmount = 0;\n        this.Config = new SpiConfig();\n        this.Options = new TransactionOptions();\n\n        // Library Backwards Compatibility\n        this.Id = posRefId;\n        this.AmountCents = amountCents;\n    }\n\n    AmountSummary()\n    {\n        return `Purchase: ${(this.PurchaseAmount / 100.0).toFixed(2)}; \n            Tip: ${(this.TipAmount / 100.0).toFixed(2)}; \n            Cashout: ${(this.CashoutAmount / 100.0).toFixed(2)};`;\n    }\n\n    ToMessage() {\n        let data = {\n            pos_ref_id: this.PosRefId,\n            purchase_amount: this.PurchaseAmount,\n            tip_amount: this.TipAmount,\n            cash_amount: this.CashoutAmount,\n            prompt_for_cashout: this.PromptForCashout, \n            surcharge_amount: this.SurchargeAmount\n        };\n\n        this.Config.EnabledPrintMerchantCopy = true;\n        this.Config.EnabledPromptForCustomerCopyOnEftpos = true;\n        this.Config.EnabledSignatureFlowOnEftpos = true;\n        this.Config.AddReceiptConfig(data);\n        this.Options.AddOptions(data);\n        return new Message(RequestIdHelper.Id(\"prchs\"), Events.PurchaseRequest, data, true);\n    }\n}\n\nexport class PurchaseResponse\n{\n    constructor(m)\n    {\n        this._m = m;\n        this.RequestId = m.Id;\n        this.PosRefId = m.Data.pos_ref_id;\n        this.SchemeName = m.Data.scheme_name;\n        this.SchemeAppName = m.Data.scheme_name;\n        this.Success = m.GetSuccessState() == SuccessState.Success;\n    }\n\n    GetRRN()\n    {\n        return this._m.Data.rrn;\n    }\n\n    GetPurchaseAmount()\n    {\n        return this._m.Data.purchase_amount;\n    }\n\n    GetTipAmount()\n    {\n        return this._m.Data.tip_amount || 0;\n    }\n\n    GetSurchargeAmount()\n    {\n        return this._m.Data.surcharge_amount || 0;\n    }\n\n    GetCashoutAmount()\n    {\n        return this._m.Data.cash_amount;\n    }\n\n    GetBankNonCashAmount()\n    {\n        return this._m.Data.bank_noncash_amount;\n    }\n\n    GetBankCashAmount()\n    {\n        return this._m.Data.bank_cash_amount;\n    }\n\n    GetCustomerReceipt()\n    {\n        return this._m.Data.customer_receipt || \"\";\n    }\n\n    GetMerchantReceipt()\n    {\n        return this._m.Data.merchant_receipt || \"\";\n    }\n\n    GetResponseText()\n    {\n        return this._m.Data.host_response_text || \"\";\n    }\n\n    GetResponseCode()\n    {\n        return this._m.Data.host_response_code;\n    }\n    \n    GetTerminalReferenceId()\n    {\n        return this._m.Data.terminal_ref_id;\n    }\n\n    GetCardEntry()\n    {\n        return this._m.Data.card_entry;\n    }\n    \n    GetAccountType()\n    {\n        return this._m.Data.account_type;\n    }\n\n    GetAuthCode()\n    {\n        return this._m.Data.auth_code;\n    }\n\n    GetBankDate()\n    {\n        return this._m.Data.bank_date;\n    }\n\n    GetBankTime()\n    {\n        return this._m.Data.bank_time;\n    }\n    \n    GetMaskedPan()\n    {\n        return this._m.Data.masked_pan;\n    }\n    \n    GetTerminalId()\n    {\n        return this._m.Data.terminal_id;\n    }\n\n    WasMerchantReceiptPrinted()\n    {\n        return this._m.Data.merchant_receipt_printed;\n    }\n\n    WasCustomerReceiptPrinted()\n    {\n        return this._m.Data.customer_receipt_printed;\n    }\n    \n    GetSettlementDate()\n    {\n        //\"bank_settlement_date\":\"20042018\"\n        var dateStr = this._m.Data.bank_settlement_date;\n        if (!dateStr) return null;\n        return Message.ParseBankDate(dateStr);\n    }\n\n    GetResponseValue(attribute)\n    {\n        return this._m.Data[attribute];\n    }\n\n    ToPaymentSummary()\n    {\n        return {\n            account_type: this.GetAccountType(),\n            auth_code: this.GetAuthCode(),\n            bank_date: this.GetBankDate(),\n            bank_time: this.GetBankTime(),\n            host_response_code: this.GetResponseCode(),\n            host_response_text: this.GetResponseText(),\n            masked_pan: this.GetMaskedPan(),\n            purchase_amount: this.GetPurchaseAmount(),\n            rrn: this.GetRRN(),\n            scheme_name: this.SchemeName,\n            terminal_id: this.GetTerminalId(),\n            terminal_ref_id: this.GetTerminalReferenceId(),\n            tip_amount: this.GetTipAmount(),\n            surcharge_amount: this.GetSurchargeAmount()\n        };\n    }\n}\n\nexport class CancelTransactionRequest\n{\n    \n    ToMessage()\n    {\n        return new Message(RequestIdHelper.Id(\"ctx\"), Events.CancelTransactionRequest, null, true);\n    }\n}\n\nexport class CancelTransactionResponse\n{\n    constructor(m)\n    {\n        this._m = m;\n        this.PosRefId = this._m.Data.pos_ref_id;\n        this.Success = this._m.GetSuccessState() == SuccessState.Success;\n    }\n\n    GetErrorReason()\n    {\n        return this._m.Data.error_reason;\n    }\n\n    GetErrorDetail()\n    {\n        return this._m.Data.error_detail;\n    }\n\n    GetResponseValueWithAttribute(attribute)\n    {\n        return this._m.Data[attribute];\n    }\n}\n\nexport class GetLastTransactionRequest\n{\n    ToMessage()\n    {\n        return new Message(RequestIdHelper.Id(\"glt\"), Events.GetLastTransactionRequest, null, true);\n    }\n}\n\nexport class GetLastTransactionResponse\n{\n    constructor(m)\n    {\n        this._m = m;\n    }\n\n    WasRetrievedSuccessfully()\n    {\n        // We can't rely on checking \"success\" flag or \"error\" fields here,\n        // as retrieval may be successful, but the retrieved transaction was a fail.\n        // So we check if we got back an ResponseCode.\n        // (as opposed to say an operation_in_progress_error)\n        return !!this.GetResponseCode();\n    }\n\n    WasTimeOutOfSyncError()\n    {\n        return this._m.GetError().startsWith(\"TIME_OUT_OF_SYNC\");\n    }\n\n    WasOperationInProgressError()\n    {\n        return this._m.GetError().startsWith(\"OPERATION_IN_PROGRESS\");\n    }\n\n    IsWaitingForSignatureResponse()\n    {\n        return this._m.GetError().startsWith(\"OPERATION_IN_PROGRESS_AWAITING_SIGNATURE\");\n    }\n\n    IsWaitingForAuthCode()\n    {\n        return this._m.GetError().startsWith(\"OPERATION_IN_PROGRESS_AWAITING_PHONE_AUTH_CODE\");\n    }\n    \n    IsStillInProgress(posRefId)\n    {\n        return this.WasOperationInProgressError() && (this.GetPosRefId() == posRefId || this.GetPosRefId() == null);\n    }\n\n    GetSuccessState()\n    {\n        return this._m.GetSuccessState();\n    }\n\n    WasSuccessfulTx()\n    {\n        return this._m.GetSuccessState() == SuccessState.Success;\n    }\n\n    GetTxType()\n    {\n        return this._m.Data.transaction_type;\n    }\n\n    GetPosRefId()\n    {\n        return this._m.Data.pos_ref_id;\n    }\n\n    GetBankNonCashAmount()\n    {\n        return this._m.Data.bank_noncash_amount;\n    }\n\n    GetSchemeApp()\n    {\n        return this._m.Data.scheme_name;\n    }\n\n    GetSchemeName()\n    {\n        return this._m.Data.scheme_name;\n    }\n\n    GetAmount()\n    {\n        return this._m.Data.amount_purchase;\n    }\n\n    GetTransactionAmount()\n    {\n        return this._m.Data.amount_transaction_type;\n    }\n\n    GetBankDateTimeString()\n    {\n        var ds = this._m.Data.bank_date + this._m.Data.bank_time;\n        return ds;\n    }\n\n    GetRRN()\n    {\n        return this._m.Data.rrn;\n    }\n    \n    GetResponseText()\n    {\n        return this._m.Data.host_response_text | \"\";\n    }\n\n    GetResponseCode()\n    {\n        return this._m.Data.host_response_code;\n    }\n\n    // <summary>\n    // There is a bug, VSV-920, whereby the customer_receipt is missing from a glt response.\n    // The current recommendation is to use the merchant receipt in place of it if required.\n    // This method modifies the underlying incoming message data by copying\n    // the merchant receipt into the customer receipt only if there \n    // is a merchant_receipt and there is not a customer_receipt.   \n    // </summary>\n    CopyMerchantReceiptToCustomerReceipt()\n    {\n        var cr = this._m.Data.customer_receipt;\n        var mr = this._m.Data.merchant_receipt;\n        if (mr != \"\" && !(cr))\n        {\n            this._m.Data.customer_receipt = mr;\n        }\n    }\n}\n\nexport class RefundRequest\n{\n    constructor(amountCents, posRefId, suppressMerchantPassword)\n    {\n        this.AmountCents = amountCents;\n        this.Id = RequestIdHelper.Id(\"refund\");\n        this.PosRefId = posRefId;\n        this.SuppressMerchantPassword = suppressMerchantPassword;\n        this.Config = new SpiConfig();\n        this.Options = new TransactionOptions();\n    }\n    \n    ToMessage()\n    {\n        let data = {\n            refund_amount: this.AmountCents, \n            pos_ref_id: this.PosRefId,\n            suppress_merchant_password: this.SuppressMerchantPassword\n        };\n        \n        this.Config.EnabledPrintMerchantCopy = true;\n        this.Config.EnabledPromptForCustomerCopyOnEftpos = true;\n        this.Config.EnabledSignatureFlowOnEftpos = true;\n        this.Config.AddReceiptConfig(data);\n        this.Options.AddOptions(data);\n        return new Message(RequestIdHelper.Id(\"refund\"), Events.RefundRequest, data, true);\n    }\n}\n\nexport class RefundResponse\n{\n    constructor(m)\n    {\n        this._m = m;\n        this.RequestId = m.Id;\n        this.PosRefId = m.Data.pos_ref_id;\n        this.SchemeName = m.Data.scheme_name;\n        this.SchemeAppName = m.Data.scheme_name;\n        this.Success = m.GetSuccessState() == SuccessState.Success;\n    }\n\n    GetRefundAmount()\n    {\n        return this._m.Data.refund_amount;\n    }\n\n    GetRRN()\n    {\n        return this._m.Data.rrn;\n    }\n\n    GetCustomerReceipt()\n    {\n        return this._m.Data.customer_receipt || \"\";\n    }\n\n    GetMerchantReceipt()\n    {\n        return this._m.Data.merchant_receipt;\n    }\n    \n    GetResponseText()\n    {\n        return this._m.Data.host_response_text || \"\";\n    }\n\n    GetResponseCode()\n    {\n        return this._m.Data.host_response_code || \"\";\n    }\n\n\n    GetTerminalReferenceId()\n    {\n        return this._m.Data.terminal_ref_id || \"\";\n    }\n    GetCardEntry()\n    {\n        return this._m.Data.card_entry || \"\";\n    }\n    GetAccountType()\n    {\n        return this._m.Data.account_type || \"\";\n    }\n    GetAuthCode()\n    {\n        return this._m.Data.auth_code || \"\";\n    }\n    GetBankDate()\n    {\n        return this._m.Data.bank_date || \"\";\n    }\n    GetBankTime()\n    {\n        return this._m.Data.bank_time || \"\";\n    }\n    GetMaskedPan()\n    {\n        return this._m.Data.masked_pan || \"\";\n    }\n    GetTerminalId()\n    {\n        return this._m.Data.terminal_id || \"\";\n    }\n    WasMerchantReceiptPrinted()\n    {\n        return this._m.Data.merchant_receipt_printed;\n    }\n    WasCustomerReceiptPrinted()\n    {\n        return this._m.Data.customer_receipt_printed;\n    }\n    GetSettlementDate()\n    {\n        //\"bank_settlement_date\":\"20042018\"\n        var dateStr = this._m.Data.bank_settlement_date;\n        if (!dateStr) return null;\n        return Message.ParseBankDate(dateStr);\n    }\n\n    GetResponseValue(attribute)\n    {\n        return this._m.Data[attribute];\n    }\n}\n\nexport class SignatureRequired\n{\n    constructor(m)\n    {\n        this.RequestId = m.Id;\n        this.PosRefId = m.Data.pos_ref_id;\n        this._receiptToSign = m.Data.merchant_receipt;\n    }\n    \n    SignatureRequired(posRefId, requestId, receiptToSign)\n    {\n        this.RequestId = requestId;\n        this.PosRefId = posRefId;\n        this._receiptToSign = receiptToSign;\n    }\n\n    GetMerchantReceipt()\n    {\n        return this._receiptToSign;\n    }\n}\n\nexport class SignatureDecline\n{\n    constructor(posRefId)\n    {\n        this.PosRefId = posRefId;\n    }\n\n    ToMessage()\n    {\n        var data = {\n            pos_ref_id: this.PosRefId\n        };\n        return new Message(RequestIdHelper.Id(\"sigdec\"), Events.SignatureDeclined, data, true);\n    }\n}\n\nexport class SignatureAccept\n{\n    constructor(posRefId)\n    {\n        this.PosRefId = posRefId;\n    }\n\n    ToMessage()\n    {\n        var data = {\n            pos_ref_id: this.PosRefId\n        };\n        return new Message(RequestIdHelper.Id(\"sigacc\"), Events.SignatureAccepted, data, true);\n    }\n}\n\nexport class MotoPurchaseRequest\n{\n    constructor(amountCents, posRefId, surchargeAmount)\n    {\n        this.PosRefId = posRefId;\n        this.PurchaseAmount = amountCents;\n        this.SurchargeAmount = surchargeAmount;\n        this.SuppressMerchantPassword = false;\n        this.Config = new SpiConfig();\n        this.Options = new TransactionOptions();\n    }\n\n    ToMessage()\n    {\n        var data = {\n            pos_ref_id: this.PosRefId,\n            purchase_amount: this.PurchaseAmount,\n            surcharge_amount: this.SurchargeAmount,\n            suppress_merchant_password: this.SuppressMerchantPassword\n        };\n\n        this.Config.EnabledPrintMerchantCopy = true;\n        this.Config.EnabledPromptForCustomerCopyOnEftpos = true;\n        this.Config.EnabledSignatureFlowOnEftpos = true;\n        this.Config.AddReceiptConfig(data);\n        this.Options.AddOptions(data);\n        return new Message(RequestIdHelper.Id(\"moto\"), Events.MotoPurchaseRequest, data, true);\n    }\n}\n\nexport class MotoPurchaseResponse\n{\n    constructor(m)\n    {\n        this.PurchaseResponse = new PurchaseResponse(m);\n        this.PosRefId = PurchaseResponse.PosRefId;\n    }\n}\n\nexport class PhoneForAuthRequired\n{\n    constructor(...args)\n    {\n        if(args.length === 4) {\n            this.PosRefId = args[0];\n            this.RequestId = args[1];\n            this._phoneNumber = args[2];\n            this._merchantId = args[3];\n        } else if(args.length === 1) {\n            this.RequestId = args[0].Id;\n            this.PosRefId = args[0].Data.pos_ref_id;\n            this._phoneNumber = args[0].Data.auth_centre_phone_number;\n            this._merchantId = args[0].Data.merchant_id;\n        } else {\n            throw new Error('Invalid call sig for Phone auth required class');\n        }\n    }\n    \n    GetPhoneNumber()\n    {\n        return this._phoneNumber;\n    }\n    \n    GetMerchantId()\n    {\n        return this._merchantId;\n    }\n}\n\nexport class AuthCodeAdvice\n{\n    constructor(posRefId, authCode)\n    {\n        this.PosRefId = posRefId;\n        this.AuthCode = authCode;\n    }\n\n    ToMessage()\n    {\n        var data = {\n            pos_ref_id: this.PosRefId,\n            auth_code: this.AuthCode\n        };\n        return new Message(RequestIdHelper.Id(\"authad\"), Events.AuthCodeAdvice, data, true);\n    }\n}","import {PurchaseRequest, RefundRequest} from './Purchase';\n\nexport class PurchaseHelper\n{\n    static CreatePurchaseRequest(amountCents, purchaseId)\n    {\n        return new PurchaseRequest(amountCents, purchaseId);\n    }\n    \n    static CreatePurchaseRequestV2(posRefId, purchaseAmount, tipAmount, cashoutAmount, promptForCashout, surchargeAmount)\n    {\n        var pr = Object.assign(new PurchaseRequest(purchaseAmount, posRefId),\n        {\n            CashoutAmount: cashoutAmount,\n            TipAmount: tipAmount,\n            PromptForCashout: promptForCashout,\n            SurchargeAmount: surchargeAmount\n        });\n\n        return pr;\n    }\n\n    static CreateRefundRequest(amountCents, purchaseId, suppressMerchantPassword)\n    {\n        return new RefundRequest(amountCents, purchaseId, suppressMerchantPassword);\n    }\n\n}\n","let __RequestIdHelperCounter = 1;\n\nexport class RequestIdHelper {\n    static Id(prefix) {\n        return prefix + __RequestIdHelperCounter++;\n    }\n}\n","export class Secrets {\n    constructor(encKey, hmacKey) {\n        this.EncKey     = encKey;\n        this.HmacKey    = hmacKey;\n    }\n\n    static save(EncKey, HmacKey) {\n        localStorage.setItem('EncKey', EncKey);\n        localStorage.setItem('HmacKey', HmacKey);\n    }\n\n    static restore() {\n        return new Secrets(localStorage.getItem('EncKey'), localStorage.getItem('HmacKey'));\n    }\n\n    static isSaved() {\n        return localStorage.getItem('EncKey') && localStorage.getItem('HmacKey');\n    }\n\n    static Reset() {\n        localStorage.removeItem('EncKey');\n        localStorage.removeItem('HmacKey');\n    }\n}\n","export class DeviceAddressStatus\n{\n    get Address()\n    {\n        if(this.UseSecureWebSockets) \n        {\n            return this.fqdn;\n        } \n        else\n        {\n            return this.ip;\n        }\n    }\n\n    set Address(address)\n    {\n        if(this.UseSecureWebSockets) \n        {\n            this.fqdn = addreses;\n        } \n        else\n        {\n            this.ip = address;\n        }\n    }\n\n    constructor(useSecureWebSockets) \n    {\n        this.UseSecureWebSockets = useSecureWebSockets;\n\n        this.ip = null;\n        this.fqdn = null;\n        this.LastUpdated = null;\n\n        this.DeviceAddressResponseCode = null;\n        this.ResponseStatusDescription = null;\n        this.ResponseMessage = null;\n    }\n}\n\nexport const DeviceAddressResponseCode =\n{\n    SUCCESS: 'SUCCESS',\n    INVALID_SERIAL_NUMBER: 'INVALID_SERIAL_NUMBER',\n    ADDRESS_NOT_CHANGED: 'ADDRESS_NOT_CHANGED',\n    SERIAL_NUMBER_NOT_CHANGED: 'SERIAL_NUMBER_NOT_CHANGED',\n    DEVICE_SERVICE_ERROR: 'DEVICE_SERVICE_ERROR'\n};\n\nexport const HttpStatusCode = \n{\n    NotFound: 404\n};\n\nexport class DeviceAddressService\n{\n    // RetrieveService(serialNumber, apiKey = 'spi-sample-pos1', acquirerCode, useSecureWebSockets, isTestMode)\n    async RetrieveService(serialNumber, apiKey = 'spi-sample-pos1', acquirerCode, isSecureConnection, isTestMode)    \n    {\n        var path = isSecureConnection ? 'fqdn' : 'ip';\n        var deviceAddressUri = isTestMode ? `https://device-address-api-sb.${acquirerCode}.msp.assemblypayments.com/v1/${serialNumber}/${path}` : `https://device-address-api.${acquirerCode}.msp.assemblypayments.com/v1/${serialNumber}/${path}`;\n\n        var response = await fetch(deviceAddressUri, {\n            method: 'GET',\n            headers: {\n                \"ASM-MSP-DEVICE-ADDRESS-API-KEY\": apiKey\n            }\n        });\n\n        return response;\n    }\n}\n","import {Events, SuccessState, Message} from './Messages';\nimport {SpiConfig, TransactionOptions} from './SpiModels';\n\nexport class SettleRequest {\n    constructor(id) {\n        this.Id = id;\n        this.Config = new SpiConfig();\n        this.Options = new TransactionOptions();\n    }\n\n    ToMessage() {\n        var data = {};\n\n        this.Config.EnabledPrintMerchantCopy = true;\n        this.Config.EnabledPromptForCustomerCopyOnEftpos = false;\n        this.Config.EnabledSignatureFlowOnEftpos = false;\n        this.Config.AddReceiptConfig(data);\n        this.Options.AddOptions(data);\n        return new Message(this.Id, Events.SettleRequest, data, true);\n    }\n}\n\nexport class Settlement {\n    constructor(m) {\n        this.RequestId = m.Id;\n        this._m = m;\n        this.Success = m.GetSuccessState() == SuccessState.Success;\n    }\n\n    GetSettleByAcquirerCount()\n    {\n        return this._m.Data.accumulated_settle_by_acquirer_count;\n    }\n\n    GetSettleByAcquirerValue()\n    {\n        return this._m.Data.accumulated_settle_by_acquirer_value;\n    }\n\n    GetTotalCount()\n    {\n        return this._m.Data.accumulated_total_count;\n    }\n\n    GetTotalValue()\n    {\n        return this._m.Data.accumulated_total_value;\n    }\n\n    GetPeriodStartTime()\n    {\n        var timeStr = this._m.Data.settlement_period_start_time; // \"05:00\"\n        var dateStr = this._m.Data.settlement_period_start_date; // \"05Oct17\"\n        return Message.ParseBankDateTimeStr(dateStr, timeStr);\n    }\n\n    GetPeriodEndTime()\n    {\n        var timeStr = this._m.Data.settlement_period_end_time; // \"05:00\"\n        var dateStr = this._m.Data.settlement_period_end_date; // \"05Oct17\"\n        return Message.ParseBankDateTimeStr(dateStr, timeStr);\n    }\n\n    GetTriggeredTime()\n    {\n        var timeStr = this._m.Data.settlement_triggered_time; // \"05:00:45\"\n        var dateStr = this._m.Data.settlement_triggered_date; // \"05Oct17\"\n        return Message.ParseBankDateTimeStr(dateStr, timeStr);\n    }\n\n    GetResponseText()\n    {\n        return this._m.Data.host_response_text;\n    }\n    \n    GetReceipt()\n    {\n        return this._m.Data.merchant_receipt;\n    }\n\n    GetTransactionRange()\n    {\n        return this._m.Data.transaction_range;\n    }\n\n    GetTerminalId()\n    {\n        return this._m.Data.terminal_id;\n    }\n\n    WasMerchantReceiptPrinted()\n    {\n        return this._m.Data.merchant_receipt_printed;\n    }\n\n    GetSchemeSettlementEntries()\n    {\n        var schemes = this._m.Data.schemes;\n        if (!schemes) return [];\n\n        return schemes.map((scheme) => {\n            return new SchemeSettlementEntry(scheme);\n        });\n    }\n}\n\nexport class SchemeSettlementEntry\n{\n    // SchemeSettlementEntry(string schemeName, bool settleByAcquirer, int totalCount, int totalValue)\n    // SchemeSettlementEntry(Object schemeObj)\n    constructor(...args)\n    {\n        if(args.length === 1) {\n            this.SchemeName = args[0].scheme_name;\n            this.SettleByAcquirer = args[0].settle_by_acquirer.toLowerCase() == \"yes\";\n            this.TotalValue = parseInt(args[0].total_value,10);\n            this.TotalCount = parseInt(args[0].total_count,10);\n        } else if(args.length === 4) {\n            this.SchemeName = args[0];\n            this.SettleByAcquirer = args[1];\n            this.TotalCount = args[2];\n            this.TotalValue = args[3];\n        }\n    }\n    \n    ToString()\n    {\n        return `SchemeName: ${this.SchemeName}, SettleByAcquirer: ${this.SettleByAcquirer}, TotalCount: ${this.TotalCount}, TotalValue: ${this.TotalValue}`;\n    }\n}\n\nexport class SettlementEnquiryRequest\n{\n    constructor(id)\n    {\n        this.Id = id;\n        this.Config = new SpiConfig();\n        this.Options = new TransactionOptions();\n    }\n    \n    ToMessage()\n    {\n        var data = {};\n\n        this.Config.EnabledPrintMerchantCopy = true;\n        this.Config.EnabledPromptForCustomerCopyOnEftpos = false;\n        this.Config.EnabledSignatureFlowOnEftpos = false;\n        this.Config.AddReceiptConfig(data);\n        this.Options.AddOptions(data);\n        return new Message(this.Id, Events.SettlementEnquiryRequest, data, true);\n    }\n}","import {Message, MessageStamp, Events, SuccessState} from './Messages';\nimport {SpiConfig, SpiFlow, SpiStatus, PairingFlowState, TransactionFlowState, TransactionType, InitiateTxResult, MidTxResult, SubmitAuthCodeResult, TransactionOptions} from './SpiModels';\nimport {RequestIdHelper} from './RequestIdHelper';\nimport {PairingHelper} from './PairingHelper';\nimport {Connection, ConnectionState} from './Connection';\nimport {SpiPayAtTable} from './SpiPayAtTable';\nimport {PayAtTableConfig} from './PayAtTable';\nimport {SpiPreauth} from './SpiPreauth';\nimport {CashoutOnlyRequest} from './Cashout';\nimport {SettleRequest, SettlementEnquiryRequest} from './Settlement';\nimport {DropKeysRequest, KeyRequest, KeyCheck, PairResponse} from './Pairing';\nimport {SetPosInfoRequest, SetPosInfoResponse, DeviceInfo} from './PosInfo';\nimport {PurchaseHelper} from './PurchaseHelper';\nimport {KeyRollingHelper} from './KeyRollingHelper';\nimport {PingHelper, PongHelper} from './PingHelper';\nimport {GetLastTransactionRequest, GetLastTransactionResponse, SignatureAccept, SignatureDecline, MotoPurchaseRequest, AuthCodeAdvice, CancelTransactionRequest, SignatureRequired, CancelTransactionResponse, PhoneForAuthRequired} from './Purchase';\nimport {DeviceAddressService, DeviceAddressStatus, DeviceAddressResponseCode, HttpStatusCode} from './Service/DeviceService';\nimport {PrintingRequest} from './Printing';\nimport {TerminalStatusRequest} from './TerminalStatus';\n\nconst SPI_VERSION = '2.6.0';\n\nclass Spi {\n\n    get CurrentStatus() {\n        return this._currentStatus;\n    }\n\n    set CurrentStatus(value) {\n        if(this._currentStatus === value) {\n            return;\n        }\n\n        this._currentStatus = value;\n        document.dispatchEvent(new CustomEvent('StatusChanged', {detail: value}));\n    }\n\n    constructor(posId, serialNumber, eftposAddress, secrets) \n    {\n        this._posId = posId;\n        this._serialNumber = serialNumber;\n        this._secrets = secrets;\n        this._forceSecureWebSockets = false;\n        this._eftposAddress = \"ws://\" + eftposAddress;\n        this._log = console;\n        this.Config = new SpiConfig();\n        this._conn = new Connection();\n\n        this.CurrentDeviceStatus = null;\n        this._deviceApiKey  = null;\n        this._acquirerCode  = null;\n        this._inTestMode    = false;\n        this._autoAddressResolutionEnabled = false;\n\n        // Our stamp for signing outgoing messages\n        this._spiMessageStamp = new MessageStamp(this._posId, this._secrets, 0);\n\n        this._posVendorId = null;\n        this._posVersion = null;\n        this._hasSetInfo = null;\n\n        // We will maintain some state\n        this._mostRecentPingSent = null;\n        this._mostRecentPongReceived = null;\n        this._missedPongsCount = 0;\n        this._retriesSinceLastDeviceAddressResolution = 0;\n        this._mostRecentLoginResponse = null;\n\n        this._pongTimeout = 5000;\n        this._pingFrequency = 18000;\n        \n        this._readyToTransact = null;\n        this._periodicPingThread = null;\n\n        this._txMonitorCheckFrequency = 1000;\n        this._checkOnTxFrequency = 20000;\n        this._maxWaitForCancelTx = 10000;\n        this._sleepBeforeReconnectMs = 3000;\n        this._missedPongsToDisconnect = 2;\n        this._retriesBeforeResolvingDeviceAddress = 5;\n\n        this.CurrentFlow                = null;\n        this.CurrentPairingFlowState    = null;\n        this.CurrentTxFlowState         = null;\n    }\n\n    EnablePayAtTable()\n    {\n        this._spiPat = new SpiPayAtTable(this);\n        return this._spiPat;\n    }\n\n    DisablePayAtTable()\n    {\n        this._spiPat = new SpiPayAtTable(this);\n        this._spiPat.Config.PayAtTabledEnabled = false;\n        return this._spiPat;\n    }\n\n    EnablePreauth()\n    {\n        this._spiPreauth = new SpiPreauth(this);\n        return this._spiPreauth;\n    }\n\n    Start() {\n\n        if (!this._posVendorId || !this._posVersion)\n        {\n            // POS information is now required to be set\n            this._log.warn(\"Missing POS vendor ID and version. posVendorId and posVersion are required before starting\");\n            throw new Error(\"Missing POS vendor ID and version. posVendorId and posVersion are required before starting\");\n        }\n\n        this._resetConn();\n        this._startTransactionMonitoringThread();\n\n        this.CurrentFlow = SpiFlow.Idle;\n        if (this._secrets != null)\n        {\n            this._log.info(\"Starting in Paired State\");\n            this._currentStatus = SpiStatus.PairedConnecting;\n            this._conn.Connect(); // This is non-blocking\n        }\n        else\n        {\n            this._log.info(\"Starting in Unpaired State\");\n            this._currentStatus = SpiStatus.Unpaired;\n        } \n    }\n\n    /// <summary>\n    /// Set the acquirer code of your bank, please contact Assembly's Integration Engineers for acquirer code.\n    /// </summary>\n    SetAcquirerCode(acquirerCode)\n    {\n        this._acquirerCode = acquirerCode;\n        return true;\n    }\n\n    /// <summary>\n    /// Set the api key used for auto address discovery feature\n    /// </summary>\n    /// <returns></returns>\n    SetDeviceApiKey(deviceApiKey)\n    {\n        this._deviceApiKey = deviceApiKey;\n        return true;\n    }\n\n    /// <summary>\n    /// Allows you to set the serial number of the Eftpos\n    /// </summary>\n    SetSerialNumber(serialNumber)\n    {\n        if (this.CurrentStatus != SpiStatus.Unpaired)\n            return false;\n\n        var was = this._serialNumber;\n        this._serialNumber = serialNumber;\n        if (this.HasSerialNumberChanged(was))\n        {\n            this._autoResolveEftposAddress();\n        }\n        else\n        {\n            if (this.CurrentDeviceStatus == null)\n            {\n                this.CurrentDeviceStatus = new DeviceAddressStatus();\n            }\n\n            this.CurrentDeviceStatus.DeviceAddressResponseCode = DeviceAddressResponseCode.SERIAL_NUMBER_NOT_CHANGED;\n            document.dispatchEvent(new CustomEvent('DeviceAddressChanged', {detail: this.CurrentDeviceStatus}));\n        }\n\n        return true;\n    }\n\n    /// <summary>\n    /// Allows you to set the auto address discovery feature. \n    /// </summary>\n    /// <returns></returns>\n    SetAutoAddressResolution(autoAddressResolutionEnable)\n    {\n        if (this.CurrentStatus == SpiStatus.PairedConnected)\n            return false;\n\n        var was = this._autoAddressResolutionEnabled;\n        this._autoAddressResolutionEnabled = autoAddressResolutionEnable;\n        if (autoAddressResolutionEnable && !was)\n        {\n            // we're turning it on\n            this._autoResolveEftposAddress();\n        }\n\n        return true;\n    }\n\n    /// <summary>\n    /// Call this method to set the client library test mode.\n    /// Set it to true only while you are developing the integration. \n    /// It defaults to false. For a real merchant, always leave it set to false. \n    /// </summary>\n    /// <param name=\"testMode\"></param>\n    /// <returns></returns>\n    SetTestMode(testMode)\n    {\n        if (this.CurrentStatus && this.CurrentStatus != SpiStatus.Unpaired)\n            return false;\n\n        if (testMode == this._inTestMode)\n            return true;\n\n        // we're changing mode\n        this._inTestMode = testMode;\n        this._autoResolveEftposAddress();\n\n        return true;\n    }\n\n    /// <summary>\n    /// Set the client library to use secure web sockets TLS (wss protocol)\n    /// </summary>\n    /// <param name=\"isSecure\"></param>\n    /// <returns></returns>\n    SetSecureWebSockets(useSecureWebSockets)\n    {\n        this._forceSecureWebSockets = useSecureWebSockets;\n    }\n\n    // <summary>\n    // Allows you to set the PosId which identifies this instance of your POS.\n    // Can only be called in thge Unpaired state. \n    // </summary>\n    SetPosId(posId)\n    {\n        if (this.CurrentStatus != SpiStatus.Unpaired)\n            return false;\n\n        this._posId = posId;\n        this._spiMessageStamp.PosId = posId;\n        return true;\n    }\n\n    // <summary>\n    // Allows you to set the PinPad address. Sometimes the PinPad might change IP address \n    // (we recommend reserving static IPs if possible).\n    // Either way you need to allow your User to enter the IP address of the PinPad.\n    // </summary>\n    SetEftposAddress(address)\n    {\n        if (this.CurrentStatus == SpiStatus.PairedConnected || this._autoAddressResolutionEnabled) {\n            return false;\n        }\n\n        this._eftposAddress = \"ws://\" + address;\n        this._conn.Address = this._eftposAddress;\n        return true;\n    }\n\n    static GetVersion()\n    {\n        return SPI_VERSION;\n    }\n\n    /**\n     * Sets values used to identify the POS software to the EFTPOS terminal.\n     * Must be set before starting!\n     *\n     * @param posVendorId Vendor identifier of the POS itself.\n     * @param posVersion  Version string of the POS itself.\n     */\n    SetPosInfo(posVendorId, posVersion)\n    {\n        this._posVendorId = posVendorId;\n        this._posVersion = posVersion;\n    }\n\n    // <summary>\n    // Call this one when a flow is finished and you want to go back to idle state.\n    // Typically when your user clicks the \"OK\" bubtton to acknowldge that pairing is\n    // finished, or that transaction is finished.\n    // When true, you can dismiss the flow screen and show back the idle screen.\n    // </summary>\n    // <returns>true means we have moved back to the Idle state. false means current flow was not finished yet.</returns>\n    AckFlowEndedAndBackToIdle()\n    {\n        if (this.CurrentFlow == SpiFlow.Idle)\n            return true; // already idle\n\n        if (this.CurrentFlow == SpiFlow.Pairing && this.CurrentPairingFlowState.Finished)\n        {\n            this.CurrentFlow = SpiFlow.Idle;\n            return true;\n        }\n        \n        if (this.CurrentFlow == SpiFlow.Transaction && this.CurrentTxFlowState.Finished)\n        {\n            this.CurrentFlow = SpiFlow.Idle;\n            return true;\n        }\n\n        return false;\n    }\n\n    // endregion\n\n    // <summary>\n    // This will connect to the Eftpos and start the pairing process.\n    // Only call this if you are in the Unpaired state.\n    // Subscribe to the PairingFlowStateChanged event to get updates on the pairing process.\n    // </summary>\n    // <returns>Whether pairing has initiated or not</returns>\n    Pair()\n    {\n        if (this.CurrentStatus != SpiStatus.Unpaired) {\n            this._log.warn(\"Tried to Pair but we're already so.\");\n            return false;\n        }\n\n        if (!this._posId || !this._eftposAddress)\n        {\n            this._log.warn(\"Tried to Pair but missing posId or updatedEftposAddress\");\n            return false;\n        }\n\n        this.CurrentFlow = SpiFlow.Pairing;\n        this.CurrentPairingFlowState = new PairingFlowState\n        ({\n            Successful: false,\n            Finished: false,\n            Message: \"Connecting...\",\n            AwaitingCheckFromEftpos: false,\n            AwaitingCheckFromPos: false,\n            ConfirmationCode: \"\"\n        });\n\n        document.dispatchEvent(new CustomEvent('PairingFlowStateChanged', {detail: this.CurrentPairingFlowState}));\n        this._conn.Connect(); // Non-Blocking\n        return true;\n    }\n\n    // <summary>\n    // Call this when your user clicks yes to confirm the pairing code on your \n    // screen matches the one on the Eftpos.\n    // </summary>\n    PairingConfirmCode()\n    {\n        if (!this.CurrentPairingFlowState.AwaitingCheckFromPos)\n        {\n            // We weren't expecting this\n            return;\n        }\n\n        this.CurrentPairingFlowState.AwaitingCheckFromPos = false;\n        if (this.CurrentPairingFlowState.AwaitingCheckFromEftpos)\n        {\n            // But we are still waiting for confirmation from Eftpos side.\n            this._log.info(\"Pair Code Confirmed from POS side, but am still waiting for confirmation from Eftpos.\");\n            this.CurrentPairingFlowState.Message =\n                \"Click YES on EFTPOS if code is: \" + this.CurrentPairingFlowState.ConfirmationCode;\n            document.dispatchEvent(new CustomEvent('PairingFlowStateChanged', {detail: this.CurrentPairingFlowState}));\n        }\n        else\n        {\n            // Already confirmed from Eftpos - So all good now. We're Paired also from the POS perspective.\n            this._log.info(\"Pair Code Confirmed from POS side, and was already confirmed from Eftpos side. Pairing finalised.\");\n            this._onPairingSuccess();\n            this._onReadyToTransact();\n        }\n    }\n\n    // <summary>\n    // Call this if your user clicks CANCEL or NO during the pairing process.\n    // </summary>\n    PairingCancel()\n    {\n        if (this.CurrentFlow != SpiFlow.Pairing || this.CurrentPairingFlowState.Finished) {\n            return;\n        }\n\n        if (this.CurrentPairingFlowState.AwaitingCheckFromPos && !this.CurrentPairingFlowState.AwaitingCheckFromEftpos)\n        {\n            // This means that the Eftpos already thinks it's paired.\n            // Let's tell it to drop keys\n            this._send(new DropKeysRequest().ToMessage());\n        }\n        this._onPairingFailed();\n    }\n\n    // <summary>\n    // Call this when your uses clicks the Unpair button.\n    // This will disconnect from the Eftpos and forget the secrets.\n    // The CurrentState is then changed to Unpaired.\n    // Call this only if you are not yet in the Unpaired state.\n    // </summary>\n    Unpair()\n    {\n        if (this.CurrentStatus == SpiStatus.Unpaired) {\n            return false;\n        }\n\n        if (this.CurrentFlow != SpiFlow.Idle) {\n            return false;\n        }\n        \n        // Best effort letting the eftpos know that we're dropping the keys, so it can drop them as well.\n        this._send(new DropKeysRequest().ToMessage());\n        this._doUnpair();\n        return true;\n    }\n\n    // endregion\n\n    // region Transaction Methods\n\n    // <summary>\n    // Initiates a purchase transaction. Be subscribed to TxFlowStateChanged event to get updates on the process.\n    // </summary>\n    // <param name=\"posRefId\">Alphanumeric Identifier for your purchase.</param>\n    // <param name=\"amountCents\">Amount in Cents to charge</param>\n    // <returns>InitiateTxResult</returns>\n    InitiatePurchaseTx(posRefId, amountCents)\n    {\n        if (this.CurrentStatus == SpiStatus.Unpaired) {\n            return new InitiateTxResult(false, \"Not Paired\");\n        }\n\n        if (this.CurrentFlow != SpiFlow.Idle) {\n            return new InitiateTxResult(false, \"Not Idle\");\n        }\n\n        var purchaseRequest = PurchaseHelper.CreatePurchaseRequest(amountCents, posRefId);\n        purchaseRequest.Config = this.Config;\n        var purchaseMsg = purchaseRequest.ToMessage();\n        this.CurrentFlow = SpiFlow.Transaction;\n        this.CurrentTxFlowState = new TransactionFlowState(\n            posRefId, TransactionType.Purchase, amountCents, purchaseMsg,\n            `Waiting for EFTPOS connection to make payment request for ${amountCents / 100.0}`);\n        if (this._send(purchaseMsg))\n        {\n            this.CurrentTxFlowState.Sent(`Asked EFTPOS to accept payment for ${amountCents / 100.0}`);\n        }\n        \n        document.dispatchEvent(new CustomEvent('TxFlowStateChanged', {detail: this.CurrentTxFlowState}));\n        return new InitiateTxResult(true, \"Purchase Initiated\");\n    }\n\n    // <summary>\n    // Initiates a purchase transaction. Be subscribed to TxFlowStateChanged event to get updates on the process.\n    // <para>Tip and cashout are not allowed simultaneously.</para>\n    // </summary>\n    // <param name=\"posRefId\">An Unique Identifier for your Order/Purchase</param>\n    // <param name=\"purchaseAmount\">The Purchase Amount in Cents.</param>\n    // <param name=\"tipAmount\">The Tip Amount in Cents</param>\n    // <param name=\"cashoutAmount\">The Cashout Amount in Cents</param>\n    // <param name=\"promptForCashout\">Whether to prompt your customer for cashout on the Eftpos</param>\n    // <param name=\"options\">The Setting to set Header and Footer for the Receipt</param>\n    // <param name=\"surchargeAmount\">The Surcharge Amount in Cents</param>\n    // <returns>InitiateTxResult</returns>\n    InitiatePurchaseTxV2(posRefId, purchaseAmount, tipAmount, cashoutAmount, promptForCashout, options = new TransactionOptions(), surchargeAmount = 0)\n    {\n        if (this.CurrentStatus == SpiStatus.Unpaired) return new InitiateTxResult(false, \"Not Paired\");\n\n        if (tipAmount > 0 && (cashoutAmount > 0 || promptForCashout)) return new InitiateTxResult(false, \"Cannot Accept Tips and Cashout at the same time.\");\n        \n        if (this.CurrentFlow != SpiFlow.Idle) return new InitiateTxResult(false, \"Not Idle\");\n        this.CurrentFlow = SpiFlow.Transaction;\n        \n        var purchase = PurchaseHelper.CreatePurchaseRequestV2(posRefId, purchaseAmount, tipAmount, cashoutAmount, promptForCashout, surchargeAmount);\n        purchase.Config = this.Config;\n        purchase.Options = options;\n        var purchaseMsg = purchase.ToMessage();\n        this.CurrentTxFlowState = new TransactionFlowState(\n            posRefId, TransactionType.Purchase, purchaseAmount, purchaseMsg,\n            `Waiting for EFTPOS connection to make payment request. ${purchase.AmountSummary()}`);\n        if (this._send(purchaseMsg))\n        {\n            this.CurrentTxFlowState.Sent(`Asked EFTPOS to accept payment for ${purchase.AmountSummary()}`);\n        }\n        \n        document.dispatchEvent(new CustomEvent('TxFlowStateChanged', {detail: this.CurrentTxFlowState}));\n        return new InitiateTxResult(true, \"Purchase Initiated\");\n    }\n\n    // <summary>\n    // Initiates a refund transaction. Be subscribed to TxFlowStateChanged event to get updates on the process.\n    // </summary>\n    // <param name=\"posRefId\">Alphanumeric Identifier for your refund.</param>\n    // <param name=\"amountCents\">Amount in Cents to charge</param>\n    // <param name=\"suppressMerchantPassword\">Merchant Password control in VAA</param>\n    // <param name=\"options\">The Setting to set Header and Footer for the Receipt</param>\n    // <returns>InitiateTxResult</returns>\n    InitiateRefundTx(posRefId, amountCents, suppressMerchantPassword = false, options = new TransactionOptions())\n    {\n        if (this.CurrentStatus == SpiStatus.Unpaired) {\n            return new InitiateTxResult(false, \"Not Paired\");\n        }\n\n        if (this.CurrentFlow != SpiFlow.Idle) {\n            return new InitiateTxResult(false, \"Not Idle\");\n        }\n\n        var refundRequest = PurchaseHelper.CreateRefundRequest(amountCents, posRefId, suppressMerchantPassword);\n        refundRequest.Config = this.Config;\n        refundRequest.Options = options;\n        var refundMsg = refundRequest.ToMessage();\n        this.CurrentFlow = SpiFlow.Transaction;\n        this.CurrentTxFlowState = new TransactionFlowState(\n            posRefId, TransactionType.Refund, amountCents, refundMsg, \n            `Waiting for EFTPOS connection to make refund request for ${(amountCents / 100.0).toFixed(2)}`);\n        if (this._send(refundMsg))\n        {\n            this.CurrentTxFlowState.Sent(`Asked EFTPOS to refund ${(amountCents / 100.0).toFixed(2)}`);\n        }\n        \n        document.dispatchEvent(new CustomEvent('TxFlowStateChanged', {detail: this.CurrentTxFlowState}));\n        return new InitiateTxResult(true, \"Refund Initiated\");\n    }\n    \n    // <summary>\n    // Let the EFTPOS know whether merchant accepted or declined the signature\n    // </summary>\n    // <param name=\"accepted\">whether merchant accepted the signature from customer or not</param>\n    AcceptSignature(accepted)\n    {\n        if (this.CurrentFlow != SpiFlow.Transaction || this.CurrentTxFlowState.Finished || !this.CurrentTxFlowState.AwaitingSignatureCheck)\n        {\n            this._log.info(\"Asked to accept signature but I was not waiting for one.\");\n            return new MidTxResult(false, \"Asked to accept signature but I was not waiting for one.\");\n        }\n\n        this.CurrentTxFlowState.SignatureResponded(accepted ? \"Accepting Signature...\" : \"Declining Signature...\");\n        var sigReqMsg = this.CurrentTxFlowState.SignatureRequiredMessage;\n        this._send(accepted\n            ? new SignatureAccept(this.CurrentTxFlowState.PosRefId).ToMessage()\n            : new SignatureDecline(this.CurrentTxFlowState.PosRefId).ToMessage());\n        \n        document.dispatchEvent(new CustomEvent('TxFlowStateChanged', {detail: this.CurrentTxFlowState}));\n        return new MidTxResult(true, \"\");\n    }\n\n    // <summary>\n    // Submit the Code obtained by your user when phoning for auth. \n    // It will return immediately to tell you whether the code has a valid format or not. \n    // If valid==true is returned, no need to do anything else. Expect updates via standard callback.\n    // If valid==false is returned, you can show your user the accompanying message, and invite them to enter another code. \n    // </summary>\n    // <param name=\"authCode\">The code obtained by your user from the merchant call centre. It should be a 6-character alpha-numeric value.</param>\n    // <returns>Whether code has a valid format or not.</returns>\n    SubmitAuthCode(authCode)\n    {\n        if (authCode.length != 6)\n        {\n            return new SubmitAuthCodeResult(false, \"Not a 6-digit code.\");    \n        }\n                \n        if (this.CurrentFlow != SpiFlow.Transaction || this.CurrentTxFlowState.Finished || !this.CurrentTxFlowState.AwaitingPhoneForAuth)\n        {\n            this._log.info(\"Asked to send auth code but I was not waiting for one.\");\n            return new SubmitAuthCodeResult(false, \"Was not waiting for one.\");\n        }\n\n        this.CurrentTxFlowState.AuthCodeSent(`Submitting Auth Code ${authCode}`);\n        this._send(new AuthCodeAdvice(this.CurrentTxFlowState.PosRefId, authCode).ToMessage());\n        \n        document.dispatchEvent(new CustomEvent('TxFlowStateChanged', {detail: this.CurrentTxFlowState}));\n        return new SubmitAuthCodeResult(true, \"Valid Code.\");\n    }\n\n    // <summary>\n    // Attempts to cancel a Transaction. \n    // Be subscribed to TxFlowStateChanged event to see how it goes.\n    // Wait for the transaction to be finished and then see whether cancellation was successful or not.\n    // </summary>\n    // <returns>MidTxResult - false only if you called it in the wrong state</returns>\n    CancelTransaction()\n    {\n        if (this.CurrentFlow != SpiFlow.Transaction || this.CurrentTxFlowState.Finished)\n        {\n            this._log.info(\"Asked to cancel transaction but I was not in the middle of one.\");\n            return new MidTxResult(false, \"Asked to cancel transaction but I was not in the middle of one.\");\n        }\n\n        // TH-1C, TH-3C - Merchant pressed cancel\n        if (this.CurrentTxFlowState.RequestSent)\n        {\n            var cancelReq = new CancelTransactionRequest();\n            this.CurrentTxFlowState.Cancelling(\"Attempting to Cancel Transaction...\");\n            this._send(cancelReq.ToMessage());\n        }\n        else\n        {\n            // We Had Not Even Sent Request Yet. Consider as known failed.\n            this.CurrentTxFlowState.Failed(null, \"Transaction Cancelled. Request Had not even been sent yet.\");\n        }\n        \n        document.dispatchEvent(new CustomEvent('TxFlowStateChanged', {detail: this.CurrentTxFlowState}));\n        return new MidTxResult(true, \"\");\n    }\n\n    // <summary>\n    // Initiates a cashout only transaction. Be subscribed to TxFlowStateChanged event to get updates on the process.\n    // </summary>\n    // <param name=\"posRefId\">Alphanumeric Identifier for your transaction.</param>\n    // <param name=\"amountCents\">Amount in Cents to cash out</param>\n    // <param name=\"surchargeAmount\">The Surcharge Amount in Cents</param>\n    // <returns>InitiateTxResult</returns>\n    InitiateCashoutOnlyTx(posRefId, amountCents, surchargeAmount = 0, options = new TransactionOptions())\n    {\n        if (this.CurrentStatus == SpiStatus.Unpaired) return new InitiateTxResult(false, \"Not Paired\");\n\n        if (this.CurrentFlow != SpiFlow.Idle) return new InitiateTxResult(false, \"Not Idle\");\n\n        var cashoutMsg = Object.assign(new CashoutOnlyRequest(amountCents, posRefId), {\n            SurchargeAmount: surchargeAmount,\n            Options: options,\n            Config: this.Config\n        }).ToMessage();\n\n        this.CurrentFlow = SpiFlow.Transaction;\n        this.CurrentTxFlowState = new TransactionFlowState(\n            posRefId, TransactionType.CashoutOnly, amountCents, cashoutMsg,\n            `Waiting for EFTPOS connection to send cashout request for ${(amountCents / 100).toFixed(2)}`);\n        if (this._send(cashoutMsg))\n        {\n            this.CurrentTxFlowState.Sent(`Asked EFTPOS to do cashout for ${(amountCents / 100).toFixed(2)}`);\n        }\n        \n        document.dispatchEvent(new CustomEvent('TxFlowStateChanged', {detail: this.CurrentTxFlowState}));\n        return new InitiateTxResult(true, \"Cashout Initiated\");\n    }    \n\n    // <summary>\n    // Initiates a Mail Order / Telephone Order Purchase Transaction\n    // </summary>\n    // <param name=\"posRefId\">Alphanumeric Identifier for your transaction.</param>\n    // <param name=\"amountCents\">Amount in Cents</param>\n    // <param name=\"surchargeAmount\">The Surcharge Amount in Cents</param>\n    // <param name=\"suppressMerchantPassword\">>Merchant Password control in VAA</param>\n    // <param name=\"options\">The Setting to set Header and Footer for the Receipt</param>\n    // <returns>InitiateTxResult</returns>\n    InitiateMotoPurchaseTx(posRefId, amountCents, surchargeAmount = 0, suppressMerchantPassword = false, options = new TransactionOptions())\n    {\n        if (this.CurrentStatus == SpiStatus.Unpaired) return new InitiateTxResult(false, \"Not Paired\");\n\n        if (this.CurrentFlow != SpiFlow.Idle) return new InitiateTxResult(false, \"Not Idle\");\n        var motoPurchaseMsg = Object.assign(new MotoPurchaseRequest(amountCents, posRefId),\n        {\n            SurchargeAmount: surchargeAmount,\n            SuppressMerchantPassword: suppressMerchantPassword,\n            Config: this.Config,\n            Options: options\n        }).ToMessage();\n\n        this.CurrentFlow = SpiFlow.Transaction;\n        this.CurrentTxFlowState = new TransactionFlowState(\n            posRefId, TransactionType.MOTO, amountCents, motoPurchaseMsg,\n            `Waiting for EFTPOS connection to send MOTO request for ${(amountCents / 100).toFixed(2)}`);\n        if (this._send(motoPurchaseMsg))\n        {\n            this.CurrentTxFlowState.Sent(`Asked EFTPOS do MOTO for ${(amountCents / 100).toFixed(2)}`);\n        }\n        \n        document.dispatchEvent(new CustomEvent('TxFlowStateChanged', {detail: this.CurrentTxFlowState}));\n        return new InitiateTxResult(true, \"MOTO Initiated\");\n    }\n\n    // <summary>\n    // Initiates a settlement transaction.\n    // Be subscribed to TxFlowStateChanged event to get updates on the process.\n    // <param name=\"options\">The Setting to set Header and Footer for the Receipt</param>\n    // </summary>\n    InitiateSettleTx(posRefId, options = new TransactionOptions())\n    {\n        if (this.CurrentStatus == SpiStatus.Unpaired) {\n            return new InitiateTxResult(false, \"Not Paired\");\n        }\n\n        if (this.CurrentFlow != SpiFlow.Idle) {\n            return new InitiateTxResult(false, \"Not Idle\");\n        }\n\n        var settleMsg = Object.assign(new SettleRequest(RequestIdHelper.Id(\"settle\")),\n        {\n            Config: this.Config,\n            Options: options\n        }).ToMessage();\n\n        this.CurrentFlow = SpiFlow.Transaction;\n        this.CurrentTxFlowState = new TransactionFlowState(\n            posRefId, TransactionType.Settle, 0, settleMsg, \n            `Waiting for EFTPOS connection to make a settle request`);\n\n        if (this._send(settleMsg))\n        {\n            this.CurrentTxFlowState.Sent(`Asked EFTPOS to settle.`);\n        }\n        \n        document.dispatchEvent(new CustomEvent('TxFlowStateChanged', {detail: this.CurrentTxFlowState}));\n        return new InitiateTxResult(true, \"Settle Initiated\");   \n    }\n\n    // <summary>\n    // <param name=\"options\">The Setting to set Header and Footer for the Receipt</param>\n    // </summary>\n    InitiateSettlementEnquiry(posRefId, options = new TransactionOptions())\n    {\n        if (this.CurrentStatus == SpiStatus.Unpaired) return new InitiateTxResult(false, \"Not Paired\");\n\n        if (this.CurrentFlow != SpiFlow.Idle) return new InitiateTxResult(false, \"Not Idle\");\n        var stlEnqMsg = Object.assign(new SettlementEnquiryRequest(RequestIdHelper.Id(\"stlenq\")),\n        {\n            Config: this.Config,\n            Options: options\n        }).ToMessage();\n\n        this.CurrentFlow = SpiFlow.Transaction;\n        this.CurrentTxFlowState = new TransactionFlowState(\n            posRefId, TransactionType.SettlementEnquiry, 0, stlEnqMsg,\n            \"Waiting for EFTPOS connection to make a settlement enquiry\");\n        if (this._send(stlEnqMsg))\n        {\n            this.CurrentTxFlowState.Sent(\"Asked EFTPOS to make a settlement enquiry.\");\n        }\n        \n        document.dispatchEvent(new CustomEvent('TxFlowStateChanged', {detail: this.CurrentTxFlowState}));\n        return new InitiateTxResult(true, \"Settle Initiated\");   \n    }\n\n    // <summary>\n    // Initiates a Get Last Transaction. Use this when you want to retrieve the most recent transaction\n    // that was processed by the Eftpos.\n    // Be subscribed to TxFlowStateChanged event to get updates on the process.\n    // </summary>\n    InitiateGetLastTx()\n    {\n        if (this.CurrentStatus == SpiStatus.Unpaired) {\n            return new InitiateTxResult(false, \"Not Paired\");\n        }\n\n        if (this.CurrentFlow != SpiFlow.Idle) {\n            return new InitiateTxResult(false, \"Not Idle\");\n        }\n\n        var gltRequestMsg = new GetLastTransactionRequest().ToMessage();\n        this.CurrentFlow = SpiFlow.Transaction;\n        var posRefId = gltRequestMsg.Id; // GetLastTx is not trying to get anything specific back. So we just use the message id.\n        this.CurrentTxFlowState = new TransactionFlowState(\n            posRefId, TransactionType.GetLastTransaction, 0, gltRequestMsg, \n            \"Waiting for EFTPOS connection to make a Get-Last-Transaction request.\");\n        this.CurrentTxFlowState.CallingGlt(gltRequestMsg.Id);\n        if (this._send(gltRequestMsg))\n        {\n            this.CurrentTxFlowState.Sent(`Asked EFTPOS for last transaction.`);\n        }\n    \n        document.dispatchEvent(new CustomEvent('TxFlowStateChanged', {detail: this.CurrentTxFlowState}));\n        return new InitiateTxResult(true, \"GLT Initiated\");   \n    }\n\n    // <summary>\n    // This is useful to recover from your POS crashing in the middle of a transaction.\n    // When you restart your POS, if you had saved enough state, you can call this method to recover the client library state.\n    // You need to have the posRefId that you passed in with the original transaction, and the transaction type.\n    // This method will return immediately whether recovery has started or not.\n    // If recovery has started, you need to bring up the transaction modal to your user a be listening to TxFlowStateChanged.\n    // </summary>\n    // <param name=\"posRefId\">The is that you had assigned to the transaction that you are trying to recover.</param>\n    // <param name=\"txType\">The transaction type.</param>\n    // <returns></returns>\n    InitiateRecovery(posRefId, txType)\n    {\n        if (this.CurrentStatus == SpiStatus.Unpaired) return new InitiateTxResult(false, \"Not Paired\");\n    \n        if (this.CurrentFlow != SpiFlow.Idle) return new InitiateTxResult(false, \"Not Idle\");\n        \n        this.CurrentFlow = SpiFlow.Transaction;\n        \n        var gltRequestMsg = new GetLastTransactionRequest().ToMessage();\n        this.CurrentTxFlowState = new TransactionFlowState(\n            posRefId, txType, 0, gltRequestMsg, \n            \"Waiting for EFTPOS connection to attempt recovery.\");\n        \n        if (this._send(gltRequestMsg))\n        {\n            this.CurrentTxFlowState.Sent(`Asked EFTPOS to recover state.`);\n        }\n    \n        document.dispatchEvent(new CustomEvent('TxFlowStateChanged', {detail: this.CurrentTxFlowState}));\n        return new InitiateTxResult(true, \"Recovery Initiated\");\n    }\n\n    // <summary>\n    // GltMatch attempts to conclude whether a gltResponse matches an expected transaction and returns\n    // the outcome. \n    // If Success/Failed is returned, it means that the gtlResponse did match, and that transaction was succesful/failed.\n    // If Unknown is returned, it means that the gltResponse does not match the expected transaction. \n    // </summary>\n    // <param name=\"gltResponse\">The GetLastTransactionResponse message to check</param>\n    // <param name=\"posRefId\">The Reference Id that you passed in with the original request.</param>\n    // <param name=\"expectedAmount\">The total amount in the original request</param>\n    // <param name=\"requestTime\">The request time</param>\n    // <returns></returns>\n    GltMatch(gltResponse, posRefId, expectedAmount, requestTime, ...deprecatedArgs) \n    {\n        // Obsolete method call check\n        // Old interface: GltMatch(GetLastTransactionResponse gltResponse, TransactionType expectedType, int expectedAmount, DateTime requestTime, string posRefId)\n        if(deprecatedArgs.length) {\n            if(deprecatedArgs.length === 1) {\n                this._log.info(\"Obsolete method call detected: Use GltMatch(gltResponse, posRefId)\");\n                return this.GltMatch(gltResponse, deprecatedArgs[0]);\n            } else {\n                throw new Error(\"Obsolete method call with unknown args: Use GltMatch(GetLastTransactionResponse gltResponse, string posRefId)\");\n            }\n        }\n\n        this._log.info(`GLT CHECK: PosRefId: ${posRefId}->${gltResponse.GetPosRefId()}`);\n\n        var gltBankDateTimeStr = gltResponse.GetBankDateTimeString(); // ddMMyyyyHHmmss\n        var gltBankDateTime = new Date(`${gltBankDateTimeStr.substr(4,4)}-${gltBankDateTimeStr.substr(2,2)}-${gltBankDateTimeStr.substr(0,2)} ${gltBankDateTimeStr.substr(8,2)}:${gltBankDateTimeStr.substr(10,2)}:${gltBankDateTimeStr.substr(12,2)}`);\n        var compare = requestTime.getTime() - gltBankDateTime.getTime();\n\n        if (!posRefId == gltResponse.GetPosRefId())\n        {\n            return SuccessState.Unknown;\n        }\n\n        if (gltResponse.GetTxType().toUpperCase() == \"PURCHASE\" && gltResponse.GetBankNonCashAmount() != expectedAmount && compare > 0)\n        {\n            return Message.SuccessState.Unknown;\n        }\n\n        return gltResponse.GetSuccessState();\n    }\n    \n    PrintReceipt(key, payload)\n    {\n        this._send(new PrintingRequest(key, payload).toMessage());\n    }\n\n    GetTerminalStatus()\n    {\n        this._send(new TerminalStatusRequest().ToMessage());\n    }\n\n    // endregion\n        \n    // region Internals for Pairing Flow\n\n    // <summary>\n    // Handling the 2nd interaction of the pairing process, i.e. an incoming KeyRequest.\n    // </summary>\n    // <param name=\"m\">incoming message</param>\n    _handleKeyRequest(m)\n    {\n        this.CurrentPairingFlowState.Message = \"Negotiating Pairing...\";\n        document.dispatchEvent(new CustomEvent('PairingFlowStateChanged', {detail: this.CurrentPairingFlowState}));\n\n        // Use the helper. It takes the incoming request, and generates the secrets and the response.\n        var ph      = new PairingHelper();\n        var result  = ph.GenerateSecretsAndKeyResponse(new KeyRequest(m));\n        this._secrets = result.Secrets; // we now have secrets, although pairing is not fully finished yet.\n        this._spiMessageStamp.Secrets = this._secrets; // updating our stamp with the secrets so can encrypt messages later.\n        this._send(result.KeyResponse.ToMessage()); // send the key_response, i.e. interaction 3 of pairing.\n    }\n\n    // <summary>\n    // Handling the 4th interaction of the pairing process i.e. an incoming KeyCheck.\n    // </summary>\n    // <param name=\"m\"></param>\n    _handleKeyCheck(m)\n    {\n        var keyCheck = new KeyCheck(m);\n        this.CurrentPairingFlowState.ConfirmationCode = keyCheck.ConfirmationCode;\n        this.CurrentPairingFlowState.AwaitingCheckFromEftpos = true;\n        this.CurrentPairingFlowState.AwaitingCheckFromPos = true;\n        this.CurrentPairingFlowState.Message = \"Confirm that the following Code is showing on the Terminal\";\n        document.dispatchEvent(new CustomEvent('PairingFlowStateChanged', {detail: this.CurrentPairingFlowState}));\n    }\n\n    // <summary>\n    // Handling the 5th and final interaction of the pairing process, i.e. an incoming PairResponse\n    // </summary>\n    // <param name=\"m\"></param>\n    _handlePairResponse(m)\n    {\n        var pairResp = new PairResponse(m);\n\n        this.CurrentPairingFlowState.AwaitingCheckFromEftpos = false;\n        if (pairResp.Success)\n        {\n            if (this.CurrentPairingFlowState.AwaitingCheckFromPos)\n            {\n                // Still Waiting for User to say yes on POS\n                this._log.info(\"Got Pair Confirm from Eftpos, but still waiting for use to confirm from POS.\");\n                this.CurrentPairingFlowState.Message = \"Confirm that the following Code is what the EFTPOS showed\";\n                document.dispatchEvent(new CustomEvent('PairingFlowStateChanged', {detail: this.CurrentPairingFlowState}));\n            }\n            else\n            {\n                this._log.info(\"Got Pair Confirm from Eftpos, and already had confirm from POS. Now just waiting for first pong.\");\n                this._onPairingSuccess();\n            }\n            // I need to ping/login even if the pos user has not said yes yet, \n            // because otherwise within 5 seconds connectiong will be dropped by eftpos.\n            this._startPeriodicPing();\n        }\n        else\n        {\n            this._onPairingFailed();\n        }\n    }\n\n    _handleDropKeysAdvice(m)\n    {\n        this._log.info(\"Eftpos was Unpaired. I shall unpair from my end as well.\");\n        this._doUnpair();\n    }\n\n    _onPairingSuccess()\n    {\n        this.CurrentPairingFlowState.Successful = true;\n        this.CurrentPairingFlowState.Finished = true;\n        this.CurrentPairingFlowState.Message = \"Pairing Successful!\";\n        this.CurrentStatus = SpiStatus.PairedConnected;\n        document.dispatchEvent(new CustomEvent('SecretsChanged', {detail: this._secrets}));\n        document.dispatchEvent(new CustomEvent('PairingFlowStateChanged', {detail: this.CurrentPairingFlowState}));\n    }\n\n    _onPairingFailed()\n    {\n        this._secrets = null;\n        this._spiMessageStamp.Secrets = null;\n        this._conn.Disconnect();\n\n        this.CurrentStatus = SpiStatus.Unpaired;\n        this.CurrentPairingFlowState.Message = \"Pairing Failed\";\n        this.CurrentPairingFlowState.Finished = true;\n        this.CurrentPairingFlowState.Successful = false;\n        this.CurrentPairingFlowState.AwaitingCheckFromPos = false;\n        document.dispatchEvent(new CustomEvent('PairingFlowStateChanged', {detail: this.CurrentPairingFlowState}));\n    }\n\n    _doUnpair()\n    {\n        this.CurrentStatus = SpiStatus.Unpaired;\n        this._conn.Disconnect();\n        this._secrets = null;\n        this._spiMessageStamp.Secrets = null;\n        document.dispatchEvent(new CustomEvent('SecretsChanged', {detail: this._secrets}));\n    }\n\n    // <summary>\n    // Sometimes the server asks us to roll our secrets.\n    // </summary>\n    // <param name=\"m\"></param>\n    _handleKeyRollingRequest(m)\n    {\n        // we calculate the new ones...\n        var krRes = KeyRollingHelper.PerformKeyRolling(m, this._secrets);\n        this._secrets = krRes.NewSecrets; // and update our secrets with them\n        this._spiMessageStamp.Secrets = this._secrets; // and our stamp\n        this._send(krRes.KeyRollingConfirmation); // and we tell the server that all is well.\n        document.dispatchEvent(new CustomEvent('SecretsChanged', {detail: this._secrets}));\n    }\n\n    // <summary>\n    // The PinPad server will send us this message when a customer signature is reqired.\n    // We need to ask the customer to sign the incoming receipt.\n    // And then tell the pinpad whether the signature is ok or not.\n    // </summary>\n    // <param name=\"m\"></param>\n    _handleSignatureRequired(m)\n    {\n        var incomingPosRefId = m.Data.pos_ref_id;\n        if (this.CurrentFlow != SpiFlow.Transaction || this.CurrentTxFlowState.Finished || !this.CurrentTxFlowState.PosRefId == incomingPosRefId)\n        {\n            this._log.info(`Received Signature Required but I was not waiting for one. Incoming Pos Ref ID: ${incomingPosRefId}`);\n            return;\n        }\n        this.CurrentTxFlowState.SignatureRequired(new SignatureRequired(m), \"Ask Customer to Sign the Receipt\");\n    \n        document.dispatchEvent(new CustomEvent('TxFlowStateChanged', {detail: this.CurrentTxFlowState}));\n    }\n\n    // <summary>\n    // The PinPad server will send us this message when an auth code is required.\n    // </summary>\n    // <param name=\"m\"></param>\n    _handleAuthCodeRequired(m)\n    {\n        var incomingPosRefId = m.Data.pos_ref_id;\n        if (this.CurrentFlow != SpiFlow.Transaction || this.CurrentTxFlowState.Finished || !this.CurrentTxFlowState.PosRefId == incomingPosRefId)\n        {\n            _log.info(`Received Auth Code Required but I was not waiting for one. Incoming Pos Ref ID: ${incomingPosRefId}`);\n            return;\n        }\n        var phoneForAuthRequired = new PhoneForAuthRequired(m);\n        var msg = `Auth Code Required. Call ${phoneForAuthRequired.GetPhoneNumber()} and quote merchant id ${phoneForAuthRequired.GetMerchantId()}`;\n        this.CurrentTxFlowState.PhoneForAuthRequired(phoneForAuthRequired, msg);\n    \n        document.dispatchEvent(new CustomEvent('TxFlowStateChanged', {detail: this.CurrentTxFlowState}));\n    }\n\n    // <summary>\n    // The PinPad server will reply to our PurchaseRequest with a PurchaseResponse.\n    // </summary>\n    // <param name=\"m\"></param>\n    _handlePurchaseResponse(m)\n    {\n        var incomingPosRefId = m.Data.pos_ref_id;\n        if (this.CurrentFlow != SpiFlow.Transaction || this.CurrentTxFlowState.Finished || !this.CurrentTxFlowState.PosRefId == incomingPosRefId)\n        {\n            this._log.info(`Received Purchase response but I was not waiting for one. Incoming Pos Ref ID: ${incomingPosRefId}\"`);\n            return;\n        }\n        // TH-1A, TH-2A\n        \n        this.CurrentTxFlowState.Completed(m.GetSuccessState(), m, \"Purchase Transaction Ended.\");\n        // TH-6A, TH-6E\n        \n        document.dispatchEvent(new CustomEvent('TxFlowStateChanged', {detail: this.CurrentTxFlowState}));\n    }\n\n    // <summary>\n    // The PinPad server will reply to our CashoutOnlyRequest with a CashoutOnlyResponse.\n    // </summary>\n    // <param name=\"m\"></param>\n    _handleCashoutOnlyResponse(m)\n    {\n        var incomingPosRefId = m.Data.pos_ref_id;\n        if (this.CurrentFlow != SpiFlow.Transaction || this.CurrentTxFlowState.Finished || !this.CurrentTxFlowState.PosRefId == incomingPosRefId)\n        {\n            this._log.info(`Received Cashout Response but I was not waiting for one. Incoming Pos Ref ID: ${incomingPosRefId}`);\n            return;\n        }\n        // TH-1A, TH-2A\n        \n        this.CurrentTxFlowState.Completed(m.GetSuccessState(), m, \"Cashout Transaction Ended.\");\n        // TH-6A, TH-6E\n        \n        document.dispatchEvent(new CustomEvent('TxFlowStateChanged', {detail: this.CurrentTxFlowState}));\n    }\n\n    // <summary>\n    // The PinPad server will reply to our MotoPurchaseRequest with a MotoPurchaseResponse.\n    // </summary>\n    // <param name=\"m\"></param>\n    _handleMotoPurchaseResponse(m)\n    {\n        var incomingPosRefId = m.Data.pos_ref_id;\n        if (this.CurrentFlow != SpiFlow.Transaction || this.CurrentTxFlowState.Finished || !this.CurrentTxFlowState.PosRefId == incomingPosRefId)\n        {\n            this._log.info(`Received Moto Response but I was not waiting for one. Incoming Pos Ref ID: ${incomingPosRefId}`);\n            return;\n        }\n        // TH-1A, TH-2A\n        \n        this.CurrentTxFlowState.Completed(m.GetSuccessState(), m, \"Moto Transaction Ended.\");\n        // TH-6A, TH-6E\n        \n        document.dispatchEvent(new CustomEvent('TxFlowStateChanged', {detail: this.CurrentTxFlowState}));\n    }   \n\n    // <summary>\n    // The PinPad server will reply to our RefundRequest with a RefundResponse.\n    // </summary>\n    // <param name=\"m\"></param>\n    _handleRefundResponse(m)\n    {\n        var incomingPosRefId = m.Data.pos_ref_id;\n        if (this.CurrentFlow != SpiFlow.Transaction || this.CurrentTxFlowState.Finished | !this.CurrentTxFlowState.PosRefId == incomingPosRefId)\n        {\n            this._log.info(`Received Refund response but I was not waiting for this one. Incoming Pos Ref ID: ${incomingPosRefId}`);\n            return;\n        }\n        // TH-1A, TH-2A\n        \n        this.CurrentTxFlowState.Completed(m.GetSuccessState(), m, \"Refund Transaction Ended.\");\n        // TH-6A, TH-6E\n        \n        document.dispatchEvent(new CustomEvent('TxFlowStateChanged', {detail: this.CurrentTxFlowState}));\n    }\n\n    // <summary>\n    // TODO: Handle the Settlement Response received from the PinPad\n    // </summary>\n    // <param name=\"m\"></param>\n    HandleSettleResponse(m)\n    {\n        if (this.CurrentFlow != SpiFlow.Transaction || this.CurrentTxFlowState.Finished)\n        {\n            this._log.info(`Received Settle response but I was not waiting for one. ${m.DecryptedJson}`);\n            return;\n        }\n        // TH-1A, TH-2A\n        \n        this.CurrentTxFlowState.Completed(m.GetSuccessState(), m, \"Settle Transaction Ended.\");\n        // TH-6A, TH-6E\n    \n        document.dispatchEvent(new CustomEvent('TxFlowStateChanged', {detail: this.CurrentTxFlowState}));\n    }\n\n    // <summary>\n    // Handle the Settlement Enquiry Response received from the PinPad\n    // </summary>\n    // <param name=\"m\"></param>\n    _handleSettlementEnquiryResponse(m)\n    {\n        if (this.CurrentFlow != SpiFlow.Transaction || this.CurrentTxFlowState.Finished)\n        {\n            this._log.info(`Received Settlement Enquiry response but I was not waiting for one. ${m.DecryptedJson}`);\n            return;\n        }\n        // TH-1A, TH-2A\n        \n        this.CurrentTxFlowState.Completed(m.GetSuccessState(), m, \"Settlement Enquiry Ended.\");\n        // TH-6A, TH-6E\n        \n        document.dispatchEvent(new CustomEvent('TxFlowStateChanged', {detail: this.CurrentTxFlowState}));\n    }\n\n    // <summary>\n    // Sometimes we receive event type \"error\" from the server, such as when calling cancel_transaction and there is no transaction in progress.\n    // </summary>\n    // <param name=\"m\"></param>\n    _handleErrorEvent(m)\n    {\n        if (this.CurrentFlow == SpiFlow.Transaction\n            && !this.CurrentTxFlowState.Finished\n            && this.CurrentTxFlowState.AttemptingToCancel\n            && m.GetError() == \"NO_TRANSACTION\")\n        {\n            // TH-2E\n            this._log.info(`Was trying to cancel a transaction but there is nothing to cancel. Calling GLT to see what's up`);\n            this._callGetLastTransaction();\n        }\n        else\n        {\n            this._log.info(`Received Error Event But Don't know what to do with it. ${m.DecryptedJson}`);\n        }\n    }\n\n    // <summary>\n    // When the PinPad returns to us what the Last Transaction was.\n    // </summary>\n    // <param name=\"m\"></param>\n    _handleGetLastTransactionResponse(m)\n    {\n        var txState = this.CurrentTxFlowState;\n        if (this.CurrentFlow != SpiFlow.Transaction || txState.Finished)\n        {\n            this._log.info(\"Received glt response but we were not in the middle of a tx. ignoring.\");\n            return;\n        }\n\n        if (!txState.AwaitingGltResponse)\n        {\n            this._log.info(\"received a glt response but we had not asked for one within this transaction. Perhaps leftover from previous one. ignoring.\");\n            return;\n        }\n\n        if (txState.LastGltRequestId != m.Id)\n        {\n            this._log.info(\"received a glt response but the message id does not match the glt request that we sent. strange. ignoring.\");\n            return;\n        }\n\n        // TH-4 We were in the middle of a transaction.\n        // Let's attempt recovery. This is step 4 of Transaction Processing Handling\n        this._log.info(`Got Last Transaction..`);\n        txState.GotGltResponse();\n        var gtlResponse = new GetLastTransactionResponse(m);\n        txState.GLTResponsePosRefId = gtlResponse.GetPosRefId();\n        if (!gtlResponse.WasRetrievedSuccessfully())\n        {\n            if (gtlResponse.IsStillInProgress(txState.PosRefId))\n            {\n                // TH-4E - Operation In Progress\n\n                if (gtlResponse.IsWaitingForSignatureResponse() && !txState.AwaitingSignatureCheck)\n                {\n                    this._log.info(\"Eftpos is waiting for us to send it signature accept/decline, but we were not aware of this. \" +\n                              \"The user can only really decline at this stage as there is no receipt to print for signing.\");\n                    this.CurrentTxFlowState.SignatureRequired(new SignatureRequired(txState.PosRefId, m.Id, \"MISSING RECEIPT\\n DECLINE AND TRY AGAIN.\"), \"Recovered in Signature Required but we don't have receipt. You may Decline then Retry.\");\n                }\n                else if (gtlResponse.IsWaitingForAuthCode() && !txState.AwaitingPhoneForAuth)\n                {\n                    this._log.info(\"Eftpos is waiting for us to send it auth code, but we were not aware of this. \" +\n                              \"We can only cancel the transaction at this stage as we don't have enough information to recover from this.\");\n                    this.CurrentTxFlowState.PhoneForAuthRequired(new PhoneForAuthRequired(txState.PosRefId, m.Id, \"UNKNOWN\", \"UNKNOWN\"), \"Recovered mid Phone-For-Auth but don't have details. You may Cancel then Retry.\");\n                }\n                else\n                {\n                    this._log.info(\"Operation still in progress... stay waiting.\");\n                    // No need to publish txFlowStateChanged. Can return;\n                    return;\n                }\n            }\n            else if (gtlResponse.WasTimeOutOfSyncError())\n            {\n                // Let's not give up based on a TOOS error.\n                // Let's log it, and ignore it. \n                this._log.info(`Time-Out-Of-Sync error in Get Last Transaction response. Let's ignore it and we'll try again.`);\n                // No need to publish txFlowStateChanged. Can return;\n                return;\n            }\n            else\n            {\n                // TH-4X - Unexpected Response when recovering\n                this._log.info(`Unexpected Response in Get Last Transaction during - Received posRefId:${gtlResponse.GetPosRefId()} Error:${m.GetError()}. Ignoring.`);\n                return;\n            }\n        }\n        else\n        {\n            if (txState.Type == TransactionType.GetLastTransaction)\n            {\n                // THIS WAS A PLAIN GET LAST TRANSACTION REQUEST, NOT FOR RECOVERY PURPOSES.\n                this._log.info(\"Retrieved Last Transaction as asked directly by the user.\");\n                gtlResponse.CopyMerchantReceiptToCustomerReceipt();\n                txState.Completed(m.GetSuccessState(), m, \"Last Transaction Retrieved\");\n            }\n            else\n            {\n                // TH-4A - Let's try to match the received last transaction against the current transaction\n                var successState = this.GltMatch(gtlResponse, txState.PosRefId, txState.AmountCents, txState.RequestTime);\n                if (successState == SuccessState.Unknown)\n                {\n                    // TH-4N: Didn't Match our transaction. Consider Unknown State.\n                    this._log.info(\"Did not match transaction.\");\n                    txState.UnknownCompleted(\"Failed to recover Transaction Status. Check EFTPOS. \");\n                }\n                else\n                {\n                    // TH-4Y: We Matched, transaction finished, let's update ourselves\n                    gtlResponse.CopyMerchantReceiptToCustomerReceipt();\n                    txState.Completed(successState, m, \"Transaction Ended.\");\n                }\n            } \n        }\n        document.dispatchEvent(new CustomEvent('TxFlowStateChanged', {detail: txState}));\n    }\n\n    //When the transaction cancel response is returned.\n    _handleCancelTransactionResponse(m)\n    {\n        var incomingPosRefId = m.Data.pos_ref_id;\n        if (this.CurrentFlow != SpiFlow.Transaction || this.CurrentTxFlowState.Finished || !this.CurrentTxFlowState.PosRefId == incomingPosRefId)\n        {\n            this._log.info(`Received Cancel Required but I was not waiting for one. Incoming Pos Ref ID: ${incomingPosRefId}`);\n            return;\n        }\n\n        var txState = this.CurrentTxFlowState;\n        var cancelResponse = new CancelTransactionResponse(m);\n\n        if (cancelResponse.Success) return;\n\n        this._log.warn(\"Failed to cancel transaction: reason=\" + cancelResponse.GetErrorReason() + \", detail=\" + cancelResponse.GetErrorDetail());\n\n        txState.CancelFailed(\"Failed to cancel transaction: \" + cancelResponse.GetErrorDetail() + \". Check EFTPOS.\");\n    \n        document.dispatchEvent(new CustomEvent('TxFlowStateChanged', {detail: txState}));\n    }\n\n    _handleSetPosInfoResponse(m)\n    {\n        var response = new SetPosInfoResponse(m);\n        if (response.isSuccess())\n        {\n            this._hasSetInfo = true;\n            this._log.info(\"Setting POS info successful\");\n        }\n        else\n        {\n            this._log.warn(\"Setting POS info failed: reason=\" + response.getErrorReason() + \", detail=\" + response.getErrorDetail());\n        }\n    }\n\n    _startTransactionMonitoringThread()\n    {\n        var needsPublishing = false;\n    \n        var txState = this.CurrentTxFlowState;\n        if (this.CurrentFlow == SpiFlow.Transaction && !txState.Finished)\n        {\n            var state = txState;\n            if (state.AttemptingToCancel && Date.now() > state.CancelAttemptTime + this._maxWaitForCancelTx)\n            {\n                // TH-2T - too long since cancel attempt - Consider unknown\n                this._log.info(`Been too long waiting for transaction to cancel.`);\n                txState.UnknownCompleted(`Waited long enough for Cancel Transaction result. Check EFTPOS. `);\n                needsPublishing = true;\n            }\n            else if (state.RequestSent && Date.now() > state.LastStateRequestTime + this._checkOnTxFrequency)\n            {\n                // TH-1T, TH-4T - It's been a while since we received an update, let's call a GLT\n                this._log.info(`Checking on our transaction. Last we asked was at ${state.LastStateRequestTime}...`);\n                this._callGetLastTransaction();\n            }\n        }\n        \n        if (needsPublishing) {\n            document.dispatchEvent(new CustomEvent('TxFlowStateChanged', {detail: this.CurrentTxFlowState}));\n        }\n\n        setTimeout(() => this._startTransactionMonitoringThread(), this._txMonitorCheckFrequency);\n    }\n\n    PrintingResponse(m) {\n        throw new Error('Method not implemented. Please overwrite this method in your POS');\n    }\n\n    TerminalStatusResponse(m) {\n        throw new Error('Method not implemented. Please overwrite this method in your POS');\n    }\n\n    BatteryLevelChanged(m) {\n        throw new Error('Method not implemented. Please overwrite this method in your POS');\n    }\n\n    _handlePrintingResponse(m)\n    {\n        this.PrintingResponse(m);\n    }\n\n    _handleTerminalStatusResponse(m)\n    {\n        this.TerminalStatusResponse(m);\n    }\n\n    _handleBatteryLevelChanged(m)\n    {\n        this.BatteryLevelChanged(m);\n    }\n\n    // endregion\n        \n    // region Internals for Connection Management\n\n    _resetConn()\n    {\n        // Setup the Connection\n        this._conn = new Connection();\n\n        if (this._isUsingHttps() || this._forceSecureWebSockets) {\n            this._log.info(\"Secure connection detected.\");\n            this._eftposAddress = this._eftposAddress.replace(\"ws://\", \"wss://\");\n          }\n          this._conn.Address = this._eftposAddress;\n    \n        // Register our Event Handlers\n        document.addEventListener('ConnectionStatusChanged', (e) => this._onSpiConnectionStatusChanged(e.detail));\n        document.addEventListener('MessageReceived', (e) => this._onSpiMessageReceived(e.detail));\n        document.addEventListener('ErrorReceived', (e) => this._onWsErrorReceived(e.detail));\n    }\n\n    // <summary>\n    // This method will be called when the connection status changes.\n    // You are encouraged to display a PinPad Connection Indicator on the POS screen.\n    // </summary>\n    // <param name=\"state\"></param>\n    _onSpiConnectionStatusChanged(state)\n    {\n        switch (state.ConnectionState)\n        {\n            case ConnectionState.Connecting:\n                this._log.info(`I'm Connecting to the Eftpos at ${this._eftposAddress}...`);\n                break;\n\n            case ConnectionState.Connected:\n                this._retriesSinceLastDeviceAddressResolution = 0;\n\n                if (this.CurrentFlow == SpiFlow.Pairing && this.CurrentStatus == SpiStatus.Unpaired)\n                {\n                    this.CurrentPairingFlowState.Message = \"Requesting to Pair...\";\n                    document.dispatchEvent(new CustomEvent('PairingFlowStateChanged', {detail: this.CurrentPairingFlowState}));\n                    var pr = PairingHelper.NewPairRequest();\n                    this._send(pr.ToMessage());\n                }\n                else\n                {\n                    this._log.info(`I'm Connected to ${this._eftposAddress}...`);\n                    this._spiMessageStamp.Secrets = this._secrets;\n                    this._startPeriodicPing();\n                }\n                break;\n\n            case ConnectionState.Disconnected:\n                // Let's reset some lifecycle related to connection state, ready for next connection\n                this._log.info(`I'm disconnected from ${this._eftposAddress}...`);\n                this._mostRecentPingSent = null;\n                this._mostRecentPongReceived = null;\n                this._missedPongsCount = 0;\n                this._stopPeriodicPing();\n\n                if (this.CurrentStatus != SpiStatus.Unpaired)\n                {\n                    this.CurrentStatus = SpiStatus.PairedConnecting;\n\n                    if (this.CurrentFlow == SpiFlow.Transaction && !this.CurrentTxFlowState.Finished)\n                    {\n                        // we're in the middle of a transaction, just so you know!\n                        // TH-1D\n                        this._log.info(`Lost connection in the middle of a transaction...`);\n                    }\n                    \n                    if (this._conn == null) return; // This means the instance has been disposed. Aborting.\n                    \n                    if (this._autoAddressResolutionEnabled)\n                    {\n                        if (this._retriesSinceLastDeviceAddressResolution >= this._retriesBeforeResolvingDeviceAddress)\n                        {\n                            this._autoResolveEftposAddress();\n                            this._retriesSinceLastDeviceAddressResolution = 0;\n                        }\n                        else\n                        {\n                            this._retriesSinceLastDeviceAddressResolution += 1;\n                        }\n                    }\n\n                    this._log.info(`Will try to reconnect in ${this._sleepBeforeReconnectMs}ms...`);\n                    setTimeout(() => {\n                        if (this.CurrentStatus != SpiStatus.Unpaired)\n                        {\n                            // This is non-blocking\n                            if(this._conn) \n                            {\n                                this._conn.Connect();\n                            }\n                        }\n                    }, this._sleepBeforeReconnectMs);\n                }\n                else if (this.CurrentFlow == SpiFlow.Pairing)\n                {\n                    this._log.info(\"Lost Connection during pairing.\");\n                    this.CurrentPairingFlowState.Message = \"Could not Connect to Pair. Check Network and Try Again...\";\n                    this._onPairingFailed();\n                    document.dispatchEvent(new CustomEvent('PairingFlowStateChanged', {detail: this.CurrentPairingFlowState}));\n                }\n                break;\n            default:\n                throw new Error('Unknown state: ' + state);\n        }\n    }\n\n    // <summary>\n    // This is an important piece of the puzzle. It's a background thread that periodically\n    // sends Pings to the server. If it doesn't receive Pongs, it considers the connection as broken\n    // so it disconnects. \n    // </summary>\n    _startPeriodicPing() {\n        this._stopPeriodicPing();\n        this._periodicPingThread = setInterval(() => this._periodicPing(),this._pingFrequency);\n        this._periodicPing();\n    }\n\n    _periodicPing() {\n        // while i'm still connected AND paired...\n        if(this._conn.Connected && this._secrets != null) {\n            this._doPing();\n\n            setTimeout(() => {\n                if (this._mostRecentPingSent != null &&\n                    (this._mostRecentPongReceived == null || this._mostRecentPongReceived.Id != this._mostRecentPingSent.Id))\n                {\n                    this._missedPongsCount += 1;\n\n                    this._log.info(`Eftpos didn't reply to my Ping. Missed Count: ${this._missedPongsCount}/${this._missedPongsToDisconnect}.`);\n\n                    if (this._missedPongsCount < this._missedPongsToDisconnect)\n                    {\n                        this._log.info(\"Trying another ping...\");\n                        this._startPeriodicPing();\n                        return;\n                    }\n\n                    // This means that we have not received a pong for our most recent ping.\n                    // We consider this connection as broken.\n                    // Let's Disconnect.\n                    this._log.info(\"Disconnecting...\");\n                    this._conn.Disconnect();\n                    this._stopPeriodicPing();\n                }\n\n                this._missedPongsCount = 0;\n\n            },this._pongTimeout);\n\n        } else {\n            this._stopPeriodicPing();\n            this._log.info(\"Cancelling periodic ping as were disconnected or not paired\");\n        }\n    }\n\n    // <summary>\n    // We call this ourselves as soon as we're ready to transact with the PinPad after a connection is established.\n    // This function is effectively called after we received the first Login Response from the PinPad.\n    // </summary>\n    _onReadyToTransact()\n    {\n        this._log.info(\"On Ready To Transact!\");\n\n        // So, we have just made a connection, pinged and logged in successfully.\n        this.CurrentStatus = SpiStatus.PairedConnected;\n\n        if (this.CurrentFlow == SpiFlow.Transaction && !this.CurrentTxFlowState.Finished)\n        {\n            if (this.CurrentTxFlowState.RequestSent)\n            {\n                // TH-3A - We've just reconnected and were in the middle of Tx.\n                // Let's get the last transaction to check what we might have missed out on.\n                this._callGetLastTransaction();\n            }\n            else\n            {\n                // TH-3AR - We had not even sent the request yet. Let's do that now\n                this._send(this.CurrentTxFlowState.Request);\n                this.CurrentTxFlowState.Sent(`Sending Request Now...`);\n                document.dispatchEvent(new CustomEvent('TxFlowStateChanged', {detail: this.CurrentTxFlowState}));\n            }\n        }\n        else\n        {\n            if (!this._hasSetInfo) { \n                this._callSetPosInfo(); \n            }\n\n            // let's also tell the eftpos our latest table configuration.\n            if(this._spiPat) {\n                this._spiPat.PushPayAtTableConfig();\n            }\n        }\n    }\n\n    _callSetPosInfo()\n    {\n        var setPosInfoRequest = new SetPosInfoRequest(this._posVersion, this._posVendorId, \"js\", SPI_VERSION, DeviceInfo.GetAppDeviceInfo());\n        this._send(setPosInfoRequest.toMessage());\n    }\n\n    // <summary>\n    // When we disconnect, we should also stop the periodic ping.\n    // </summary>\n    _stopPeriodicPing() {\n        if(this._periodicPingThread) {\n            // If we were already set up, clean up before restarting.\n            clearInterval(this._periodicPingThread);\n            this._periodicPingThread = null;\n        }\n    }\n\n    // Send a Ping to the Server\n    _doPing()\n    {\n        var ping = PingHelper.GeneratePingRequest();\n        this._mostRecentPingSent = ping;\n        this._send(ping);\n        this._mostRecentPingSentTime = Date.now();\n    }\n\n    // <summary>\n    // Received a Pong from the server\n    // </summary>\n    // <param name=\"m\"></param>\n    _handleIncomingPong(m)\n    {\n        // We need to maintain this time delta otherwise the server will not accept our messages.\n        this._spiMessageStamp.ServerTimeDelta = m.GetServerTimeDelta();\n\n        if (this._mostRecentPongReceived == null)\n        {\n            // First pong received after a connection, and after the pairing process is fully finalised.\n            if (this.CurrentStatus != SpiStatus.Unpaired)\n            {\n                this._log.info(\"First pong of connection and in paired state.\");\n                this._onReadyToTransact();\n            }\n            else\n            {\n                this._log.info(\"First pong of connection but pairing process not finalised yet.\");\n            }\n        }\n\n        this._mostRecentPongReceived = m;\n        this._log.debug(`PongLatency:${Date.now() - this._mostRecentPingSentTime}`);\n    }\n\n    // <summary>\n    // The server will also send us pings. We need to reply with a pong so it doesn't disconnect us.\n    // </summary>\n    // <param name=\"m\"></param>\n    _handleIncomingPing(m)\n    {\n        var pong = PongHelper.GeneratePongRessponse(m);\n        this._send(pong);\n    }\n\n    // <summary>\n    // Ask the PinPad to tell us what the Most Recent Transaction was\n    // </summary>\n    _callGetLastTransaction()\n    {\n        var gltRequestMsg = new GetLastTransactionRequest().ToMessage();\n        this.CurrentTxFlowState.CallingGlt(gltRequestMsg.Id);\n        this._send(gltRequestMsg);\n    }\n\n    // <summary>\n    // This method will be called whenever we receive a message from the Connection\n    // </summary>\n    // <param name=\"messageJson\"></param>\n    _onSpiMessageReceived(messageJson)\n    {\n        // First we parse the incoming message\n        var m = Message.FromJson(messageJson.Message, this._secrets);\n        this._log.info(\"Received:\" + m.DecryptedJson);\n\n        if (SpiPreauth.IsPreauthEvent(m.EventName))\n        {\n            this._spiPreauth._handlePreauthMessage(m);\n            return;\n        }\n\n        // And then we switch on the event type.\n        switch (m.EventName)\n        {\n            case Events.KeyRequest:\n                this._handleKeyRequest(m);\n                break;\n            case Events.KeyCheck:\n                this._handleKeyCheck(m);\n                break;\n            case Events.PairResponse:\n                this._handlePairResponse(m);\n                break;\n            case Events.DropKeysAdvice:\n                this._handleDropKeysAdvice(m);\n                break;\n            case Events.PurchaseResponse:\n                this._handlePurchaseResponse(m);\n                break;\n            case Events.RefundResponse:\n                this._handleRefundResponse(m);\n                break;\n            case Events.CashoutOnlyResponse:\n                this._handleCashoutOnlyResponse(m);\n                break;\n            case Events.MotoPurchaseResponse:\n                this._handleMotoPurchaseResponse(m);\n                break;\n            case Events.SignatureRequired:\n                this._handleSignatureRequired(m);\n                break;\n            case Events.AuthCodeRequired:\n                this._handleAuthCodeRequired(m);\n                break;\n            case Events.GetLastTransactionResponse:\n                this._handleGetLastTransactionResponse(m);\n                break;\n            case Events.SettleResponse:\n                this.HandleSettleResponse(m);\n                break;\n            case Events.SettlementEnquiryResponse:\n                this._handleSettlementEnquiryResponse(m);\n                break;\n            case Events.Ping:\n                this._handleIncomingPing(m);\n                break;\n            case Events.Pong:\n                this._handleIncomingPong(m);\n                break;\n            case Events.KeyRollRequest:\n                this._handleKeyRollingRequest(m);\n                break;\n            case Events.CancelTransactionResponse:\n                this._handleCancelTransactionResponse(m);\n                break;\n            case Events.SetPosInfoResponse:\n                this._handleSetPosInfoResponse(m);\n                break;\n            case Events.PayAtTableGetTableConfig:\n                if (this._spiPat == null)\n                {\n                    this._send(PayAtTableConfig.FeatureDisableMessage(RequestIdHelper.Id(\"patconf\")));\n                    break;\n                }\n                this._spiPat._handleGetTableConfig(m);\n                break;\n            case Events.PayAtTableGetBillDetails:\n                this._spiPat._handleGetBillDetailsRequest(m);\n                break;\n            case Events.PayAtTableBillPayment:\n                this._spiPat._handleBillPaymentAdvice(m);\n                break;\n            case Events.PayAtTableGetOpenTables:\n                this._spiPat._handleGetOpenTablesRequest(m);\n                break;\n            case Events.PayAtTableBillPaymentFlowEnded:\n                this._spiPat._handleBillPaymentFlowEnded(m);\n                break;\n            case Events.PrintingResponse:\n                this._handlePrintingResponse(m);\n                break;\n            case Events.TerminalStatusResponse:\n                this._handleTerminalStatusResponse(m);\n                break;\n            case Events.BatteryLevelChanged:\n                this._handleBatteryLevelChanged(m);\n                break;\n            case Events.Error:\n                this._handleErrorEvent(m);\n                break;\n            case Events.InvalidHmacSignature:\n                this._log.info(\"I could not verify message from Eftpos. You might have to Un-pair Eftpos and then reconnect.\");\n                break;\n            default:\n                this._log.info(`I don't Understand Event: ${m.EventName}, ${m.Data}. Perhaps I have not implemented it yet.`);\n                break;\n        }\n    }\n\n    _onWsErrorReceived(error)\n    {\n        this._log.warn(\"Received WS Error\", error.Message);\n    }\n\n    _send(message)\n    {\n        var json = message.ToJson(this._spiMessageStamp);\n        if (this._conn.Connected)\n        {\n            this._log.info(\"Sending: \" + message.DecryptedJson);\n            this._conn.Send(json);\n            return true;\n        }\n        else\n        {\n            this._log.info(\"Asked to send, but not connected: \" + message.DecryptedJson);\n            return false;\n        }\n    }\n\n    HasSerialNumberChanged(updatedSerialNumber)\n    {\n        return this._serialNumber != updatedSerialNumber;\n    }\n\n    HasEftposAddressChanged(updatedEftposAddress)\n    {\n        return this._eftposAddress != updatedEftposAddress;\n    }\n\n    async _autoResolveEftposAddress()\n    {\n        if (!this._autoAddressResolutionEnabled)\n            return;\n    \n        if (!this._serialNumber || !this._deviceApiKey) {\n            this._log.warn(\"Missing serialNumber and/or deviceApiKey. Need to set them before for Auto Address to work.\");    \n            return;\n        }\n\n        var isSecureConnection = this._isSecureConnection();\n\n        var service = new DeviceAddressService();\n\n        try\n        {\n            var addressResponse     = await service.RetrieveService(this._serialNumber, this._deviceApiKey, this._acquirerCode, isSecureConnection, this._inTestMode);\n            var addressResponseJson = await addressResponse.json();\n\n            this.CurrentDeviceStatus = Object.assign(new DeviceAddressStatus(isSecureConnection), \n            {\n                ip: addressResponseJson.ip,\n                fqdn: addressResponseJson.fqdn,\n                DeviceAddressResponseCode: addressResponse.status,\n                ResponseStatusDescription: addressResponse.statusText,\n                ResponseMessage: addressResponse.statusText,\n                LastUpdated: addressResponseJson.last_updated\n            });\n        }\n        catch (err) \n        {\n            this.CurrentDeviceStatus.DeviceAddressResponseCode = DeviceAddressResponseCode.DEVICE_SERVICE_ERROR;\n            this.CurrentDeviceStatus.ResponseStatusDescription = err;\n            this.CurrentDeviceStatus.ResponseMessage = err;\n\n            document.dispatchEvent(new CustomEvent('DeviceAddressChanged', {detail: this.CurrentDeviceStatus}));\n            return; \n        }\n\n        if (addressResponse.status == HttpStatusCode.NotFound)\n        {\n            this.CurrentDeviceStatus.DeviceAddressResponseCode = DeviceAddressResponseCode.INVALID_SERIAL_NUMBER;\n\n            document.dispatchEvent(new CustomEvent('DeviceAddressChanged', {detail: this.CurrentDeviceStatus}));\n            return;\n        }\n\n        if(!addressResponse.ok || !addressResponseJson || !this.CurrentDeviceStatus.Address) {\n            this.CurrentDeviceStatus.DeviceAddressResponseCode = DeviceAddressResponseCode.DEVICE_SERVICE_ERROR;\n\n            document.dispatchEvent(new CustomEvent('DeviceAddressChanged', {detail: this.CurrentDeviceStatus}));\n            return;\n        }\n\n        if (!this.HasEftposAddressChanged(this.CurrentDeviceStatus.Address))\n        {\n            this.CurrentDeviceStatus.DeviceAddressResponseCode = DeviceAddressResponseCode.ADDRESS_NOT_CHANGED;\n\n            document.dispatchEvent(new CustomEvent('DeviceAddressChanged', {detail: this.CurrentDeviceStatus}));\n            return;\n        }\n\n        // update device and connection address\n        var protocol = isSecureConnection ? \"wss\" : \"ws\";\n        this._eftposAddress = protocol + \"://\" + this.CurrentDeviceStatus.Address;\n        this._conn.Address = this._eftposAddress;\n        this.CurrentDeviceStatus.DeviceAddressResponseCode = DeviceAddressResponseCode.SUCCESS;\n\n        document.dispatchEvent(new CustomEvent('DeviceAddressChanged', {detail: this.CurrentDeviceStatus}));\n    }\n\n    _isUsingHttps() \n    {\n        return 'https:' == document.location.protocol ? true : false;\n    }\n\n    // determine whether to use wss or not\n    _isSecureConnection() \n    {\n        return this._isUsingHttps() || this._forceSecureWebSockets;\n    }\n}\n\nexport {Spi, SPI_VERSION};\n","import {SuccessState} from './Messages';\n\n// <summary>\n// Represents the 3 Pairing statuses that the Spi instanxce can be in.\n// </summary>\nexport const SpiStatus = \n{\n    // <summary>\n    // Paired and Connected\n    // </summary>\n    PairedConnected: 'PairedConnected',\n    \n    // <summary>\n    // Paired but trying to establish a connection \n    // </summary>\n    PairedConnecting: 'PairedConnecting',\n    \n    // <summary>\n    // Unpaired\n    // </summary>\n    Unpaired: 'Unpaired'\n};\n\n// <summary>\n// The Spi instance can be in one of these flows at any point in time.\n// </summary>\nexport const SpiFlow = \n{\n    // <summary>\n    // Currently going through the Pairing Process Flow.\n    // Happens during the Unpaired SpiStatus.\n    // </summary>\n    Pairing: 'Pairing',\n    \n    // <summary>\n    // Currently going through the transaction Process Flow.\n    // Cannot happen in the Unpaired SpiStatus.\n    // </summary>\n    Transaction: 'Transaction',\n\n    // <summary>\n    // Not in any of the other states.\n    // </summary>\n    Idle: 'Idle'\n};\n\n// <summary>\n// Represents the Pairing Flow State during the pairing process \n// </summary>\nexport class PairingFlowState\n{\n    constructor(state) {\n        // <summary>\n        // Some text that can be displayed in the Pairing Process Screen\n        // that indicates what the pairing process is up to.\n        // </summary>\n        this.Message = null;\n\n        // <summary>\n        // When true, it means that the EFTPOS is shoing the confirmation code,\n        // and your user needs to press YES or NO on the EFTPOS.\n        // </summary>\n        this.AwaitingCheckFromEftpos = null;\n        \n        // <summary>\n        // When true, you need to display the YES/NO buttons on you pairing screen\n        // for your user to confirm the code.\n        // </summary>\n        this.AwaitingCheckFromPos = null;\n        \n        // <summary>\n        // This is the confirmation code for the pairing process.\n        // </summary>\n        this.ConfirmationCode = null;\n        \n        // <summary>\n        // Indicates whether the Pairing Flow has finished its job.\n        // </summary>\n        this.Finished = null;\n        \n        // <summary>\n        // Indicates whether pairing was successful or not.\n        // </summary>\n        this.Successful = null;\n\n        if(state) {\n            Object.assign(this, state);\n        }\n    }   \n}\n\nexport const TransactionType = \n{\n    Purchase: 'Purchase',\n    Refund: 'Refund',\n    CashoutOnly: 'CashoutOnly',\n    MOTO: 'MOTO',\n    Settle: 'Settle',\n    SettlementEnquiry: 'SettlementEnquiry',\n    GetLastTransaction: 'GetLastTransaction',\n    Preauth: 'Preauth',\n    AccountVerify: 'AccountVerify'\n};\n\n// <summary>\n// Used as a return in the InitiateTx methods to signify whether \n// the transaction was initiated or not, and a reason to go with it.\n// </summary>\nexport class InitiateTxResult\n{\n    constructor(initiated, message)\n    {\n        // <summary>\n        // Whether the tx was initiated.\n        // When true, you can expect updated to your registered callback.\n        // When false, you can retry calling the InitiateX method.\n        // </summary>\n        this.Initiated = initiated;\n\n        // <summary>\n        // Text that gives reason for the Initiated flag, especially in case of false. \n        // </summary>\n        this.Message = message;\n    }\n}\n\n// <summary>\n// Used as a return in calls mid transaction to let you know\n// whether the call was valid or not.\n// These attributes work for COM interop.\n// </summary>\nexport class MidTxResult\n{\n    // <summary>\n    // This default stucture works for COM interop.\n    // </summary>\n    constructor(valid, message)\n    {\n        this.Valid = valid;\n        this.Message = message;\n    }\n}    \n\n// <summary>\n// Represents the State during a TransactionFlow\n// </summary>\nexport class TransactionFlowState\n{\n    constructor(posRefId, type, amountCents, message, msg)\n    {\n        // <summary>\n        //  The id given to this transaction\n        // </summary>\n        this.PosRefId   = posRefId;\n        this.Id         = posRefId; // obsolete, but let's maintain it for now, to mean same as PosRefId.\n\n        // <summary>\n        // Purchase/Refund/Settle/...\n        // </summary>\n        this.Type = type;\n\n        // <summary>\n        // A text message to display on your Transaction Flow Screen\n        // </summary>\n        this.DisplayMessage = msg;\n\n        // <summary>\n        // Amount in cents for this transaction\n        // </summary>\n        this.AmountCents = amountCents;\n\n        // <summary>\n        // Whther the request has been sent to the EFTPOS yet or not.\n        // In the PairedConnecting state, the transaction is initiated\n        // but the request is only sent once the connection is recovered.\n        // </summary>\n        this.RequestSent = false;\n\n        // <summary>\n        // The time when the request was sent to the EFTPOS.\n        // </summary>\n        this.RequestTime = null;\n                \n        // <summary>\n        // The time when we last asked for an update, including the original request at first\n        // </summary>\n        this.LastStateRequestTime = null;\n        \n        // <summary>\n        // The id of the last glt request message that was sent. used to match with the response.\n        // </summary>\n        this.LastGltRequestId = null;\n\n        // <summary>\n        // Whether we're currently attempting to Cancel the transaction.\n        // </summary>\n        this.AttemptingToCancel = null;\n    \n        // <summary>\n        // When this flag is on, you need to display the dignature accept/decline buttons in your \n        // transaction flow screen.\n        // </summary>\n        this.AwaitingSignatureCheck = false;\n\n        // <summary>\n        // When this flag is on, you need to show your user the phone number to call to get the authorisation code.\n        // Then you need to provide your user means to enter that given code and submit it via SubmitAuthCode().\n        // </summary>\n        this.AwaitingPhoneForAuth = null;\n\n        // <summary>\n        // Whether this transaction flow is over or not.\n        // </summary>\n        this.Finished = false;\n\n        // <summary>\n        // The success state of this transaction. Starts off as Unknown.\n        // When finished, can be Success, Failed OR Unknown.\n        // </summary>\n        this.Success = SuccessState.Unknown;\n\n        // <summary>\n        // The response at the end of the transaction. \n        // Might not be present in all edge cases.\n        // You can then turn this Message into the appropriate structure,\n        // such as PurchaseResponse, RefundResponse, etc\n        // </summary>\n        this.Response = null;\n\n        // <summary>\n        // The message the we received from EFTPOS that told us that signature is required.\n        // </summary>\n        this.SignatureRequiredMessage = null;\n    \n        // <summary>\n        // The message the we received from EFTPOS that told us that Phone For Auth is required.\n        // </summary>\n        this.PhoneForAuthRequiredMessage = null;\n\n        // <summary>\n        // The time when the cancel attempt was made.\n        // </summary>\n        this.CancelAttemptTime = null;\n\n        // <summary>\n        // The request message that we are sending/sent to the server.\n        // </summary>\n        this.Request = message;\n\n        // <summary>\n        // Whether we're currently waiting for a Get Last Transaction Response to get an update. \n        // </summary>\n        this.AwaitingGltResponse = null;\n\n        this.GLTResponsePosRefId = null;\n    }\n\n    Sent(msg)\n    {\n        this.RequestSent = true;\n        this.RequestTime = Date.now();\n        this.LastStateRequestTime = Date.now();\n        this.DisplayMessage = msg;\n    }\n\n    Cancelling(msg)\n    {\n        this.AttemptingToCancel = true;\n        this.CancelAttemptTime = Date.now();\n        this.DisplayMessage = msg;\n    }\n\n    CancelFailed(msg)\n    {\n        this.AttemptingToCancel = false;\n        this.DisplayMessage = msg;\n    }\n\n    CallingGlt(gltRequestId)\n    {\n        this.AwaitingGltResponse = true;\n        this.LastStateRequestTime = Date.now();\n        this.LastGltRequestId = gltRequestId;\n    }\n\n    GotGltResponse()\n    {\n        this.AwaitingGltResponse = false;\n    }\n    \n    Failed(response, msg)\n    {\n        this.Success = SuccessState.Failed;\n        this.Finished = true;\n        this.Response = response;\n        this.DisplayMessage = msg;\n    }\n\n    SignatureRequired(spiMessage, msg)\n    {\n        this.SignatureRequiredMessage = spiMessage;\n        this.AwaitingSignatureCheck = true;\n        this.DisplayMessage = msg;\n    }\n\n    SignatureResponded(msg)\n    {\n        this.AwaitingSignatureCheck = false;\n        this.DisplayMessage = msg;\n    }\n    \n    PhoneForAuthRequired(spiMessage, msg)\n    {\n        this.PhoneForAuthRequiredMessage = spiMessage;\n        this.AwaitingPhoneForAuth = true;\n        this.DisplayMessage = msg;\n    }\n    \n    AuthCodeSent(msg)\n    {\n        this.AwaitingPhoneForAuth = false;\n        this.DisplayMessage = msg;\n    }\n\n    Completed(state, response, msg)\n    {\n        this.Success = state;\n        this.Response = response;\n        this.Finished = true;\n        this.AttemptingToCancel = false;\n        this.AwaitingGltResponse = false;\n        this.AwaitingSignatureCheck = false;\n        this.AwaitingPhoneForAuth = false;\n        this.DisplayMessage = msg;\n    }\n\n    UnknownCompleted(msg)\n    {\n        this.Success = SuccessState.Unknown;\n        this.Response = null;\n        this.Finished = true;\n        this.AttemptingToCancel = false;\n        this.AwaitingGltResponse = false;\n        this.AwaitingSignatureCheck = false;\n        this.AwaitingPhoneForAuth = false;\n        this.DisplayMessage = msg;\n    }\n}\n\n// <summary>\n// Used as a return in the SubmitAuthCode method to signify whether Code is valid\n// </summary>\nexport class SubmitAuthCodeResult\n{\n    constructor(validFormat, message)\n    {\n        this.ValidFormat = validFormat;\n\n        // <summary>\n        // Text that gives reason for Invalidity\n        // </summary>\n        this.Message = message;\n    }\n}\n\nexport class SpiConfig\n{\n    constructor() {\n        this.PrintMerchantCopy = false;\n        this.PromptForCustomerCopyOnEftpos = false;\n        this.SignatureFlowOnEftpos = false;\n\n        this.EnabledPrintMerchantCopy = false;\n        this.EnabledPromptForCustomerCopyOnEftpos = false;\n        this.EnabledSignatureFlowOnEftpos = false;\n    }\n\n    AddReceiptConfig(messageData)\n    {\n        if (this.PromptForCustomerCopyOnEftpos && this.EnabledPromptForCustomerCopyOnEftpos)\n        {\n            messageData.prompt_for_customer_copy = this.PromptForCustomerCopyOnEftpos;\n        }\n        if (this.SignatureFlowOnEftpos && this.EnabledSignatureFlowOnEftpos)\n        {\n            messageData.print_for_signature_required_transactions = this.SignatureFlowOnEftpos;\n        }\n        if (this.PrintMerchantCopy && this.EnabledPrintMerchantCopy)\n        {\n            messageData.print_merchant_copy = this.PrintMerchantCopy;\n        }\n        return messageData;\n    }\n\n    ToString()\n    {\n        return `PromptForCustomerCopyOnEftpos:${this.PromptForCustomerCopyOnEftpos} SignatureFlowOnEftpos:${this.SignatureFlowOnEftpos} PrintMerchantCopy: ${this.PrintMerchantCopy}`;\n    }\n}\n\nexport class TransactionOptions\n{\n    constructor() {\n        this._customerReceiptHeader = \"\";\n        this._customerReceiptFooter = \"\";\n        this._merchantReceiptHeader = \"\";\n        this._merchantReceiptFooter = \"\";\n    }\n\n    SetCustomerReceiptHeader(customerReceiptHeader)\n    {\n        this._customerReceiptHeader = customerReceiptHeader;\n    }\n\n    SetCustomerReceiptFooter(customerReceiptFooter)\n    {\n        this._customerReceiptFooter = customerReceiptFooter;\n    }\n    SetMerchantReceiptHeader(merchantReceiptHeader)\n    {\n        this._merchantReceiptHeader = merchantReceiptHeader;\n    }\n    SetMerchantReceiptFooter(merchantReceiptFooter)\n    {\n        this._merchantReceiptFooter = merchantReceiptFooter;\n    }\n    AddOptions(messageData)\n    {\n        messageData.customer_receipt_header = this._customerReceiptHeader;\n        messageData.customer_receipt_footer = this._customerReceiptFooter;\n        messageData.merchant_receipt_header = this._merchantReceiptHeader;\n        messageData.merchant_receipt_footer = this._merchantReceiptFooter;\n\n        return messageData;\n    }\n}","import {RequestIdHelper} from './RequestIdHelper';\nimport {BillPayment, PayAtTableConfig, PaymentHistoryEntry, BillRetrievalResult, BillStatusResponse} from './PayAtTable';\n\nexport class SpiPayAtTable\n{  \n    constructor(spi)\n    {\n        this._spi = spi;\n        this._log = console;\n\n        this.Config = Object.assign(new PayAtTableConfig(), {\n            PayAtTabledEnabled: true,\n            OperatorIdEnabled: true,\n            AllowedOperatorIds: [],\n            EqualSplitEnabled: true,\n            SplitByAmountEnabled: true,\n            SummaryReportEnabled: true,\n            TippingEnabled: true,\n            LabelOperatorId: \"Operator ID\",\n            LabelPayButton: \"Pay at Table\",\n            LabelTableId: \"Table Number\",\n            TableRetrievalEnabled: true\n        });\n    }\n\n    // <summary>\n    // This delegate will be called when the Eftpos needs to know the current state of a bill for a table. \n    // <para />\n    // Parameters:<para />\n    // billId - The unique identifier of the bill. If empty, it means that the PayAtTable flow on the Eftpos is just starting, and the lookup is by tableId.<para />\n    // tableId - The identifier of the table that the bill is for. <para />\n    // operatorId - The id of the operator entered on the eftpos. <para />\n    // <para />\n    // Return:<para />\n    // You need to return the current state of the bill.\n    // </summary>\n    GetBillStatus(billId, tableId, operatorId, paymentFlowStarted) {\n        throw new Error('Method not implemented. Please overwrite this method in your POS');\n    }\n\n    // Abstract method, must implement in POS system\n    BillPaymentReceived(billPayment, updatedBillData) {\n        throw new Error('Method not implemented. Please overwrite this method in your POS');\n    }\n\n    GetOpenTables(operatorId) {\n        throw new Error('Method not implemented. Please overwrite this method in your POS');\n    }\n\n    BillPaymentFlowEnded(message) {\n        throw new Error('Method not implemented. Please overwrite this method in your POS');\n    }\n\n    PushPayAtTableConfig()\n    {\n        this._spi._send(this.Config.ToMessage(RequestIdHelper.Id(\"patconf\")));\n    } \n    \n    _handleGetBillDetailsRequest(m)\n    {\n        var operatorId = m.Data[\"operator_id\"];\n        var tableId = m.Data[\"table_id\"];\n        var paymentFlowStarted = m.Data[\"payment_flow_started\"];\n\n        // Ask POS for Bill Details for this tableId, inluding encoded PaymentData\n        return Promise.resolve(this.GetBillStatus(\"\", tableId, operatorId, paymentFlowStarted)).then(billStatus => {\n            billStatus.TableId = tableId;\n            if (billStatus.TotalAmount <= 0)\n            {\n              this._log.info(\"Table has 0 total amount. not sending it to eftpos.\");\n              billStatus.Result = BillRetrievalResult.INVALID_TABLE_ID;\n            }\n        \n            this._spi._send(billStatus.ToMessage(m.Id));\n        })\n    }\n\n    _handleBillPaymentAdvice(m)\n    {\n        var billPayment = new BillPayment(m);\n        \n        // Ask POS for Bill Details, inluding encoded PaymentData\n        return Promise.resolve(this.GetBillStatus(billPayment.BillId, billPayment.TableId, billPayment.OperatorId, billPayment.PaymentFlowStarted)).then(existingBillStatus => {\n            if (existingBillStatus.Result != BillRetrievalResult.SUCCESS)\n            {\n                this._log.warn(\"Could not retrieve Bill Status for Payment Advice. Sending Error to Eftpos.\");\n                this._spi._send(existingBillStatus.ToMessage(m.Id));\n            }\n                        \n            var existingPaymentHistory = existingBillStatus.getBillPaymentHistory();\n   \n            var foundExistingEntry = existingPaymentHistory.find(phe => phe.GetTerminalRefId() == billPayment.PurchaseResponse.GetTerminalReferenceId());\n            if (foundExistingEntry)\n            {\n                // We have already processed this payment.\n                // perhaps Eftpos did get our acknowledgement.\n                // Let's update Eftpos.\n                this._log.warn(\"Had already received this bill_paymemnt advice from eftpos. Ignoring.\");\n                this._spi._send(existingBillStatus.ToMessage(m.Id));\n                return;\n            }\n\n            // Let's add the new entry to the history\n            var updatedHistoryEntries = existingPaymentHistory;\n            updatedHistoryEntries.push(\n                new PaymentHistoryEntry(billPayment.PaymentType.toLowerCase(), billPayment.PurchaseResponse.ToPaymentSummary())\n            );\n            \n            var updatedBillData = BillStatusResponse.ToBillData(updatedHistoryEntries);\n\n            // Advise POS of new payment against this bill, and the updated BillData to Save.\n            Promise.resolve(this.BillPaymentReceived(billPayment, updatedBillData)).then(updatedBillStatus => {\n\n                // Just in case client forgot to set these:\n                updatedBillStatus.BillId = billPayment.BillId;\n                updatedBillStatus.TableId = billPayment.TableId;\n\n                if (updatedBillStatus.Result != BillRetrievalResult.SUCCESS)\n                {\n                  this._log.warn(\"POS Errored when being Advised of Payment. Letting EFTPOS know, and sending existing bill data.\");\n                  updatedBillStatus.BillData = existingBillStatus.BillData;\n                }\n                else\n                {\n                  updatedBillStatus.BillData = updatedBillData;\n                }\n    \n                this._spi._send(updatedBillStatus.ToMessage(m.Id));\n            })\n        })\n    }\n    \n    _handleGetTableConfig(m)\n    {\n        this._spi._send(this.Config.ToMessage(m.Id));\n    }\n\n    _handleGetOpenTablesRequest(m)\n    {\n        var operatorId = m.Data[\"operator_id\"];\n\n        // Ask POS for Bill Details for this tableId, inluding encoded PaymentData\n        var openTablesResponse = this.GetOpenTables(operatorId); // JSON or string?\n        if (openTablesResponse.TableData.length <= 0)\n        {\n            this._log.info(\"There is no open table.\");\n        }\n\n        this._spi._send(openTablesResponse.ToMessage(m.Id));\n    }\n\n    _handleBillPaymentFlowEnded(m)\n    {\n        this.BillPaymentFlowEnded(m);\n    }\n}\n","import {\n    PreauthEvents,\n    AccountVerifyRequest, \n    PreauthOpenRequest, \n    PreauthTopupRequest, \n    PreauthPartialCancellationRequest, \n    PreauthExtendRequest,\n    PreauthCompletionRequest,\n    PreauthCancelRequest} from './Preauth';\n\n\nimport {TransactionFlowState, TransactionType, InitiateTxResult, SpiStatus, SpiFlow, SpiConfig, TransactionOptions} from './SpiModels';\n\nexport class SpiPreauth\n{\n    constructor(spi)\n    {\n        this._spi = spi;\n        this._log = console;\n\n        this.Config = new SpiConfig();\n    }\n\n    InitiateAccountVerifyTx(posRefId)\n    {\n        var verifyMsg = new AccountVerifyRequest(posRefId).ToMessage();\n\n        var tfs = new TransactionFlowState(\n            posRefId, TransactionType.AccountVerify, 0, verifyMsg,\n            \"Waiting for EFTPOS connection to make account verify request\");\n        var sentMsg = \"Asked EFTPOS to verify account\";\n        return this._initiatePreauthTx(tfs, sentMsg);\n    }\n    \n    InitiateOpenTx(posRefId, amountCents, options = new TransactionOptions())\n    {\n        var msg = Object.assign(new PreauthOpenRequest(amountCents, posRefId),\n        {\n            Config: this.Config,\n            Options: options\n        }).ToMessage();\n\n        var tfs = new TransactionFlowState(\n            posRefId, TransactionType.Preauth, amountCents, msg,\n            `Waiting for EFTPOS connection to make preauth request for ${(amountCents / 100.0).toFixed(2)}`);\n        var sentMsg = `Asked EFTPOS to create preauth for ${(amountCents / 100.0).toFixed(2)}`;\n        return this._initiatePreauthTx(tfs, sentMsg);\n    }\n\n    InitiateTopupTx(posRefId, preauthId, amountCents, options = new TransactionOptions())\n    {\n        var msg = Object.assign(new PreauthTopupRequest(preauthId, amountCents, posRefId),\n        {\n            Config: this.Config,\n            Options: options\n        }).ToMessage();\n\n        var tfs = new TransactionFlowState(\n            posRefId, TransactionType.Preauth, amountCents, msg,\n            `Waiting for EFTPOS connection to make preauth topup request for ${(amountCents / 100.0).toFixed(2)}`);\n        var sentMsg = `Asked EFTPOS to make preauth topup for ${(amountCents / 100.0).toFixed(2)}`;\n        return this._initiatePreauthTx(tfs, sentMsg);\n    }\n\n    InitiatePartialCancellationTx(posRefId, preauthId, amountCents, options = new TransactionOptions())\n    {\n        var msg = Object.assign(new PreauthPartialCancellationRequest(preauthId, amountCents, posRefId),\n        {\n            Config: this.Config,\n            Options: options\n        }).ToMessage();\n\n        var tfs = new TransactionFlowState(\n            posRefId, TransactionType.Preauth, amountCents, msg,\n            `Waiting for EFTPOS connection to make preauth partial cancellation request for ${(amountCents / 100.0).toFixed(2)}`);\n        var sentMsg = `Asked EFTPOS to make preauth partial cancellation for ${(amountCents / 100.0).toFixed(2)}`;\n        return this._initiatePreauthTx(tfs, sentMsg);\n    }\n\n    InitiateExtendTx(posRefId, preauthId, options = new TransactionOptions())\n    {\n        var msg = Object.assign(new PreauthExtendRequest(preauthId, posRefId),\n        {\n            Config: this.Config,\n            Options: options\n        }).ToMessage();\n\n        var tfs = new TransactionFlowState(\n            posRefId, TransactionType.Preauth, 0, msg,\n            \"Waiting for EFTPOS connection to make preauth Extend request\");\n        var sentMsg = \"Asked EFTPOS to make preauth Extend request\";\n        return this._initiatePreauthTx(tfs, sentMsg);\n    }\n\n    InitiateCompletionTx(posRefId, preauthId, amountCents, surchargeAmount = 0, options = new TransactionOptions())\n    {\n        var msg = Object.assign(new PreauthCompletionRequest(preauthId, amountCents, posRefId),\n        {\n            Config: this.Config,\n            SurchargeAmount: surchargeAmount,\n            Options: options\n        }).ToMessage();\n\n        var tfs = new TransactionFlowState(\n            posRefId, TransactionType.Preauth, amountCents, msg,\n            `Waiting for EFTPOS connection to make preauth completion request for ${(amountCents / 100.0).toFixed(2)}`);\n        var sentMsg = `Asked EFTPOS to make preauth completion for ${(amountCents / 100.0).toFixed(2)}`;\n        return this._initiatePreauthTx(tfs, sentMsg);\n    }\n\n    InitiateCancelTx(posRefId, preauthId, options = new TransactionOptions())\n    {\n        var msg = Object.assign(new PreauthCancelRequest(preauthId, posRefId),\n        {\n            Config: this.Config,\n            Options: options\n        }).ToMessage();\n\n        var tfs = new TransactionFlowState(\n            posRefId, TransactionType.Preauth, 0, msg,\n            \"Waiting for EFTPOS connection to make preauth cancellation request\");\n        var sentMsg = \"Asked EFTPOS to make preauth cancellation request\";\n        return this._initiatePreauthTx(tfs, sentMsg);\n    }\n\n    _initiatePreauthTx(tfs, sentMsg)\n    {\n        if (this._spi.CurrentStatus == SpiStatus.Unpaired) return new InitiateTxResult(false, \"Not Paired\");\n\n        if (this._spi.CurrentFlow != SpiFlow.Idle) return new InitiateTxResult(false, \"Not Idle\");\n\n        this._spi.CurrentFlow = SpiFlow.Transaction;\n        this._spi.CurrentTxFlowState = tfs;\n        if (this._spi._send(tfs.Request))\n        {\n            this._spi.CurrentTxFlowState.Sent(sentMsg);\n        }\n    \n        document.dispatchEvent(new CustomEvent('TxFlowStateChanged', {detail: this._spi.CurrentTxFlowState}));\n        return new InitiateTxResult(true, \"Preauth Initiated\");\n    }\n\n    _handlePreauthMessage(m)\n    {\n        switch (m.EventName)\n        {\n            case PreauthEvents.AccountVerifyResponse:\n                this._handleAccountVerifyResponse(m);\n                break;\n            case PreauthEvents.PreauthOpenResponse:\n            case PreauthEvents.PreauthTopupResponse:\n            case PreauthEvents.PreauthPartialCancellationResponse:\n            case PreauthEvents.PreauthExtendResponse:\n            case PreauthEvents.PreauthCompleteResponse:\n            case PreauthEvents.PreauthCancellationResponse:\n                this._handlePreauthResponse(m);\n                break;\n            default:\n                this._log.info(`I don't Understand Preauth Event: ${m.EventName}, ${m.Data}. Perhaps I have not implemented it yet.`);\n                break;\n        }\n    }\n\n    _handleAccountVerifyResponse(m)\n    {\n        var incomingPosRefId = m.Data.pos_ref_id;\n        var currentTxFlowState = this._spi.CurrentTxFlowState;\n        if (this._spi.CurrentFlow != SpiFlow.Transaction || currentTxFlowState.Finished || !currentTxFlowState.PosRefId === incomingPosRefId)\n        {\n            this._log.info(`Received Account Verify response but I was not waiting for one. Incoming Pos Ref ID: ${incomingPosRefId}`);\n            return;\n        }\n        // TH-1A, TH-2A\n\n        currentTxFlowState.Completed(m.GetSuccessState(), m, \"Account Verify Transaction Ended.\");\n        // TH-6A, TH-6E\n        \n        document.dispatchEvent(new CustomEvent('TxFlowStateChanged', {detail: this._spi.CurrentTxFlowState}));\n    }\n    \n    _handlePreauthResponse(m)\n    {\n        var incomingPosRefId = m.Data.pos_ref_id;\n        var currentTxFlowState = this._spi.CurrentTxFlowState;\n        if (this._spi.CurrentFlow != SpiFlow.Transaction || currentTxFlowState.Finished || !currentTxFlowState.PosRefId === incomingPosRefId)\n        {\n            this._log.info(`Received Preauth response but I was not waiting for one. Incoming Pos Ref ID: ${incomingPosRefId}`);\n            return;\n        }\n        // TH-1A, TH-2A\n\n        currentTxFlowState.Completed(m.GetSuccessState(), m, \"Preauth Transaction Ended.\");\n        // TH-6A, TH-6E\n        \n        document.dispatchEvent(new CustomEvent('TxFlowStateChanged', {detail: this._spi.CurrentTxFlowState}));\n    }\n\n    static IsPreauthEvent(eventName)\n    {\n        return eventName.lastIndexOf(\"preauth\",0) === 0 \n                || eventName == PreauthEvents.PreauthCompleteResponse\n                || eventName == PreauthEvents.PreauthCompleteRequest\n                || eventName == PreauthEvents.AccountVerifyRequest\n                || eventName == PreauthEvents.AccountVerifyResponse;\n    }\n}\n","import {Events, Message} from './Messages';\nimport {RequestIdHelper} from './RequestIdHelper';\n\nexport class TerminalStatusRequest\n{\n    ToMessage()\n    {\n        var data = {};\n\n        return new Message(RequestIdHelper.Id(\"trmnl\"), Events.TerminalStatusRequest, data, true);\n    }\n}\n\nexport class TerminalStatusResponse\n{\n    constructor(m)\n    {\n        this._m = m;\n    }\n    GetStatus()\n    {\n        return this._m.Data.status;\n    }\n    GetBatteryLevel()\n    {\n        return parseInt(this._m.Data.battery_level,10);\n    }\n    IsCharging()\n    {\n        return !!this._m.Data.charging;\n    }\n}\n\nexport class TerminalBattery\n{\n    constructor(m)\n    {\n        this.BatteryLevel = parseInt(m.Data.battery_level,10);\n    }\n}\n","module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","import {\n    Spi, \n    Logger, \n    Secrets, \n    TransactionOptions,\n    TransactionType,\n    PrintingResponse,\n    RefundResponse,\n    TerminalStatusResponse,\n    TerminalBattery,\n    CashoutOnlyResponse,\n    MotoPurchaseResponse,\n    GetLastTransactionResponse,\n    PurchaseResponse,\n    PreauthResponse,\n    Settlement,\n    SuccessState,\n    RequestIdHelper,\n    SpiFlow,\n    SpiStatus} from '../lib/spi-client-js';\n// <summary>\n// NOTE: THIS PROJECT USES THE 2.1.x of the SPI Client Library\n//  \n// This is your POS. To integrate with SPI, you need to instantiate a Spi object\n// and interact with it.\n// \n// Primarily you need to implement 3 things.\n// 1. Settings Screen\n// 2. Pairing Flow Screen\n// 3. Transaction Flow screen\n// \n// To see logs from spi, check the console\n// </summary>\nexport class MotelPos\n{\n    constructor(log, receipt, flow_msg) \n    {\n        this._spi = null;\n        this._spiPreauth = null;\n        this._posId = \"MOTELPOS1\";\n        this._eftposAddress = \"192.168.1.1\";\n        this._spiSecrets = null;\n        this._version = '2.6.0';\n        this._serialNumber = \"\";\n        this._rcpt_from_eftpos = false;\n        this._sig_flow_from_eftpos = false;\n        this._print_merchant_copy = false;\n\n        this._log = log;\n        this._receipt = receipt;\n        this._flow_msg = flow_msg;\n    }\n\n    Start()\n    {\n        this._log.info(\"Starting MotelPos...\");\n        this.LoadPersistedState();\n\n        // region Spi Setup\n        // This is how you instantiate Spi.\n        this._spi = new Spi(this._posId, this._serialNumber, this._eftposAddress, this._spiSecrets); // It is ok to not have the secrets yet to start with.\n        this._spi.Config.PromptForCustomerCopyOnEftpos = this._rcpt_from_eftpos;\n        this._spi.Config.SignatureFlowOnEftpos = this._sig_flow_from_eftpos;\n        this._spi.Config.PrintMerchantCopy = this._print_merchant_copy;\n\n        this._spi.SetPosInfo(\"assembly\", this._version);\n\n        document.addEventListener('StatusChanged', (e) => this.OnSpiStatusChanged(e.detail)); \n        document.addEventListener('PairingFlowStateChanged', (e) => this.OnPairingFlowStateChanged(e.detail)); \n        document.addEventListener('SecretsChanged', (e) => this.OnSecretsChanged(e.detail)); \n        document.addEventListener('TxFlowStateChanged', (e) => this.OnTxFlowStateChanged(e.detail)); \n\n        this._spi.PrintingResponse = this.HandlePrintingResponse.bind(this);\n        this._spi.TerminalStatusResponse = this.HandleTerminalStatusResponse.bind(this);\n        this._spi.BatteryLevelChanged = this.HandleBatteryLevelChanged.bind(this);\n\n        this._spiPreauth = this._spi.EnablePreauth();\n        this._spi.Start();\n\n        // And Now we just accept user input and display to the user what is happening.\n\n        this._flow_msg.Clear();\n        this._flow_msg.Info(\"# Welcome to MotelPos !\");\n        \n        this.PrintStatusAndActions();\n        this.AcceptUserInput();\n    }\n\n    OnTxFlowStateChanged(txState)\n    {\n        this._flow_msg.Clear();\n        this.PrintStatusAndActions();\n        this._flow_msg.Info(\"> \");\n    }\n\n    OnPairingFlowStateChanged(pairingFlowState)\n    {\n        this._flow_msg.Clear();\n        this.PrintStatusAndActions();\n        this._flow_msg.Info(\"> \");\n    }\n\n    OnSecretsChanged(secrets)\n    {\n        this._spiSecrets = secrets;\n        if (secrets != null)\n        {\n            this._log.info(`# I Have Secrets: ${secrets.EncKey}${secrets.HmacKey}. Persist them Securely.`);\n            localStorage.setItem('EncKey', secrets.EncKey);\n            localStorage.setItem('HmacKey', secrets.HmacKey);\n        }\n        else\n        {\n            this._log.info(`# I Have Lost the Secrets, i.e. Unpaired. Destroy the persisted secrets.`);\n            localStorage.removeItem('EncKey');\n            localStorage.removeItem('HmacKey');\n        }\n    }\n\n    // <summary>\n    // Called when we received a Status Update i.e. Unpaired/PairedConnecting/PairedConnected\n    // </summary>\n    // <param name=\"sender\"></param>\n    // <param name=\"spiStatus\"></param>\n    OnSpiStatusChanged(spiStatus)\n    {\n        this._log.clear();\n        this._log.info(`# --> SPI Status Changed: ${spiStatus}`);\n        this.PrintStatusAndActions();\n    }\n\n\n    HandlePrintingResponse(message)\n    {\n        this._flow_msg.Clear();\n        var printingResponse = new PrintingResponse(message);\n\n        if (printingResponse.isSuccess())\n        {\n            this._flow_msg.Info(\"# --> Printing Response: Printing Receipt successful\");\n        }\n        else\n        {\n            this._flow_msg.Info(\"# --> Printing Response:  Printing Receipt failed: reason = \" + printingResponse.getErrorReason() + \", detail = \" + printingResponse.getErrorDetail());\n        }\n\n        this._spi.AckFlowEndedAndBackToIdle();\n        this.PrintStatusAndActions();\n    }\n\n    HandleTerminalStatusResponse(message)\n    {\n        this._flow_msg.Clear();\n        var terminalStatusResponse = new TerminalStatusResponse(message);\n        this._flow_msg.Info(\"# Terminal Status Response #\");\n        this._flow_msg.Info(\"# Status: \" + terminalStatusResponse.GetStatus());\n        this._flow_msg.Info(\"# Battery Level: \" + terminalStatusResponse.GetBatteryLevel() + \"%\");\n        this._flow_msg.Info(\"# Charging: \" + terminalStatusResponse.IsCharging());\n        this._spi.AckFlowEndedAndBackToIdle();\n        this.PrintStatusAndActions();\n    }\n\n    HandleBatteryLevelChanged(message)\n    {\n        this._log.clear();\n        var terminalBattery = new TerminalBattery(message);\n        this._flow_msg.Info(\"# Battery Level Changed #\");\n        this._flow_msg.Info(\"# Battery Level: \" + terminalBattery.BatteryLevel + \"%\");\n        this._spi.AckFlowEndedAndBackToIdle();\n        this.PrintStatusAndActions();\n    }\n\n    PrintStatusAndActions()\n    {\n        this.PrintFlowInfo();\n\n        this.PrintActions();\n\n        this.PrintPairingStatus();\n    }\n\n    PrintFlowInfo()\n    {\n        switch (this._spi.CurrentFlow)\n        {\n            case SpiFlow.Pairing:\n                var pairingState = this._spi.CurrentPairingFlowState;\n                this._flow_msg.Info(\"### PAIRING PROCESS UPDATE ###\");\n                this._flow_msg.Info(`# ${pairingState.Message}`);\n                this._flow_msg.Info(`# Finished? ${pairingState.Finished}`);\n                this._flow_msg.Info(`# Successful? ${pairingState.Successful}`);\n                this._flow_msg.Info(`# Confirmation Code: ${pairingState.ConfirmationCode}`);\n                this._flow_msg.Info(`# Waiting Confirm from Eftpos? ${pairingState.AwaitingCheckFromEftpos}`);\n                this._flow_msg.Info(`# Waiting Confirm from POS? ${pairingState.AwaitingCheckFromPos}`);\n                break;\n\n            case SpiFlow.Transaction:\n                var txState = this._spi.CurrentTxFlowState;\n                this._flow_msg.Info(\"### TX PROCESS UPDATE ###\");\n                this._flow_msg.Info(`# ${txState.DisplayMessage}`);\n                this._flow_msg.Info(`# PosRefId: ${txState.PosRefId}`);\n                this._flow_msg.Info(`# Type: ${txState.Type}`);\n                this._flow_msg.Info(`# Request Amount: $${(txState.AmountCents / 100.0).toFixed(2)}`);\n                this._flow_msg.Info(`# Waiting For Signature: ${txState.AwaitingSignatureCheck}`);\n                this._flow_msg.Info(`# Attempting to Cancel : ${txState.AttemptingToCancel}`);\n                this._flow_msg.Info(`# Finished: ${txState.Finished}`);\n                this._flow_msg.Info(`# Success: ${txState.Success}`);\n\n                if (txState.AwaitingSignatureCheck)\n                {\n                    // We need to print the receipt for the customer to sign.\n                    this._flow_msg.Info(`# RECEIPT TO PRINT FOR SIGNATURE`);\n                    this._receipt.Info(txState.SignatureRequiredMessage.GetMerchantReceipt().trim());\n                }\n\n                if (txState.Finished)\n                {\n                   switch(txState.Success) \n                   {\n                        case SuccessState.Success:\n                            switch (txState.Type)\n                            {\n                                case TransactionType.Preauth:\n                                    this._flow_msg.Info(\"# PREAUTH RESULT - SUCCESS\");\n                                    var preauthResponse = new PreauthResponse(txState.Response);\n                                    this._flow_msg.Info(\"# PREAUTH-ID:\", preauthResponse.PreauthId);\n                                    this._flow_msg.Info(\"# NEW BALANCE AMOUNT:\", preauthResponse.GetBalanceAmount());\n                                    this._flow_msg.Info(\"# PREV BALANCE AMOUNT:\", preauthResponse.GetPreviousBalanceAmount());\n                                    this._flow_msg.Info(\"# COMPLETION AMOUNT:\", preauthResponse.GetCompletionAmount());\n\n                                    var details = preauthResponse.Details;\n                                    this._flow_msg.Info(\"# Response:\", details.GetResponseText());\n                                    this._flow_msg.Info(\"# RRN:\", details.GetRRN());\n                                    this._flow_msg.Info(\"# Scheme:\", details.SchemeName);\n                                    this._flow_msg.Info(\"# Customer Receipt:\");\n                                    this._receipt.Info(!details.WasCustomerReceiptPrinted() ? details.GetCustomerReceipt().trim() : \"# PRINTED FROM EFTPOS\");\n                                    break;\n                                case TransactionType.AccountVerify:\n                                    this._flow_msg.Info(\"# ACCOUNT VERIFICATION SUCCESS\");\n                                    var acctVerifyResponse = new AccountVerifyResponse(txState.Response);\n                                    var details = acctVerifyResponse.Details;\n                                    this._flow_msg.Info(\"# Response:\", details.GetResponseText());\n                                    this._flow_msg.Info(\"# RRN:\", details.GetRRN());\n                                    this._flow_msg.Info(\"# Scheme:\", details.SchemeName);\n                                    this._flow_msg.Info(\"# Merchant Receipt:\");\n                                    this._receipt.Info(!details.WasCustomerReceiptPrinted() ? details.GetCustomerReceipt().trim() : \"# PRINTED FROM EFTPOS\");\n                                    break;\n                                default:\n                                    this._flow_msg.Info(\"# MOTEL POS DOESN'T KNOW WHAT TO DO WITH THIS TX TYPE WHEN IT SUCCEEDS\");\n                                    break;\n                            }\n                        break;\n                        case SuccessState.Failed:\n                            switch (txState.Type)\n                            {\n                                case TransactionType.Preauth:\n                                    this._flow_msg.Info(\"# PREAUTH TRANSACTION FAILED :(\");\n                                    if (txState.Response != null)\n                                    {\n                                        this._flow_msg.Info(\"# Error:\", txState.Response.GetError());\n                                        this._flow_msg.Info(\"# Error Detail:\", txState.Response.GetErrorDetail());\n                                        var purchaseResponse = new PurchaseResponse(txState.Response);\n                                        this._flow_msg.Info(\"# Response:\", purchaseResponse.GetResponseText());\n                                        this._flow_msg.Info(\"# RRN:\", purchaseResponse.GetRRN());\n                                        this._flow_msg.Info(\"# Scheme:\", purchaseResponse.SchemeName);\n                                        this._flow_msg.Info(\"# Customer Receipt:\");\n                                        this._receipt.Info(!purchaseResponse.WasCustomerReceiptPrinted() ? purchaseResponse.GetCustomerReceipt().trim() : \"# PRINTED FROM EFTPOS\");\n                                    }\n                                    break;\n                                case TransactionType.AccountVerify:\n                                    this._flow_msg.Info(\"# ACCOUNT VERIFICATION FAILED :(\");\n\n                                    if (txState.Response != null)\n                                    {\n                                        this._flow_msg.Info(\"# Error:\", txState.Response.GetError());\n                                        this._flow_msg.Info(\"# Error Detail:\", txState.Response.GetErrorDetail());\n                                        var acctVerifyResponse = new AccountVerifyResponse(txState.Response);\n                                        var details = acctVerifyResponse.Details;\n                                        this._receipt.Info(!details.WasMerchantReceiptPrinted() ? details.GetMerchantReceipt().trim() : \"# PRINTED FROM EFTPOS\");\n                                    }\n                                    break;\n                                default:\n                                    this._flow_msg.Info(\"# MOTEL POS DOESN'T KNOW WHAT TO DO WITH THIS TX TYPE WHEN IT FAILS\");\n                                    break;\n                            }\n                            break;\n                        case SuccessState.Unknown:\n                            switch (txState.Type)\n                            {\n                                case TransactionType.Preauth:\n                                    this._flow_msg.Info(\"# WE'RE NOT QUITE SURE WHETHER PREAUTH TRANSACTION WENT THROUGH OR NOT:/\");\n                                    this._flow_msg.Info(\"# CHECK THE LAST TRANSACTION ON THE EFTPOS ITSELF FROM THE APPROPRIATE MENU ITEM.\");\n                                    this._flow_msg.Info(\"# IF YOU CONFIRM THAT THE CUSTOMER PAID, CLOSE THE ORDER.\");\n                                    this._flow_msg.Info(\"# OTHERWISE, RETRY THE PAYMENT FROM SCRATCH.\");\n                                    break;\n                                case TransactionType.AccountVerify:\n                                    this._flow_msg.Info(\"# WE'RE NOT QUITE SURE WHETHER ACCOUNT VERIFICATION WENT THROUGH OR NOT:/\");\n                                    this._flow_msg.Info(\"# CHECK THE LAST TRANSACTION ON THE EFTPOS ITSELF FROM THE APPROPRIATE MENU ITEM.\");\n                                    this._flow_msg.Info(\"# IF YOU CONFIRM THAT THE CUSTOMER PAID, CLOSE THE ORDER.\");\n                                    this._flow_msg.Info(\"# OTHERWISE, RETRY THE PAYMENT FROM SCRATCH.\");\n                                    break;\n                                default:\n                                    this._flow_msg.Info(\"# MOTEL POS DOESN'T KNOW WHAT TO DO WITH THIS TX TYPE WHEN IT's UNKNOWN\");\n                                    break;\n                            }\n                            break;\n                    }\n                }\n                break;\n        }\n    }\n\n    PrintActions()\n    {\n        // List of input controls which are enabled / shown for the current application state\n        let inputsEnabled   = [];\n        let statusEl        = document.getElementById('status_indicator');\n        let primaryStatusEl = document.getElementById('primary_status');\n        let flowStatusEl    = document.getElementById('flow_status');\n        let flowStatusHeading = document.getElementById('flow_status_heading');\n\n        statusEl.dataset['status']  = this._spi.CurrentStatus;\n        statusEl.dataset['flow']    = this._spi.CurrentFlow;\n        primaryStatusEl.innerText   = this._spi.CurrentStatus;\n        flowStatusEl.innerText      = this._spi.CurrentFlow;\n        flowStatusHeading.innerText = this._spi.CurrentFlow;\n\n        // Available Actions depend on the current status (Unpaired/PairedConnecting/PairedConnected)\n        switch (this._spi.CurrentStatus)\n        {\n            case SpiStatus.Unpaired: //Unpaired...\n                switch (this._spi.CurrentFlow)\n                {\n                    case SpiFlow.Idle: // Unpaired, Idle\n                        inputsEnabled.push('pos_id');\n                        inputsEnabled.push('eftpos_address');\n                        inputsEnabled.push('rcpt_from_eftpos');\n                        inputsEnabled.push('sig_flow_from_eftpos');\n                        inputsEnabled.push('pair');\n                        inputsEnabled.push('save_settings');\n                        break;\n                        \n                    case SpiFlow.Pairing: // Unpaired, PairingFlow\n                        var pairingState = this._spi.CurrentPairingFlowState;\n                        if (pairingState.AwaitingCheckFromPos)\n                        {\n                            inputsEnabled.push('pair_confirm');\n                        }\n                        if (!pairingState.Finished)\n                        {\n                            inputsEnabled.push('pair_cancel');\n                        }\n                        else\n                        {\n                            inputsEnabled.push('ok');\n                        }\n                        break;\n                        \n                    case SpiFlow.Transaction: // Unpaired, TransactionFlow - Should never be the case!\n                    default:\n                        this._log.info(`# .. Unexpected Flow .. ${this._spi.CurrentFlow}`);\n                        break;\n                }\n                break;\n            case SpiStatus.PairedConnecting: // This is still considered as a Paired kind of state, but...\n                // .. we give user the option of changing IP address, just in case the EFTPOS got a new one in the meanwhile\n                inputsEnabled.push('eftpos_address');\n                inputsEnabled.push('rcpt_from_eftpos');\n                inputsEnabled.push('sig_flow_from_eftpos');\n                inputsEnabled.push('save_settings');\n                // .. but otherwise we give the same options as PairedConnected\n                // goto case SpiStatus.PairedConnected;\n\n            case SpiStatus.PairedConnected:\n                switch (this._spi.CurrentFlow)\n                {\n                    case SpiFlow.Idle: // Paired, Idle\n                        inputsEnabled.push('amount_input');\n                        inputsEnabled.push('surcharge_input');\n                        inputsEnabled.push('preauth_ref_input');\n                        inputsEnabled.push('save_settings');\n\n                        inputsEnabled.push('acct_verify');\n                        inputsEnabled.push('preauth_open');\n                        inputsEnabled.push('preauth_topup');\n                        inputsEnabled.push('preauth_topdown');\n                        inputsEnabled.push('preauth_extend');\n                        inputsEnabled.push('preauth_complete');\n                        inputsEnabled.push('preauth_cancel');\n\n                        inputsEnabled.push('unpair');\n                        inputsEnabled.push('rcpt_from_eftpos');\n                        inputsEnabled.push('sig_flow_from_eftpos');\n                        inputsEnabled.push('print_merchant_copy');\n                        break;\n                    case SpiFlow.Transaction: // Paired, Transaction\n                        if (this._spi.CurrentTxFlowState.AwaitingSignatureCheck)\n                        {\n                            inputsEnabled.push('tx_sign_accept');\n                            inputsEnabled.push('tx_sign_decline');\n                        }\n\n                        if (!this._spi.CurrentTxFlowState.Finished && !this._spi.CurrentTxFlowState.AttemptingToCancel)\n                        {\n                            inputsEnabled.push('tx_cancel');\n                        }\n\n                        if(this._spi.CurrentTxFlowState.Finished) \n                        {\n                            inputsEnabled.push('ok');\n                        }\n                                   \n                        break;\n                    case SpiFlow.Pairing: // Paired, Pairing - we have just finished the pairing flow. OK to ack.\n                        inputsEnabled.push('ok');\n                        break;\n                    default:\n                        this._log.info(`# .. Unexpected Flow .. ${this._spi.CurrentFlow}`);\n                        break;\n                }\n                break;\n\n\n            default:\n                this._log.info(`# .. Unexpected State .. ${this._spi.CurrentStatus}`);\n                break;\n        }\n\n        // Configure buttons / inputs\n        let inputs = document.querySelectorAll('.input');\n        for(let i = 0; i < inputs.length; i++) \n        {\n            inputs[i].disabled = true;\n        }\n\n        inputsEnabled.forEach((input) => \n        {\n            let inputEl = document.getElementById(input);\n            if(!inputEl) throw new Error(`Input element not found to enable: ${input}`);\n            inputEl.disabled = false;\n        });\n\n        this._flow_msg.Info();\n    }\n\n    PrintPairingStatus()\n    {\n        this._flow_msg.Info(`# --------------- STATUS ------------------`);\n        this._flow_msg.Info(`# ${this._posId} <-> Eftpos: ${this._eftposAddress} #`);\n        this._flow_msg.Info(`# SPI STATUS: ${this._spi.CurrentStatus}     FLOW: ${this._spi.CurrentFlow} #`);\n        this._flow_msg.Info(`# SPI CONFIG: ${JSON.stringify(this._spiPreauth.Config)}`);\n        this._flow_msg.Info(`# -----------------------------------------`);\n        this._flow_msg.Info(`# POS: v${this._version} Spi: v${Spi.GetVersion()}`);\n\n    }\n\n    AcceptUserInput()\n    {\n        document.getElementById('save_settings').addEventListener('click', () => {\n\n            if(this._spi.CurrentStatus === SpiStatus.Unpaired && this._spi.CurrentFlow === SpiFlow.Idle) \n            {\n                this._posId         = document.getElementById('pos_id').value;\n                this._eftposAddress = document.getElementById('eftpos_address').value;\n\n                this._spi.SetPosId(this._posId);\n                this._spi.SetEftposAddress(this._eftposAddress);\n\n                localStorage.setItem('pos_id', this._posId);\n                localStorage.setItem('eftpos_address', this._eftposAddress);\n                this._log.info(`Saved settings ${this._posId}:${this._eftposAddress}`);\n            }\n\n            this._spiPreauth.Config.EnabledPromptForCustomerCopyOnEftpos = document.getElementById('rcpt_from_eftpos').checked;\n            this._spiPreauth.Config.EnabledSignatureFlowOnEftpos = document.getElementById('sig_flow_from_eftpos').checked;\n            this._spiPreauth.Config.EnabledPrintMerchantCopy = document.getElementById('print_merchant_copy').checked;\n\n            localStorage.setItem('rcpt_from_eftpos', this._spiPreauth.Config.EnabledPromptForCustomerCopyOnEftpos);\n            localStorage.setItem('sig_flow_from_eftpos', this._spiPreauth.Config.EnabledSignatureFlowOnEftpos);\n            localStorage.setItem('print_merchant_copy', this._spiPreauth.Config.EnabledPrintMerchantCopy);\n\n            this.PrintPairingStatus();\n        });\n\n        document.getElementById('pair').addEventListener('click', () => \n        {\n            this._spi.Pair();\n        });\n\n        document.getElementById('pair_confirm').addEventListener('click', () => \n        {\n            this._spi.PairingConfirmCode();\n        });\n\n        document.getElementById('pair_cancel').addEventListener('click', () => \n        {\n            this._spi.PairingCancel();\n        });\n\n        document.getElementById('unpair').addEventListener('click', () => \n        {\n            this._spi.Unpair();\n        });\n\n        document.getElementById('acct_verify').addEventListener('click', () => \n        {\n            let posRefId    = `actvfy-${new Date().toISOString()}`; \n            let res         = this._spiPreauth.InitiateAccountVerifyTx(posRefId);\n            this._flow_msg.Info(res.Initiated ? \"# Verify Initiated. Will be updated with Progress.\" : `# Could not initiate account verify request: ${res.Message}. Please Retry.`);\n        });\n\n        document.getElementById('preauth_open').addEventListener('click', () => \n        {\n            let amount      = parseInt(document.getElementById('amount').value,10);\n            let posRefId    = `propen-${new Date().toISOString()}`; \n            let res         = this._spiPreauth.InitiateOpenTx(posRefId, amount);\n            this._flow_msg.Info(res.Initiated ? \"# Preauth Initiated. Will be updated with Progress.\" : `# Could not initiate preauth request: ${res.Message}. Please Retry.`);\n        });\n\n        document.getElementById('preauth_topup').addEventListener('click', () => \n        {\n            let amount      = parseInt(document.getElementById('amount').value,10);\n            let preauthId   = document.getElementById('preauth_ref').value; \n            let ref         = `prtopup-${preauthId}-${new Date().toISOString()}`; \n            let res         = this._spiPreauth.InitiateTopupTx(ref, preauthId, amount);\n            this._flow_msg.Info(res.Initiated ? \"# Preauth topup Initiated. Will be updated with Progress.\" : `# Could not initiate preauth topup request: ${res.Message}. Please Retry.`);\n        });\n        \n        document.getElementById('preauth_topdown').addEventListener('click', () => \n        {\n            let amount      = parseInt(document.getElementById('amount').value,10);\n            let preauthId   = document.getElementById('preauth_ref').value; \n            let ref         = `prtopd-${preauthId}-${new Date().toISOString()}`; \n            let res         = this._spiPreauth.InitiatePartialCancellationTx(ref, preauthId, amount);\n            this._flow_msg.Info(res.Initiated ? \"# Preauth topdown Initiated. Will be updated with Progress.\" : `# Could not initiate preauth topdown request: ${res.Message}. Please Retry.`);\n        });\n\n        document.getElementById('preauth_extend').addEventListener('click', () => \n        {\n            let preauthId   = document.getElementById('preauth_ref').value; \n            let ref         = `prext-${preauthId}-${new Date().toISOString()}`; \n            let res         = this._spiPreauth.InitiateExtendTx(ref, preauthId);\n            this._flow_msg.Info(res.Initiated ? \"# Preauth extend Initiated. Will be updated with Progress.\" : `# Could not initiate preauth extend request: ${res.Message}. Please Retry.`);\n        });\n\n        document.getElementById('preauth_cancel').addEventListener('click', () => \n        {\n            let preauthId   = document.getElementById('preauth_ref').value; \n            let ref         = `prcancel-${preauthId}-${new Date().toISOString()}`; \n            let res         = this._spiPreauth.InitiateCancelTx(ref, preauthId);\n            this._flow_msg.Info(res.Initiated ? \"# Preauth cancel Initiated. Will be updated with Progress.\" : `# Could not initiate preauth cancel request: ${res.Message}. Please Retry.`);\n        });\n\n        document.getElementById('preauth_complete').addEventListener('click', () => \n        {\n            let amount      = parseInt(document.getElementById('amount').value,10);\n            let surcharge   = parseInt(document.getElementById('surcharge').value,10);\n            let preauthId   = document.getElementById('preauth_ref').value; \n            let ref         = `prcomp-${preauthId}-${new Date().toISOString()}`; \n            let res         = this._spiPreauth.InitiateCompletionTx(ref, preauthId, amount, surcharge);\n            this._flow_msg.Info(res.Initiated ? \"# Preauth complete Initiated. Will be updated with Progress.\" : `# Could not initiate preauth complete request: ${res.Message}. Please Retry.`);\n        });\n\n        document.getElementById('tx_sign_accept').addEventListener('click', () => \n        {\n            this._spi.AcceptSignature(true);\n        });\n\n        document.getElementById('tx_sign_decline').addEventListener('click', () => \n        {\n            this._spi.AcceptSignature(false);\n        });\n\n        document.getElementById('tx_cancel').addEventListener('click', () => \n        {\n            this._spi.CancelTransaction();\n        });\n\n        document.getElementById('ok').addEventListener('click', () => \n        {\n            this._spi.AckFlowEndedAndBackToIdle();\n            this._flow_msg.Clear();\n            this._flow_msg.innerHTML = \"Select from the options below\";\n            this.PrintStatusAndActions();\n        });\n\n        document.getElementById('ok_cancel').addEventListener('click', () => \n        {\n            this._spi.AckFlowEndedAndBackToIdle();\n            this._log.clear();\n            this._flow_msg.innerHTML = \"Order Cancelled\";\n            this.PrintStatusAndActions();\n        });\n    }\n\n    LoadPersistedState()\n    {\n        if(localStorage.getItem('pos_id')) \n        {\n            this._posId = localStorage.getItem('pos_id');\n            document.getElementById('pos_id').value = this._posId;\n        } \n        else \n        {\n            this._posId = document.getElementById('pos_id').value;\n        }\n\n        if(localStorage.getItem('eftpos_address')) \n        {\n            this._eftposAddress = localStorage.getItem('eftpos_address');\n            document.getElementById('eftpos_address').value = this._eftposAddress;\n        } \n        else \n        {\n            this._eftposAddress = document.getElementById('eftpos_address').value;\n        }\n\n        this._rcpt_from_eftpos = document.getElementById('rcpt_from_eftpos').checked = localStorage.getItem('rcpt_from_eftpos') === 'true' || false;\n        this._sig_flow_from_eftpos = document.getElementById('sig_flow_from_eftpos').checked = localStorage.getItem('sig_flow_from_eftpos') === 'true' || false;\n        this._print_merchant_copy = document.getElementById('print_merchant_copy').checked = localStorage.getItem('print_merchant_copy') === 'true' || false;\n\n        if(localStorage.getItem('EncKey') && localStorage.getItem('HmacKey')) \n        {\n            this._spiSecrets = new Secrets(localStorage.getItem('EncKey'), localStorage.getItem('HmacKey'));\n        }\n    }\n}\n\n/**\n * Start the POS\n */\ndocument.addEventListener('DOMContentLoaded', () => \n{\n    try \n    {\n        let log         = console;\n        let receipt     = new Logger(document.getElementById('receipt_output'),`\\n\\n \\\\/\\\\/\\\\/\\\\/\\\\/\\\\/\\\\/\\\\/\\\\/\\\\/\\\\/\\\\/\\\\/\\\\/\\\\/ \\n\\n`);\n        let flow_msg    = new Logger(document.getElementById('flow_msg'));\n        let pos         = new MotelPos(log, receipt, flow_msg);\n        pos.Start();\n    } \n    catch(err) \n    {\n        console.error(err);\n    }\n});\n\n"],"sourceRoot":""}