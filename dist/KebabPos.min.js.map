{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap","webpack:///./node_modules/@assemblypayments/spi-client-js/dist/spi-client-js.js","webpack:///./KebabPos/KebabPos.js"],"names":["root","factory","exports","module","define","amd","a","i","window","installedModules","__webpack_require__","moduleId","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","parentHotUpdateCallback","chunkId","moreModules","hotAvailableFilesMap","hotRequestedFilesMap","hotUpdate","hotWaitingFiles","hotChunksLoading","hotUpdateDownloaded","hotAddUpdateChunk","hotCurrentChildModule","hotApplyOnUpdate","hotCurrentHash","hotRequestTimeout","hotCurrentModuleData","hotCurrentParents","hotCurrentParentsTemp","hotCreateRequire","me","fn","request","hot","active","parents","indexOf","push","children","console","warn","ObjectFactory","configurable","set","e","hotStatus","hotSetStatus","then","finishChunkLoading","err","hotWaitingFilesMap","hotEnsureUpdateChunk","hotCreateModule","_acceptedDependencies","_declinedDependencies","_selfAccepted","_selfDeclined","_disposeHandlers","_main","accept","dep","callback","undefined","length","decline","dispose","addDisposeHandler","removeDisposeHandler","idx","splice","check","hotCheck","apply","hotApply","status","hotStatusHandlers","addStatusHandler","removeStatusHandler","data","newStatus","hotDeferred","hotUpdateNewHash","toModuleId","id","Error","requestTimeout","Promise","resolve","reject","XMLHttpRequest","requestPath","open","timeout","send","onreadystatechange","readyState","update","JSON","parse","responseText","h","promise","script","document","createElement","charset","src","head","appendChild","hotDownloadUpdateChunk","deferred","result","outdatedModules","options","cb","j","getAffectedStuff","updateModuleId","outdatedDependencies","queue","slice","map","chain","queueItem","pop","type","parentId","parent","concat","addAllToSet","b","item","appliedUpdate","warnUnexpectedRequire","abortError","doApply","doDispose","chainInfo","join","onDeclined","ignoreDeclined","onUnaccepted","ignoreUnaccepted","onAccepted","onDisposed","outdatedSelfAcceptedModules","errorHandler","keys","forEach","installedChunks","hotDisposeChunk","dependency","moduleOutdatedDependencies","disposeHandlers","child","error","callbacks","onErrored","dependencyId","ignoreErrored","err2","originalError","./index.js","__webpack_exports__","_src_Spi__WEBPACK_IMPORTED_MODULE_0__","_src_Logger__WEBPACK_IMPORTED_MODULE_1__","_src_Printing__WEBPACK_IMPORTED_MODULE_2__","_src_Secrets__WEBPACK_IMPORTED_MODULE_3__","_src_Messages__WEBPACK_IMPORTED_MODULE_4__","_src_SpiModels__WEBPACK_IMPORTED_MODULE_5__","_src_Purchase__WEBPACK_IMPORTED_MODULE_6__","_src_TerminalStatus__WEBPACK_IMPORTED_MODULE_7__","_src_Cashout__WEBPACK_IMPORTED_MODULE_8__","_src_Settlement__WEBPACK_IMPORTED_MODULE_9__","_src_RequestIdHelper__WEBPACK_IMPORTED_MODULE_10__","_src_PayAtTable__WEBPACK_IMPORTED_MODULE_11__","Spi","Logger","Printer","./node_modules/aes-js/index.js","checkInt","parseInt","checkInts","arrayish","coerceArray","arg","copy","buffer","Array","isArray","Uint8Array","createArray","copyArray","sourceArray","targetArray","targetStart","sourceStart","sourceEnd","convertUtf8","toBytes","text","encodeURI","charCodeAt","substr","fromBytes","bytes","String","fromCharCode","convertHex","Hex","v","numberOfRounds","16","24","32","rcon","S","Si","T1","T2","T3","T4","T5","T6","T7","T8","U1","U2","U3","U4","convertToInt32","AES","this","_prepare","rounds","_Ke","_Kd","index","roundKeyCount","KC","tk","tt","rconpointer","encrypt","plaintext","decrypt","ciphertext","ModeOfOperationECB","description","_aes","block","ModeOfOperationCBC","iv","_lastCipherblock","ModeOfOperationCFB","segmentSize","_shiftRegister","xorSegment","encrypted","ModeOfOperationOFB","_lastPrecipher","_lastPrecipherIndex","Counter","initialValue","_counter","setValue","setBytes","Number","MAX_SAFE_INTEGER","increment","ModeOfOperationCTR","counter","_remainingCounter","_remainingCounterIndex","aesjs","ModeOfOperation","ecb","cbc","cfb","ofb","ctr","utils","hex","utf8","padding","pkcs7","pad","padder","strip","_arrayTest","./node_modules/bn.js/lib/bn.js","assert","val","msg","inherits","ctor","superCtor","super_","TempCtor","constructor","BN","number","base","endian","isBN","negative","words","red","_init","Buffer","wordSize","parseHex","str","start","end","len","Math","min","parseBase","mul","num","max","left","right","cmp","_initNumber","_initArray","toString","replace","_parseHex","_parseBase","toArray","ceil","w","off","limbLen","limbPow","total","mod","word","imuln","_iaddn","pow","dest","clone","_expand","size","_normSign","inspect","zeros","groupSizes","groupBases","smallMulTo","self","out","lo","carry","k","ncarry","rword","maxJ","groupSize","groupBase","isZero","modn","idivn","toNumber","ret","toJSON","toBuffer","toArrayLike","ArrayType","byteLength","reqLength","littleEndian","res","q","andln","iushrn","clz32","_countBits","_zeroBits","bitLength","hi","zeroBits","toTwos","width","abs","inotn","iaddn","fromTwos","testn","notn","ineg","isNeg","neg","iuor","ior","or","uor","iuand","iand","and","uand","iuxor","ixor","xor","uxor","bytesNeeded","bitsLeft","setn","bit","wbit","iadd","isub","add","sub","comb10MulTo","mid","a0","al0","ah0","a1","al1","ah1","a2","al2","ah2","a3","al3","ah3","a4","al4","ah4","a5","al5","ah5","a6","al6","ah6","a7","al7","ah7","a8","al8","ah8","a9","al9","ah9","b0","bl0","bh0","b1","bl1","bh1","b2","bl2","bh2","b3","bl3","bh3","b4","bl4","bh4","b5","bl5","bh5","b6","bl6","bh6","b7","bl7","bh7","b8","bl8","bh8","b9","bl9","bh9","w0","imul","w1","w2","w3","w4","w5","w6","w7","w8","w9","w10","w11","w12","w13","w14","w15","w16","w17","w18","jumboMulTo","FFTM","mulp","x","y","mulTo","hncarry","bigMulTo","makeRBT","N","revBin","rb","permute","rbt","rws","iws","rtws","itws","transform","rtwdf","cos","PI","itwdf","sin","rtwdf_","itwdf_","re","ie","ro","io","rx","guessLen13b","odd","conjugate","normalize13b","ws","round","convert13b","stub","ph","_","rwst","iwst","nrws","nrwst","niwst","rmws","mulf","muln","sqr","isqr","toBitArray","iushln","bits","carryMask","newCarry","ishln","hint","extended","mask","maskedWords","ishrn","shln","ushln","shrn","ushrn","imaskn","maskn","isubn","addn","subn","iabs","_ishlnsubmul","shift","_wordDiv","bhi","diff","qj","div","divmod","positive","divn","umod","divRound","dm","half","r2","acc","egcd","A","B","C","D","g","isEven","yp","xp","im","isOdd","jm","gcd","_invmp","x1","x2","delta","cmpn","invm","bincn","ucmp","gtn","gt","gten","gte","ltn","lt","lten","lte","eqn","eq","Red","toRed","ctx","convertTo","_forceRed","fromRed","convertFrom","forceRed","redAdd","redIAdd","redSub","redISub","redShl","shl","redMul","_verify2","redIMul","redSqr","_verify1","redISqr","redSqrt","sqrt","redInvm","redNeg","redPow","primes","k256","p224","p192","p25519","MPrime","tmp","_tmp","K256","P224","P192","P25519","prime","_prime","Mont","imod","rinv","minv","ireduce","rlen","split","imulK","input","output","outLen","prev","next","mod3","one","nOne","lpow","z","inv","wnd","current","currentLen","mont","u","./node_modules/jssha/src/sha.js","__WEBPACK_AMD_DEFINE_RESULT__","Y","f","I","encoding","numRounds","K","Z","lastIndexOf","L","F","M","setHMACKey","binLen","getHash","shakeLen","O","P","Q","ArrayBuffer","R","getHMAC","charAt","outputUpper","toUpperCase","b64Pad","isNaN","search","T","aa","ba","U","ca","da","ea","fa","ga","ha","ia","ja","ka","G","la","H","ma","na","oa","J","E","V","W","X","./node_modules/webpack/buildin/module.js","webpackPolyfill","deprecate","paths","./src/Cashout.js","CashoutOnlyRequest","CashoutOnlyResponse","_Messages__WEBPACK_IMPORTED_MODULE_0__","_SpiModels__WEBPACK_IMPORTED_MODULE_1__","_RequestIdHelper__WEBPACK_IMPORTED_MODULE_2__","_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","descriptor","writable","_createClass","protoProps","staticProps","amountCents","posRefId","surchargeAmount","PosRefId","CashoutAmount","SurchargeAmount","Config","Options","pos_ref_id","cash_amount","surcharge_amount","addReceiptConfig","Id","_m","RequestId","Data","SchemeName","scheme_name","Success","GetSuccessState","attribute","./src/Connection.js","ConnectionState","SPI_PROTOCOL","ConnectionStateEventArgs","MessageEventArgs","Connection","Disconnected","Connecting","Connected","connectionState","message","Message","Address","State","SpiProtocol","_ws","WebSocket","UseSecureWebSockets","_this","onopen","pollWebSocketConnection","onmessage","payload","onMessageReceived","onclose","onClosed","onerror","onError","dispatchEvent","CustomEvent","detail","CLOSED","close","_this2","count","arguments","OPEN","onOpened","setTimeout","Disconnect","./src/Crypto.js","Crypto","jssha__WEBPACK_IMPORTED_MODULE_0__","jssha__WEBPACK_IMPORTED_MODULE_0___default","aes_js__WEBPACK_IMPORTED_MODULE_1__","aes_js__WEBPACK_IMPORTED_MODULE_1___default","textBytes","encryptedBytes","decryptedBytes","messageToSign","shaObj","./src/DiffieHellman.js","DiffieHellman","bn_js__WEBPACK_IMPORTED_MODULE_0__","bn_js__WEBPACK_IMPORTED_MODULE_0___default","maxValue","maxValueBN","shiftDistance","floor","random","randBitInt","privateKey","aHex","gHex","montPrime","theirPublicKey","yourPrivateKey","bHex","AHex","./src/KeyRollingHelper.js","KeyRollingHelper","KeyRollingResult","_Crypto__WEBPACK_IMPORTED_MODULE_1__","_Secrets__WEBPACK_IMPORTED_MODULE_2__","krRequest","currentSecrets","KeyRollResponse","newSecrets","GenerateHash","EncKey","HmacKey","keyRollingConfirmation","KeyRollingConfirmation","NewSecrets","./src/Logger.js","element","lineSeperator","_len","args","_key","_render","_len2","_key2","_len3","_key3","_len4","_key4","_len5","_key5","log","innerText","scrollTop","scrollHeight","./src/Messages.js","Events","SuccessState","MessageStamp","MessageEnvelope","_Crypto__WEBPACK_IMPORTED_MODULE_0__","PairRequest","KeyRequest","KeyResponse","KeyCheck","PairResponse","DropKeysAdvice","LoginRequest","LoginResponse","Ping","Pong","PurchaseRequest","PurchaseResponse","CancelTransactionRequest","CancelTransactionResponse","GetLastTransactionRequest","GetLastTransactionResponse","RefundRequest","RefundResponse","SignatureRequired","SignatureDeclined","SignatureAccepted","AuthCodeRequired","AuthCodeAdvice","MotoPurchaseRequest","MotoPurchaseResponse","SettleRequest","SettleResponse","SettlementEnquiryRequest","SettlementEnquiryResponse","SetPosInfoRequest","SetPosInfoResponse","KeyRollRequest","InvalidHmacSignature","PayAtTableGetTableConfig","PayAtTableSetTableConfig","PayAtTableGetBillDetails","PayAtTableBillDetails","PayAtTableBillPayment","PrintingRequest","PrintingResponse","TerminalStatusRequest","TerminalStatusResponse","BatteryLevelChanged","Unknown","Failed","posId","secrets","serverTimeDelta","PosId","Secrets","ServerTimeDelta","enc","hmac","Enc","Hmac","pos_id","eventName","needsEncryption","EventName","DateTimeStamp","IncommingHmac","_needsEncryption","DecryptedJson","success","error_reason","error_detail","now","Date","dts","getTime","stamp","tzoffset","getTimezoneOffset","adjustedTime","toISOString","envelope","event","datetime","stringify","encMsg","AesEncrypt","encrMessageEnvelope","HmacSignature","bankDate","date","time","msgJson","env","decryptedJson","AesDecrypt","decryptedMsg","_message","IncomingHmac","./src/Pairing.js","SecretsAndKeyResponse","DropKeysRequest","_RequestIdHelper__WEBPACK_IMPORTED_MODULE_1__","Aenc","Ahmac","requestId","Benc","Bhmac","ConfirmationCode","substring","keyResponse","./src/PairingHelper.js","GENERATOR","GROUP14_2048_BIT_MODP","PairingHelper","PublicKeyAndSecret","_Pairing__WEBPACK_IMPORTED_MODULE_0__","_Secrets__WEBPACK_IMPORTED_MODULE_1__","_Crypto__WEBPACK_IMPORTED_MODULE_2__","_DiffieHellman__WEBPACK_IMPORTED_MODULE_3__","keyRequest","encPubAndSec","_calculateMyPublicKeyAndSecret","MyPublicKey","Senc","SharedSecretKey","hmacPubAndSec","Shmac","diffieHellman","myPrivateBI","RandomPrivateKey","myPublicBI","PublicKey","secretBI","Secret","secret","DHSecretToSPISecret","padStart","myPublicKey","sharedSecretKey","./src/PayAtTable.js","BillStatusResponse","BillRetrievalResult","PaymentType","BillPayment","PaymentHistoryEntry","PayAtTableConfig","_Purchase__WEBPACK_IMPORTED_MODULE_1__","Result","BillId","TableId","TotalAmount","OutstandingAmount","BillData","bill","payment_type","payment_summary","messageId","SUCCESS","bill_id","table_id","bill_total_amount","bill_outstanding_amount","bill_payment_history","getBillPaymentHistory","INVALID_TABLE_ID","INVALID_BILL_ID","INVALID_OPERATOR_ID","CARD","CASH","_incomingAdvice","OperatorId","pt","purchaseMsg","PurchaseAmount","GetPurchaseAmount","TipAmount","GetTipAmount","paymentType","paymentSummary","PaymentSummary","PayAtTabledEnabled","OperatorIdEnabled","SplitByAmountEnabled","EqualSplitEnabled","TableRetrievalEnabled","TippingEnabled","SummaryReportEnabled","LabelPayButton","LabelOperatorId","LabelTableId","AllowedOperatorIds","pay_at_table_enabled","operator_id_enabled","split_by_amount_enabled","equal_split_enabled","tipping_enabled","summary_report_enabled","pay_button_label","operator_id_label","table_id_label","operator_id_list","table_retrieval_enabled","./src/PingHelper.js","PongHelper","PingHelper","_RequestIdHelper__WEBPACK_IMPORTED_MODULE_0__","_Messages__WEBPACK_IMPORTED_MODULE_1__","ping","./src/PosInfo.js","DeviceInfo","version","vendorId","libraryLanguage","libraryVersion","otherInfo","_version","_vendorId","_libraryLanguage","_libraryVersion","_otherInfo","pos_version","pos_vendor_id","library_language","library_version","other_info","_success","deviceInfo","navigator","userAgent","./src/Preauth.js","PreauthEvents","AccountVerifyRequest","AccountVerifyResponse","PreauthOpenRequest","PreauthTopupRequest","PreauthPartialCancellationRequest","PreauthExtendRequest","PreauthCancelRequest","PreauthCompletionRequest","PreauthResponse","_Purchase__WEBPACK_IMPORTED_MODULE_2__","PreauthOpenResponse","PreauthTopupResponse","PreauthExtendResponse","PreauthPartialCancellationResponse","PreauthCancellationRequest","PreauthCancellationResponse","PreauthCompleteRequest","PreauthCompleteResponse","Details","PreauthAmount","preauth_amount","preauthId","topupAmountCents","PreauthId","TopupAmount","preauth_id","topup_amount","partialCancellationAmountCents","PartialCancellationAmount","preauth_cancel_amount","completionAmountCents","CompletionAmount","completion_amount","./src/Printing.js","_payload","./src/Purchase.js","SignatureDecline","SignatureAccept","PhoneForAuthRequired","_SpiModels__WEBPACK_IMPORTED_MODULE_2__","PromptForCashout","AmountCents","toFixed","purchase_amount","tip_amount","prompt_for_cashout","AddOptions","SchemeAppName","rrn","bank_noncash_amount","bank_cash_amount","customer_receipt","merchant_receipt","host_response_text","host_response_code","terminal_ref_id","card_entry","account_type","auth_code","bank_date","bank_time","masked_pan","terminal_id","merchant_receipt_printed","customer_receipt_printed","dateStr","bank_settlement_date","ParseBankDate","GetAccountType","GetAuthCode","GetBankDate","GetBankTime","GetResponseCode","GetResponseText","GetMaskedPan","GetRRN","GetTerminalId","GetTerminalReferenceId","GetSurchargeAmount","GetError","startsWith","WasOperationInProgressError","GetPosRefId","transaction_type","amount_purchase","amount_transaction_type","cr","mr","isSuppressMerchantPassword","IsSuppressMerchantPassword","refund_amount","suppress_merchant_password","_receiptToSign","receiptToSign","_phoneNumber","_merchantId","auth_centre_phone_number","merchant_id","authCode","AuthCode","./src/PurchaseHelper.js","PurchaseHelper","_Purchase__WEBPACK_IMPORTED_MODULE_0__","purchaseId","purchaseAmount","tipAmount","cashoutAmount","promptForCashout","assign","./src/RequestIdHelper.js","RequestIdHelper","__RequestIdHelperCounter","prefix","./src/Secrets.js","encKey","hmacKey","localStorage","setItem","getItem","removeItem","./src/Service/DeviceService.js","DeviceAddressStatus","DeviceAddressService","useSecureWebSockets","ip","fqdn","last_updated","address","addreses","serialNumber","apiKey","acquirerCode","isSecureConnection","isTestMode","path","deviceAddressUri","info","fetch","method","headers","ASM-MSP-DEVICE-ADDRESS-API-KEY","response","json","catch","StatusCode","./src/Settlement.js","Settlement","SchemeSettlementEntry","accumulated_settle_by_acquirer_count","accumulated_settle_by_acquirer_value","accumulated_total_count","accumulated_total_value","timeStr","settlement_period_start_time","settlement_period_start_date","ParseBankDateTimeStr","settlement_period_end_time","settlement_period_end_date","settlement_triggered_time","settlement_triggered_date","transaction_range","schemes","scheme","SettleByAcquirer","settle_by_acquirer","toLowerCase","TotalValue","total_value","TotalCount","total_count","./src/Spi.js","SPI_VERSION","_PairingHelper__WEBPACK_IMPORTED_MODULE_3__","_Connection__WEBPACK_IMPORTED_MODULE_4__","_SpiPayAtTable__WEBPACK_IMPORTED_MODULE_5__","_PayAtTable__WEBPACK_IMPORTED_MODULE_6__","_SpiPreauth__WEBPACK_IMPORTED_MODULE_7__","_Cashout__WEBPACK_IMPORTED_MODULE_8__","_Settlement__WEBPACK_IMPORTED_MODULE_9__","_Pairing__WEBPACK_IMPORTED_MODULE_10__","_PosInfo__WEBPACK_IMPORTED_MODULE_11__","_PurchaseHelper__WEBPACK_IMPORTED_MODULE_12__","_KeyRollingHelper__WEBPACK_IMPORTED_MODULE_13__","_PingHelper__WEBPACK_IMPORTED_MODULE_14__","_Purchase__WEBPACK_IMPORTED_MODULE_15__","_Service_DeviceService__WEBPACK_IMPORTED_MODULE_16__","_Printing__WEBPACK_IMPORTED_MODULE_17__","_TerminalStatus__WEBPACK_IMPORTED_MODULE_18__","eftposAddress","_posId","_serialNumber","_secrets","_forceSecureWebSockets","_eftposAddress","_log","_conn","CurrentDeviceStatus","_deviceApiKey","_acquirerCode","_inTestMode","_autoAddressResolutionEnabled","_spiMessageStamp","_posVendorId","_posVersion","_hasSetInfo","_mostRecentPingSent","_mostRecentPongReceived","_missedPongsCount","_retriesSinceLastDeviceAddressResolution","_mostRecentLoginResponse","_pongTimeout","_pingFrequency","_readyToTransact","_periodicPingThread","_txMonitorCheckFrequency","_checkOnTxFrequency","_maxWaitForCancelTx","_sleepBeforeReconnectMs","_missedPongsToDisconnect","_retriesBeforeResolvingDeviceAddress","CurrentFlow","CurrentPairingFlowState","CurrentTxFlowState","_currentStatus","_spiPat","_spiPreauth","_resetConn","_startTransactionMonitoringThread","Idle","PairedConnecting","Connect","Unpaired","deviceApiKey","CurrentStatus","was","HasSerialNumberChanged","_autoResolveEftposAddress","autoAddressResolutionEnable","PairedConnected","testMode","posVendorId","posVersion","Pairing","Finished","Transaction","Successful","AwaitingCheckFromEftpos","AwaitingCheckFromPos","_onPairingSuccess","_onReadyToTransact","_send","ToMessage","_onPairingFailed","_doUnpair","purchaseRequest","CreatePurchaseRequest","Purchase","Sent","purchase","CreatePurchaseRequestV2","AmountSummary","refundRequest","CreateRefundRequest","refundMsg","Refund","accepted","AwaitingSignatureCheck","SignatureResponded","SignatureRequiredMessage","AwaitingPhoneForAuth","AuthCodeSent","RequestSent","cancelReq","Cancelling","cashoutOnlyRequest","cashoutMsg","CashoutOnly","motoPurchaseRequest","MOTO","settleRequestMsg","Settle","stlEnqMsg","SettlementEnquiry","gltRequestMsg","GetLastTransaction","txType","gltResponse","GltMatch","toMessage","GenerateSecretsAndKeyResponse","keyCheck","pairResp","_startPeriodicPing","krRes","PerformKeyRolling","incomingPosRefId","phoneForAuthRequired","GetPhoneNumber","GetMerchantId","Completed","AttemptingToCancel","_callGetLastTransaction","txState","GotGltResponse","gtlResponse","GLTResponsePosRefId","WasRetrievedSuccessfully","Type","CopyMerchantReceiptToCustomerReceipt","successState","UnknownCompleted","IsStillInProgress","IsWaitingForSignatureResponse","IsWaitingForAuthCode","WasTimeOutOfSyncError","cancelResponse","GetErrorReason","GetErrorDetail","CancelFailed","isSuccess","getErrorReason","getErrorDetail","needsPublishing","state","CancelAttemptTime","LastStateRequestTime","CallingGlt","_isUsingHttps","addEventListener","_onSpiConnectionStatusChanged","_onSpiMessageReceived","_onWsErrorReceived","_this3","pr","NewPairRequest","_stopPeriodicPing","_this4","setInterval","_periodicPing","_this5","_doPing","_callSetPosInfo","PushPayAtTableConfig","Request","setPosInfoRequest","GetAppDeviceInfo","clearInterval","GeneratePingRequest","_mostRecentPingSentTime","GetServerTimeDelta","debug","pong","GeneratePongRessponse","gltRequest","messageJson","FromJson","IsPreauthEvent","_handlePreauthMessage","_handleKeyRequest","_handleKeyCheck","_handlePairResponse","_handleDropKeysAdvice","_handlePurchaseResponse","_handleRefundResponse","_handleCashoutOnlyResponse","_handleMotoPurchaseResponse","_handleSignatureRequired","_handleAuthCodeRequired","_handleGetLastTransactionResponse","HandleSettleResponse","_handleSettlementEnquiryResponse","_handleIncomingPing","_handleIncomingPong","_handleKeyRollingRequest","_handleCancelTransactionResponse","_handleSetPosInfoResponse","FeatureDisableMessage","_handleGetTableConfig","_handleGetBillDetailsRequest","_handleBillPaymentAdvice","_handlePrintingResponse","_handleTerminalStatusResponse","_handleBatteryLevelChanged","_handleErrorEvent","ToJson","Send","updatedSerialNumber","updatedEftposAddress","_this6","service","RetrieveService","deviceAddressStatus","HasEftposAddressChanged","protocol","location","./src/SpiModels.js","SpiStatus","SpiFlow","PairingFlowState","TransactionType","InitiateTxResult","MidTxResult","TransactionFlowState","SubmitAuthCodeResult","SpiConfig","TransactionOptions","Preauth","AccountVerify","initiated","Initiated","valid","Valid","DisplayMessage","RequestTime","Response","PhoneForAuthRequiredMessage","AwaitingGltResponse","spiMessage","validFormat","ValidFormat","PromptForCustomerCopyOnEftpos","SignatureFlowOnEftpos","PrintMerchantCopy","messageData","prompt_for_customer_copy","print_for_signature_required_transactions","print_merchant_copy","_customerReceiptHeader","_customerReceiptFooter","_merchantReceiptHeader","_merchantReceiptFooter","customerReceiptHeader","customerReceiptFooter","merchantReceiptHeader","merchantReceiptFooter","customer_receipt_header","customer_receipt_footer","merchant_receipt_header","merchant_receipt_footer","./src/SpiPayAtTable.js","SpiPayAtTable","_PayAtTable__WEBPACK_IMPORTED_MODULE_1__","spi","_spi","billId","tableId","operatorId","billPayment","updatedBillData","GetBillStatus","billStatus","existingBillStatus","existingPaymentHistory","find","phe","GetTerminalRefId","updatedHistoryEntries","ToPaymentSummary","ToBillData","BillPaymentReceived","updatedBillStatus","./src/SpiPreauth.js","SpiPreauth","_Preauth__WEBPACK_IMPORTED_MODULE_0__","verifyMsg","tfs","_initiatePreauthTx","sentMsg","_handleAccountVerifyResponse","_handlePreauthResponse","currentTxFlowState","./src/TerminalStatus.js","TerminalBattery","battery_level","charging","BatteryLevel","0","KebabPos","receipt","flow_msg","_spiSecrets","_rcpt_from_eftpos","_sig_flow_from_eftpos","_receipt","_flow_msg","LoadPersistedState","SetPosInfo","OnSpiStatusChanged","OnPairingFlowStateChanged","OnSecretsChanged","OnTxFlowStateChanged","Start","Clear","Info","PrintStatusAndActions","AcceptUserInput","pairingFlowState","spiStatus","clear","PrintFlowInfo","PrintActions","PrintPairingStatus","pairingState","GetMerchantReceipt","trim","HandleFinishedPurchase","HandleFinishedRefund","HandleFinishedCashout","HandleFinishedMoto","HandleFinishedSettle","HandleFinishedSettlementEnquiry","HandleFinishedGetLastTransaction","purchaseResponse","WasCustomerReceiptPrinted","GetCustomerReceipt","GetCashoutAmount","GetBankNonCashAmount","GetBankCashAmount","refundResponse","GetRefundAmount","cashoutResponse","GetCardEntry","getElementById","settleResponse","GetReceipt","GetPeriodStartTime","GetPeriodEndTime","GetTriggeredTime","GetTransactionRange","GetTotalCount","GetTotalValue","GetSettleByAcquirerCount","GetSettleByAcquirerValue","GetSchemeSettlementEntries","inputsEnabled","statusEl","primaryStatusEl","flowStatusEl","flowStatusHeading","dataset","inputs","querySelectorAll","disabled","GetVersion","SetPosId","SetEftposAddress","checked","Pair","PairingConfirmCode","PairingCancel","Unpair","InitiatePurchaseTxV2","amount","InitiateRefundTx","InitiateCashoutOnlyTx","InitiateMotoPurchaseTx","AcceptSignature","CancelTransaction","SubmitAuthCode","InitiateSettleTx","InitiateSettlementEnquiry","AckFlowEndedAndBackToIdle","innerHTML","InitiateRecovery","InitiateGetLastTx"],"mappings":"CAAA,SAAAA,EAAAC,GACA,oBAAAC,SAAA,iBAAAC,OACAA,OAAAD,QAAAD,SACA,sBAAAG,eAAAC,IACAD,OAAA,GAAAH,OACA,CACA,IAAAK,EAAAL,IACA,QAAAM,KAAAD,GAAA,iBAAAJ,gBAAAF,GAAAO,GAAAD,EAAAC,IAPA,CASCC,OAAA,WACD,mBCTA,IAAAC,EAAA,GAGA,SAAAC,EAAAC,GAGA,GAAAF,EAAAE,GACA,OAAAF,EAAAE,GAAAT,QAGA,IAAAC,EAAAM,EAAAE,GAAA,CACAJ,EAAAI,EACAC,GAAA,EACAV,QAAA,IAUA,OANAW,EAAAF,GAAAG,KAAAX,EAAAD,QAAAC,IAAAD,QAAAQ,GAGAP,EAAAS,GAAA,EAGAT,EAAAD,QA0DA,OArDAQ,EAAAK,EAAAF,EAGAH,EAAAM,EAAAP,EAGAC,EAAAO,EAAA,SAAAf,EAAAgB,EAAAC,GACAT,EAAAU,EAAAlB,EAAAgB,IACAG,OAAAC,eAAApB,EAAAgB,EAAA,CAA0CK,YAAA,EAAAC,IAAAL,KAK1CT,EAAAe,EAAA,SAAAvB,GACA,oBAAAwB,eAAAC,aACAN,OAAAC,eAAApB,EAAAwB,OAAAC,YAAA,CAAwDC,MAAA,WAExDP,OAAAC,eAAApB,EAAA,cAAiD0B,OAAA,KAQjDlB,EAAAmB,EAAA,SAAAD,EAAAE,GAEA,GADA,EAAAA,IAAAF,EAAAlB,EAAAkB,IACA,EAAAE,EAAA,OAAAF,EACA,KAAAE,GAAA,iBAAAF,QAAAG,WAAA,OAAAH,EACA,IAAAI,EAAAX,OAAAY,OAAA,MAGA,GAFAvB,EAAAe,EAAAO,GACAX,OAAAC,eAAAU,EAAA,WAAyCT,YAAA,EAAAK,UACzC,EAAAE,GAAA,iBAAAF,EAAA,QAAAM,KAAAN,EAAAlB,EAAAO,EAAAe,EAAAE,EAAA,SAAAA,GAAgH,OAAAN,EAAAM,IAAqBC,KAAA,KAAAD,IACrI,OAAAF,GAIAtB,EAAA0B,EAAA,SAAAjC,GACA,IAAAgB,EAAAhB,KAAA4B,WACA,WAA2B,OAAA5B,EAAA,SAC3B,WAAiC,OAAAA,GAEjC,OADAO,EAAAO,EAAAE,EAAA,IAAAA,GACAA,GAIAT,EAAAU,EAAA,SAAAiB,EAAAC,GAAsD,OAAAjB,OAAAkB,UAAAC,eAAA1B,KAAAuB,EAAAC,IAGtD5B,EAAA+B,EAAA,GAIA/B,IAAAgC,EAAA,sBClFA,IAAAzC,EASCO,OATDP,EASC,WACD,gBAAAY,GAIA,IAAA8B,EAAAnC,OAAA,iBACAA,OAAA,iBACA,SAAAoC,EAAAC,IAgRA,SAAAD,EAAAC,GACA,IAAAC,EAAAF,KAAAG,EAAAH,GACA,OAEA,QAAAjC,KADAoC,EAAAH,IAAA,EACAC,EACAxB,OAAAkB,UAAAC,eAAA1B,KAAA+B,EAAAlC,KACAqC,EAAArC,GAAAkC,EAAAlC,IAGA,KAAAsC,GAAA,IAAAC,GACAC,IAzRAC,CAAAR,EAAAC,GACAF,KAAAC,EAAAC,IAuDA,IAKAQ,EALAC,GAAA,EAEAC,EAAA,uBACAC,EAAA,IACAC,EAAA,GAGAC,EAAA,GAEAC,EAAA,GAGA,SAAAC,EAAAjD,GACA,IAAAkD,EAAApD,EAAAE,GACA,IAAAkD,EAAA,OAAAnD,EACA,IAAAoD,EAAA,SAAAC,GAsBA,OArBAF,EAAAG,IAAAC,QACAxD,EAAAsD,IACA,IAAAtD,EAAAsD,GAAAG,QAAAC,QAAAxD,IACAF,EAAAsD,GAAAG,QAAAE,KAAAzD,IAGA+C,EAAA,CAAA/C,GACA0C,EAAAU,IAEA,IAAAF,EAAAQ,SAAAF,QAAAJ,IACAF,EAAAQ,SAAAD,KAAAL,KAGAO,QAAAC,KACA,4BACAR,EACA,0BACApD,GAEA+C,EAAA,IAEAhD,EAAAqD,IAEAS,EAAA,SAAAtD,GACA,OACAuD,cAAA,EACAlD,YAAA,EACAC,IAAA,WACA,OAAAd,EAAAQ,IAEAwD,IAAA,SAAA9C,GACAlB,EAAAQ,GAAAU,KAIA,QAAAV,KAAAR,EAEAW,OAAAkB,UAAAC,eAAA1B,KAAAJ,EAAAQ,IACA,MAAAA,GACA,MAAAA,GAEAG,OAAAC,eAAAwC,EAAA5C,EAAAsD,EAAAtD,IA2BA,OAxBA4C,EAAAa,EAAA,SAAA/B,GAGA,MAFA,UAAAgC,GAAAC,EAAA,WACA3B,IACAxC,EAAAiE,EAAA/B,GAAAkC,KAAAC,EAAA,SAAAC,GAEA,MADAD,IACAC,IAGA,SAAAD,IACA7B,IACA,YAAA0B,IACAK,EAAArC,IACAsC,EAAAtC,GAEA,IAAAM,GAAA,IAAAD,GACAE,OAKAW,EAAAjC,EAAA,SAAAD,EAAAE,GAEA,OADA,EAAAA,IAAAF,EAAAkC,EAAAlC,IACAlB,EAAAmB,EAAAD,GAAA,EAAAE,IAEAgC,EAIA,SAAAqB,EAAAxE,GACA,IAAAqD,EAAA,CAEAoB,sBAAA,GACAC,sBAAA,GACAC,eAAA,EACAC,eAAA,EACAC,iBAAA,GACAC,MAAApC,IAAA1C,EAGAsD,QAAA,EACAyB,OAAA,SAAAC,EAAAC,GACA,QAAAC,IAAAF,EAAA3B,EAAAsB,eAAA,OACA,sBAAAK,EAAA3B,EAAAsB,cAAAK,OACA,oBAAAA,EACA,QAAApF,EAAA,EAA6BA,EAAAoF,EAAAG,OAAgBvF,IAC7CyD,EAAAoB,sBAAAO,EAAApF,IAAAqF,GAAA,kBACA5B,EAAAoB,sBAAAO,GAAAC,GAAA,cAEAG,QAAA,SAAAJ,GACA,QAAAE,IAAAF,EAAA3B,EAAAuB,eAAA,OACA,oBAAAI,EACA,QAAApF,EAAA,EAA6BA,EAAAoF,EAAAG,OAAgBvF,IAC7CyD,EAAAqB,sBAAAM,EAAApF,KAAA,OACAyD,EAAAqB,sBAAAM,IAAA,GAEAK,QAAA,SAAAJ,GACA5B,EAAAwB,iBAAApB,KAAAwB,IAEAK,kBAAA,SAAAL,GACA5B,EAAAwB,iBAAApB,KAAAwB,IAEAM,qBAAA,SAAAN,GACA,IAAAO,EAAAnC,EAAAwB,iBAAArB,QAAAyB,GACAO,GAAA,GAAAnC,EAAAwB,iBAAAY,OAAAD,EAAA,IAIAE,MAAAC,EACAC,MAAAC,EACAC,OAAA,SAAA7F,GACA,IAAAA,EAAA,OAAAgE,EACA8B,EAAAtC,KAAAxD,IAEA+F,iBAAA,SAAA/F,GACA8F,EAAAtC,KAAAxD,IAEAgG,oBAAA,SAAAhG,GACA,IAAAuF,EAAAO,EAAAvC,QAAAvD,GACAuF,GAAA,GAAAO,EAAAN,OAAAD,EAAA,IAIAU,KAAApD,EAAA9C,IAGA,OADA0C,OAAAwC,EACA7B,EAGA,IAAA0C,EAAA,GACA9B,EAAA,OAEA,SAAAC,EAAAiC,GACAlC,EAAAkC,EACA,QAAAvG,EAAA,EAA0BA,EAAAmG,EAAAZ,OAA8BvF,IACxDmG,EAAAnG,GAAAO,KAAA,KAAAgG,GAIA,IAKAC,EAGA/D,EAAAgE,EARA/D,EAAA,EACAC,EAAA,EACA+B,EAAA,GACAlC,EAAA,GACAD,EAAA,GAMA,SAAAmE,EAAAC,GAEA,OADAA,EAAA,KAAAA,GACAA,IAGA,SAAAZ,EAAAC,GACA,YAAA3B,EACA,UAAAuC,MAAA,0CAIA,OAFA7D,EAAAiD,EACA1B,EAAA,UA5NAuC,EA6NA5D,EA5NA4D,KAAA,IACA,IAAAC,QAAA,SAAAC,EAAAC,GACA,uBAAAC,eACA,OAAAD,EAAA,IAAAJ,MAAA,uBAEA,IACA,IAAApD,EAAA,IAAAyD,eACAC,EAAA/G,EAAA+B,EAAA,GAAAc,EAAA,mBACAQ,EAAA2D,KAAA,MAAAD,GAAA,GACA1D,EAAA4D,QAAAP,EACArD,EAAA6D,KAAA,MACa,MAAA5C,GACb,OAAAuC,EAAAvC,GAEAjB,EAAA8D,mBAAA,WACA,OAAA9D,EAAA+D,WACA,OAAA/D,EAAA0C,OAEAc,EACA,IAAAJ,MAAA,uBAAAM,EAAA,qBAEc,SAAA1D,EAAA0C,OAEda,SACc,SAAAvD,EAAA0C,QAAA,MAAA1C,EAAA0C,OAEdc,EAAA,IAAAJ,MAAA,uBAAAM,EAAA,iBACc,CAEd,IACA,IAAAM,EAAAC,KAAAC,MAAAlE,EAAAmE,cACe,MAAAvD,GAEf,YADA4C,EAAA5C,GAGA2C,EAAAS,QAyLAjD,KAAA,SAAAiD,GACA,IAAAA,EAEA,OADAlD,EAAA,QACA,KAEA9B,EAAA,GACAkC,EAAA,GACAnC,EAAAiF,EAAA/G,EACAgG,EAAAe,EAAAI,EAEAtD,EAAA,WACA,IAAAuD,EAAA,IAAAf,QAAA,SAAAC,EAAAC,GACAR,EAAA,CACAO,UACAC,YAGAvE,EAAA,GAcA,OATAkC,EAJA,QAOA,YAAAN,GACA,IAAA1B,GACA,IAAAD,GAEAE,IAEAiF,IA5PA,IAAAhB,EA+QA,SAAAlC,EAAAtC,GACAE,EAAAF,IAGAG,EAAAH,IAAA,EACAK,IA7RA,SAAAL,GACA,IAAAyF,EAAAC,SAAAC,cAAA,UACAF,EAAAG,QAAA,QACAH,EAAAI,IAAA/H,EAAA+B,EAAA,GAAAG,EAAA,IAAAW,EAAA,iBAEA+E,SAAAI,KAAAC,YAAAN,GAyRAO,CAAAhG,IAJAqC,EAAArC,IAAA,EAQA,SAAAO,IACA0B,EAAA,SACA,IAAAgE,EAAA9B,EAEA,GADAA,EAAA,KACA8B,EACA,GAAAvF,EAIA+D,QAAAC,UACAxC,KAAA,WACA,OAAA0B,EAAAlD,KAEAwB,KACA,SAAAgE,GACAD,EAAAvB,QAAAwB,IAEA,SAAA9D,GACA6D,EAAAtB,OAAAvC,SAGY,CACZ,IAAA+D,EAAA,GACA,QAAA7B,KAAAlE,EACA3B,OAAAkB,UAAAC,eAAA1B,KAAAkC,EAAAkE,IACA6B,EAAA3E,KAAA6C,EAAAC,IAGA2B,EAAAvB,QAAAyB,IAIA,SAAAvC,EAAAwC,GACA,aAAApE,EACA,UAAAuC,MAAA,2CAGA,IAAA8B,EACA1I,EACA2I,EACA/I,EACAQ,EAEA,SAAAwI,EAAAC,GAUA,IATA,IAAAL,EAAA,CAAAK,GACAC,EAAA,GAEAC,EAAAP,EAAAQ,QAAAC,IAAA,SAAAtC,GACA,OACAuC,MAAA,CAAAvC,GACAA,QAGAoC,EAAAxD,OAAA,IACA,IAAA4D,EAAAJ,EAAAK,MACAhJ,EAAA+I,EAAAxC,GACAuC,EAAAC,EAAAD,MAEA,IADAtJ,EAAAM,EAAAE,MACAR,EAAA6D,IAAAsB,cAAA,CACA,GAAAnF,EAAA6D,IAAAuB,cACA,OACAqE,KAAA,gBACAH,QACA9I,YAGA,GAAAR,EAAA6D,IAAAyB,MACA,OACAmE,KAAA,aACAH,QACA9I,YAGA,QAAAJ,EAAA,EAA4BA,EAAAJ,EAAA+D,QAAA4B,OAA2BvF,IAAA,CACvD,IAAAsJ,EAAA1J,EAAA+D,QAAA3D,GACAuJ,EAAArJ,EAAAoJ,GACA,GAAAC,EAAA,CACA,GAAAA,EAAA9F,IAAAqB,sBAAA1E,GACA,OACAiJ,KAAA,WACAH,QAAAM,OAAA,CAAAF,IACAlJ,WACAkJ,aAGA,IAAAd,EAAA5E,QAAA0F,KACAC,EAAA9F,IAAAoB,sBAAAzE,IACA0I,EAAAQ,KACAR,EAAAQ,GAAA,IACAG,EAAAX,EAAAQ,GAAA,CAAAlJ,aAGA0I,EAAAQ,GACAd,EAAA3E,KAAAyF,GACAP,EAAAlF,KAAA,CACAqF,QAAAM,OAAA,CAAAF,IACA3C,GAAA2C,SAKA,OACAD,KAAA,WACAjJ,SAAAyI,EACAL,kBACAM,wBAIA,SAAAW,EAAA1J,EAAA2J,GACA,QAAA1J,EAAA,EAA2BA,EAAA0J,EAAAnE,OAAcvF,IAAA,CACzC,IAAA2J,EAAAD,EAAA1J,IACA,IAAAD,EAAA6D,QAAA+F,IAAA5J,EAAA8D,KAAA8F,IA7EAlB,KAAA,GAmFA,IAAAK,EAAA,GACAN,EAAA,GACAoB,EAAA,GAEAC,EAAA,WACA9F,QAAAC,KACA,4BAAAuE,EAAAnI,SAAA,yBAIA,QAAAuG,KAAAlE,EACA,GAAA3B,OAAAkB,UAAAC,eAAA1B,KAAAkC,EAAAkE,GAAA,CAGA,IAAA4B,EAFAnI,EAAAsG,EAAAC,GAYA,IAAAmD,GAAA,EACAC,GAAA,EACAC,GAAA,EACAC,EAAA,GAIA,QAfA1B,EADA9F,EAAAkE,GACAiC,EAAAxI,GAEA,CACAiJ,KAAA,WACAjJ,SAAAuG,IAQAuC,QACAe,EAAA,yBAAA1B,EAAAW,MAAAgB,KAAA,SAEA3B,EAAAc,MACA,oBACAZ,EAAA0B,YAAA1B,EAAA0B,WAAA5B,GACAE,EAAA2B,iBACAN,EAAA,IAAAlD,MACA,oCACA2B,EAAAnI,SACA6J,IAEA,MACA,eACAxB,EAAA0B,YAAA1B,EAAA0B,WAAA5B,GACAE,EAAA2B,iBACAN,EAAA,IAAAlD,MACA,2CACA2B,EAAAnI,SACA,OACAmI,EAAAe,SACAW,IAEA,MACA,iBACAxB,EAAA4B,cAAA5B,EAAA4B,aAAA9B,GACAE,EAAA6B,mBACAR,EAAA,IAAAlD,MACA,mBAAAxG,EAAA,mBAAA6J,IAEA,MACA,eACAxB,EAAA8B,YAAA9B,EAAA8B,WAAAhC,GACAwB,GAAA,EACA,MACA,eACAtB,EAAA+B,YAAA/B,EAAA+B,WAAAjC,GACAyB,GAAA,EACA,MACA,QACA,UAAApD,MAAA,oBAAA2B,EAAAc,MAEA,GAAAS,EAEA,OADAxF,EAAA,SACAwC,QAAAE,OAAA8C,GAEA,GAAAC,EAGA,IAAA3J,KAFAwJ,EAAAxJ,GAAAqC,EAAArC,GACAqJ,EAAAjB,EAAAD,EAAAC,iBACAD,EAAAO,qBAEAhI,OAAAkB,UAAAC,eAAA1B,KACAgI,EAAAO,qBACA1I,KAGA0I,EAAA1I,KACA0I,EAAA1I,GAAA,IACAqJ,EACAX,EAAA1I,GACAmI,EAAAO,qBAAA1I,KAKA4J,IACAP,EAAAjB,EAAA,CAAAD,EAAAnI,WACAwJ,EAAAxJ,GAAAyJ,GAMA,IAqBAjE,EArBA6E,EAAA,GACA,IAAAzK,EAAA,EAAsBA,EAAAwI,EAAAjD,OAA4BvF,IAClDI,EAAAoI,EAAAxI,GAEAE,EAAAE,IACAF,EAAAE,GAAAqD,IAAAsB,eAEA0F,EAAA5G,KAAA,CACAjE,OAAAQ,EACAsK,aAAAxK,EAAAE,GAAAqD,IAAAsB,gBAKAT,EAAA,WACAxD,OAAA6J,KAAApI,GAAAqI,QAAA,SAAAvI,IACA,IAAAE,EAAAF,IAxhBA,SAAAA,UACAwI,gBAAAxI,GAwhBAyI,CAAAzI,KAMA,IADA,IAqCA0I,EACAC,EAtCAjC,EAAAP,EAAAQ,QACAD,EAAAxD,OAAA,GAGA,GAFAnF,EAAA2I,EAAAK,MACAxJ,EAAAM,EAAAE,GACA,CAEA,IAAAkG,EAAA,GAGA2E,EAAArL,EAAA6D,IAAAwB,iBACA,IAAA0D,EAAA,EAAuBA,EAAAsC,EAAA1F,OAA4BoD,KACnDD,EAAAuC,EAAAtC,IACArC,GAcA,IAZApD,EAAA9C,GAAAkG,EAGA1G,EAAA6D,IAAAC,QAAA,SAGAxD,EAAAE,UAGA0I,EAAA1I,GAGAuI,EAAA,EAAuBA,EAAA/I,EAAAkE,SAAAyB,OAA4BoD,IAAA,CACnD,IAAAuC,EAAAhL,EAAAN,EAAAkE,SAAA6E,IACAuC,KACAtF,EAAAsF,EAAAvH,QAAAC,QAAAxD,KACA,GACA8K,EAAAvH,QAAAkC,OAAAD,EAAA,KAQA,IAAAxF,KAAA0I,EACA,GACAhI,OAAAkB,UAAAC,eAAA1B,KAAAuI,EAAA1I,KAEAR,EAAAM,EAAAE,IAGA,IADA4K,EAAAlC,EAAA1I,GACAuI,EAAA,EAAyBA,EAAAqC,EAAAzF,OAAuCoD,IAChEoC,EAAAC,EAAArC,IACA/C,EAAAhG,EAAAkE,SAAAF,QAAAmH,KACA,GAAAnL,EAAAkE,SAAA+B,OAAAD,EAAA,GAYA,IAAAxF,KALAkE,EAAA,SAEAtB,EAAAyD,EAGAmD,EACA9I,OAAAkB,UAAAC,eAAA1B,KAAAqJ,EAAAxJ,KACAE,EAAAF,GAAAwJ,EAAAxJ,IAKA,IAAA+K,EAAA,KACA,IAAA/K,KAAA0I,EACA,GACAhI,OAAAkB,UAAAC,eAAA1B,KAAAuI,EAAA1I,KAEAR,EAAAM,EAAAE,IACA,CACA4K,EAAAlC,EAAA1I,GACA,IAAAgL,EAAA,GACA,IAAApL,EAAA,EAAyBA,EAAAgL,EAAAzF,OAAuCvF,IAGhE,GAFA+K,EAAAC,EAAAhL,GACA0I,EAAA9I,EAAA6D,IAAAoB,sBAAAkG,GACA,CACA,QAAAK,EAAAxH,QAAA8E,GAAA,SACA0C,EAAAvH,KAAA6E,GAGA,IAAA1I,EAAA,EAAyBA,EAAAoL,EAAA7F,OAAsBvF,IAAA,CAC/C0I,EAAA0C,EAAApL,GACA,IACA0I,EAAAsC,GACgB,MAAAvG,GAChBgE,EAAA4C,WACA5C,EAAA4C,UAAA,CACAhC,KAAA,iBACAjJ,WACAkL,aAAAN,EAAAhL,GACAmL,MAAA1G,IAGAgE,EAAA8C,eACAJ,MAAA1G,KASA,IAAAzE,EAAA,EAAsBA,EAAAyK,EAAAlF,OAAwCvF,IAAA,CAC9D,IAAA2J,EAAAc,EAAAzK,GACAI,EAAAuJ,EAAA/J,OACAuD,EAAA,CAAA/C,GACA,IACAD,EAAAC,GACa,MAAAqE,GACb,sBAAAkF,EAAAe,aACA,IACAf,EAAAe,aAAAjG,GACe,MAAA+G,GACf/C,EAAA4C,WACA5C,EAAA4C,UAAA,CACAhC,KAAA,oCACAjJ,WACA+K,MAAAK,EACAC,cAAAhH,IAGAgE,EAAA8C,eACAJ,MAAAK,GAEAL,MAAA1G,QAGAgE,EAAA4C,WACA5C,EAAA4C,UAAA,CACAhC,KAAA,sBACAjJ,WACA+K,MAAA1G,IAGAgE,EAAA8C,eACAJ,MAAA1G,IAOA,OAAA0G,GACA7G,EAAA,QACAwC,QAAAE,OAAAmE,KAGA7G,EAAA,QACA,IAAAwC,QAAA,SAAAC,GACAA,EAAAyB,MAKA,IAAAtI,EAAA,GAGA,SAAAC,EAAAC,GAGA,GAAAF,EAAAE,GACA,OAAAF,EAAAE,GAAAT,QAGA,IAAAC,EAAAM,EAAAE,GAAA,CACAJ,EAAAI,EACAC,GAAA,EACAV,QAAA,GACA8D,IAAAmB,EAAAxE,GACAuD,SAAAP,EAAAD,IAAA,GAAAC,GACAU,SAAA,IAUA,OANAxD,EAAAF,GAAAG,KAAAX,EAAAD,QAAAC,IAAAD,QAAA0D,EAAAjD,IAGAR,EAAAS,GAAA,EAGAT,EAAAD,QA6DA,OAxDAQ,EAAAK,EAAAF,EAGAH,EAAAM,EAAAP,EAGAC,EAAAO,EAAA,SAAAf,EAAAgB,EAAAC,GACAT,EAAAU,EAAAlB,EAAAgB,IACAG,OAAAC,eAAApB,EAAAgB,EAAA,CAAkDK,YAAA,EAAAC,IAAAL,KAKlDT,EAAAe,EAAA,SAAAvB,GACA,oBAAAwB,eAAAC,aACAN,OAAAC,eAAApB,EAAAwB,OAAAC,YAAA,CAAgEC,MAAA,WAEhEP,OAAAC,eAAApB,EAAA,cAAyD0B,OAAA,KAQzDlB,EAAAmB,EAAA,SAAAD,EAAAE,GAEA,GADA,EAAAA,IAAAF,EAAAlB,EAAAkB,IACA,EAAAE,EAAA,OAAAF,EACA,KAAAE,GAAA,iBAAAF,QAAAG,WAAA,OAAAH,EACA,IAAAI,EAAAX,OAAAY,OAAA,MAGA,GAFAvB,EAAAe,EAAAO,GACAX,OAAAC,eAAAU,EAAA,WAAiDT,YAAA,EAAAK,UACjD,EAAAE,GAAA,iBAAAF,EAAA,QAAAM,KAAAN,EAAAlB,EAAAO,EAAAe,EAAAE,EAAA,SAAAA,GAAwH,OAAAN,EAAAM,IAAqBC,KAAA,KAAAD,IAC7I,OAAAF,GAIAtB,EAAA0B,EAAA,SAAAjC,GACA,IAAAgB,EAAAhB,KAAA4B,WACA,WAAmC,OAAA5B,EAAA,SACnC,WAAyC,OAAAA,GAEzC,OADAO,EAAAO,EAAAE,EAAA,IAAAA,GACAA,GAIAT,EAAAU,EAAA,SAAAiB,EAAAC,GAA8D,OAAAjB,OAAAkB,UAAAC,eAAA1B,KAAAuB,EAAAC,IAG9D5B,EAAA+B,EAAA,GAGA/B,EAAAyH,EAAA,WAA8C,OAAA5E,GAI9CK,EAAA,aAAAA,CAAAlD,EAAAgC,EAAA,cAtxBA,CAyxBA,CAEAuJ;;;;8VAKA,SAAA9L,EAAA+L,EAAAxL,GAEA,aACAA,EAAAe,EAAAyK,GACA,IAAAC,EAAAzL,kBAAA,gBACA0L,EAAA1L,qBAAA,mBACA2L,EAAA3L,uBAAA,qBACAA,EAAAO,EAAAiL,EAAA,iBAA4F,OAAAC,EAAA,MAE5FzL,EAAAO,EAAAiL,EAAA,oBAA+F,OAAAE,EAAA,SAE/F,IAAAE,EAAA5L,sBAAA,oBACAA,EAAAO,EAAAiL,EAAA,qBAAgG,OAAAI,EAAA,UAEhG,IAAAC,EAAA7L,uBAAA,qBACAA,EAAAO,EAAAiL,EAAA,0BAAqG,OAAAK,EAAA,eAErG,IAAAC,EAAA9L,wBAAA,sBACAA,EAAAO,EAAAiL,EAAA,gCAA2G,OAAAM,EAAA,qBAE3G9L,EAAAO,EAAAiL,EAAA,6BAAwG,OAAAM,EAAA,kBAExG9L,EAAAO,EAAAiL,EAAA,qBAAgG,OAAAM,EAAA,UAEhG9L,EAAAO,EAAAiL,EAAA,uBAAkG,OAAAM,EAAA,YAElG9L,EAAAO,EAAAiL,EAAA,8BAAyG,OAAAG,EAAA,mBAEzG,IAAAI,EAAA/L,uBAAA,qBACAA,EAAAO,EAAAiL,EAAA,4BAAuG,OAAAO,EAAA,iBAEvG/L,EAAAO,EAAAiL,EAAA,8BAAyG,OAAAO,EAAA,mBAEzG/L,EAAAO,EAAAiL,EAAA,wCAAmH,OAAAO,EAAA,6BAEnH/L,EAAAO,EAAAiL,EAAA,kCAA6G,OAAAO,EAAA,uBAE7G,IAAAC,EAAAhM,6BAAA,2BACAA,EAAAO,EAAAiL,EAAA,oCAA+G,OAAAQ,EAAA,yBAE/GhM,EAAAO,EAAAiL,EAAA,6BAAwG,OAAAQ,EAAA,kBAExG,IAAAC,EAAAjM,sBAAA,oBACAA,EAAAO,EAAAiL,EAAA,iCAA4G,OAAAS,EAAA,sBAE5G,IAAAC,EAAAlM,yBAAA,uBACAA,EAAAO,EAAAiL,EAAA,wBAAmG,OAAAU,EAAA,aAEnG,IAAAC,EAAAnM,8BAAA,4BACAA,EAAAO,EAAAiL,EAAA,6BAAwG,OAAAW,EAAA,kBAExG,IAAAC,EAAApM,yBAAA,uBACAA,EAAAO,EAAAiL,EAAA,gCAA2G,OAAAY,EAAA,qBAE3GpM,EAAAO,EAAAiL,EAAA,iCAA4G,OAAAY,EAAA,sBAkB5GtM,OAAAuM,IAAAZ,EAAA,IACA3L,OAAAwM,OAAAZ,EAAA,OACA5L,OAAAyM,QAAAZ,EAAA,SAIAa;;;;8BAKA,SAAA/M,EAAAD,EAAAQ;;CAGA,SAAAV,GACA,aAEA,SAAAmN,EAAAvL,GACA,OAAAwL,SAAAxL,OAGA,SAAAyL,EAAAC,GACA,IAAAH,EAAAG,EAAAxH,QAAyC,SAEzC,QAAAvF,EAAA,EAAuBA,EAAA+M,EAAAxH,OAAqBvF,IAC5C,IAAA4M,EAAAG,EAAA/M,KAAA+M,EAAA/M,GAAA,GAAA+M,EAAA/M,GAAA,IACA,SAIA,SAGA,SAAAgN,EAAAC,EAAAC,GAGA,GAAAD,EAAAE,QAAA,eAAAF,EAAAtM,KAUA,OARAuM,IAEAD,EADAA,EAAAjE,MACAiE,EAAAjE,QAEAoE,MAAApL,UAAAgH,MAAAzI,KAAA0M,IAIAA,EAIA,GAAAG,MAAAC,QAAAJ,GAAA,CACA,IAAAH,EAAAG,GACA,UAAArG,MAAA,iCAAAqG,GAGA,WAAAK,WAAAL,GAIA,GAAAL,EAAAK,EAAA1H,SAAAuH,EAAAG,GACA,WAAAK,WAAAL,GAGA,UAAArG,MAAA,iCAGA,SAAA2G,EAAAhI,GACA,WAAA+H,WAAA/H,GAGA,SAAAiI,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GACA,MAAAD,GAAA,MAAAC,IAEAJ,EADAA,EAAAzE,MACAyE,EAAAzE,MAAA4E,EAAAC,GAEAT,MAAApL,UAAAgH,MAAAzI,KAAAkN,EAAAG,EAAAC,IAGAH,EAAAvJ,IAAAsJ,EAAAE,GAKA,IAAAG,EAAA,WA0CA,OACAC,QA1CA,SAAAC,GACA,IAAAzF,EAAA,GAAAvI,EAAA,EAEA,IADAgO,EAAAC,UAAAD,GACAhO,EAAAgO,EAAAzI,QAAA,CACA,IAAA9E,EAAAuN,EAAAE,WAAAlO,KAGA,KAAAS,GACA8H,EAAA1E,KAAAgJ,SAAAmB,EAAAG,OAAAnO,EAAA,QACAA,GAAA,GAIAuI,EAAA1E,KAAApD,GAIA,OAAAuM,EAAAzE,IA0BA6F,UAvBA,SAAAC,GAGA,IAFA,IAAA9F,EAAA,GAAAvI,EAAA,EAEAA,EAAAqO,EAAA9I,QAAA,CACA,IAAA9E,EAAA4N,EAAArO,GAEAS,EAAA,KACA8H,EAAA1E,KAAAyK,OAAAC,aAAA9N,IACAT,KACiBS,EAAA,KAAAA,EAAA,KACjB8H,EAAA1E,KAAAyK,OAAAC,cAAA,GAAA9N,IAAA,KAAA4N,EAAArO,EAAA,KACAA,GAAA,IAEAuI,EAAA1E,KAAAyK,OAAAC,cAAA,GAAA9N,IAAA,OAAA4N,EAAArO,EAAA,UAAAqO,EAAArO,EAAA,KACAA,GAAA,GAIA,OAAAuI,EAAA2B,KAAA,MAvCA,GAgDAsE,EAAA,WAWA,IAAAC,EAAA,mBAWA,OACAV,QAtBA,SAAAC,GAEA,IADA,IAAAzF,EAAA,GACAvI,EAAA,EAA2BA,EAAAgO,EAAAzI,OAAiBvF,GAAA,EAC5CuI,EAAA1E,KAAAgJ,SAAAmB,EAAAG,OAAAnO,EAAA,QAGA,OAAAuI,GAiBA6F,UAXA,SAAAC,GAEA,IADA,IAAA9F,EAAA,GACAvI,EAAA,EAA+BA,EAAAqO,EAAA9I,OAAkBvF,IAAA,CACjD,IAAA0O,EAAAL,EAAArO,GACAuI,EAAA1E,KAAA4K,GAAA,IAAAC,IAAA,GAAAD,EAAA,GAAAC,IAEA,OAAAnG,EAAA2B,KAAA,MAnBA,GA8BAyE,EAAA,CAA0BC,GAAA,GAAAC,GAAA,GAAAC,GAAA,IAG1BC,EAAA,wGAGAC,EAAA,o5BACAC,EAAA,o5BAGAC,EAAA,yrFACAC,EAAA,0rFACAC,EAAA,yrFACAC,EAAA,yrFAGAC,EAAA,0rFACAC,EAAA,0rFACAC,EAAA,yrFACAC,EAAA,yrFAGAC,EAAA,0rFACAC,EAAA,0rFACAC,EAAA,yrFACAC,EAAA,yrFAEA,SAAAC,EAAAzB,GAEA,IADA,IAAA9F,EAAA,GACAvI,EAAA,EAAuBA,EAAAqO,EAAA9I,OAAkBvF,GAAA,EACzCuI,EAAA1E,KACAwK,EAAArO,IAAA,GACAqO,EAAArO,EAAA,OACAqO,EAAArO,EAAA,MACAqO,EAAArO,EAAA,IAGA,OAAAuI,EAGA,IAAAwH,EAAA,SAAApO,GACA,KAAAqO,gBAAAD,GACA,MAAAnJ,MAAA,uCAGA9F,OAAAC,eAAAiP,KAAA,OACA3O,MAAA2L,EAAArL,GAAA,KAGAqO,KAAAC,YAIAF,EAAA/N,UAAAiO,SAAA,WAEA,IAAAC,EAAAvB,EAAAqB,KAAArO,IAAA4D,QACA,SAAA2K,EACA,UAAAtJ,MAAA,iDAIAoJ,KAAAG,IAAA,GAGAH,KAAAI,IAAA,GAEA,QAAApQ,EAAA,EAAuBA,GAAAkQ,EAAalQ,IACpCgQ,KAAAG,IAAAtM,KAAA,WACAmM,KAAAI,IAAAvM,KAAA,WAGA,IAOAwM,EAPAC,EAAA,GAAAJ,EAAA,GACAK,EAAAP,KAAArO,IAAA4D,OAAA,EAGAiL,EAAAV,EAAAE,KAAArO,KAIA,IAAA3B,EAAA,EAAuBA,EAAAuQ,EAAQvQ,IAC/BqQ,EAAArQ,GAAA,EACAgQ,KAAAG,IAAAE,GAAArQ,EAAA,GAAAwQ,EAAAxQ,GACAgQ,KAAAI,IAAAF,EAAAG,GAAArQ,EAAA,GAAAwQ,EAAAxQ,GAMA,IAFA,IACAyQ,EADAC,EAAA,EACApP,EAAAiP,EACAjP,EAAAgP,GAAA,CAUA,GATAG,EAAAD,EAAAD,EAAA,GACAC,EAAA,IAAAxB,EAAAyB,GAAA,YACAzB,EAAAyB,GAAA,WACAzB,EAAA,IAAAyB,IAAA,EACAzB,EAAAyB,GAAA,QACA1B,EAAA2B,IAAA,GACAA,GAAA,EAGA,GAAAH,EACA,IAAAvQ,EAAA,EAA+BA,EAAAuQ,EAAQvQ,IACvCwQ,EAAAxQ,IAAAwQ,EAAAxQ,EAAA,OAIa,CACb,IAAAA,EAAA,EAA+BA,EAAAuQ,EAAA,EAAcvQ,IAC7CwQ,EAAAxQ,IAAAwQ,EAAAxQ,EAAA,GAEAyQ,EAAAD,EAAAD,EAAA,KAEAC,EAAAD,EAAA,IAAAvB,EAAA,IAAAyB,GACAzB,EAAAyB,GAAA,UACAzB,EAAAyB,GAAA,YACAzB,EAAAyB,GAAA,YAEA,IAAAzQ,EAAAuQ,EAAA,IAA0CvQ,EAAAuQ,EAAQvQ,IAClDwQ,EAAAxQ,IAAAwQ,EAAAxQ,EAAA,GAMA,IADAA,EAAA,EACAA,EAAAuQ,GAAAjP,EAAAgP,GACApP,EAAAI,GAAA,EACAb,EAAAa,EAAA,EACA0O,KAAAG,IAAAjP,GAAAT,GAAA+P,EAAAxQ,GACAgQ,KAAAI,IAAAF,EAAAhP,GAAAT,GAAA+P,EAAAxQ,KACAsB,IAKA,QAAAJ,EAAA,EAAuBA,EAAAgP,EAAYhP,IACnC,QAAAT,EAAA,EAA2BA,EAAA,EAAOA,IAClCgQ,EAAAT,KAAAI,IAAAlP,GAAAT,GACAuP,KAAAI,IAAAlP,GAAAT,GAAAiP,EAAAe,GAAA,QACAd,EAAAc,GAAA,QACAb,EAAAa,GAAA,OACAZ,EAAA,IAAAY,IAKAV,EAAA/N,UAAA2O,QAAA,SAAAC,GACA,OAAAA,EAAArL,OACA,UAAAqB,MAAA,6CAQA,IALA,IAAAsJ,EAAAF,KAAAG,IAAA5K,OAAA,EACAxF,EAAA,UAGAuB,EAAAwO,EAAAc,GACA5Q,EAAA,EAAuBA,EAAA,EAAOA,IAC9BsB,EAAAtB,IAAAgQ,KAAAG,IAAA,GAAAnQ,GAIA,QAAAkB,EAAA,EAAuBA,EAAAgP,EAAYhP,IAAA,CACnC,IAAAlB,EAAA,EAA2BA,EAAA,EAAOA,IAClCD,EAAAC,GAAAkP,EAAA5N,EAAAtB,IAAA,QACAmP,EAAA7N,GAAAtB,EAAA,eACAoP,EAAA9N,GAAAtB,EAAA,cACAqP,EAAA,IAAA/N,GAAAtB,EAAA,OACAgQ,KAAAG,IAAAjP,GAAAlB,GAEAsB,EAAAvB,EAAAiJ,QAIA,IAAAyH,EAAAlI,EAAAgF,EAAA,IACA,IAAAvN,EAAA,EAAuBA,EAAA,EAAOA,IAC9ByQ,EAAAT,KAAAG,IAAAD,GAAAlQ,GACAuI,EAAA,EAAAvI,GAAA,KAAAgP,EAAA1N,EAAAtB,IAAA,QAAAyQ,GAAA,IACAlI,EAAA,EAAAvI,EAAA,QAAAgP,EAAA1N,GAAAtB,EAAA,eAAAyQ,GAAA,IACAlI,EAAA,EAAAvI,EAAA,QAAAgP,EAAA1N,GAAAtB,EAAA,cAAAyQ,GAAA,GACAlI,EAAA,EAAAvI,EAAA,QAAAgP,EAAA,IAAA1N,GAAAtB,EAAA,OAAAyQ,GAGA,OAAAlI,GAGAwH,EAAA/N,UAAA6O,QAAA,SAAAC,GACA,OAAAA,EAAAvL,OACA,UAAAqB,MAAA,8CAQA,IALA,IAAAsJ,EAAAF,KAAAI,IAAA7K,OAAA,EACAxF,EAAA,UAGAuB,EAAAwO,EAAAgB,GACA9Q,EAAA,EAAuBA,EAAA,EAAOA,IAC9BsB,EAAAtB,IAAAgQ,KAAAI,IAAA,GAAApQ,GAIA,QAAAkB,EAAA,EAAuBA,EAAAgP,EAAYhP,IAAA,CACnC,IAAAlB,EAAA,EAA2BA,EAAA,EAAOA,IAClCD,EAAAC,GAAAsP,EAAAhO,EAAAtB,IAAA,QACAuP,EAAAjO,GAAAtB,EAAA,eACAwP,EAAAlO,GAAAtB,EAAA,cACAyP,EAAA,IAAAnO,GAAAtB,EAAA,OACAgQ,KAAAI,IAAAlP,GAAAlB,GAEAsB,EAAAvB,EAAAiJ,QAIA,IAAAyH,EAAAlI,EAAAgF,EAAA,IACA,IAAAvN,EAAA,EAAuBA,EAAA,EAAOA,IAC9ByQ,EAAAT,KAAAI,IAAAF,GAAAlQ,GACAuI,EAAA,EAAAvI,GAAA,KAAAiP,EAAA3N,EAAAtB,IAAA,QAAAyQ,GAAA,IACAlI,EAAA,EAAAvI,EAAA,QAAAiP,EAAA3N,GAAAtB,EAAA,eAAAyQ,GAAA,IACAlI,EAAA,EAAAvI,EAAA,QAAAiP,EAAA3N,GAAAtB,EAAA,cAAAyQ,GAAA,GACAlI,EAAA,EAAAvI,EAAA,QAAAiP,EAAA,IAAA3N,GAAAtB,EAAA,OAAAyQ,GAGA,OAAAlI,GAOA,IAAAwI,EAAA,SAAApP,GACA,KAAAqO,gBAAAe,GACA,MAAAnK,MAAA,uCAGAoJ,KAAAgB,YAAA,wBACAhB,KAAArP,KAAA,MAEAqP,KAAAiB,KAAA,IAAAlB,EAAApO,IAGAoP,EAAA/O,UAAA2O,QAAA,SAAAC,GAGA,IAFAA,EAAA5D,EAAA4D,IAEArL,OAAA,MACA,UAAAqB,MAAA,yDAMA,IAHA,IAAAkK,EAAAvD,EAAAqD,EAAArL,QACA2L,EAAA3D,EAAA,IAEAvN,EAAA,EAAuBA,EAAA4Q,EAAArL,OAAsBvF,GAAA,GAC7CwN,EAAAoD,EAAAM,EAAA,EAAAlR,IAAA,IAEAwN,EADA0D,EAAAlB,KAAAiB,KAAAN,QAAAO,GACAJ,EAAA9Q,GAGA,OAAA8Q,GAGAC,EAAA/O,UAAA6O,QAAA,SAAAC,GAGA,IAFAA,EAAA9D,EAAA8D,IAEAvL,OAAA,MACA,UAAAqB,MAAA,0DAMA,IAHA,IAAAgK,EAAArD,EAAAuD,EAAAvL,QACA2L,EAAA3D,EAAA,IAEAvN,EAAA,EAAuBA,EAAA8Q,EAAAvL,OAAuBvF,GAAA,GAC9CwN,EAAAsD,EAAAI,EAAA,EAAAlR,IAAA,IAEAwN,EADA0D,EAAAlB,KAAAiB,KAAAJ,QAAAK,GACAN,EAAA5Q,GAGA,OAAA4Q,GAOA,IAAAO,EAAA,SAAAxP,EAAAyP,GACA,KAAApB,gBAAAmB,GACA,MAAAvK,MAAA,uCAMA,GAHAoJ,KAAAgB,YAAA,wBACAhB,KAAArP,KAAA,MAEAyQ,GAGS,OAAAA,EAAA7L,OACT,UAAAqB,MAAA,4DAHAwK,EAAA7D,EAAA,IAMAyC,KAAAqB,iBAAArE,EAAAoE,GAAA,GAEApB,KAAAiB,KAAA,IAAAlB,EAAApO,IAGAwP,EAAAnP,UAAA2O,QAAA,SAAAC,GAGA,IAFAA,EAAA5D,EAAA4D,IAEArL,OAAA,MACA,UAAAqB,MAAA,yDAMA,IAHA,IAAAkK,EAAAvD,EAAAqD,EAAArL,QACA2L,EAAA3D,EAAA,IAEAvN,EAAA,EAAuBA,EAAA4Q,EAAArL,OAAsBvF,GAAA,IAC7CwN,EAAAoD,EAAAM,EAAA,EAAAlR,IAAA,IAEA,QAAA2I,EAAA,EAA2BA,EAAA,GAAQA,IACnCuI,EAAAvI,IAAAqH,KAAAqB,iBAAA1I,GAGAqH,KAAAqB,iBAAArB,KAAAiB,KAAAN,QAAAO,GACA1D,EAAAwC,KAAAqB,iBAAAP,EAAA9Q,GAGA,OAAA8Q,GAGAK,EAAAnP,UAAA6O,QAAA,SAAAC,GAGA,IAFAA,EAAA9D,EAAA8D,IAEAvL,OAAA,MACA,UAAAqB,MAAA,0DAMA,IAHA,IAAAgK,EAAArD,EAAAuD,EAAAvL,QACA2L,EAAA3D,EAAA,IAEAvN,EAAA,EAAuBA,EAAA8Q,EAAAvL,OAAuBvF,GAAA,IAC9CwN,EAAAsD,EAAAI,EAAA,EAAAlR,IAAA,IACAkR,EAAAlB,KAAAiB,KAAAJ,QAAAK,GAEA,QAAAvI,EAAA,EAA2BA,EAAA,GAAQA,IACnCiI,EAAA5Q,EAAA2I,GAAAuI,EAAAvI,GAAAqH,KAAAqB,iBAAA1I,GAGA6E,EAAAsD,EAAAd,KAAAqB,iBAAA,EAAArR,IAAA,IAGA,OAAA4Q,GAOA,IAAAU,EAAA,SAAA3P,EAAAyP,EAAAG,GACA,KAAAvB,gBAAAsB,GACA,MAAA1K,MAAA,uCAMA,GAHAoJ,KAAAgB,YAAA,kBACAhB,KAAArP,KAAA,MAEAyQ,GAGS,OAAAA,EAAA7L,OACT,UAAAqB,MAAA,2DAHAwK,EAAA7D,EAAA,IAMAgE,IAA2BA,EAAA,GAE3BvB,KAAAuB,cAEAvB,KAAAwB,eAAAxE,EAAAoE,GAAA,GAEApB,KAAAiB,KAAA,IAAAlB,EAAApO,IAGA2P,EAAAtP,UAAA2O,QAAA,SAAAC,GACA,GAAAA,EAAArL,OAAAyK,KAAAuB,aAAA,EACA,UAAA3K,MAAA,sDAMA,IAHA,IAEA6K,EAFAC,EAAA1E,EAAA4D,GAAA,GAGA5Q,EAAA,EAAuBA,EAAA0R,EAAAnM,OAAsBvF,GAAAgQ,KAAAuB,YAAA,CAC7CE,EAAAzB,KAAAiB,KAAAN,QAAAX,KAAAwB,gBACA,QAAA7I,EAAA,EAA2BA,EAAAqH,KAAAuB,YAAsB5I,IACjD+I,EAAA1R,EAAA2I,IAAA8I,EAAA9I,GAIA6E,EAAAwC,KAAAwB,eAAAxB,KAAAwB,eAAA,EAAAxB,KAAAuB,aACA/D,EAAAkE,EAAA1B,KAAAwB,eAAA,GAAAxB,KAAAuB,YAAAvR,IAAAgQ,KAAAuB,aAGA,OAAAG,GAGAJ,EAAAtP,UAAA6O,QAAA,SAAAC,GACA,GAAAA,EAAAvL,OAAAyK,KAAAuB,aAAA,EACA,UAAA3K,MAAA,uDAMA,IAHA,IAEA6K,EAFAb,EAAA5D,EAAA8D,GAAA,GAGA9Q,EAAA,EAAuBA,EAAA4Q,EAAArL,OAAsBvF,GAAAgQ,KAAAuB,YAAA,CAC7CE,EAAAzB,KAAAiB,KAAAN,QAAAX,KAAAwB,gBAEA,QAAA7I,EAAA,EAA2BA,EAAAqH,KAAAuB,YAAsB5I,IACjDiI,EAAA5Q,EAAA2I,IAAA8I,EAAA9I,GAIA6E,EAAAwC,KAAAwB,eAAAxB,KAAAwB,eAAA,EAAAxB,KAAAuB,aACA/D,EAAAsD,EAAAd,KAAAwB,eAAA,GAAAxB,KAAAuB,YAAAvR,IAAAgQ,KAAAuB,aAGA,OAAAX,GAMA,IAAAe,EAAA,SAAAhQ,EAAAyP,GACA,KAAApB,gBAAA2B,GACA,MAAA/K,MAAA,uCAMA,GAHAoJ,KAAAgB,YAAA,kBACAhB,KAAArP,KAAA,MAEAyQ,GAGS,OAAAA,EAAA7L,OACT,UAAAqB,MAAA,4DAHAwK,EAAA7D,EAAA,IAMAyC,KAAA4B,eAAA5E,EAAAoE,GAAA,GACApB,KAAA6B,oBAAA,GAEA7B,KAAAiB,KAAA,IAAAlB,EAAApO,IAGAgQ,EAAA3P,UAAA2O,QAAA,SAAAC,GAGA,IAFA,IAAAc,EAAA1E,EAAA4D,GAAA,GAEA5Q,EAAA,EAAuBA,EAAA0R,EAAAnM,OAAsBvF,IAC7C,KAAAgQ,KAAA6B,sBACA7B,KAAA4B,eAAA5B,KAAAiB,KAAAN,QAAAX,KAAA4B,gBACA5B,KAAA6B,oBAAA,GAEAH,EAAA1R,IAAAgQ,KAAA4B,eAAA5B,KAAA6B,uBAGA,OAAAH,GAIAC,EAAA3P,UAAA6O,QAAAc,EAAA3P,UAAA2O,QAMA,IAAAmB,EAAA,SAAAC,GACA,KAAA/B,gBAAA8B,GACA,MAAAlL,MAAA,2CAIA,IAAAmL,OAAkDA,EAAA,GAElD,oBACA/B,KAAAgC,SAAAzE,EAAA,IACAyC,KAAAiC,SAAAF,IAGA/B,KAAAkC,SAAAH,IAIAD,EAAA9P,UAAAiQ,SAAA,SAAA5Q,GACA,uBAAAwL,SAAAxL,MACA,UAAAuF,MAAA,8CAIA,GAAAvF,EAAA8Q,OAAAC,iBACA,UAAAxL,MAAA,mCAGA,QAAAyJ,EAAA,GAA4BA,GAAA,IAAYA,EACxCL,KAAAgC,SAAA3B,GAAAhP,EAAA,IACAA,EAAAwL,SAAAxL,EAAA,MAIAyQ,EAAA9P,UAAAkQ,SAAA,SAAA7D,GAGA,QAFAA,EAAArB,EAAAqB,GAAA,IAEA9I,OACA,UAAAqB,MAAA,iDAGAoJ,KAAAgC,SAAA3D,GAGAyD,EAAA9P,UAAAqQ,UAAA,WACA,QAAArS,EAAA,GAAwBA,GAAA,EAAQA,IAAA,CAChC,SAAAgQ,KAAAgC,SAAAhS,GAEa,CACbgQ,KAAAgC,SAAAhS,KACA,MAHAgQ,KAAAgC,SAAAhS,GAAA,IAYA,IAAAsS,EAAA,SAAA3Q,EAAA4Q,GACA,KAAAvC,gBAAAsC,GACA,MAAA1L,MAAA,uCAGAoJ,KAAAgB,YAAA,UACAhB,KAAArP,KAAA,MAEA4R,aAAAT,IACAS,EAAA,IAAAT,EAAAS,IAGAvC,KAAAgC,SAAAO,EAEAvC,KAAAwC,kBAAA,KACAxC,KAAAyC,uBAAA,GAEAzC,KAAAiB,KAAA,IAAAlB,EAAApO,IAGA2Q,EAAAtQ,UAAA2O,QAAA,SAAAC,GAGA,IAFA,IAAAc,EAAA1E,EAAA4D,GAAA,GAEA5Q,EAAA,EAAuBA,EAAA0R,EAAAnM,OAAsBvF,IAC7C,KAAAgQ,KAAAyC,yBACAzC,KAAAwC,kBAAAxC,KAAAiB,KAAAN,QAAAX,KAAAgC,mBACAhC,KAAAyC,uBAAA,EACAzC,KAAAgC,SAAAK,aAEAX,EAAA1R,IAAAgQ,KAAAwC,kBAAAxC,KAAAyC,0BAGA,OAAAf,GAIAY,EAAAtQ,UAAA6O,QAAAyB,EAAAtQ,UAAA2O,QA0CA,IAAA+B,EAAA,CACA3C,MACA+B,UAEAa,gBAAA,CACAC,IAAA7B,EACA8B,IAAA1B,EACA2B,IAAAxB,EACAyB,IAAApB,EACAqB,IAAAV,GAGAW,MAAA,CACAC,IAAA1E,EACA2E,KAAArF,GAGAsF,QAAA,CACAC,MAAA,CACAC,IAtDA,SAAAhN,GAEA,IAAAiN,EAAA,IADAjN,EAAA0G,EAAA1G,GAAA,IACAf,OAAA,GACAgD,EAAAgF,EAAAjH,EAAAf,OAAAgO,GACA/F,EAAAlH,EAAAiC,GACA,QAAAvI,EAAAsG,EAAAf,OAAiCvF,EAAAuI,EAAAhD,OAAmBvF,IACpDuI,EAAAvI,GAAAuT,EAEA,OAAAhL,GA+CAiL,MA5CA,SAAAlN,GAEA,IADAA,EAAA0G,EAAA1G,GAAA,IACAf,OAAA,GAA+B,UAAAqB,MAAA,yBAE/B,IAAA2M,EAAAjN,IAAAf,OAAA,GACA,GAAAgO,EAAA,GAA0B,UAAA3M,MAAA,oCAG1B,IADA,IAAArB,EAAAe,EAAAf,OAAAgO,EACAvT,EAAA,EAAuBA,EAAAuT,EAAYvT,IACnC,GAAAsG,EAAAf,EAAAvF,KAAAuT,EACA,UAAA3M,MAAA,+BAIA,IAAA2B,EAAAgF,EAAAhI,GAEA,OADAiI,EAAAlH,EAAAiC,EAAA,IAAAhD,GACAgD,KAgCAkL,WAAA,CACAzG,cACAO,cACAC,cAOA5N,EAAAD,QAAA+S,EA7wBA,IA0xBAgB;;;;8BAKA,SAAA9T,EAAAD,EAAAQ,IAEA,SAAAP,IAA8C,SAAAA,EAAAD,GAC9C,aAGA,SAAAgU,EAAAC,EAAAC,GACA,IAAAD,EAAA,UAAAhN,MAAAiN,GAAA,oBAKA,SAAAC,EAAAC,EAAAC,GACAD,EAAAE,OAAAD,EACA,IAAAE,EAAA,aACAA,EAAAlS,UAAAgS,EAAAhS,UACA+R,EAAA/R,UAAA,IAAAkS,EACAH,EAAA/R,UAAAmS,YAAAJ,EAKA,SAAAK,EAAAC,EAAAC,EAAAC,GACA,GAAAH,EAAAI,KAAAH,GACA,OAAAA,EAGArE,KAAAyE,SAAA,EACAzE,KAAA0E,MAAA,KACA1E,KAAAzK,OAAA,EAGAyK,KAAA2E,IAAA,KAEA,OAAAN,IACA,OAAAC,GAAA,OAAAA,IACAC,EAAAD,EACAA,EAAA,IAGAtE,KAAA4E,MAAAP,GAAA,EAAAC,GAAA,GAAAC,GAAA,OAYA,IAAAM,EATA,iBAAAjV,EACAA,EAAAD,QAAAyU,EAEAzU,EAAAyU,KAGAA,OACAA,EAAAU,SAAA,GAGA,IACAD,EAAA1U,eAAA,GAAA0U,OACG,MAAAzQ,IAoIH,SAAA2Q,EAAAC,EAAAC,EAAAC,GAGA,IAFA,IAAAhU,EAAA,EACAiU,EAAAC,KAAAC,IAAAL,EAAAzP,OAAA2P,GACAlV,EAAAiV,EAAuBjV,EAAAmV,EAASnV,IAAA,CAChC,IAAAS,EAAAuU,EAAA9G,WAAAlO,GAAA,GAEAkB,IAAA,EAIAA,GADAT,GAAA,IAAAA,GAAA,GACAA,EAAA,MAGOA,GAAA,IAAAA,GAAA,GACPA,EAAA,MAIA,GAAAA,EAGA,OAAAS,EAiCA,SAAAoU,EAAAN,EAAAC,EAAAC,EAAAK,GAGA,IAFA,IAAArU,EAAA,EACAiU,EAAAC,KAAAC,IAAAL,EAAAzP,OAAA2P,GACAlV,EAAAiV,EAAuBjV,EAAAmV,EAASnV,IAAA,CAChC,IAAAS,EAAAuU,EAAA9G,WAAAlO,GAAA,GAEAkB,GAAAqU,EAIArU,GADAT,GAAA,GACAA,EAAA,MAGOA,GAAA,GACPA,EAAA,MAIAA,EAGA,OAAAS,EA5MAkT,EAAAI,KAAA,SAAAgB,GACA,OAAAA,aAAApB,GAIA,OAAAoB,GAAA,iBAAAA,GACAA,EAAArB,YAAAW,WAAAV,EAAAU,UAAA1H,MAAAC,QAAAmI,EAAAd,QAGAN,EAAAqB,IAAA,SAAAC,EAAAC,GACA,OAAAD,EAAAE,IAAAD,GAAA,EAAAD,EACAC,GAGAvB,EAAAiB,IAAA,SAAAK,EAAAC,GACA,OAAAD,EAAAE,IAAAD,GAAA,EAAAD,EACAC,GAGAvB,EAAApS,UAAA4S,MAAA,SAAAP,EAAAC,EAAAC,GACA,oBAAAF,EACA,OAAArE,KAAA6F,YAAAxB,EAAAC,EAAAC,GAGA,oBAAAF,EACA,OAAArE,KAAA8F,WAAAzB,EAAAC,EAAAC,GAGA,QAAAD,IACAA,EAAA,IAEAX,EAAAW,KAAA,EAAAA,OAAA,GAAAA,GAAA,IAGA,IAAAW,EAAA,EACA,OAFAZ,IAAA0B,WAAAC,QAAA,YAEA,IACAf,IAGA,KAAAX,EACAtE,KAAAiG,UAAA5B,EAAAY,GAEAjF,KAAAkG,WAAA7B,EAAAC,EAAAW,GAGA,MAAAZ,EAAA,KACArE,KAAAyE,SAAA,GAGAzE,KAAAwD,QAEA,OAAAe,GAEAvE,KAAA8F,WAAA9F,KAAAmG,UAAA7B,EAAAC,IAGAH,EAAApS,UAAA6T,YAAA,SAAAxB,EAAAC,EAAAC,GACAF,EAAA,IACArE,KAAAyE,SAAA,EACAJ,MAEAA,EAAA,UACArE,KAAA0E,MAAA,UAAAL,GACArE,KAAAzK,OAAA,GACK8O,EAAA,kBACLrE,KAAA0E,MAAA,CACA,SAAAL,EACAA,EAAA,mBAEArE,KAAAzK,OAAA,IAEAoO,EAAAU,EAAA,kBACArE,KAAA0E,MAAA,CACA,SAAAL,EACAA,EAAA,kBACA,GAEArE,KAAAzK,OAAA,GAGA,OAAAgP,GAGAvE,KAAA8F,WAAA9F,KAAAmG,UAAA7B,EAAAC,IAGAH,EAAApS,UAAA8T,WAAA,SAAAzB,EAAAC,EAAAC,GAGA,GADAZ,EAAA,iBAAAU,EAAA9O,QACA8O,EAAA9O,QAAA,EAGA,OAFAyK,KAAA0E,MAAA,IACA1E,KAAAzK,OAAA,EACAyK,KAGAA,KAAAzK,OAAA6P,KAAAgB,KAAA/B,EAAA9O,OAAA,GACAyK,KAAA0E,MAAA,IAAAtH,MAAA4C,KAAAzK,QACA,QAAAvF,EAAA,EAAmBA,EAAAgQ,KAAAzK,OAAiBvF,IACpCgQ,KAAA0E,MAAA1U,GAAA,EAGA,IAAA2I,EAAA0N,EACAC,EAAA,EACA,UAAA/B,EACA,IAAAvU,EAAAqU,EAAA9O,OAAA,EAAAoD,EAAA,EAAwC3I,GAAA,EAAQA,GAAA,EAChDqW,EAAAhC,EAAArU,GAAAqU,EAAArU,EAAA,MAAAqU,EAAArU,EAAA,OACAgQ,KAAA0E,MAAA/L,IAAA0N,GAAAC,EAAA,SACAtG,KAAA0E,MAAA/L,EAAA,GAAA0N,IAAA,GAAAC,EAAA,UACAA,GAAA,KACA,KACAA,GAAA,GACA3N,UAGK,UAAA4L,EACL,IAAAvU,EAAA,EAAA2I,EAAA,EAAwB3I,EAAAqU,EAAA9O,OAAmBvF,GAAA,EAC3CqW,EAAAhC,EAAArU,GAAAqU,EAAArU,EAAA,MAAAqU,EAAArU,EAAA,OACAgQ,KAAA0E,MAAA/L,IAAA0N,GAAAC,EAAA,SACAtG,KAAA0E,MAAA/L,EAAA,GAAA0N,IAAA,GAAAC,EAAA,UACAA,GAAA,KACA,KACAA,GAAA,GACA3N,KAIA,OAAAqH,KAAAwD,SA2BAY,EAAApS,UAAAiU,UAAA,SAAA5B,EAAAY,GAEAjF,KAAAzK,OAAA6P,KAAAgB,MAAA/B,EAAA9O,OAAA0P,GAAA,GACAjF,KAAA0E,MAAA,IAAAtH,MAAA4C,KAAAzK,QACA,QAAAvF,EAAA,EAAmBA,EAAAgQ,KAAAzK,OAAiBvF,IACpCgQ,KAAA0E,MAAA1U,GAAA,EAGA,IAAA2I,EAAA0N,EAEAC,EAAA,EACA,IAAAtW,EAAAqU,EAAA9O,OAAA,EAAAoD,EAAA,EAAsC3I,GAAAiV,EAAYjV,GAAA,EAClDqW,EAAAtB,EAAAV,EAAArU,IAAA,GACAgQ,KAAA0E,MAAA/L,IAAA0N,GAAAC,EAAA,SAEAtG,KAAA0E,MAAA/L,EAAA,IAAA0N,IAAA,GAAAC,EAAA,SACAA,GAAA,KACA,KACAA,GAAA,GACA3N,KAGA3I,EAAA,IAAAiV,IACAoB,EAAAtB,EAAAV,EAAAY,EAAAjV,EAAA,GACAgQ,KAAA0E,MAAA/L,IAAA0N,GAAAC,EAAA,SACAtG,KAAA0E,MAAA/L,EAAA,IAAA0N,IAAA,GAAAC,EAAA,SAEAtG,KAAAwD,SA2BAY,EAAApS,UAAAkU,WAAA,SAAA7B,EAAAC,EAAAW,GAEAjF,KAAA0E,MAAA,IACA1E,KAAAzK,OAAA,EAGA,QAAAgR,EAAA,EAAAC,EAAA,EAAsCA,GAAA,SAAsBA,GAAAlC,EAC5DiC,IAEAA,IACAC,IAAAlC,EAAA,EAOA,IALA,IAAAmC,EAAApC,EAAA9O,OAAA0P,EACAyB,EAAAD,EAAAF,EACArB,EAAAE,KAAAC,IAAAoB,IAAAC,GAAAzB,EAEA0B,EAAA,EACA3W,EAAAiV,EAAuBjV,EAAAkV,EAASlV,GAAAuW,EAChCI,EAAArB,EAAAjB,EAAArU,IAAAuW,EAAAjC,GAEAtE,KAAA4G,MAAAJ,GACAxG,KAAA0E,MAAA,GAAAiC,EAAA,SACA3G,KAAA0E,MAAA,IAAAiC,EAEA3G,KAAA6G,OAAAF,GAIA,OAAAD,EAAA,CACA,IAAAI,EAAA,EAGA,IAFAH,EAAArB,EAAAjB,EAAArU,EAAAqU,EAAA9O,OAAA+O,GAEAtU,EAAA,EAAiBA,EAAA0W,EAAS1W,IAC1B8W,GAAAxC,EAGAtE,KAAA4G,MAAAE,GACA9G,KAAA0E,MAAA,GAAAiC,EAAA,SACA3G,KAAA0E,MAAA,IAAAiC,EAEA3G,KAAA6G,OAAAF,KAKAvC,EAAApS,UAAAkL,KAAA,SAAA6J,GACAA,EAAArC,MAAA,IAAAtH,MAAA4C,KAAAzK,QACA,QAAAvF,EAAA,EAAmBA,EAAAgQ,KAAAzK,OAAiBvF,IACpC+W,EAAArC,MAAA1U,GAAAgQ,KAAA0E,MAAA1U,GAEA+W,EAAAxR,OAAAyK,KAAAzK,OACAwR,EAAAtC,SAAAzE,KAAAyE,SACAsC,EAAApC,IAAA3E,KAAA2E,KAGAP,EAAApS,UAAAgV,MAAA,WACA,IAAA9V,EAAA,IAAAkT,EAAA,MAEA,OADApE,KAAA9C,KAAAhM,GACAA,GAGAkT,EAAApS,UAAAiV,QAAA,SAAAC,GACA,KAAAlH,KAAAzK,OAAA2R,GACAlH,KAAA0E,MAAA1E,KAAAzK,UAAA,EAEA,OAAAyK,MAIAoE,EAAApS,UAAAwR,MAAA,WACA,KAAAxD,KAAAzK,OAAA,OAAAyK,KAAA0E,MAAA1E,KAAAzK,OAAA,IACAyK,KAAAzK,SAEA,OAAAyK,KAAAmH,aAGA/C,EAAApS,UAAAmV,UAAA,WAKA,OAHA,IAAAnH,KAAAzK,QAAA,IAAAyK,KAAA0E,MAAA,KACA1E,KAAAyE,SAAA,GAEAzE,MAGAoE,EAAApS,UAAAoV,QAAA,WACA,OAAApH,KAAA2E,IAAA,mBAAA3E,KAAA+F,SAAA,SAiCA,IAAAsB,EAAA,CACA,GACA,IACA,KACA,MACA,OACA,QACA,SACA,UACA,WACA,YACA,aACA,cACA,eACA,gBACA,iBACA,kBACA,mBACA,oBACA,qBACA,sBACA,uBACA,wBACA,yBACA,0BACA,2BACA,6BAGAC,EAAA,CACA,IACA,mBACA,cACA,cACA,cACA,eAGAC,EAAA,CACA,IACA,+DACA,yDACA,yDACA,4DACA,6DAsjBA,SAAAC,EAAAC,EAAAjC,EAAAkC,GACAA,EAAAjD,SAAAe,EAAAf,SAAAgD,EAAAhD,SACA,IAAAU,EAAAsC,EAAAlS,OAAAiQ,EAAAjQ,OAAA,EACAmS,EAAAnS,OAAA4P,EACAA,IAAA,IAGA,IAAApV,EAAA,EAAA0X,EAAA/C,MAAA,GACAhL,EAAA,EAAA8L,EAAAd,MAAA,GACAxT,EAAAnB,EAAA2J,EAEAiO,EAAA,SAAAzW,EACA0W,EAAA1W,EAAA,WACAwW,EAAAhD,MAAA,GAAAiD,EAEA,QAAAE,EAAA,EAAmBA,EAAA1C,EAAS0C,IAAA,CAM5B,IAHA,IAAAC,EAAAF,IAAA,GACAG,EAAA,SAAAH,EACAI,EAAA5C,KAAAC,IAAAwC,EAAArC,EAAAjQ,OAAA,GACAoD,EAAAyM,KAAAK,IAAA,EAAAoC,EAAAJ,EAAAlS,OAAA,GAAoDoD,GAAAqP,EAAWrP,IAAA,CAC/D,IAAA3I,EAAA6X,EAAAlP,EAAA,EAIAmP,IADA5W,GAFAnB,EAAA,EAAA0X,EAAA/C,MAAA1U,KACA0J,EAAA,EAAA8L,EAAAd,MAAA/L,IACAoP,GACA,WACAA,EAAA,SAAA7W,EAEAwW,EAAAhD,MAAAmD,GAAA,EAAAE,EACAH,EAAA,EAAAE,EAQA,OANA,IAAAF,EACAF,EAAAhD,MAAAmD,GAAA,EAAAD,EAEAF,EAAAnS,SAGAmS,EAAAlE,QAzlBAY,EAAApS,UAAA+T,SAAA,SAAAzB,EAAAlB,GAIA,IAAAsE,EACA,GAHAtE,EAAA,EAAAA,GAAA,EAGA,MAJAkB,KAAA,KAIA,QAAAA,EAAA,CACAoD,EAAA,GAGA,IAFA,IAAApB,EAAA,EACAsB,EAAA,EACA5X,EAAA,EAAqBA,EAAAgQ,KAAAzK,OAAiBvF,IAAA,CACtC,IAAAqW,EAAArG,KAAA0E,MAAA1U,GACA2W,GAAA,UAAAN,GAAAC,EAAAsB,IAAA7B,SAAA,IAGA2B,EADA,KADAE,EAAAvB,IAAA,GAAAC,EAAA,WACAtW,IAAAgQ,KAAAzK,OAAA,EACA8R,EAAA,EAAAV,EAAApR,QAAAoR,EAAAe,EAEAf,EAAAe,GAEApB,GAAA,IACA,KACAA,GAAA,GACAtW,KAMA,IAHA,IAAA4X,IACAF,EAAAE,EAAA7B,SAAA,IAAA2B,GAEAA,EAAAnS,OAAA6N,GAAA,GACAsE,EAAA,IAAAA,EAKA,OAHA,IAAA1H,KAAAyE,WACAiD,EAAA,IAAAA,GAEAA,EAGA,GAAApD,KAAA,EAAAA,OAAA,GAAAA,GAAA,IAEA,IAAA2D,EAAAX,EAAAhD,GAEA4D,EAAAX,EAAAjD,GACAoD,EAAA,GACA,IAAAjX,EAAAuP,KAAAgH,QAEA,IADAvW,EAAAgU,SAAA,GACAhU,EAAA0X,UAAA,CACA,IAAAjX,EAAAT,EAAA2X,KAAAF,GAAAnC,SAAAzB,GAMAoD,GALAjX,IAAA4X,MAAAH,IAEAC,SAGAjX,EAAAwW,EAFAL,EAAAY,EAAA/W,EAAAqE,QAAArE,EAAAwW,EAQA,IAHA1H,KAAAmI,WACAT,EAAA,IAAAA,GAEAA,EAAAnS,OAAA6N,GAAA,GACAsE,EAAA,IAAAA,EAKA,OAHA,IAAA1H,KAAAyE,WACAiD,EAAA,IAAAA,GAEAA,EAGA/D,GAAA,sCAGAS,EAAApS,UAAAsW,SAAA,WACA,IAAAC,EAAAvI,KAAA0E,MAAA,GASA,OARA,IAAA1E,KAAAzK,OACAgT,GAAA,SAAAvI,KAAA0E,MAAA,GACK,IAAA1E,KAAAzK,QAAA,IAAAyK,KAAA0E,MAAA,GAEL6D,GAAA,0BAAAvI,KAAA0E,MAAA,GACK1E,KAAAzK,OAAA,GACLoO,GAAA,gDAEA,IAAA3D,KAAAyE,UAAA8D,KAGAnE,EAAApS,UAAAwW,OAAA,WACA,OAAAxI,KAAA+F,SAAA,KAGA3B,EAAApS,UAAAyW,SAAA,SAAAlE,EAAAhP,GAEA,OADAoO,OAAA,IAAAkB,GACA7E,KAAA0I,YAAA7D,EAAAN,EAAAhP,IAGA6O,EAAApS,UAAAmU,QAAA,SAAA5B,EAAAhP,GACA,OAAAyK,KAAA0I,YAAAtL,MAAAmH,EAAAhP,IAGA6O,EAAApS,UAAA0W,YAAA,SAAAC,EAAApE,EAAAhP,GACA,IAAAqT,EAAA5I,KAAA4I,aACAC,EAAAtT,GAAA6P,KAAAK,IAAA,EAAAmD,GACAjF,EAAAiF,GAAAC,EAAA,yCACAlF,EAAAkF,EAAA,iCAEA7I,KAAAwD,QACA,IAGA9J,EAAA1J,EAHA8Y,EAAA,OAAAvE,EACAwE,EAAA,IAAAJ,EAAAE,GAGAG,EAAAhJ,KAAAgH,QACA,GAAA8B,EAYK,CACL,IAAA9Y,EAAA,GAAiBgZ,EAAAb,SAAanY,IAC9B0J,EAAAsP,EAAAC,MAAA,KACAD,EAAAE,OAAA,GAEAH,EAAA/Y,GAAA0J,EAGA,KAAY1J,EAAA6Y,EAAe7Y,IAC3B+Y,EAAA/Y,GAAA,MArBA,CAEA,IAAAA,EAAA,EAAiBA,EAAA6Y,EAAAD,EAA4B5Y,IAC7C+Y,EAAA/Y,GAAA,EAGA,IAAAA,EAAA,GAAiBgZ,EAAAb,SAAanY,IAC9B0J,EAAAsP,EAAAC,MAAA,KACAD,EAAAE,OAAA,GAEAH,EAAAF,EAAA7Y,EAAA,GAAA0J,EAeA,OAAAqP,GAGA3D,KAAA+D,MACA/E,EAAApS,UAAAoX,WAAA,SAAA/C,GACA,UAAAjB,KAAA+D,MAAA9C,IAGAjC,EAAApS,UAAAoX,WAAA,SAAA/C,GACA,IAAA/U,EAAA+U,EACAnV,EAAA,EAiBA,OAhBAI,GAAA,OACAJ,GAAA,GACAI,KAAA,IAEAA,GAAA,KACAJ,GAAA,EACAI,KAAA,GAEAA,GAAA,IACAJ,GAAA,EACAI,KAAA,GAEAA,GAAA,IACAJ,GAAA,EACAI,KAAA,GAEAJ,EAAAI,GAIA8S,EAAApS,UAAAqX,UAAA,SAAAhD,GAEA,OAAAA,EAAA,UAEA,IAAA/U,EAAA+U,EACAnV,EAAA,EAoBA,OAnBA,SAAAI,KACAJ,GAAA,GACAI,KAAA,IAEA,QAAAA,KACAJ,GAAA,EACAI,KAAA,GAEA,OAAAA,KACAJ,GAAA,EACAI,KAAA,GAEA,MAAAA,KACAJ,GAAA,EACAI,KAAA,GAEA,MAAAA,IACAJ,IAEAA,GAIAkT,EAAApS,UAAAsX,UAAA,WACA,IAAAjD,EAAArG,KAAA0E,MAAA1E,KAAAzK,OAAA,GACAgU,EAAAvJ,KAAAoJ,WAAA/C,GACA,WAAArG,KAAAzK,OAAA,GAAAgU,GAiBAnF,EAAApS,UAAAwX,SAAA,WACA,GAAAxJ,KAAAmI,SAAA,SAGA,IADA,IAAAjX,EAAA,EACAlB,EAAA,EAAmBA,EAAAgQ,KAAAzK,OAAiBvF,IAAA,CACpC,IAAA0J,EAAAsG,KAAAqJ,UAAArJ,KAAA0E,MAAA1U,IAEA,GADAkB,GAAAwI,EACA,KAAAA,EAAA,MAEA,OAAAxI,GAGAkT,EAAApS,UAAA4W,WAAA,WACA,OAAAxD,KAAAgB,KAAApG,KAAAsJ,YAAA,IAGAlF,EAAApS,UAAAyX,OAAA,SAAAC,GACA,WAAA1J,KAAAyE,SACAzE,KAAA2J,MAAAC,MAAAF,GAAAG,MAAA,GAEA7J,KAAAgH,SAGA5C,EAAApS,UAAA8X,SAAA,SAAAJ,GACA,OAAA1J,KAAA+J,MAAAL,EAAA,GACA1J,KAAAgK,KAAAN,GAAAG,MAAA,GAAAI,OAEAjK,KAAAgH,SAGA5C,EAAApS,UAAAkY,MAAA,WACA,WAAAlK,KAAAyE,UAIAL,EAAApS,UAAAmY,IAAA,WACA,OAAAnK,KAAAgH,QAAAiD,QAGA7F,EAAApS,UAAAiY,KAAA,WAKA,OAJAjK,KAAAmI,WACAnI,KAAAyE,UAAA,GAGAzE,MAIAoE,EAAApS,UAAAoY,KAAA,SAAA5E,GACA,KAAAxF,KAAAzK,OAAAiQ,EAAAjQ,QACAyK,KAAA0E,MAAA1E,KAAAzK,UAAA,EAGA,QAAAvF,EAAA,EAAmBA,EAAAwV,EAAAjQ,OAAgBvF,IACnCgQ,KAAA0E,MAAA1U,GAAAgQ,KAAA0E,MAAA1U,GAAAwV,EAAAd,MAAA1U,GAGA,OAAAgQ,KAAAwD,SAGAY,EAAApS,UAAAqY,IAAA,SAAA7E,GAEA,OADA7B,EAAA,IAAA3D,KAAAyE,SAAAe,EAAAf,WACAzE,KAAAoK,KAAA5E,IAIApB,EAAApS,UAAAsY,GAAA,SAAA9E,GACA,OAAAxF,KAAAzK,OAAAiQ,EAAAjQ,OAAAyK,KAAAgH,QAAAqD,IAAA7E,GACAA,EAAAwB,QAAAqD,IAAArK,OAGAoE,EAAApS,UAAAuY,IAAA,SAAA/E,GACA,OAAAxF,KAAAzK,OAAAiQ,EAAAjQ,OAAAyK,KAAAgH,QAAAoD,KAAA5E,GACAA,EAAAwB,QAAAoD,KAAApK,OAIAoE,EAAApS,UAAAwY,MAAA,SAAAhF,GAEA,IAAA9L,EAEAA,EADAsG,KAAAzK,OAAAiQ,EAAAjQ,OACAiQ,EAEAxF,KAGA,QAAAhQ,EAAA,EAAmBA,EAAA0J,EAAAnE,OAAcvF,IACjCgQ,KAAA0E,MAAA1U,GAAAgQ,KAAA0E,MAAA1U,GAAAwV,EAAAd,MAAA1U,GAKA,OAFAgQ,KAAAzK,OAAAmE,EAAAnE,OAEAyK,KAAAwD,SAGAY,EAAApS,UAAAyY,KAAA,SAAAjF,GAEA,OADA7B,EAAA,IAAA3D,KAAAyE,SAAAe,EAAAf,WACAzE,KAAAwK,MAAAhF,IAIApB,EAAApS,UAAA0Y,IAAA,SAAAlF,GACA,OAAAxF,KAAAzK,OAAAiQ,EAAAjQ,OAAAyK,KAAAgH,QAAAyD,KAAAjF,GACAA,EAAAwB,QAAAyD,KAAAzK,OAGAoE,EAAApS,UAAA2Y,KAAA,SAAAnF,GACA,OAAAxF,KAAAzK,OAAAiQ,EAAAjQ,OAAAyK,KAAAgH,QAAAwD,MAAAhF,GACAA,EAAAwB,QAAAwD,MAAAxK,OAIAoE,EAAApS,UAAA4Y,MAAA,SAAApF,GAEA,IAAAzV,EACA2J,EACAsG,KAAAzK,OAAAiQ,EAAAjQ,QACAxF,EAAAiQ,KACAtG,EAAA8L,IAEAzV,EAAAyV,EACA9L,EAAAsG,MAGA,QAAAhQ,EAAA,EAAmBA,EAAA0J,EAAAnE,OAAcvF,IACjCgQ,KAAA0E,MAAA1U,GAAAD,EAAA2U,MAAA1U,GAAA0J,EAAAgL,MAAA1U,GAGA,GAAAgQ,OAAAjQ,EACA,KAAYC,EAAAD,EAAAwF,OAAcvF,IAC1BgQ,KAAA0E,MAAA1U,GAAAD,EAAA2U,MAAA1U,GAMA,OAFAgQ,KAAAzK,OAAAxF,EAAAwF,OAEAyK,KAAAwD,SAGAY,EAAApS,UAAA6Y,KAAA,SAAArF,GAEA,OADA7B,EAAA,IAAA3D,KAAAyE,SAAAe,EAAAf,WACAzE,KAAA4K,MAAApF,IAIApB,EAAApS,UAAA8Y,IAAA,SAAAtF,GACA,OAAAxF,KAAAzK,OAAAiQ,EAAAjQ,OAAAyK,KAAAgH,QAAA6D,KAAArF,GACAA,EAAAwB,QAAA6D,KAAA7K,OAGAoE,EAAApS,UAAA+Y,KAAA,SAAAvF,GACA,OAAAxF,KAAAzK,OAAAiQ,EAAAjQ,OAAAyK,KAAAgH,QAAA4D,MAAApF,GACAA,EAAAwB,QAAA4D,MAAA5K,OAIAoE,EAAApS,UAAA4X,MAAA,SAAAF,GACA/F,EAAA,iBAAA+F,MAAA,GAEA,IAAAsB,EAAA,EAAA5F,KAAAgB,KAAAsD,EAAA,IACAuB,EAAAvB,EAAA,GAGA1J,KAAAiH,QAAA+D,GAEAC,EAAA,GACAD,IAIA,QAAAhb,EAAA,EAAmBA,EAAAgb,EAAiBhb,IACpCgQ,KAAA0E,MAAA1U,GAAA,UAAAgQ,KAAA0E,MAAA1U,GASA,OALAib,EAAA,IACAjL,KAAA0E,MAAA1U,IAAAgQ,KAAA0E,MAAA1U,GAAA,aAAAib,GAIAjL,KAAAwD,SAGAY,EAAApS,UAAAgY,KAAA,SAAAN,GACA,OAAA1J,KAAAgH,QAAA4C,MAAAF,IAIAtF,EAAApS,UAAAkZ,KAAA,SAAAC,EAAAvH,GACAD,EAAA,iBAAAwH,MAAA,GAEA,IAAA7E,EAAA6E,EAAA,KACAC,EAAAD,EAAA,GAUA,OARAnL,KAAAiH,QAAAX,EAAA,GAGAtG,KAAA0E,MAAA4B,GADA1C,EACA5D,KAAA0E,MAAA4B,GAAA,GAAA8E,EAEApL,KAAA0E,MAAA4B,KAAA,GAAA8E,GAGApL,KAAAwD,SAIAY,EAAApS,UAAAqZ,KAAA,SAAA7F,GACA,IAAAtU,EAkBAnB,EAAA2J,EAfA,OAAAsG,KAAAyE,UAAA,IAAAe,EAAAf,SAIA,OAHAzE,KAAAyE,SAAA,EACAvT,EAAA8O,KAAAsL,KAAA9F,GACAxF,KAAAyE,UAAA,EACAzE,KAAAmH,YAGK,OAAAnH,KAAAyE,UAAA,IAAAe,EAAAf,SAIL,OAHAe,EAAAf,SAAA,EACAvT,EAAA8O,KAAAsL,KAAA9F,GACAA,EAAAf,SAAA,EACAvT,EAAAiW,YAKAnH,KAAAzK,OAAAiQ,EAAAjQ,QACAxF,EAAAiQ,KACAtG,EAAA8L,IAEAzV,EAAAyV,EACA9L,EAAAsG,MAIA,IADA,IAAA4H,EAAA,EACA5X,EAAA,EAAmBA,EAAA0J,EAAAnE,OAAcvF,IACjCkB,GAAA,EAAAnB,EAAA2U,MAAA1U,KAAA,EAAA0J,EAAAgL,MAAA1U,IAAA4X,EACA5H,KAAA0E,MAAA1U,GAAA,SAAAkB,EACA0W,EAAA1W,IAAA,GAEA,KAAU,IAAA0W,GAAA5X,EAAAD,EAAAwF,OAA6BvF,IACvCkB,GAAA,EAAAnB,EAAA2U,MAAA1U,IAAA4X,EACA5H,KAAA0E,MAAA1U,GAAA,SAAAkB,EACA0W,EAAA1W,IAAA,GAIA,GADA8O,KAAAzK,OAAAxF,EAAAwF,OACA,IAAAqS,EACA5H,KAAA0E,MAAA1E,KAAAzK,QAAAqS,EACA5H,KAAAzK,cAEK,GAAAxF,IAAAiQ,KACL,KAAYhQ,EAAAD,EAAAwF,OAAcvF,IAC1BgQ,KAAA0E,MAAA1U,GAAAD,EAAA2U,MAAA1U,GAIA,OAAAgQ,MAIAoE,EAAApS,UAAAuZ,IAAA,SAAA/F,GACA,IAAAuD,EACA,WAAAvD,EAAAf,UAAA,IAAAzE,KAAAyE,UACAe,EAAAf,SAAA,EACAsE,EAAA/I,KAAAwL,IAAAhG,GACAA,EAAAf,UAAA,EACAsE,GACK,IAAAvD,EAAAf,UAAA,IAAAzE,KAAAyE,UACLzE,KAAAyE,SAAA,EACAsE,EAAAvD,EAAAgG,IAAAxL,MACAA,KAAAyE,SAAA,EACAsE,GAGA/I,KAAAzK,OAAAiQ,EAAAjQ,OAAAyK,KAAAgH,QAAAqE,KAAA7F,GAEAA,EAAAwB,QAAAqE,KAAArL,OAIAoE,EAAApS,UAAAsZ,KAAA,SAAA9F,GAEA,OAAAA,EAAAf,SAAA,CACAe,EAAAf,SAAA,EACA,IAAAvT,EAAA8O,KAAAqL,KAAA7F,GAEA,OADAA,EAAAf,SAAA,EACAvT,EAAAiW,YAGK,OAAAnH,KAAAyE,SAIL,OAHAzE,KAAAyE,SAAA,EACAzE,KAAAqL,KAAA7F,GACAxF,KAAAyE,SAAA,EACAzE,KAAAmH,YAIA,IAWApX,EAAA2J,EAXAkM,EAAA5F,KAAA4F,IAAAJ,GAGA,OAAAI,EAIA,OAHA5F,KAAAyE,SAAA,EACAzE,KAAAzK,OAAA,EACAyK,KAAA0E,MAAA,KACA1E,KAKA4F,EAAA,GACA7V,EAAAiQ,KACAtG,EAAA8L,IAEAzV,EAAAyV,EACA9L,EAAAsG,MAIA,IADA,IAAA4H,EAAA,EACA5X,EAAA,EAAmBA,EAAA0J,EAAAnE,OAAcvF,IAEjC4X,GADA1W,GAAA,EAAAnB,EAAA2U,MAAA1U,KAAA,EAAA0J,EAAAgL,MAAA1U,IAAA4X,IACA,GACA5H,KAAA0E,MAAA1U,GAAA,SAAAkB,EAEA,KAAU,IAAA0W,GAAA5X,EAAAD,EAAAwF,OAA6BvF,IAEvC4X,GADA1W,GAAA,EAAAnB,EAAA2U,MAAA1U,IAAA4X,IACA,GACA5H,KAAA0E,MAAA1U,GAAA,SAAAkB,EAIA,OAAA0W,GAAA5X,EAAAD,EAAAwF,QAAAxF,IAAAiQ,KACA,KAAYhQ,EAAAD,EAAAwF,OAAcvF,IAC1BgQ,KAAA0E,MAAA1U,GAAAD,EAAA2U,MAAA1U,GAUA,OANAgQ,KAAAzK,OAAA6P,KAAAK,IAAAzF,KAAAzK,OAAAvF,GAEAD,IAAAiQ,OACAA,KAAAyE,SAAA,GAGAzE,KAAAwD,SAIAY,EAAApS,UAAAwZ,IAAA,SAAAhG,GACA,OAAAxF,KAAAgH,QAAAsE,KAAA9F,IA+CA,IAAAiG,EAAA,SAAAhE,EAAAjC,EAAAkC,GACA,IAIAC,EACA+D,EACAnC,EANAxZ,EAAA0X,EAAA/C,MACAhL,EAAA8L,EAAAd,MACA7T,EAAA6W,EAAAhD,MACAjU,EAAA,EAIAkb,EAAA,EAAA5b,EAAA,GACA6b,EAAA,KAAAD,EACAE,EAAAF,IAAA,GACAG,EAAA,EAAA/b,EAAA,GACAgc,EAAA,KAAAD,EACAE,EAAAF,IAAA,GACAG,EAAA,EAAAlc,EAAA,GACAmc,EAAA,KAAAD,EACAE,EAAAF,IAAA,GACAG,EAAA,EAAArc,EAAA,GACAsc,EAAA,KAAAD,EACAE,EAAAF,IAAA,GACAG,EAAA,EAAAxc,EAAA,GACAyc,EAAA,KAAAD,EACAE,EAAAF,IAAA,GACAG,EAAA,EAAA3c,EAAA,GACA4c,EAAA,KAAAD,EACAE,EAAAF,IAAA,GACAG,EAAA,EAAA9c,EAAA,GACA+c,EAAA,KAAAD,EACAE,EAAAF,IAAA,GACAG,EAAA,EAAAjd,EAAA,GACAkd,EAAA,KAAAD,EACAE,EAAAF,IAAA,GACAG,EAAA,EAAApd,EAAA,GACAqd,EAAA,KAAAD,EACAE,EAAAF,IAAA,GACAG,EAAA,EAAAvd,EAAA,GACAwd,EAAA,KAAAD,EACAE,EAAAF,IAAA,GACAG,EAAA,EAAA/T,EAAA,GACAgU,EAAA,KAAAD,EACAE,EAAAF,IAAA,GACAG,EAAA,EAAAlU,EAAA,GACAmU,EAAA,KAAAD,EACAE,EAAAF,IAAA,GACAG,EAAA,EAAArU,EAAA,GACAsU,EAAA,KAAAD,EACAE,EAAAF,IAAA,GACAG,EAAA,EAAAxU,EAAA,GACAyU,EAAA,KAAAD,EACAE,EAAAF,IAAA,GACAG,EAAA,EAAA3U,EAAA,GACA4U,EAAA,KAAAD,EACAE,GAAAF,IAAA,GACAG,GAAA,EAAA9U,EAAA,GACA+U,GAAA,KAAAD,GACAE,GAAAF,KAAA,GACAG,GAAA,EAAAjV,EAAA,GACAkV,GAAA,KAAAD,GACAE,GAAAF,KAAA,GACAG,GAAA,EAAApV,EAAA,GACAqV,GAAA,KAAAD,GACAE,GAAAF,KAAA,GACAG,GAAA,EAAAvV,EAAA,GACAwV,GAAA,KAAAD,GACAE,GAAAF,KAAA,GACAG,GAAA,EAAA1V,EAAA,GACA2V,GAAA,KAAAD,GACAE,GAAAF,KAAA,GAEA1H,EAAAjD,SAAAgD,EAAAhD,SAAAe,EAAAf,SACAiD,EAAAnS,OAAA,GAMA,IAAAga,IAAA9e,GAJAkX,EAAAvC,KAAAoK,KAAA5D,EAAA8B,IAIA,WAFAhC,GADAA,EAAAtG,KAAAoK,KAAA5D,EAAA+B,IACAvI,KAAAoK,KAAA3D,EAAA6B,GAAA,KAEA,MACAjd,IAFA8Y,EAAAnE,KAAAoK,KAAA3D,EAAA8B,KAEAjC,IAAA,QAAA6D,KAAA,MACAA,IAAA,SAEA5H,EAAAvC,KAAAoK,KAAAzD,EAAA2B,GAEAhC,GADAA,EAAAtG,KAAAoK,KAAAzD,EAAA4B,IACAvI,KAAAoK,KAAAxD,EAAA0B,GAAA,EACAnE,EAAAnE,KAAAoK,KAAAxD,EAAA2B,GAKA,IAAA8B,IAAAhf,GAJAkX,IAAAvC,KAAAoK,KAAA5D,EAAAiC,GAAA,GAIA,WAFAnC,GADAA,IAAAtG,KAAAoK,KAAA5D,EAAAkC,GAAA,GACA1I,KAAAoK,KAAA3D,EAAAgC,GAAA,KAEA,MACApd,IAFA8Y,IAAAnE,KAAAoK,KAAA3D,EAAAiC,GAAA,IAEApC,IAAA,QAAA+D,KAAA,MACAA,IAAA,SAEA9H,EAAAvC,KAAAoK,KAAAtD,EAAAwB,GAEAhC,GADAA,EAAAtG,KAAAoK,KAAAtD,EAAAyB,IACAvI,KAAAoK,KAAArD,EAAAuB,GAAA,EACAnE,EAAAnE,KAAAoK,KAAArD,EAAAwB,GACAhG,IAAAvC,KAAAoK,KAAAzD,EAAA8B,GAAA,EAEAnC,GADAA,IAAAtG,KAAAoK,KAAAzD,EAAA+B,GAAA,GACA1I,KAAAoK,KAAAxD,EAAA6B,GAAA,EACAtE,IAAAnE,KAAAoK,KAAAxD,EAAA8B,GAAA,EAKA,IAAA4B,IAAAjf,GAJAkX,IAAAvC,KAAAoK,KAAA5D,EAAAoC,GAAA,GAIA,WAFAtC,GADAA,IAAAtG,KAAAoK,KAAA5D,EAAAqC,GAAA,GACA7I,KAAAoK,KAAA3D,EAAAmC,GAAA,KAEA,MACAvd,IAFA8Y,IAAAnE,KAAAoK,KAAA3D,EAAAoC,GAAA,IAEAvC,IAAA,QAAAgE,KAAA,MACAA,IAAA,SAEA/H,EAAAvC,KAAAoK,KAAAnD,EAAAqB,GAEAhC,GADAA,EAAAtG,KAAAoK,KAAAnD,EAAAsB,IACAvI,KAAAoK,KAAAlD,EAAAoB,GAAA,EACAnE,EAAAnE,KAAAoK,KAAAlD,EAAAqB,GACAhG,IAAAvC,KAAAoK,KAAAtD,EAAA2B,GAAA,EAEAnC,GADAA,IAAAtG,KAAAoK,KAAAtD,EAAA4B,GAAA,GACA1I,KAAAoK,KAAArD,EAAA0B,GAAA,EACAtE,IAAAnE,KAAAoK,KAAArD,EAAA2B,GAAA,EACAnG,IAAAvC,KAAAoK,KAAAzD,EAAAiC,GAAA,EAEAtC,GADAA,IAAAtG,KAAAoK,KAAAzD,EAAAkC,GAAA,GACA7I,KAAAoK,KAAAxD,EAAAgC,GAAA,EACAzE,IAAAnE,KAAAoK,KAAAxD,EAAAiC,GAAA,EAKA,IAAA0B,IAAAlf,GAJAkX,IAAAvC,KAAAoK,KAAA5D,EAAAuC,GAAA,GAIA,WAFAzC,GADAA,IAAAtG,KAAAoK,KAAA5D,EAAAwC,GAAA,GACAhJ,KAAAoK,KAAA3D,EAAAsC,GAAA,KAEA,MACA1d,IAFA8Y,IAAAnE,KAAAoK,KAAA3D,EAAAuC,GAAA,IAEA1C,IAAA,QAAAiE,KAAA,MACAA,IAAA,SAEAhI,EAAAvC,KAAAoK,KAAAhD,EAAAkB,GAEAhC,GADAA,EAAAtG,KAAAoK,KAAAhD,EAAAmB,IACAvI,KAAAoK,KAAA/C,EAAAiB,GAAA,EACAnE,EAAAnE,KAAAoK,KAAA/C,EAAAkB,GACAhG,IAAAvC,KAAAoK,KAAAnD,EAAAwB,GAAA,EAEAnC,GADAA,IAAAtG,KAAAoK,KAAAnD,EAAAyB,GAAA,GACA1I,KAAAoK,KAAAlD,EAAAuB,GAAA,EACAtE,IAAAnE,KAAAoK,KAAAlD,EAAAwB,GAAA,EACAnG,IAAAvC,KAAAoK,KAAAtD,EAAA8B,GAAA,EAEAtC,GADAA,IAAAtG,KAAAoK,KAAAtD,EAAA+B,GAAA,GACA7I,KAAAoK,KAAArD,EAAA6B,GAAA,EACAzE,IAAAnE,KAAAoK,KAAArD,EAAA8B,GAAA,EACAtG,IAAAvC,KAAAoK,KAAAzD,EAAAoC,GAAA,EAEAzC,GADAA,IAAAtG,KAAAoK,KAAAzD,EAAAqC,GAAA,GACAhJ,KAAAoK,KAAAxD,EAAAmC,GAAA,EACA5E,IAAAnE,KAAAoK,KAAAxD,EAAAoC,GAAA,EAKA,IAAAwB,IAAAnf,GAJAkX,IAAAvC,KAAAoK,KAAA5D,EAAA0C,GAAA,GAIA,WAFA5C,GADAA,IAAAtG,KAAAoK,KAAA5D,EAAA2C,IAAA,GACAnJ,KAAAoK,KAAA3D,EAAAyC,GAAA,KAEA,MACA7d,IAFA8Y,IAAAnE,KAAAoK,KAAA3D,EAAA0C,IAAA,IAEA7C,IAAA,QAAAkE,KAAA,MACAA,IAAA,SAEAjI,EAAAvC,KAAAoK,KAAA7C,EAAAe,GAEAhC,GADAA,EAAAtG,KAAAoK,KAAA7C,EAAAgB,IACAvI,KAAAoK,KAAA5C,EAAAc,GAAA,EACAnE,EAAAnE,KAAAoK,KAAA5C,EAAAe,GACAhG,IAAAvC,KAAAoK,KAAAhD,EAAAqB,GAAA,EAEAnC,GADAA,IAAAtG,KAAAoK,KAAAhD,EAAAsB,GAAA,GACA1I,KAAAoK,KAAA/C,EAAAoB,GAAA,EACAtE,IAAAnE,KAAAoK,KAAA/C,EAAAqB,GAAA,EACAnG,IAAAvC,KAAAoK,KAAAnD,EAAA2B,GAAA,EAEAtC,GADAA,IAAAtG,KAAAoK,KAAAnD,EAAA4B,GAAA,GACA7I,KAAAoK,KAAAlD,EAAA0B,GAAA,EACAzE,IAAAnE,KAAAoK,KAAAlD,EAAA2B,GAAA,EACAtG,IAAAvC,KAAAoK,KAAAtD,EAAAiC,GAAA,EAEAzC,GADAA,IAAAtG,KAAAoK,KAAAtD,EAAAkC,GAAA,GACAhJ,KAAAoK,KAAArD,EAAAgC,GAAA,EACA5E,IAAAnE,KAAAoK,KAAArD,EAAAiC,GAAA,EACAzG,IAAAvC,KAAAoK,KAAAzD,EAAAuC,GAAA,EAEA5C,GADAA,IAAAtG,KAAAoK,KAAAzD,EAAAwC,IAAA,GACAnJ,KAAAoK,KAAAxD,EAAAsC,GAAA,EACA/E,IAAAnE,KAAAoK,KAAAxD,EAAAuC,IAAA,EAKA,IAAAsB,IAAApf,GAJAkX,IAAAvC,KAAAoK,KAAA5D,EAAA6C,IAAA,GAIA,WAFA/C,GADAA,IAAAtG,KAAAoK,KAAA5D,EAAA8C,IAAA,GACAtJ,KAAAoK,KAAA3D,EAAA4C,IAAA,KAEA,MACAhe,IAFA8Y,IAAAnE,KAAAoK,KAAA3D,EAAA6C,IAAA,IAEAhD,IAAA,QAAAmE,KAAA,MACAA,IAAA,SAEAlI,EAAAvC,KAAAoK,KAAA1C,EAAAY,GAEAhC,GADAA,EAAAtG,KAAAoK,KAAA1C,EAAAa,IACAvI,KAAAoK,KAAAzC,EAAAW,GAAA,EACAnE,EAAAnE,KAAAoK,KAAAzC,EAAAY,GACAhG,IAAAvC,KAAAoK,KAAA7C,EAAAkB,GAAA,EAEAnC,GADAA,IAAAtG,KAAAoK,KAAA7C,EAAAmB,GAAA,GACA1I,KAAAoK,KAAA5C,EAAAiB,GAAA,EACAtE,IAAAnE,KAAAoK,KAAA5C,EAAAkB,GAAA,EACAnG,IAAAvC,KAAAoK,KAAAhD,EAAAwB,GAAA,EAEAtC,GADAA,IAAAtG,KAAAoK,KAAAhD,EAAAyB,GAAA,GACA7I,KAAAoK,KAAA/C,EAAAuB,GAAA,EACAzE,IAAAnE,KAAAoK,KAAA/C,EAAAwB,GAAA,EACAtG,IAAAvC,KAAAoK,KAAAnD,EAAA8B,GAAA,EAEAzC,GADAA,IAAAtG,KAAAoK,KAAAnD,EAAA+B,GAAA,GACAhJ,KAAAoK,KAAAlD,EAAA6B,GAAA,EACA5E,IAAAnE,KAAAoK,KAAAlD,EAAA8B,GAAA,EACAzG,IAAAvC,KAAAoK,KAAAtD,EAAAoC,GAAA,EAEA5C,GADAA,IAAAtG,KAAAoK,KAAAtD,EAAAqC,IAAA,GACAnJ,KAAAoK,KAAArD,EAAAmC,GAAA,EACA/E,IAAAnE,KAAAoK,KAAArD,EAAAoC,IAAA,EACA5G,IAAAvC,KAAAoK,KAAAzD,EAAA0C,IAAA,EAEA/C,GADAA,IAAAtG,KAAAoK,KAAAzD,EAAA2C,IAAA,GACAtJ,KAAAoK,KAAAxD,EAAAyC,IAAA,EACAlF,IAAAnE,KAAAoK,KAAAxD,EAAA0C,IAAA,EAKA,IAAAoB,IAAArf,GAJAkX,IAAAvC,KAAAoK,KAAA5D,EAAAgD,IAAA,GAIA,WAFAlD,GADAA,IAAAtG,KAAAoK,KAAA5D,EAAAiD,IAAA,GACAzJ,KAAAoK,KAAA3D,EAAA+C,IAAA,KAEA,MACAne,IAFA8Y,IAAAnE,KAAAoK,KAAA3D,EAAAgD,IAAA,IAEAnD,IAAA,QAAAoE,KAAA,MACAA,IAAA,SAEAnI,EAAAvC,KAAAoK,KAAAvC,EAAAS,GAEAhC,GADAA,EAAAtG,KAAAoK,KAAAvC,EAAAU,IACAvI,KAAAoK,KAAAtC,EAAAQ,GAAA,EACAnE,EAAAnE,KAAAoK,KAAAtC,EAAAS,GACAhG,IAAAvC,KAAAoK,KAAA1C,EAAAe,GAAA,EAEAnC,GADAA,IAAAtG,KAAAoK,KAAA1C,EAAAgB,GAAA,GACA1I,KAAAoK,KAAAzC,EAAAc,GAAA,EACAtE,IAAAnE,KAAAoK,KAAAzC,EAAAe,GAAA,EACAnG,IAAAvC,KAAAoK,KAAA7C,EAAAqB,GAAA,EAEAtC,GADAA,IAAAtG,KAAAoK,KAAA7C,EAAAsB,GAAA,GACA7I,KAAAoK,KAAA5C,EAAAoB,GAAA,EACAzE,IAAAnE,KAAAoK,KAAA5C,EAAAqB,GAAA,EACAtG,IAAAvC,KAAAoK,KAAAhD,EAAA2B,GAAA,EAEAzC,GADAA,IAAAtG,KAAAoK,KAAAhD,EAAA4B,GAAA,GACAhJ,KAAAoK,KAAA/C,EAAA0B,GAAA,EACA5E,IAAAnE,KAAAoK,KAAA/C,EAAA2B,GAAA,EACAzG,IAAAvC,KAAAoK,KAAAnD,EAAAiC,GAAA,EAEA5C,GADAA,IAAAtG,KAAAoK,KAAAnD,EAAAkC,IAAA,GACAnJ,KAAAoK,KAAAlD,EAAAgC,GAAA,EACA/E,IAAAnE,KAAAoK,KAAAlD,EAAAiC,IAAA,EACA5G,IAAAvC,KAAAoK,KAAAtD,EAAAuC,IAAA,EAEA/C,GADAA,IAAAtG,KAAAoK,KAAAtD,EAAAwC,IAAA,GACAtJ,KAAAoK,KAAArD,EAAAsC,IAAA,EACAlF,IAAAnE,KAAAoK,KAAArD,EAAAuC,IAAA,EACA/G,IAAAvC,KAAAoK,KAAAzD,EAAA6C,IAAA,EAEAlD,GADAA,IAAAtG,KAAAoK,KAAAzD,EAAA8C,IAAA,GACAzJ,KAAAoK,KAAAxD,EAAA4C,IAAA,EACArF,IAAAnE,KAAAoK,KAAAxD,EAAA6C,IAAA,EAKA,IAAAkB,IAAAtf,GAJAkX,IAAAvC,KAAAoK,KAAA5D,EAAAmD,IAAA,GAIA,WAFArD,GADAA,IAAAtG,KAAAoK,KAAA5D,EAAAoD,IAAA,GACA5J,KAAAoK,KAAA3D,EAAAkD,IAAA,KAEA,MACAte,IAFA8Y,IAAAnE,KAAAoK,KAAA3D,EAAAmD,IAAA,IAEAtD,IAAA,QAAAqE,KAAA,MACAA,IAAA,SAEApI,EAAAvC,KAAAoK,KAAApC,EAAAM,GAEAhC,GADAA,EAAAtG,KAAAoK,KAAApC,EAAAO,IACAvI,KAAAoK,KAAAnC,EAAAK,GAAA,EACAnE,EAAAnE,KAAAoK,KAAAnC,EAAAM,GACAhG,IAAAvC,KAAAoK,KAAAvC,EAAAY,GAAA,EAEAnC,GADAA,IAAAtG,KAAAoK,KAAAvC,EAAAa,GAAA,GACA1I,KAAAoK,KAAAtC,EAAAW,GAAA,EACAtE,IAAAnE,KAAAoK,KAAAtC,EAAAY,GAAA,EACAnG,IAAAvC,KAAAoK,KAAA1C,EAAAkB,GAAA,EAEAtC,GADAA,IAAAtG,KAAAoK,KAAA1C,EAAAmB,GAAA,GACA7I,KAAAoK,KAAAzC,EAAAiB,GAAA,EACAzE,IAAAnE,KAAAoK,KAAAzC,EAAAkB,GAAA,EACAtG,IAAAvC,KAAAoK,KAAA7C,EAAAwB,GAAA,EAEAzC,GADAA,IAAAtG,KAAAoK,KAAA7C,EAAAyB,GAAA,GACAhJ,KAAAoK,KAAA5C,EAAAuB,GAAA,EACA5E,IAAAnE,KAAAoK,KAAA5C,EAAAwB,GAAA,EACAzG,IAAAvC,KAAAoK,KAAAhD,EAAA8B,GAAA,EAEA5C,GADAA,IAAAtG,KAAAoK,KAAAhD,EAAA+B,IAAA,GACAnJ,KAAAoK,KAAA/C,EAAA6B,GAAA,EACA/E,IAAAnE,KAAAoK,KAAA/C,EAAA8B,IAAA,EACA5G,IAAAvC,KAAAoK,KAAAnD,EAAAoC,IAAA,EAEA/C,GADAA,IAAAtG,KAAAoK,KAAAnD,EAAAqC,IAAA,GACAtJ,KAAAoK,KAAAlD,EAAAmC,IAAA,EACAlF,IAAAnE,KAAAoK,KAAAlD,EAAAoC,IAAA,EACA/G,IAAAvC,KAAAoK,KAAAtD,EAAA0C,IAAA,EAEAlD,GADAA,IAAAtG,KAAAoK,KAAAtD,EAAA2C,IAAA,GACAzJ,KAAAoK,KAAArD,EAAAyC,IAAA,EACArF,IAAAnE,KAAAoK,KAAArD,EAAA0C,IAAA,EACAlH,IAAAvC,KAAAoK,KAAAzD,EAAAgD,IAAA,EAEArD,GADAA,IAAAtG,KAAAoK,KAAAzD,EAAAiD,IAAA,GACA5J,KAAAoK,KAAAxD,EAAA+C,IAAA,EACAxF,IAAAnE,KAAAoK,KAAAxD,EAAAgD,IAAA,EAKA,IAAAgB,IAAAvf,GAJAkX,IAAAvC,KAAAoK,KAAA5D,EAAAsD,IAAA,GAIA,WAFAxD,GADAA,IAAAtG,KAAAoK,KAAA5D,EAAAuD,IAAA,GACA/J,KAAAoK,KAAA3D,EAAAqD,IAAA,KAEA,MACAze,IAFA8Y,IAAAnE,KAAAoK,KAAA3D,EAAAsD,IAAA,IAEAzD,IAAA,QAAAsE,KAAA,MACAA,IAAA,SAEArI,EAAAvC,KAAAoK,KAAAjC,EAAAG,GAEAhC,GADAA,EAAAtG,KAAAoK,KAAAjC,EAAAI,IACAvI,KAAAoK,KAAAhC,EAAAE,GAAA,EACAnE,EAAAnE,KAAAoK,KAAAhC,EAAAG,GACAhG,IAAAvC,KAAAoK,KAAApC,EAAAS,GAAA,EAEAnC,GADAA,IAAAtG,KAAAoK,KAAApC,EAAAU,GAAA,GACA1I,KAAAoK,KAAAnC,EAAAQ,GAAA,EACAtE,IAAAnE,KAAAoK,KAAAnC,EAAAS,GAAA,EACAnG,IAAAvC,KAAAoK,KAAAvC,EAAAe,GAAA,EAEAtC,GADAA,IAAAtG,KAAAoK,KAAAvC,EAAAgB,GAAA,GACA7I,KAAAoK,KAAAtC,EAAAc,GAAA,EACAzE,IAAAnE,KAAAoK,KAAAtC,EAAAe,GAAA,EACAtG,IAAAvC,KAAAoK,KAAA1C,EAAAqB,GAAA,EAEAzC,GADAA,IAAAtG,KAAAoK,KAAA1C,EAAAsB,GAAA,GACAhJ,KAAAoK,KAAAzC,EAAAoB,GAAA,EACA5E,IAAAnE,KAAAoK,KAAAzC,EAAAqB,GAAA,EACAzG,IAAAvC,KAAAoK,KAAA7C,EAAA2B,GAAA,EAEA5C,GADAA,IAAAtG,KAAAoK,KAAA7C,EAAA4B,IAAA,GACAnJ,KAAAoK,KAAA5C,EAAA0B,GAAA,EACA/E,IAAAnE,KAAAoK,KAAA5C,EAAA2B,IAAA,EACA5G,IAAAvC,KAAAoK,KAAAhD,EAAAiC,IAAA,EAEA/C,GADAA,IAAAtG,KAAAoK,KAAAhD,EAAAkC,IAAA,GACAtJ,KAAAoK,KAAA/C,EAAAgC,IAAA,EACAlF,IAAAnE,KAAAoK,KAAA/C,EAAAiC,IAAA,EACA/G,IAAAvC,KAAAoK,KAAAnD,EAAAuC,IAAA,EAEAlD,GADAA,IAAAtG,KAAAoK,KAAAnD,EAAAwC,IAAA,GACAzJ,KAAAoK,KAAAlD,EAAAsC,IAAA,EACArF,IAAAnE,KAAAoK,KAAAlD,EAAAuC,IAAA,EACAlH,IAAAvC,KAAAoK,KAAAtD,EAAA6C,IAAA,EAEArD,GADAA,IAAAtG,KAAAoK,KAAAtD,EAAA8C,IAAA,GACA5J,KAAAoK,KAAArD,EAAA4C,IAAA,EACAxF,IAAAnE,KAAAoK,KAAArD,EAAA6C,IAAA,EACArH,IAAAvC,KAAAoK,KAAAzD,EAAAmD,IAAA,EAEAxD,GADAA,IAAAtG,KAAAoK,KAAAzD,EAAAoD,IAAA,GACA/J,KAAAoK,KAAAxD,EAAAkD,IAAA,EACA3F,IAAAnE,KAAAoK,KAAAxD,EAAAmD,IAAA,EAKA,IAAAc,IAAAxf,GAJAkX,IAAAvC,KAAAoK,KAAA5D,EAAAyD,IAAA,GAIA,WAFA3D,GADAA,IAAAtG,KAAAoK,KAAA5D,EAAA0D,IAAA,GACAlK,KAAAoK,KAAA3D,EAAAwD,IAAA,KAEA,MACA5e,IAFA8Y,IAAAnE,KAAAoK,KAAA3D,EAAAyD,IAAA,IAEA5D,IAAA,QAAAuE,KAAA,MACAA,IAAA,SAEAtI,EAAAvC,KAAAoK,KAAAjC,EAAAM,GAEAnC,GADAA,EAAAtG,KAAAoK,KAAAjC,EAAAO,IACA1I,KAAAoK,KAAAhC,EAAAK,GAAA,EACAtE,EAAAnE,KAAAoK,KAAAhC,EAAAM,GACAnG,IAAAvC,KAAAoK,KAAApC,EAAAY,GAAA,EAEAtC,GADAA,IAAAtG,KAAAoK,KAAApC,EAAAa,GAAA,GACA7I,KAAAoK,KAAAnC,EAAAW,GAAA,EACAzE,IAAAnE,KAAAoK,KAAAnC,EAAAY,GAAA,EACAtG,IAAAvC,KAAAoK,KAAAvC,EAAAkB,GAAA,EAEAzC,GADAA,IAAAtG,KAAAoK,KAAAvC,EAAAmB,GAAA,GACAhJ,KAAAoK,KAAAtC,EAAAiB,GAAA,EACA5E,IAAAnE,KAAAoK,KAAAtC,EAAAkB,GAAA,EACAzG,IAAAvC,KAAAoK,KAAA1C,EAAAwB,GAAA,EAEA5C,GADAA,IAAAtG,KAAAoK,KAAA1C,EAAAyB,IAAA,GACAnJ,KAAAoK,KAAAzC,EAAAuB,GAAA,EACA/E,IAAAnE,KAAAoK,KAAAzC,EAAAwB,IAAA,EACA5G,IAAAvC,KAAAoK,KAAA7C,EAAA8B,IAAA,EAEA/C,GADAA,IAAAtG,KAAAoK,KAAA7C,EAAA+B,IAAA,GACAtJ,KAAAoK,KAAA5C,EAAA6B,IAAA,EACAlF,IAAAnE,KAAAoK,KAAA5C,EAAA8B,IAAA,EACA/G,IAAAvC,KAAAoK,KAAAhD,EAAAoC,IAAA,EAEAlD,GADAA,IAAAtG,KAAAoK,KAAAhD,EAAAqC,IAAA,GACAzJ,KAAAoK,KAAA/C,EAAAmC,IAAA,EACArF,IAAAnE,KAAAoK,KAAA/C,EAAAoC,IAAA,EACAlH,IAAAvC,KAAAoK,KAAAnD,EAAA0C,IAAA,EAEArD,GADAA,IAAAtG,KAAAoK,KAAAnD,EAAA2C,IAAA,GACA5J,KAAAoK,KAAAlD,EAAAyC,IAAA,EACAxF,IAAAnE,KAAAoK,KAAAlD,EAAA0C,IAAA,EACArH,IAAAvC,KAAAoK,KAAAtD,EAAAgD,IAAA,EAEAxD,GADAA,IAAAtG,KAAAoK,KAAAtD,EAAAiD,IAAA,GACA/J,KAAAoK,KAAArD,EAAA+C,IAAA,EACA3F,IAAAnE,KAAAoK,KAAArD,EAAAgD,IAAA,EAKA,IAAAe,IAAAzf,GAJAkX,IAAAvC,KAAAoK,KAAAzD,EAAAsD,IAAA,GAIA,WAFA3D,GADAA,IAAAtG,KAAAoK,KAAAzD,EAAAuD,IAAA,GACAlK,KAAAoK,KAAAxD,EAAAqD,IAAA,KAEA,MACA5e,IAFA8Y,IAAAnE,KAAAoK,KAAAxD,EAAAsD,IAAA,IAEA5D,IAAA,QAAAwE,KAAA,MACAA,IAAA,SAEAvI,EAAAvC,KAAAoK,KAAAjC,EAAAS,GAEAtC,GADAA,EAAAtG,KAAAoK,KAAAjC,EAAAU,IACA7I,KAAAoK,KAAAhC,EAAAQ,GAAA,EACAzE,EAAAnE,KAAAoK,KAAAhC,EAAAS,GACAtG,IAAAvC,KAAAoK,KAAApC,EAAAe,GAAA,EAEAzC,GADAA,IAAAtG,KAAAoK,KAAApC,EAAAgB,GAAA,GACAhJ,KAAAoK,KAAAnC,EAAAc,GAAA,EACA5E,IAAAnE,KAAAoK,KAAAnC,EAAAe,GAAA,EACAzG,IAAAvC,KAAAoK,KAAAvC,EAAAqB,GAAA,EAEA5C,GADAA,IAAAtG,KAAAoK,KAAAvC,EAAAsB,IAAA,GACAnJ,KAAAoK,KAAAtC,EAAAoB,GAAA,EACA/E,IAAAnE,KAAAoK,KAAAtC,EAAAqB,IAAA,EACA5G,IAAAvC,KAAAoK,KAAA1C,EAAA2B,IAAA,EAEA/C,GADAA,IAAAtG,KAAAoK,KAAA1C,EAAA4B,IAAA,GACAtJ,KAAAoK,KAAAzC,EAAA0B,IAAA,EACAlF,IAAAnE,KAAAoK,KAAAzC,EAAA2B,IAAA,EACA/G,IAAAvC,KAAAoK,KAAA7C,EAAAiC,IAAA,EAEAlD,GADAA,IAAAtG,KAAAoK,KAAA7C,EAAAkC,IAAA,GACAzJ,KAAAoK,KAAA5C,EAAAgC,IAAA,EACArF,IAAAnE,KAAAoK,KAAA5C,EAAAiC,IAAA,EACAlH,IAAAvC,KAAAoK,KAAAhD,EAAAuC,IAAA,EAEArD,GADAA,IAAAtG,KAAAoK,KAAAhD,EAAAwC,IAAA,GACA5J,KAAAoK,KAAA/C,EAAAsC,IAAA,EACAxF,IAAAnE,KAAAoK,KAAA/C,EAAAuC,IAAA,EACArH,IAAAvC,KAAAoK,KAAAnD,EAAA6C,IAAA,EAEAxD,GADAA,IAAAtG,KAAAoK,KAAAnD,EAAA8C,IAAA,GACA/J,KAAAoK,KAAAlD,EAAA4C,IAAA,EACA3F,IAAAnE,KAAAoK,KAAAlD,EAAA6C,IAAA,EAKA,IAAAgB,IAAA1f,GAJAkX,IAAAvC,KAAAoK,KAAAtD,EAAAmD,IAAA,GAIA,WAFA3D,GADAA,IAAAtG,KAAAoK,KAAAtD,EAAAoD,IAAA,GACAlK,KAAAoK,KAAArD,EAAAkD,IAAA,KAEA,MACA5e,IAFA8Y,IAAAnE,KAAAoK,KAAArD,EAAAmD,IAAA,IAEA5D,IAAA,QAAAyE,KAAA,MACAA,IAAA,SAEAxI,EAAAvC,KAAAoK,KAAAjC,EAAAY,GAEAzC,GADAA,EAAAtG,KAAAoK,KAAAjC,EAAAa,IACAhJ,KAAAoK,KAAAhC,EAAAW,GAAA,EACA5E,EAAAnE,KAAAoK,KAAAhC,EAAAY,GACAzG,IAAAvC,KAAAoK,KAAApC,EAAAkB,GAAA,EAEA5C,GADAA,IAAAtG,KAAAoK,KAAApC,EAAAmB,IAAA,GACAnJ,KAAAoK,KAAAnC,EAAAiB,GAAA,EACA/E,IAAAnE,KAAAoK,KAAAnC,EAAAkB,IAAA,EACA5G,IAAAvC,KAAAoK,KAAAvC,EAAAwB,IAAA,EAEA/C,GADAA,IAAAtG,KAAAoK,KAAAvC,EAAAyB,IAAA,GACAtJ,KAAAoK,KAAAtC,EAAAuB,IAAA,EACAlF,IAAAnE,KAAAoK,KAAAtC,EAAAwB,IAAA,EACA/G,IAAAvC,KAAAoK,KAAA1C,EAAA8B,IAAA,EAEAlD,GADAA,IAAAtG,KAAAoK,KAAA1C,EAAA+B,IAAA,GACAzJ,KAAAoK,KAAAzC,EAAA6B,IAAA,EACArF,IAAAnE,KAAAoK,KAAAzC,EAAA8B,IAAA,EACAlH,IAAAvC,KAAAoK,KAAA7C,EAAAoC,IAAA,EAEArD,GADAA,IAAAtG,KAAAoK,KAAA7C,EAAAqC,IAAA,GACA5J,KAAAoK,KAAA5C,EAAAmC,IAAA,EACAxF,IAAAnE,KAAAoK,KAAA5C,EAAAoC,IAAA,EACArH,IAAAvC,KAAAoK,KAAAhD,EAAA0C,IAAA,EAEAxD,GADAA,IAAAtG,KAAAoK,KAAAhD,EAAA2C,IAAA,GACA/J,KAAAoK,KAAA/C,EAAAyC,IAAA,EACA3F,IAAAnE,KAAAoK,KAAA/C,EAAA0C,IAAA,EAKA,IAAAiB,IAAA3f,GAJAkX,IAAAvC,KAAAoK,KAAAnD,EAAAgD,IAAA,GAIA,WAFA3D,GADAA,IAAAtG,KAAAoK,KAAAnD,EAAAiD,IAAA,GACAlK,KAAAoK,KAAAlD,EAAA+C,IAAA,KAEA,MACA5e,IAFA8Y,IAAAnE,KAAAoK,KAAAlD,EAAAgD,IAAA,IAEA5D,IAAA,QAAA0E,KAAA,MACAA,IAAA,SAEAzI,EAAAvC,KAAAoK,KAAAjC,EAAAe,GAEA5C,GADAA,EAAAtG,KAAAoK,KAAAjC,EAAAgB,KACAnJ,KAAAoK,KAAAhC,EAAAc,GAAA,EACA/E,EAAAnE,KAAAoK,KAAAhC,EAAAe,IACA5G,IAAAvC,KAAAoK,KAAApC,EAAAqB,IAAA,EAEA/C,GADAA,IAAAtG,KAAAoK,KAAApC,EAAAsB,IAAA,GACAtJ,KAAAoK,KAAAnC,EAAAoB,IAAA,EACAlF,IAAAnE,KAAAoK,KAAAnC,EAAAqB,IAAA,EACA/G,IAAAvC,KAAAoK,KAAAvC,EAAA2B,IAAA,EAEAlD,GADAA,IAAAtG,KAAAoK,KAAAvC,EAAA4B,IAAA,GACAzJ,KAAAoK,KAAAtC,EAAA0B,IAAA,EACArF,IAAAnE,KAAAoK,KAAAtC,EAAA2B,IAAA,EACAlH,IAAAvC,KAAAoK,KAAA1C,EAAAiC,IAAA,EAEArD,GADAA,IAAAtG,KAAAoK,KAAA1C,EAAAkC,IAAA,GACA5J,KAAAoK,KAAAzC,EAAAgC,IAAA,EACAxF,IAAAnE,KAAAoK,KAAAzC,EAAAiC,IAAA,EACArH,IAAAvC,KAAAoK,KAAA7C,EAAAuC,IAAA,EAEAxD,GADAA,IAAAtG,KAAAoK,KAAA7C,EAAAwC,IAAA,GACA/J,KAAAoK,KAAA5C,EAAAsC,IAAA,EACA3F,IAAAnE,KAAAoK,KAAA5C,EAAAuC,IAAA,EAKA,IAAAkB,IAAA5f,GAJAkX,IAAAvC,KAAAoK,KAAAhD,EAAA6C,IAAA,GAIA,WAFA3D,GADAA,IAAAtG,KAAAoK,KAAAhD,EAAA8C,IAAA,GACAlK,KAAAoK,KAAA/C,EAAA4C,IAAA,KAEA,MACA5e,IAFA8Y,IAAAnE,KAAAoK,KAAA/C,EAAA6C,IAAA,IAEA5D,IAAA,QAAA2E,KAAA,MACAA,IAAA,SAEA1I,EAAAvC,KAAAoK,KAAAjC,EAAAkB,IAEA/C,GADAA,EAAAtG,KAAAoK,KAAAjC,EAAAmB,KACAtJ,KAAAoK,KAAAhC,EAAAiB,IAAA,EACAlF,EAAAnE,KAAAoK,KAAAhC,EAAAkB,IACA/G,IAAAvC,KAAAoK,KAAApC,EAAAwB,IAAA,EAEAlD,GADAA,IAAAtG,KAAAoK,KAAApC,EAAAyB,IAAA,GACAzJ,KAAAoK,KAAAnC,EAAAuB,IAAA,EACArF,IAAAnE,KAAAoK,KAAAnC,EAAAwB,IAAA,EACAlH,IAAAvC,KAAAoK,KAAAvC,EAAA8B,IAAA,EAEArD,GADAA,IAAAtG,KAAAoK,KAAAvC,EAAA+B,IAAA,GACA5J,KAAAoK,KAAAtC,EAAA6B,IAAA,EACAxF,IAAAnE,KAAAoK,KAAAtC,EAAA8B,IAAA,EACArH,IAAAvC,KAAAoK,KAAA1C,EAAAoC,IAAA,EAEAxD,GADAA,IAAAtG,KAAAoK,KAAA1C,EAAAqC,IAAA,GACA/J,KAAAoK,KAAAzC,EAAAmC,IAAA,EACA3F,IAAAnE,KAAAoK,KAAAzC,EAAAoC,IAAA,EAKA,IAAAmB,IAAA7f,GAJAkX,IAAAvC,KAAAoK,KAAA7C,EAAA0C,IAAA,GAIA,WAFA3D,GADAA,IAAAtG,KAAAoK,KAAA7C,EAAA2C,IAAA,GACAlK,KAAAoK,KAAA5C,EAAAyC,IAAA,KAEA,MACA5e,IAFA8Y,IAAAnE,KAAAoK,KAAA5C,EAAA0C,IAAA,IAEA5D,IAAA,QAAA4E,KAAA,MACAA,IAAA,SAEA3I,EAAAvC,KAAAoK,KAAAjC,EAAAqB,IAEAlD,GADAA,EAAAtG,KAAAoK,KAAAjC,EAAAsB,KACAzJ,KAAAoK,KAAAhC,EAAAoB,IAAA,EACArF,EAAAnE,KAAAoK,KAAAhC,EAAAqB,IACAlH,IAAAvC,KAAAoK,KAAApC,EAAA2B,IAAA,EAEArD,GADAA,IAAAtG,KAAAoK,KAAApC,EAAA4B,IAAA,GACA5J,KAAAoK,KAAAnC,EAAA0B,IAAA,EACAxF,IAAAnE,KAAAoK,KAAAnC,EAAA2B,IAAA,EACArH,IAAAvC,KAAAoK,KAAAvC,EAAAiC,IAAA,EAEAxD,GADAA,IAAAtG,KAAAoK,KAAAvC,EAAAkC,IAAA,GACA/J,KAAAoK,KAAAtC,EAAAgC,IAAA,EACA3F,IAAAnE,KAAAoK,KAAAtC,EAAAiC,IAAA,EAKA,IAAAoB,IAAA9f,GAJAkX,IAAAvC,KAAAoK,KAAA1C,EAAAuC,IAAA,GAIA,WAFA3D,GADAA,IAAAtG,KAAAoK,KAAA1C,EAAAwC,IAAA,GACAlK,KAAAoK,KAAAzC,EAAAsC,IAAA,KAEA,MACA5e,IAFA8Y,IAAAnE,KAAAoK,KAAAzC,EAAAuC,IAAA,IAEA5D,IAAA,QAAA6E,KAAA,MACAA,IAAA,SAEA5I,EAAAvC,KAAAoK,KAAAjC,EAAAwB,IAEArD,GADAA,EAAAtG,KAAAoK,KAAAjC,EAAAyB,KACA5J,KAAAoK,KAAAhC,EAAAuB,IAAA,EACAxF,EAAAnE,KAAAoK,KAAAhC,EAAAwB,IACArH,IAAAvC,KAAAoK,KAAApC,EAAA8B,IAAA,EAEAxD,GADAA,IAAAtG,KAAAoK,KAAApC,EAAA+B,IAAA,GACA/J,KAAAoK,KAAAnC,EAAA6B,IAAA,EACA3F,IAAAnE,KAAAoK,KAAAnC,EAAA8B,IAAA,EAKA,IAAAqB,IAAA/f,GAJAkX,IAAAvC,KAAAoK,KAAAvC,EAAAoC,IAAA,GAIA,WAFA3D,GADAA,IAAAtG,KAAAoK,KAAAvC,EAAAqC,IAAA,GACAlK,KAAAoK,KAAAtC,EAAAmC,IAAA,KAEA,MACA5e,IAFA8Y,IAAAnE,KAAAoK,KAAAtC,EAAAoC,IAAA,IAEA5D,IAAA,QAAA8E,KAAA,MACAA,IAAA,SAEA7I,EAAAvC,KAAAoK,KAAAjC,EAAA2B,IAEAxD,GADAA,EAAAtG,KAAAoK,KAAAjC,EAAA4B,KACA/J,KAAAoK,KAAAhC,EAAA0B,IAAA,EACA3F,EAAAnE,KAAAoK,KAAAhC,EAAA2B,IAKA,IAAAsB,IAAAhgB,GAJAkX,IAAAvC,KAAAoK,KAAApC,EAAAiC,IAAA,GAIA,WAFA3D,GADAA,IAAAtG,KAAAoK,KAAApC,EAAAkC,IAAA,GACAlK,KAAAoK,KAAAnC,EAAAgC,IAAA,KAEA,MACA5e,IAFA8Y,IAAAnE,KAAAoK,KAAAnC,EAAAiC,IAAA,IAEA5D,IAAA,QAAA+E,KAAA,MACAA,IAAA,SAMA,IAAAC,IAAAjgB,GAJAkX,EAAAvC,KAAAoK,KAAAjC,EAAA8B,KAIA,WAFA3D,GADAA,EAAAtG,KAAAoK,KAAAjC,EAAA+B,KACAlK,KAAAoK,KAAAhC,EAAA6B,IAAA,KAEA,MA0BA,OAzBA5e,IAFA8Y,EAAAnE,KAAAoK,KAAAhC,EAAA8B,MAEA5D,IAAA,QAAAgF,KAAA,MACAA,IAAA,SACA7f,EAAA,GAAA0e,GACA1e,EAAA,GAAA4e,GACA5e,EAAA,GAAA6e,GACA7e,EAAA,GAAA8e,GACA9e,EAAA,GAAA+e,GACA/e,EAAA,GAAAgf,GACAhf,EAAA,GAAAif,GACAjf,EAAA,GAAAkf,GACAlf,EAAA,GAAAmf,GACAnf,EAAA,GAAAof,GACApf,EAAA,IAAAqf,GACArf,EAAA,IAAAsf,GACAtf,EAAA,IAAAuf,GACAvf,EAAA,IAAAwf,GACAxf,EAAA,IAAAyf,GACAzf,EAAA,IAAA0f,GACA1f,EAAA,IAAA2f,GACA3f,EAAA,IAAA4f,GACA5f,EAAA,IAAA6f,GACA,IAAAjgB,IACAI,EAAA,IAAAJ,EACAiX,EAAAnS,UAEAmS,GAiDA,SAAAiJ,EAAAlJ,EAAAjC,EAAAkC,GAEA,OADA,IAAAkJ,GACAC,KAAApJ,EAAAjC,EAAAkC,GAsBA,SAAAkJ,EAAAE,EAAAC,GACA/Q,KAAA8Q,IACA9Q,KAAA+Q,IAvEA3L,KAAAoK,OACA/D,EAAAjE,GAiDApD,EAAApS,UAAAgf,MAAA,SAAAxL,EAAAkC,GACA,IACAvC,EAAAnF,KAAAzK,OAAAiQ,EAAAjQ,OAWA,OAVA,KAAAyK,KAAAzK,QAAA,KAAAiQ,EAAAjQ,OACAkW,EAAAzL,KAAAwF,EAAAkC,GACKvC,EAAA,GACLqC,EAAAxH,KAAAwF,EAAAkC,GACKvC,EAAA,KArDL,SAAAsC,EAAAjC,EAAAkC,GACAA,EAAAjD,SAAAe,EAAAf,SAAAgD,EAAAhD,SACAiD,EAAAnS,OAAAkS,EAAAlS,OAAAiQ,EAAAjQ,OAIA,IAFA,IAAAqS,EAAA,EACAqJ,EAAA,EACApJ,EAAA,EAAmBA,EAAAH,EAAAnS,OAAA,EAAoBsS,IAAA,CAGvC,IAAAC,EAAAmJ,EACAA,EAAA,EAGA,IAFA,IAAAlJ,EAAA,SAAAH,EACAI,EAAA5C,KAAAC,IAAAwC,EAAArC,EAAAjQ,OAAA,GACAoD,EAAAyM,KAAAK,IAAA,EAAAoC,EAAAJ,EAAAlS,OAAA,GAAoDoD,GAAAqP,EAAWrP,IAAA,CAC/D,IAAA3I,EAAA6X,EAAAlP,EAGAzH,GAFA,EAAAuW,EAAA/C,MAAA1U,KACA,EAAAwV,EAAAd,MAAA/L,IAGAgP,EAAA,SAAAzW,EAGA6W,EAAA,UADAJ,IAAAI,EAAA,GAIAkJ,IAFAnJ,GAHAA,KAAA5W,EAAA,gBAGAyW,IAAA,SAEA,GACAG,GAAA,SAEAJ,EAAAhD,MAAAmD,GAAAE,EACAH,EAAAE,EACAA,EAAAmJ,EAQA,OANA,IAAArJ,EACAF,EAAAhD,MAAAmD,GAAAD,EAEAF,EAAAnS,SAGAmS,EAAAlE,QAgBA0N,CAAAlR,KAAAwF,EAAAkC,GAEAiJ,EAAA3Q,KAAAwF,EAAAkC,IAcAkJ,EAAA5e,UAAAmf,QAAA,SAAAC,GAGA,IAFA,IAAA9f,EAAA,IAAA8L,MAAAgU,GACA/gB,EAAA+T,EAAApS,UAAAoX,WAAAgI,GAAA,EACAphB,EAAA,EAAmBA,EAAAohB,EAAOphB,IAC1BsB,EAAAtB,GAAAgQ,KAAAqR,OAAArhB,EAAAK,EAAA+gB,GAGA,OAAA9f,GAIAsf,EAAA5e,UAAAqf,OAAA,SAAAP,EAAAzgB,EAAA+gB,GACA,OAAAN,OAAAM,EAAA,SAAAN,EAGA,IADA,IAAAQ,EAAA,EACAthB,EAAA,EAAmBA,EAAAK,EAAOL,IAC1BshB,IAAA,EAAAR,IAAAzgB,EAAAL,EAAA,EACA8gB,IAAA,EAGA,OAAAQ,GAKAV,EAAA5e,UAAAuf,QAAA,SAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAR,GACA,QAAAphB,EAAA,EAAmBA,EAAAohB,EAAOphB,IAC1B2hB,EAAA3hB,GAAAyhB,EAAAD,EAAAxhB,IACA4hB,EAAA5hB,GAAA0hB,EAAAF,EAAAxhB,KAIA4gB,EAAA5e,UAAA6f,UAAA,SAAAJ,EAAAC,EAAAC,EAAAC,EAAAR,EAAAI,GACAxR,KAAAuR,QAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAR,GAEA,QAAAjf,EAAA,EAAmBA,EAAAif,EAAOjf,IAAA,EAM1B,IALA,IAAA9B,EAAA8B,GAAA,EAEA2f,EAAA1M,KAAA2M,IAAA,EAAA3M,KAAA4M,GAAA3hB,GACA4hB,EAAA7M,KAAA8M,IAAA,EAAA9M,KAAA4M,GAAA3hB,GAEA6B,EAAA,EAAqBA,EAAAkf,EAAOlf,GAAA7B,EAI5B,IAHA,IAAA8hB,EAAAL,EACAM,EAAAH,EAEAtZ,EAAA,EAAuBA,EAAAxG,EAAOwG,IAAA,CAC9B,IAAA0Z,EAAAV,EAAAzf,EAAAyG,GACA2Z,EAAAV,EAAA1f,EAAAyG,GAEA4Z,EAAAZ,EAAAzf,EAAAyG,EAAAxG,GACAqgB,EAAAZ,EAAA1f,EAAAyG,EAAAxG,GAEAsgB,EAAAN,EAAAI,EAAAH,EAAAI,EAEAA,EAAAL,EAAAK,EAAAJ,EAAAG,EACAA,EAAAE,EAEAd,EAAAzf,EAAAyG,GAAA0Z,EAAAE,EACAX,EAAA1f,EAAAyG,GAAA2Z,EAAAE,EAEAb,EAAAzf,EAAAyG,EAAAxG,GAAAkgB,EAAAE,EACAX,EAAA1f,EAAAyG,EAAAxG,GAAAmgB,EAAAE,EAGA7Z,IAAAtI,IACAoiB,EAAAX,EAAAK,EAAAF,EAAAG,EAEAA,EAAAN,EAAAM,EAAAH,EAAAE,EACAA,EAAAM,KAOA7B,EAAA5e,UAAA0gB,YAAA,SAAA7gB,EAAArB,GACA,IAAA4gB,EAAA,EAAAhM,KAAAK,IAAAjV,EAAAqB,GACA8gB,EAAA,EAAAvB,EACAphB,EAAA,EACA,IAAAohB,IAAA,IAAuBA,EAAGA,KAAA,EAC1BphB,IAGA,UAAAA,EAAA,EAAA2iB,GAGA/B,EAAA5e,UAAA4gB,UAAA,SAAAnB,EAAAC,EAAAN,GACA,KAAAA,GAAA,GAEA,QAAAphB,EAAA,EAAmBA,EAAAohB,EAAA,EAAWphB,IAAA,CAC9B,IAAAsB,EAAAmgB,EAAAzhB,GAEAyhB,EAAAzhB,GAAAyhB,EAAAL,EAAAphB,EAAA,GACAyhB,EAAAL,EAAAphB,EAAA,GAAAsB,EAEAA,EAAAogB,EAAA1hB,GAEA0hB,EAAA1hB,IAAA0hB,EAAAN,EAAAphB,EAAA,GACA0hB,EAAAN,EAAAphB,EAAA,IAAAsB,IAIAsf,EAAA5e,UAAA6gB,aAAA,SAAAC,EAAA1B,GAEA,IADA,IAAAxJ,EAAA,EACA5X,EAAA,EAAmBA,EAAAohB,EAAA,EAAWphB,IAAA,CAC9B,IAAAqW,EAAA,KAAAjB,KAAA2N,MAAAD,EAAA,EAAA9iB,EAAA,GAAAohB,GACAhM,KAAA2N,MAAAD,EAAA,EAAA9iB,GAAAohB,GACAxJ,EAEAkL,EAAA9iB,GAAA,SAAAqW,EAGAuB,EADAvB,EAAA,SACA,EAEAA,EAAA,WAIA,OAAAyM,GAGAlC,EAAA5e,UAAAghB,WAAA,SAAAF,EAAA3N,EAAAsM,EAAAL,GAEA,IADA,IAAAxJ,EAAA,EACA5X,EAAA,EAAmBA,EAAAmV,EAASnV,IAC5B4X,GAAA,EAAAkL,EAAA9iB,GAEAyhB,EAAA,EAAAzhB,GAAA,KAAA4X,EAAkCA,KAAA,GAClC6J,EAAA,EAAAzhB,EAAA,QAAA4X,EAAsCA,KAAA,GAItC,IAAA5X,EAAA,EAAAmV,EAAqBnV,EAAAohB,IAAOphB,EAC5ByhB,EAAAzhB,GAAA,EAGA2T,EAAA,IAAAiE,GACAjE,EAAA,UAAAiE,KAGAgJ,EAAA5e,UAAAihB,KAAA,SAAA7B,GAEA,IADA,IAAA8B,EAAA,IAAA9V,MAAAgU,GACAphB,EAAA,EAAmBA,EAAAohB,EAAOphB,IAC1BkjB,EAAAljB,GAAA,EAGA,OAAAkjB,GAGAtC,EAAA5e,UAAA6e,KAAA,SAAAC,EAAAC,EAAArJ,GACA,IAAA0J,EAAA,EAAApR,KAAA0S,YAAA5B,EAAAvb,OAAAwb,EAAAxb,QAEAic,EAAAxR,KAAAmR,QAAAC,GAEA+B,EAAAnT,KAAAiT,KAAA7B,GAEAK,EAAA,IAAArU,MAAAgU,GACAgC,EAAA,IAAAhW,MAAAgU,GACAiC,EAAA,IAAAjW,MAAAgU,GAEAkC,EAAA,IAAAlW,MAAAgU,GACAmC,EAAA,IAAAnW,MAAAgU,GACAoC,EAAA,IAAApW,MAAAgU,GAEAqC,EAAA/L,EAAAhD,MACA+O,EAAAle,OAAA6b,EAEApR,KAAAgT,WAAAlC,EAAApM,MAAAoM,EAAAvb,OAAAkc,EAAAL,GACApR,KAAAgT,WAAAjC,EAAArM,MAAAqM,EAAAxb,OAAA+d,EAAAlC,GAEApR,KAAA6R,UAAAJ,EAAA0B,EAAAC,EAAAC,EAAAjC,EAAAI,GACAxR,KAAA6R,UAAAyB,EAAAH,EAAAI,EAAAC,EAAApC,EAAAI,GAEA,QAAAxhB,EAAA,EAAmBA,EAAAohB,EAAOphB,IAAA,CAC1B,IAAAyiB,EAAAW,EAAApjB,GAAAujB,EAAAvjB,GAAAqjB,EAAArjB,GAAAwjB,EAAAxjB,GACAqjB,EAAArjB,GAAAojB,EAAApjB,GAAAwjB,EAAAxjB,GAAAqjB,EAAArjB,GAAAujB,EAAAvjB,GACAojB,EAAApjB,GAAAyiB,EAUA,OAPAzS,KAAA4S,UAAAQ,EAAAC,EAAAjC,GACApR,KAAA6R,UAAAuB,EAAAC,EAAAI,EAAAN,EAAA/B,EAAAI,GACAxR,KAAA4S,UAAAa,EAAAN,EAAA/B,GACApR,KAAA6S,aAAAY,EAAArC,GAEA1J,EAAAjD,SAAAqM,EAAArM,SAAAsM,EAAAtM,SACAiD,EAAAnS,OAAAub,EAAAvb,OAAAwb,EAAAxb,OACAmS,EAAAlE,SAIAY,EAAApS,UAAAuT,IAAA,SAAAC,GACA,IAAAkC,EAAA,IAAAtD,EAAA,MAEA,OADAsD,EAAAhD,MAAA,IAAAtH,MAAA4C,KAAAzK,OAAAiQ,EAAAjQ,QACAyK,KAAAgR,MAAAxL,EAAAkC,IAIAtD,EAAApS,UAAA0hB,KAAA,SAAAlO,GACA,IAAAkC,EAAA,IAAAtD,EAAA,MAEA,OADAsD,EAAAhD,MAAA,IAAAtH,MAAA4C,KAAAzK,OAAAiQ,EAAAjQ,QACAob,EAAA3Q,KAAAwF,EAAAkC,IAIAtD,EAAApS,UAAAwd,KAAA,SAAAhK,GACA,OAAAxF,KAAAgH,QAAAgK,MAAAxL,EAAAxF,OAGAoE,EAAApS,UAAA4U,MAAA,SAAApB,GACA7B,EAAA,iBAAA6B,GACA7B,EAAA6B,EAAA,UAIA,IADA,IAAAoC,EAAA,EACA5X,EAAA,EAAmBA,EAAAgQ,KAAAzK,OAAiBvF,IAAA,CACpC,IAAAqW,GAAA,EAAArG,KAAA0E,MAAA1U,IAAAwV,EACAmC,GAAA,SAAAtB,IAAA,SAAAuB,GACAA,IAAA,GACAA,GAAAvB,EAAA,WAEAuB,GAAAD,IAAA,GACA3H,KAAA0E,MAAA1U,GAAA,SAAA2X,EAQA,OALA,IAAAC,IACA5H,KAAA0E,MAAA1U,GAAA4X,EACA5H,KAAAzK,UAGAyK,MAGAoE,EAAApS,UAAA2hB,KAAA,SAAAnO,GACA,OAAAxF,KAAAgH,QAAAJ,MAAApB,IAIApB,EAAApS,UAAA4hB,IAAA,WACA,OAAA5T,KAAAuF,IAAAvF,OAIAoE,EAAApS,UAAA6hB,KAAA,WACA,OAAA7T,KAAAwP,KAAAxP,KAAAgH,UAIA5C,EAAApS,UAAA8U,IAAA,SAAAtB,GACA,IAAAa,EAxxCA,SAAAb,GAGA,IAFA,IAAAa,EAAA,IAAAjJ,MAAAoI,EAAA8D,aAEA6B,EAAA,EAAqBA,EAAA9E,EAAA9Q,OAAgB4V,IAAA,CACrC,IAAA7E,EAAA6E,EAAA,KACAC,EAAAD,EAAA,GAEA9E,EAAA8E,IAAA3F,EAAAd,MAAA4B,GAAA,GAAA8E,OAGA,OAAA/E,EA8wCAyN,CAAAtO,GACA,OAAAa,EAAA9Q,OAAA,WAAA6O,EAAA,GAIA,IADA,IAAA2E,EAAA/I,KACAhQ,EAAA,EAAmBA,EAAAqW,EAAA9Q,QACnB,IAAA8Q,EAAArW,GADiCA,IAAA+Y,IAAA6K,OAIjC,KAAA5jB,EAAAqW,EAAA9Q,OACA,QAAAyT,EAAAD,EAAA6K,MAA6B5jB,EAAAqW,EAAA9Q,OAAcvF,IAAAgZ,IAAA4K,MAC3C,IAAAvN,EAAArW,KAEA+Y,IAAAxD,IAAAyD,IAIA,OAAAD,GAIA3E,EAAApS,UAAA+hB,OAAA,SAAAC,GACArQ,EAAA,iBAAAqQ,MAAA,GACA,IAGAhkB,EAHAkB,EAAA8iB,EAAA,GACA7hB,GAAA6hB,EAAA9iB,GAAA,GACA+iB,EAAA,cAAA/iB,GAAA,GAAAA,EAGA,OAAAA,EAAA,CACA,IAAA0W,EAAA,EAEA,IAAA5X,EAAA,EAAiBA,EAAAgQ,KAAAzK,OAAiBvF,IAAA,CAClC,IAAAkkB,EAAAlU,KAAA0E,MAAA1U,GAAAikB,EACAxjB,GAAA,EAAAuP,KAAA0E,MAAA1U,IAAAkkB,GAAAhjB,EACA8O,KAAA0E,MAAA1U,GAAAS,EAAAmX,EACAA,EAAAsM,IAAA,GAAAhjB,EAGA0W,IACA5H,KAAA0E,MAAA1U,GAAA4X,EACA5H,KAAAzK,UAIA,OAAApD,EAAA,CACA,IAAAnC,EAAAgQ,KAAAzK,OAAA,EAA+BvF,GAAA,EAAQA,IACvCgQ,KAAA0E,MAAA1U,EAAAmC,GAAA6N,KAAA0E,MAAA1U,GAGA,IAAAA,EAAA,EAAiBA,EAAAmC,EAAOnC,IACxBgQ,KAAA0E,MAAA1U,GAAA,EAGAgQ,KAAAzK,QAAApD,EAGA,OAAA6N,KAAAwD,SAGAY,EAAApS,UAAAmiB,MAAA,SAAAH,GAGA,OADArQ,EAAA,IAAA3D,KAAAyE,UACAzE,KAAA+T,OAAAC,IAMA5P,EAAApS,UAAAkX,OAAA,SAAA8K,EAAAI,EAAAC,GAEA,IAAAzc,EADA+L,EAAA,iBAAAqQ,MAAA,GAGApc,EADAwc,GACAA,IAAA,OAEA,EAGA,IAAAljB,EAAA8iB,EAAA,GACA7hB,EAAAiT,KAAAC,KAAA2O,EAAA9iB,GAAA,GAAA8O,KAAAzK,QACA+e,EAAA,oBAAApjB,KACAqjB,EAAAF,EAMA,GAJAzc,GAAAzF,EACAyF,EAAAwN,KAAAK,IAAA,EAAA7N,GAGA2c,EAAA,CACA,QAAAvkB,EAAA,EAAqBA,EAAAmC,EAAOnC,IAC5BukB,EAAA7P,MAAA1U,GAAAgQ,KAAA0E,MAAA1U,GAEAukB,EAAAhf,OAAApD,EAGA,OAAAA,QAEK,GAAA6N,KAAAzK,OAAApD,EAEL,IADA6N,KAAAzK,QAAApD,EACAnC,EAAA,EAAiBA,EAAAgQ,KAAAzK,OAAiBvF,IAClCgQ,KAAA0E,MAAA1U,GAAAgQ,KAAA0E,MAAA1U,EAAAmC,QAGA6N,KAAA0E,MAAA,KACA1E,KAAAzK,OAAA,EAGA,IAAAqS,EAAA,EACA,IAAA5X,EAAAgQ,KAAAzK,OAAA,EAA6BvF,GAAA,QAAA4X,GAAA5X,GAAA4H,GAAmC5H,IAAA,CAChE,IAAA2W,EAAA,EAAA3G,KAAA0E,MAAA1U,GACAgQ,KAAA0E,MAAA1U,GAAA4X,GAAA,GAAA1W,EAAAyV,IAAAzV,EACA0W,EAAAjB,EAAA2N,EAaA,OATAC,GAAA,IAAA3M,IACA2M,EAAA7P,MAAA6P,EAAAhf,UAAAqS,GAGA,IAAA5H,KAAAzK,SACAyK,KAAA0E,MAAA,KACA1E,KAAAzK,OAAA,GAGAyK,KAAAwD,SAGAY,EAAApS,UAAAwiB,MAAA,SAAAR,EAAAI,EAAAC,GAGA,OADA1Q,EAAA,IAAA3D,KAAAyE,UACAzE,KAAAkJ,OAAA8K,EAAAI,EAAAC,IAIAjQ,EAAApS,UAAAyiB,KAAA,SAAAT,GACA,OAAAhU,KAAAgH,QAAAmN,MAAAH,IAGA5P,EAAApS,UAAA0iB,MAAA,SAAAV,GACA,OAAAhU,KAAAgH,QAAA+M,OAAAC,IAIA5P,EAAApS,UAAA2iB,KAAA,SAAAX,GACA,OAAAhU,KAAAgH,QAAAwN,MAAAR,IAGA5P,EAAApS,UAAA4iB,MAAA,SAAAZ,GACA,OAAAhU,KAAAgH,QAAAkC,OAAA8K,IAIA5P,EAAApS,UAAA+X,MAAA,SAAAoB,GACAxH,EAAA,iBAAAwH,MAAA,GACA,IAAAja,EAAAia,EAAA,GACAhZ,GAAAgZ,EAAAja,GAAA,GACA8X,EAAA,GAAA9X,EAGA,QAAA8O,KAAAzK,QAAApD,OAGA6N,KAAA0E,MAAAvS,GAEA6W,IAIA5E,EAAApS,UAAA6iB,OAAA,SAAAb,GACArQ,EAAA,iBAAAqQ,MAAA,GACA,IAAA9iB,EAAA8iB,EAAA,GACA7hB,GAAA6hB,EAAA9iB,GAAA,GAIA,GAFAyS,EAAA,IAAA3D,KAAAyE,SAAA,2CAEAzE,KAAAzK,QAAApD,EACA,OAAA6N,KAQA,GALA,IAAA9O,GACAiB,IAEA6N,KAAAzK,OAAA6P,KAAAC,IAAAlT,EAAA6N,KAAAzK,QAEA,IAAArE,EAAA,CACA,IAAAojB,EAAA,oBAAApjB,KACA8O,KAAA0E,MAAA1E,KAAAzK,OAAA,IAAA+e,EAGA,OAAAtU,KAAAwD,SAIAY,EAAApS,UAAA8iB,MAAA,SAAAd,GACA,OAAAhU,KAAAgH,QAAA6N,OAAAb,IAIA5P,EAAApS,UAAA6X,MAAA,SAAArE,GAGA,OAFA7B,EAAA,iBAAA6B,GACA7B,EAAA6B,EAAA,UACAA,EAAA,EAAAxF,KAAA+U,OAAAvP,GAGA,IAAAxF,KAAAyE,SACA,IAAAzE,KAAAzK,SAAA,EAAAyK,KAAA0E,MAAA,IAAAc,GACAxF,KAAA0E,MAAA,GAAAc,GAAA,EAAAxF,KAAA0E,MAAA,IACA1E,KAAAyE,SAAA,EACAzE,OAGAA,KAAAyE,SAAA,EACAzE,KAAA+U,MAAAvP,GACAxF,KAAAyE,SAAA,EACAzE,MAIAA,KAAA6G,OAAArB,IAGApB,EAAApS,UAAA6U,OAAA,SAAArB,GACAxF,KAAA0E,MAAA,IAAAc,EAGA,QAAAxV,EAAA,EAAmBA,EAAAgQ,KAAAzK,QAAAyK,KAAA0E,MAAA1U,IAAA,SAA+CA,IAClEgQ,KAAA0E,MAAA1U,IAAA,SACAA,IAAAgQ,KAAAzK,OAAA,EACAyK,KAAA0E,MAAA1U,EAAA,KAEAgQ,KAAA0E,MAAA1U,EAAA,KAKA,OAFAgQ,KAAAzK,OAAA6P,KAAAK,IAAAzF,KAAAzK,OAAAvF,EAAA,GAEAgQ,MAIAoE,EAAApS,UAAA+iB,MAAA,SAAAvP,GAGA,GAFA7B,EAAA,iBAAA6B,GACA7B,EAAA6B,EAAA,UACAA,EAAA,SAAAxF,KAAA6J,OAAArE,GAEA,OAAAxF,KAAAyE,SAIA,OAHAzE,KAAAyE,SAAA,EACAzE,KAAA6J,MAAArE,GACAxF,KAAAyE,SAAA,EACAzE,KAKA,GAFAA,KAAA0E,MAAA,IAAAc,EAEA,IAAAxF,KAAAzK,QAAAyK,KAAA0E,MAAA,KACA1E,KAAA0E,MAAA,IAAA1E,KAAA0E,MAAA,GACA1E,KAAAyE,SAAA,OAGA,QAAAzU,EAAA,EAAqBA,EAAAgQ,KAAAzK,QAAAyK,KAAA0E,MAAA1U,GAAA,EAAsCA,IAC3DgQ,KAAA0E,MAAA1U,IAAA,SACAgQ,KAAA0E,MAAA1U,EAAA,MAIA,OAAAgQ,KAAAwD,SAGAY,EAAApS,UAAAgjB,KAAA,SAAAxP,GACA,OAAAxF,KAAAgH,QAAA6C,MAAArE,IAGApB,EAAApS,UAAAijB,KAAA,SAAAzP,GACA,OAAAxF,KAAAgH,QAAA+N,MAAAvP,IAGApB,EAAApS,UAAAkjB,KAAA,WAGA,OAFAlV,KAAAyE,SAAA,EAEAzE,MAGAoE,EAAApS,UAAA2X,IAAA,WACA,OAAA3J,KAAAgH,QAAAkO,QAGA9Q,EAAApS,UAAAmjB,aAAA,SAAA3P,EAAAD,EAAA6P,GACA,IACAplB,EAIAqW,EALAlB,EAAAK,EAAAjQ,OAAA6f,EAGApV,KAAAiH,QAAA9B,GAGA,IAAAyC,EAAA,EACA,IAAA5X,EAAA,EAAeA,EAAAwV,EAAAjQ,OAAgBvF,IAAA,CAC/BqW,GAAA,EAAArG,KAAA0E,MAAA1U,EAAAolB,IAAAxN,EACA,IAAAjC,GAAA,EAAAH,EAAAd,MAAA1U,IAAAuV,EAEAqC,IADAvB,GAAA,SAAAV,IACA,KAAAA,EAAA,YACA3F,KAAA0E,MAAA1U,EAAAolB,GAAA,SAAA/O,EAEA,KAAUrW,EAAAgQ,KAAAzK,OAAA6f,EAAyBplB,IAEnC4X,GADAvB,GAAA,EAAArG,KAAA0E,MAAA1U,EAAAolB,IAAAxN,IACA,GACA5H,KAAA0E,MAAA1U,EAAAolB,GAAA,SAAA/O,EAGA,OAAAuB,EAAA,OAAA5H,KAAAwD,QAKA,IAFAG,GAAA,IAAAiE,GACAA,EAAA,EACA5X,EAAA,EAAeA,EAAAgQ,KAAAzK,OAAiBvF,IAEhC4X,GADAvB,IAAA,EAAArG,KAAA0E,MAAA1U,IAAA4X,IACA,GACA5H,KAAA0E,MAAA1U,GAAA,SAAAqW,EAIA,OAFArG,KAAAyE,SAAA,EAEAzE,KAAAwD,SAGAY,EAAApS,UAAAqjB,SAAA,SAAA7P,EAAAjU,GACA,IAAA6jB,GAAApV,KAAAzK,OAAAiQ,EAAAjQ,QAEAxF,EAAAiQ,KAAAgH,QACAtN,EAAA8L,EAGA8P,EAAA,EAAA5b,EAAAgL,MAAAhL,EAAAnE,OAAA,GAGA,KADA6f,EAAA,GADApV,KAAAoJ,WAAAkM,MAGA5b,IAAAgb,MAAAU,GACArlB,EAAAgkB,OAAAqB,GACAE,EAAA,EAAA5b,EAAAgL,MAAAhL,EAAAnE,OAAA,IAIA,IACAyT,EADAxY,EAAAT,EAAAwF,OAAAmE,EAAAnE,OAGA,WAAAhE,EAAA,EACAyX,EAAA,IAAA5E,EAAA,OACA7O,OAAA/E,EAAA,EACAwY,EAAAtE,MAAA,IAAAtH,MAAA4L,EAAAzT,QACA,QAAAvF,EAAA,EAAqBA,EAAAgZ,EAAAzT,OAAcvF,IACnCgZ,EAAAtE,MAAA1U,GAAA,EAIA,IAAAulB,EAAAxlB,EAAAiX,QAAAmO,aAAAzb,EAAA,EAAAlJ,GACA,IAAA+kB,EAAA9Q,WACA1U,EAAAwlB,EACAvM,IACAA,EAAAtE,MAAAlU,GAAA,IAIA,QAAAmI,EAAAnI,EAAA,EAAuBmI,GAAA,EAAQA,IAAA,CAC/B,IAAA6c,EAAA,YAAAzlB,EAAA2U,MAAAhL,EAAAnE,OAAAoD,KACA,EAAA5I,EAAA2U,MAAAhL,EAAAnE,OAAAoD,EAAA,IAOA,IAHA6c,EAAApQ,KAAAC,IAAAmQ,EAAAF,EAAA,YAEAvlB,EAAAolB,aAAAzb,EAAA8b,EAAA7c,GACA,IAAA5I,EAAA0U,UACA+Q,IACAzlB,EAAA0U,SAAA,EACA1U,EAAAolB,aAAAzb,EAAA,EAAAf,GACA5I,EAAAoY,WACApY,EAAA0U,UAAA,GAGAuE,IACAA,EAAAtE,MAAA/L,GAAA6c,GAaA,OAVAxM,GACAA,EAAAxF,QAEAzT,EAAAyT,QAGA,QAAAjS,GAAA,IAAA6jB,GACArlB,EAAAmZ,OAAAkM,GAGA,CACAK,IAAAzM,GAAA,KACAtC,IAAA3W,IAQAqU,EAAApS,UAAA0jB,OAAA,SAAAlQ,EAAAjU,EAAAokB,GAGA,OAFAhS,GAAA6B,EAAA2C,UAEAnI,KAAAmI,SACA,CACAsN,IAAA,IAAArR,EAAA,GACAsC,IAAA,IAAAtC,EAAA,IAKA,IAAApE,KAAAyE,UAAA,IAAAe,EAAAf,UACAsE,EAAA/I,KAAAmK,MAAAuL,OAAAlQ,EAAAjU,GAEA,QAAAA,IACAkkB,EAAA1M,EAAA0M,IAAAtL,OAGA,QAAA5Y,IACAmV,EAAAqC,EAAArC,IAAAyD,MACAwL,GAAA,IAAAjP,EAAAjC,UACAiC,EAAA2E,KAAA7F,IAIA,CACAiQ,MACA/O,QAIA,IAAA1G,KAAAyE,UAAA,IAAAe,EAAAf,UACAsE,EAAA/I,KAAA0V,OAAAlQ,EAAA2E,MAAA5Y,GAEA,QAAAA,IACAkkB,EAAA1M,EAAA0M,IAAAtL,OAGA,CACAsL,MACA/O,IAAAqC,EAAArC,MAIA,IAAA1G,KAAAyE,SAAAe,EAAAf,WACAsE,EAAA/I,KAAAmK,MAAAuL,OAAAlQ,EAAA2E,MAAA5Y,GAEA,QAAAA,IACAmV,EAAAqC,EAAArC,IAAAyD,MACAwL,GAAA,IAAAjP,EAAAjC,UACAiC,EAAA4E,KAAA9F,IAIA,CACAiQ,IAAA1M,EAAA0M,IACA/O,QAOAlB,EAAAjQ,OAAAyK,KAAAzK,QAAAyK,KAAA4F,IAAAJ,GAAA,EACA,CACAiQ,IAAA,IAAArR,EAAA,GACAsC,IAAA1G,MAKA,IAAAwF,EAAAjQ,OACA,QAAAhE,EACA,CACAkkB,IAAAzV,KAAA4V,KAAApQ,EAAAd,MAAA,IACAgC,IAAA,MAIA,QAAAnV,EACA,CACAkkB,IAAA,KACA/O,IAAA,IAAAtC,EAAApE,KAAAoI,KAAA5C,EAAAd,MAAA,MAIA,CACA+Q,IAAAzV,KAAA4V,KAAApQ,EAAAd,MAAA,IACAgC,IAAA,IAAAtC,EAAApE,KAAAoI,KAAA5C,EAAAd,MAAA,MAIA1E,KAAAqV,SAAA7P,EAAAjU,GAlFA,IAAAkkB,EAAA/O,EAAAqC,GAsFA3E,EAAApS,UAAAyjB,IAAA,SAAAjQ,GACA,OAAAxF,KAAA0V,OAAAlQ,EAAA,UAAAiQ,KAIArR,EAAApS,UAAA0U,IAAA,SAAAlB,GACA,OAAAxF,KAAA0V,OAAAlQ,EAAA,UAAAkB,KAGAtC,EAAApS,UAAA6jB,KAAA,SAAArQ,GACA,OAAAxF,KAAA0V,OAAAlQ,EAAA,UAAAkB,KAIAtC,EAAApS,UAAA8jB,SAAA,SAAAtQ,GACA,IAAAuQ,EAAA/V,KAAA0V,OAAAlQ,GAGA,GAAAuQ,EAAArP,IAAAyB,SAAA,OAAA4N,EAAAN,IAEA,IAAA/O,EAAA,IAAAqP,EAAAN,IAAAhR,SAAAsR,EAAArP,IAAA4E,KAAA9F,GAAAuQ,EAAArP,IAEAsP,EAAAxQ,EAAAoP,MAAA,GACAqB,EAAAzQ,EAAAyD,MAAA,GACArD,EAAAc,EAAAd,IAAAoQ,GAGA,OAAApQ,EAAA,OAAAqQ,GAAA,IAAArQ,EAAAmQ,EAAAN,IAGA,IAAAM,EAAAN,IAAAhR,SAAAsR,EAAAN,IAAAV,MAAA,GAAAgB,EAAAN,IAAA5L,MAAA,IAGAzF,EAAApS,UAAAoW,KAAA,SAAA5C,GACA7B,EAAA6B,GAAA,UAIA,IAHA,IAAAtT,GAAA,OAAAsT,EAEA0Q,EAAA,EACAlmB,EAAAgQ,KAAAzK,OAAA,EAAiCvF,GAAA,EAAQA,IACzCkmB,GAAAhkB,EAAAgkB,GAAA,EAAAlW,KAAA0E,MAAA1U,KAAAwV,EAGA,OAAA0Q,GAIA9R,EAAApS,UAAAqW,MAAA,SAAA7C,GACA7B,EAAA6B,GAAA,UAGA,IADA,IAAAoC,EAAA,EACA5X,EAAAgQ,KAAAzK,OAAA,EAAiCvF,GAAA,EAAQA,IAAA,CACzC,IAAAqW,GAAA,EAAArG,KAAA0E,MAAA1U,IAAA,SAAA4X,EACA5H,KAAA0E,MAAA1U,GAAAqW,EAAAb,EAAA,EACAoC,EAAAvB,EAAAb,EAGA,OAAAxF,KAAAwD,SAGAY,EAAApS,UAAA4jB,KAAA,SAAApQ,GACA,OAAAxF,KAAAgH,QAAAqB,MAAA7C,IAGApB,EAAApS,UAAAmkB,KAAA,SAAAjkB,GACAyR,EAAA,IAAAzR,EAAAuS,UACAd,GAAAzR,EAAAiW,UAEA,IAAA2I,EAAA9Q,KACA+Q,EAAA7e,EAAA8U,QAGA8J,EADA,IAAAA,EAAArM,SACAqM,EAAA+E,KAAA3jB,GAEA4e,EAAA9J,QAaA,IATA,IAAAoP,EAAA,IAAAhS,EAAA,GACAiS,EAAA,IAAAjS,EAAA,GAGAkS,EAAA,IAAAlS,EAAA,GACAmS,EAAA,IAAAnS,EAAA,GAEAoS,EAAA,EAEA1F,EAAA2F,UAAA1F,EAAA0F,UACA3F,EAAA5H,OAAA,GACA6H,EAAA7H,OAAA,KACAsN,EAMA,IAHA,IAAAE,EAAA3F,EAAA/J,QACA2P,EAAA7F,EAAA9J,SAEA8J,EAAA3I,UAAA,CACA,QAAAnY,EAAA,EAAA4mB,EAAA,EAA6B,IAAA9F,EAAApM,MAAA,GAAAkS,IAAA5mB,EAAA,KAAmCA,EAAA4mB,IAAA,GAChE,GAAA5mB,EAAA,EAEA,IADA8gB,EAAA5H,OAAAlZ,GACAA,KAAA,IACAomB,EAAAS,SAAAR,EAAAQ,WACAT,EAAA/K,KAAAqL,GACAL,EAAA/K,KAAAqL,IAGAP,EAAAlN,OAAA,GACAmN,EAAAnN,OAAA,GAIA,QAAAvQ,EAAA,EAAAme,EAAA,EAA6B,IAAA/F,EAAArM,MAAA,GAAAoS,IAAAne,EAAA,KAAmCA,EAAAme,IAAA,GAChE,GAAAne,EAAA,EAEA,IADAoY,EAAA7H,OAAAvQ,GACAA,KAAA,IACA2d,EAAAO,SAAAN,EAAAM,WACAP,EAAAjL,KAAAqL,GACAH,EAAAjL,KAAAqL,IAGAL,EAAApN,OAAA,GACAqN,EAAArN,OAAA,GAIA4H,EAAAlL,IAAAmL,IAAA,GACAD,EAAAxF,KAAAyF,GACAqF,EAAA9K,KAAAgL,GACAD,EAAA/K,KAAAiL,KAEAxF,EAAAzF,KAAAwF,GACAwF,EAAAhL,KAAA8K,GACAG,EAAAjL,KAAA+K,IAIA,OACAtmB,EAAAumB,EACA5c,EAAA6c,EACAQ,IAAAhG,EAAAgD,OAAAyC,KAOApS,EAAApS,UAAAglB,OAAA,SAAA9kB,GACAyR,EAAA,IAAAzR,EAAAuS,UACAd,GAAAzR,EAAAiW,UAEA,IAAApY,EAAAiQ,KACAtG,EAAAxH,EAAA8U,QAGAjX,EADA,IAAAA,EAAA0U,SACA1U,EAAA8lB,KAAA3jB,GAEAnC,EAAAiX,QAQA,IALA,IAuCA+B,EAvCAkO,EAAA,IAAA7S,EAAA,GACA8S,EAAA,IAAA9S,EAAA,GAEA+S,EAAAzd,EAAAsN,QAEAjX,EAAAqnB,KAAA,MAAA1d,EAAA0d,KAAA,OACA,QAAApnB,EAAA,EAAA4mB,EAAA,EAA6B,IAAA7mB,EAAA2U,MAAA,GAAAkS,IAAA5mB,EAAA,KAAmCA,EAAA4mB,IAAA,GAChE,GAAA5mB,EAAA,EAEA,IADAD,EAAAmZ,OAAAlZ,GACAA,KAAA,GACAinB,EAAAJ,SACAI,EAAA5L,KAAA8L,GAGAF,EAAA/N,OAAA,GAIA,QAAAvQ,EAAA,EAAAme,EAAA,EAA6B,IAAApd,EAAAgL,MAAA,GAAAoS,IAAAne,EAAA,KAAmCA,EAAAme,IAAA,GAChE,GAAAne,EAAA,EAEA,IADAe,EAAAwP,OAAAvQ,GACAA,KAAA,GACAue,EAAAL,SACAK,EAAA7L,KAAA8L,GAGAD,EAAAhO,OAAA,GAIAnZ,EAAA6V,IAAAlM,IAAA,GACA3J,EAAAub,KAAA5R,GACAud,EAAA3L,KAAA4L,KAEAxd,EAAA4R,KAAAvb,GACAmnB,EAAA5L,KAAA2L,IAeA,OATAlO,EADA,IAAAhZ,EAAAqnB,KAAA,GACAH,EAEAC,GAGAE,KAAA,MACArO,EAAAsC,KAAAnZ,GAGA6W,GAGA3E,EAAApS,UAAA+kB,IAAA,SAAAvR,GACA,GAAAxF,KAAAmI,SAAA,OAAA3C,EAAAmE,MACA,GAAAnE,EAAA2C,SAAA,OAAAnI,KAAA2J,MAEA,IAAA5Z,EAAAiQ,KAAAgH,QACAtN,EAAA8L,EAAAwB,QACAjX,EAAA0U,SAAA,EACA/K,EAAA+K,SAAA,EAGA,QAAA2Q,EAAA,EAAuBrlB,EAAA0mB,UAAA/c,EAAA+c,SAA0BrB,IACjDrlB,EAAAmZ,OAAA,GACAxP,EAAAwP,OAAA,GAGA,QACA,KAAAnZ,EAAA0mB,UACA1mB,EAAAmZ,OAAA,GAEA,KAAAxP,EAAA+c,UACA/c,EAAAwP,OAAA,GAGA,IAAAhY,EAAAnB,EAAA6V,IAAAlM,GACA,GAAAxI,EAAA,GAEA,IAAAI,EAAAvB,EACAA,EAAA2J,EACAA,EAAApI,OACO,OAAAJ,GAAA,IAAAwI,EAAA0d,KAAA,GACP,MAGArnB,EAAAub,KAAA5R,GAGA,OAAAA,EAAAqa,OAAAqB,IAIAhR,EAAApS,UAAAqlB,KAAA,SAAA7R,GACA,OAAAxF,KAAAmW,KAAA3Q,GAAAzV,EAAA8lB,KAAArQ,IAGApB,EAAApS,UAAAykB,OAAA,WACA,aAAAzW,KAAA0E,MAAA,KAGAN,EAAApS,UAAA6kB,MAAA,WACA,aAAA7W,KAAA0E,MAAA,KAIAN,EAAApS,UAAAiX,MAAA,SAAAzD,GACA,OAAAxF,KAAA0E,MAAA,GAAAc,GAIApB,EAAApS,UAAAslB,MAAA,SAAAnM,GACAxH,EAAA,iBAAAwH,GACA,IAAAja,EAAAia,EAAA,GACAhZ,GAAAgZ,EAAAja,GAAA,GACA8X,EAAA,GAAA9X,EAGA,GAAA8O,KAAAzK,QAAApD,EAGA,OAFA6N,KAAAiH,QAAA9U,EAAA,GACA6N,KAAA0E,MAAAvS,IAAA6W,EACAhJ,KAKA,IADA,IAAA4H,EAAAoB,EACAhZ,EAAAmC,EAAmB,IAAAyV,GAAA5X,EAAAgQ,KAAAzK,OAAgCvF,IAAA,CACnD,IAAAqW,EAAA,EAAArG,KAAA0E,MAAA1U,GAEA4X,GADAvB,GAAAuB,KACA,GACAvB,GAAA,SACArG,KAAA0E,MAAA1U,GAAAqW,EAMA,OAJA,IAAAuB,IACA5H,KAAA0E,MAAA1U,GAAA4X,EACA5H,KAAAzK,UAEAyK,MAGAoE,EAAApS,UAAAmW,OAAA,WACA,WAAAnI,KAAAzK,QAAA,IAAAyK,KAAA0E,MAAA,IAGAN,EAAApS,UAAAolB,KAAA,SAAA5R,GACA,IAOAuD,EAPAtE,EAAAe,EAAA,EAEA,OAAAxF,KAAAyE,aAAA,SACA,OAAAzE,KAAAyE,YAAA,SAKA,GAHAzE,KAAAwD,QAGAxD,KAAAzK,OAAA,EACAwT,EAAA,MACK,CACLtE,IACAe,MAGA7B,EAAA6B,GAAA,8BAEA,IAAAa,EAAA,EAAArG,KAAA0E,MAAA,GACAqE,EAAA1C,IAAAb,EAAA,EAAAa,EAAAb,GAAA,IAEA,WAAAxF,KAAAyE,SAAA,GAAAsE,EACAA,GAOA3E,EAAApS,UAAA4T,IAAA,SAAAJ,GACA,OAAAxF,KAAAyE,UAAA,IAAAe,EAAAf,SAAA,SACA,OAAAzE,KAAAyE,UAAA,IAAAe,EAAAf,SAAA,SAEA,IAAAsE,EAAA/I,KAAAuX,KAAA/R,GACA,WAAAxF,KAAAyE,SAAA,GAAAsE,EACAA,GAIA3E,EAAApS,UAAAulB,KAAA,SAAA/R,GAEA,GAAAxF,KAAAzK,OAAAiQ,EAAAjQ,OAAA,SACA,GAAAyK,KAAAzK,OAAAiQ,EAAAjQ,OAAA,SAGA,IADA,IAAAwT,EAAA,EACA/Y,EAAAgQ,KAAAzK,OAAA,EAAiCvF,GAAA,EAAQA,IAAA,CACzC,IAAAD,EAAA,EAAAiQ,KAAA0E,MAAA1U,GACA0J,EAAA,EAAA8L,EAAAd,MAAA1U,GAEA,GAAAD,IAAA2J,EAAA,CACA3J,EAAA2J,EACAqP,GAAA,EACOhZ,EAAA2J,IACPqP,EAAA,GAEA,OAEA,OAAAA,GAGA3E,EAAApS,UAAAwlB,IAAA,SAAAhS,GACA,WAAAxF,KAAAoX,KAAA5R,IAGApB,EAAApS,UAAAylB,GAAA,SAAAjS,GACA,WAAAxF,KAAA4F,IAAAJ,IAGApB,EAAApS,UAAA0lB,KAAA,SAAAlS,GACA,OAAAxF,KAAAoX,KAAA5R,IAAA,GAGApB,EAAApS,UAAA2lB,IAAA,SAAAnS,GACA,OAAAxF,KAAA4F,IAAAJ,IAAA,GAGApB,EAAApS,UAAA4lB,IAAA,SAAApS,GACA,WAAAxF,KAAAoX,KAAA5R,IAGApB,EAAApS,UAAA6lB,GAAA,SAAArS,GACA,WAAAxF,KAAA4F,IAAAJ,IAGApB,EAAApS,UAAA8lB,KAAA,SAAAtS,GACA,OAAAxF,KAAAoX,KAAA5R,IAAA,GAGApB,EAAApS,UAAA+lB,IAAA,SAAAvS,GACA,OAAAxF,KAAA4F,IAAAJ,IAAA,GAGApB,EAAApS,UAAAgmB,IAAA,SAAAxS,GACA,WAAAxF,KAAAoX,KAAA5R,IAGApB,EAAApS,UAAAimB,GAAA,SAAAzS,GACA,WAAAxF,KAAA4F,IAAAJ,IAOApB,EAAAO,IAAA,SAAAa,GACA,WAAA0S,EAAA1S,IAGApB,EAAApS,UAAAmmB,MAAA,SAAAC,GAGA,OAFAzU,GAAA3D,KAAA2E,IAAA,yCACAhB,EAAA,IAAA3D,KAAAyE,SAAA,iCACA2T,EAAAC,UAAArY,MAAAsY,UAAAF,IAGAhU,EAAApS,UAAAumB,QAAA,WAEA,OADA5U,EAAA3D,KAAA2E,IAAA,wDACA3E,KAAA2E,IAAA6T,YAAAxY,OAGAoE,EAAApS,UAAAsmB,UAAA,SAAAF,GAEA,OADApY,KAAA2E,IAAAyT,EACApY,MAGAoE,EAAApS,UAAAymB,SAAA,SAAAL,GAEA,OADAzU,GAAA3D,KAAA2E,IAAA,yCACA3E,KAAAsY,UAAAF,IAGAhU,EAAApS,UAAA0mB,OAAA,SAAAlT,GAEA,OADA7B,EAAA3D,KAAA2E,IAAA,sCACA3E,KAAA2E,IAAA4G,IAAAvL,KAAAwF,IAGApB,EAAApS,UAAA2mB,QAAA,SAAAnT,GAEA,OADA7B,EAAA3D,KAAA2E,IAAA,uCACA3E,KAAA2E,IAAA0G,KAAArL,KAAAwF,IAGApB,EAAApS,UAAA4mB,OAAA,SAAApT,GAEA,OADA7B,EAAA3D,KAAA2E,IAAA,sCACA3E,KAAA2E,IAAA6G,IAAAxL,KAAAwF,IAGApB,EAAApS,UAAA6mB,QAAA,SAAArT,GAEA,OADA7B,EAAA3D,KAAA2E,IAAA,uCACA3E,KAAA2E,IAAA2G,KAAAtL,KAAAwF,IAGApB,EAAApS,UAAA8mB,OAAA,SAAAtT,GAEA,OADA7B,EAAA3D,KAAA2E,IAAA,sCACA3E,KAAA2E,IAAAoU,IAAA/Y,KAAAwF,IAGApB,EAAApS,UAAAgnB,OAAA,SAAAxT,GAGA,OAFA7B,EAAA3D,KAAA2E,IAAA,sCACA3E,KAAA2E,IAAAsU,SAAAjZ,KAAAwF,GACAxF,KAAA2E,IAAAY,IAAAvF,KAAAwF,IAGApB,EAAApS,UAAAknB,QAAA,SAAA1T,GAGA,OAFA7B,EAAA3D,KAAA2E,IAAA,sCACA3E,KAAA2E,IAAAsU,SAAAjZ,KAAAwF,GACAxF,KAAA2E,IAAA6K,KAAAxP,KAAAwF,IAGApB,EAAApS,UAAAmnB,OAAA,WAGA,OAFAxV,EAAA3D,KAAA2E,IAAA,sCACA3E,KAAA2E,IAAAyU,SAAApZ,MACAA,KAAA2E,IAAAiP,IAAA5T,OAGAoE,EAAApS,UAAAqnB,QAAA,WAGA,OAFA1V,EAAA3D,KAAA2E,IAAA,uCACA3E,KAAA2E,IAAAyU,SAAApZ,MACAA,KAAA2E,IAAAkP,KAAA7T,OAIAoE,EAAApS,UAAAsnB,QAAA,WAGA,OAFA3V,EAAA3D,KAAA2E,IAAA,uCACA3E,KAAA2E,IAAAyU,SAAApZ,MACAA,KAAA2E,IAAA4U,KAAAvZ,OAGAoE,EAAApS,UAAAwnB,QAAA,WAGA,OAFA7V,EAAA3D,KAAA2E,IAAA,uCACA3E,KAAA2E,IAAAyU,SAAApZ,MACAA,KAAA2E,IAAA0S,KAAArX,OAIAoE,EAAApS,UAAAynB,OAAA,WAGA,OAFA9V,EAAA3D,KAAA2E,IAAA,sCACA3E,KAAA2E,IAAAyU,SAAApZ,MACAA,KAAA2E,IAAAwF,IAAAnK,OAGAoE,EAAApS,UAAA0nB,OAAA,SAAAlU,GAGA,OAFA7B,EAAA3D,KAAA2E,MAAAa,EAAAb,IAAA,qBACA3E,KAAA2E,IAAAyU,SAAApZ,MACAA,KAAA2E,IAAAmC,IAAA9G,KAAAwF,IAIA,IAAAmU,EAAA,CACAC,KAAA,KACAC,KAAA,KACAC,KAAA,KACAC,OAAA,MAIA,SAAAC,EAAArpB,EAAAuB,GAEA8N,KAAArP,OACAqP,KAAA9N,EAAA,IAAAkS,EAAAlS,EAAA,IACA8N,KAAAnO,EAAAmO,KAAA9N,EAAAoX,YACAtJ,KAAA6H,EAAA,IAAAzD,EAAA,GAAA2P,OAAA/T,KAAAnO,GAAAyZ,KAAAtL,KAAA9N,GAEA8N,KAAAia,IAAAja,KAAAka,OA2CA,SAAAC,IACAH,EAAAzpB,KACAyP,KACA,OACA,2EA+DA,SAAAoa,IACAJ,EAAAzpB,KACAyP,KACA,OACA,kEAIA,SAAAqa,IACAL,EAAAzpB,KACAyP,KACA,OACA,yDAIA,SAAAsa,IAEAN,EAAAzpB,KACAyP,KACA,QACA,uEA8CA,SAAAkY,EAAA1nB,GACA,oBAAAA,EAAA,CACA,IAAA+pB,EAAAnW,EAAAoW,OAAAhqB,GACAwP,KAAAxP,EAAA+pB,EAAAroB,EACA8N,KAAAua,aAEA5W,EAAAnT,EAAAgnB,IAAA,qCACAxX,KAAAxP,IACAwP,KAAAua,MAAA,KAkOA,SAAAE,EAAAjqB,GACA0nB,EAAA3nB,KAAAyP,KAAAxP,GAEAwP,KAAAoV,MAAApV,KAAAxP,EAAA8Y,YACAtJ,KAAAoV,MAAA,QACApV,KAAAoV,OAAA,GAAApV,KAAAoV,MAAA,IAGApV,KAAA9O,EAAA,IAAAkT,EAAA,GAAA2P,OAAA/T,KAAAoV,OACApV,KAAAiW,GAAAjW,KAAA0a,KAAA1a,KAAA9O,EAAA0iB,OACA5T,KAAA2a,KAAA3a,KAAA9O,EAAA8lB,OAAAhX,KAAAxP,GAEAwP,KAAA4a,KAAA5a,KAAA2a,KAAApV,IAAAvF,KAAA9O,GAAA6jB,MAAA,GAAAU,IAAAzV,KAAAxP,GACAwP,KAAA4a,KAAA5a,KAAA4a,KAAA/E,KAAA7V,KAAA9O,GACA8O,KAAA4a,KAAA5a,KAAA9O,EAAAsa,IAAAxL,KAAA4a,MAtaAZ,EAAAhoB,UAAAkoB,KAAA,WACA,IAAAD,EAAA,IAAA7V,EAAA,MAEA,OADA6V,EAAAvV,MAAA,IAAAtH,MAAAgI,KAAAgB,KAAApG,KAAAnO,EAAA,KACAooB,GAGAD,EAAAhoB,UAAA6oB,QAAA,SAAArV,GAGA,IACAsV,EADA5pB,EAAAsU,EAGA,GACAxF,KAAA+a,MAAA7pB,EAAA8O,KAAAia,KAGAa,GADA5pB,GADAA,EAAA8O,KAAAgb,MAAA9pB,IACAma,KAAArL,KAAAia,MACA3Q,kBACKwR,EAAA9a,KAAAnO,GAEL,IAAA+T,EAAAkV,EAAA9a,KAAAnO,GAAA,EAAAX,EAAAqmB,KAAAvX,KAAA9N,GAUA,OATA,IAAA0T,GACA1U,EAAAwT,MAAA,KACAxT,EAAAqE,OAAA,GACKqQ,EAAA,EACL1U,EAAAoa,KAAAtL,KAAA9N,GAEAhB,EAAAsS,QAGAtS,GAGA8oB,EAAAhoB,UAAA+oB,MAAA,SAAAE,EAAAvT,GACAuT,EAAA/R,OAAAlJ,KAAAnO,EAAA,EAAA6V,IAGAsS,EAAAhoB,UAAAgpB,MAAA,SAAAxV,GACA,OAAAA,EAAAgK,KAAAxP,KAAA6H,IASA/D,EAAAqW,EAAAH,GAEAG,EAAAnoB,UAAA+oB,MAAA,SAAAE,EAAAC,GAKA,IAHA,IAEAC,EAAA/V,KAAAC,IAAA4V,EAAA1lB,OAAA,GACAvF,EAAA,EAAmBA,EAAAmrB,EAAYnrB,IAC/BkrB,EAAAxW,MAAA1U,GAAAirB,EAAAvW,MAAA1U,GAIA,GAFAkrB,EAAA3lB,OAAA4lB,EAEAF,EAAA1lB,QAAA,EAGA,OAFA0lB,EAAAvW,MAAA,UACAuW,EAAA1lB,OAAA,GAKA,IAAA6lB,EAAAH,EAAAvW,MAAA,GAGA,IAFAwW,EAAAxW,MAAAwW,EAAA3lB,UAhBA,QAgBA6lB,EAEAprB,EAAA,GAAgBA,EAAAirB,EAAA1lB,OAAkBvF,IAAA,CAClC,IAAAqrB,EAAA,EAAAJ,EAAAvW,MAAA1U,GACAirB,EAAAvW,MAAA1U,EAAA,KApBA,QAoBAqrB,IAAA,EAAAD,IAAA,GACAA,EAAAC,EAEAD,KAAA,GACAH,EAAAvW,MAAA1U,EAAA,IAAAorB,EACA,IAAAA,GAAAH,EAAA1lB,OAAA,GACA0lB,EAAA1lB,QAAA,GAEA0lB,EAAA1lB,QAAA,GAIA4kB,EAAAnoB,UAAAgpB,MAAA,SAAAxV,GAEAA,EAAAd,MAAAc,EAAAjQ,QAAA,EACAiQ,EAAAd,MAAAc,EAAAjQ,OAAA,KACAiQ,EAAAjQ,QAAA,EAIA,IADA,IAAAoS,EAAA,EACA3X,EAAA,EAAmBA,EAAAwV,EAAAjQ,OAAgBvF,IAAA,CACnC,IAAAqW,EAAA,EAAAb,EAAAd,MAAA1U,GACA2X,GAAA,IAAAtB,EACAb,EAAAd,MAAA1U,GAAA,SAAA2X,EACAA,EAAA,GAAAtB,GAAAsB,EAAA,YAUA,OANA,IAAAnC,EAAAd,MAAAc,EAAAjQ,OAAA,KACAiQ,EAAAjQ,SACA,IAAAiQ,EAAAd,MAAAc,EAAAjQ,OAAA,IACAiQ,EAAAjQ,UAGAiQ,GASA1B,EAAAsW,EAAAJ,GAQAlW,EAAAuW,EAAAL,GASAlW,EAAAwW,EAAAN,GAEAM,EAAAtoB,UAAAgpB,MAAA,SAAAxV,GAGA,IADA,IAAAoC,EAAA,EACA5X,EAAA,EAAmBA,EAAAwV,EAAAjQ,OAAgBvF,IAAA,CACnC,IAAAuZ,EAAA,MAAA/D,EAAAd,MAAA1U,IAAA4X,EACAD,EAAA,SAAA4B,EACAA,KAAA,GAEA/D,EAAAd,MAAA1U,GAAA2X,EACAC,EAAA2B,EAKA,OAHA,IAAA3B,IACApC,EAAAd,MAAAc,EAAAjQ,UAAAqS,GAEApC,GAIApB,EAAAoW,OAAA,SAAA7pB,GAEA,GAAAgpB,EAAAhpB,GAAA,OAAAgpB,EAAAhpB,GAEA,IAAA4pB,EACA,YAAA5pB,EACA4pB,EAAA,IAAAJ,OACK,YAAAxpB,EACL4pB,EAAA,IAAAH,OACK,YAAAzpB,EACL4pB,EAAA,IAAAF,MACK,eAAA1pB,EAGL,UAAAiG,MAAA,iBAAAjG,GAFA4pB,EAAA,IAAAD,EAMA,OAFAX,EAAAhpB,GAAA4pB,EAEAA,GAkBArC,EAAAlmB,UAAAonB,SAAA,SAAArpB,GACA4T,EAAA,IAAA5T,EAAA0U,SAAA,iCACAd,EAAA5T,EAAA4U,IAAA,oCAGAuT,EAAAlmB,UAAAinB,SAAA,SAAAlpB,EAAA2J,GACAiK,EAAA,IAAA5T,EAAA0U,SAAA/K,EAAA+K,UAAA,iCACAd,EAAA5T,EAAA4U,KAAA5U,EAAA4U,MAAAjL,EAAAiL,IACA,oCAGAuT,EAAAlmB,UAAA0oB,KAAA,SAAA3qB,GACA,OAAAiQ,KAAAua,MAAAva,KAAAua,MAAAM,QAAA9qB,GAAAuoB,UAAAtY,MACAjQ,EAAA8lB,KAAA7V,KAAAxP,GAAA8nB,UAAAtY,OAGAkY,EAAAlmB,UAAAmY,IAAA,SAAApa,GACA,OAAAA,EAAAoY,SACApY,EAAAiX,QAGAhH,KAAAxP,EAAAgb,IAAAzb,GAAAuoB,UAAAtY,OAGAkY,EAAAlmB,UAAAuZ,IAAA,SAAAxb,EAAA2J,GACAsG,KAAAiZ,SAAAlpB,EAAA2J,GAEA,IAAAqP,EAAAhZ,EAAAwb,IAAA7R,GAIA,OAHAqP,EAAAnD,IAAA5F,KAAAxP,IAAA,GACAuY,EAAAuC,KAAAtL,KAAAxP,GAEAuY,EAAAuP,UAAAtY,OAGAkY,EAAAlmB,UAAAqZ,KAAA,SAAAtb,EAAA2J,GACAsG,KAAAiZ,SAAAlpB,EAAA2J,GAEA,IAAAqP,EAAAhZ,EAAAsb,KAAA3R,GAIA,OAHAqP,EAAAnD,IAAA5F,KAAAxP,IAAA,GACAuY,EAAAuC,KAAAtL,KAAAxP,GAEAuY,GAGAmP,EAAAlmB,UAAAwZ,IAAA,SAAAzb,EAAA2J,GACAsG,KAAAiZ,SAAAlpB,EAAA2J,GAEA,IAAAqP,EAAAhZ,EAAAyb,IAAA9R,GAIA,OAHAqP,EAAAqO,KAAA,MACArO,EAAAsC,KAAArL,KAAAxP,GAEAuY,EAAAuP,UAAAtY,OAGAkY,EAAAlmB,UAAAsZ,KAAA,SAAAvb,EAAA2J,GACAsG,KAAAiZ,SAAAlpB,EAAA2J,GAEA,IAAAqP,EAAAhZ,EAAAub,KAAA5R,GAIA,OAHAqP,EAAAqO,KAAA,MACArO,EAAAsC,KAAArL,KAAAxP,GAEAuY,GAGAmP,EAAAlmB,UAAA+mB,IAAA,SAAAhpB,EAAAyV,GAEA,OADAxF,KAAAoZ,SAAArpB,GACAiQ,KAAA0a,KAAA3qB,EAAA2kB,MAAAlP,KAGA0S,EAAAlmB,UAAAwd,KAAA,SAAAzf,EAAA2J,GAEA,OADAsG,KAAAiZ,SAAAlpB,EAAA2J,GACAsG,KAAA0a,KAAA3qB,EAAAyf,KAAA9V,KAGAwe,EAAAlmB,UAAAuT,IAAA,SAAAxV,EAAA2J,GAEA,OADAsG,KAAAiZ,SAAAlpB,EAAA2J,GACAsG,KAAA0a,KAAA3qB,EAAAwV,IAAA7L,KAGAwe,EAAAlmB,UAAA6hB,KAAA,SAAA9jB,GACA,OAAAiQ,KAAAwP,KAAAzf,IAAAiX,UAGAkR,EAAAlmB,UAAA4hB,IAAA,SAAA7jB,GACA,OAAAiQ,KAAAuF,IAAAxV,MAGAmoB,EAAAlmB,UAAAunB,KAAA,SAAAxpB,GACA,GAAAA,EAAAoY,SAAA,OAAApY,EAAAiX,QAEA,IAAAsU,EAAAtb,KAAAxP,EAAAyY,MAAA,GAIA,GAHAtF,EAAA2X,EAAA,MAGA,IAAAA,EAAA,CACA,IAAAxU,EAAA9G,KAAAxP,EAAA+a,IAAA,IAAAnH,EAAA,IAAA8E,OAAA,GACA,OAAAlJ,KAAA8G,IAAA/W,EAAA+W,GAQA,IAFA,IAAAkC,EAAAhJ,KAAAxP,EAAAykB,KAAA,GACA9iB,EAAA,GACA6W,EAAAb,UAAA,IAAAa,EAAAC,MAAA,IACA9W,IACA6W,EAAAE,OAAA,GAEAvF,GAAAqF,EAAAb,UAEA,IAAAoT,EAAA,IAAAnX,EAAA,GAAA+T,MAAAnY,MACAwb,EAAAD,EAAA9B,SAIAgC,EAAAzb,KAAAxP,EAAAykB,KAAA,GAAA/L,OAAA,GACAwS,EAAA1b,KAAAxP,EAAA8Y,YAGA,IAFAoS,EAAA,IAAAtX,EAAA,EAAAsX,KAAAvD,MAAAnY,MAEA,IAAAA,KAAA8G,IAAA4U,EAAAD,GAAA7V,IAAA4V,IACAE,EAAA/C,QAAA6C,GAOA,IAJA,IAAA/qB,EAAAuP,KAAA8G,IAAA4U,EAAA1S,GACA9X,EAAA8O,KAAA8G,IAAA/W,EAAAiZ,EAAAgM,KAAA,GAAA9L,OAAA,IACA5X,EAAA0O,KAAA8G,IAAA/W,EAAAiZ,GACAxY,EAAA2B,EACA,IAAAb,EAAAsU,IAAA2V,IAAA,CAEA,IADA,IAAAtB,EAAA3oB,EACAtB,EAAA,EAAqB,IAAAiqB,EAAArU,IAAA2V,GAAoBvrB,IACzCiqB,IAAAd,SAEAxV,EAAA3T,EAAAQ,GACA,IAAAkJ,EAAAsG,KAAA8G,IAAArW,EAAA,IAAA2T,EAAA,GAAA2P,OAAAvjB,EAAAR,EAAA,IAEAkB,IAAA8nB,OAAAtf,GACAjJ,EAAAiJ,EAAAyf,SACA7nB,IAAA0nB,OAAAvoB,GACAD,EAAAR,EAGA,OAAAkB,GAGAgnB,EAAAlmB,UAAAqlB,KAAA,SAAAtnB,GACA,IAAA4rB,EAAA5rB,EAAAinB,OAAAhX,KAAAxP,GACA,WAAAmrB,EAAAlX,UACAkX,EAAAlX,SAAA,EACAzE,KAAA0a,KAAAiB,GAAAlC,UAEAzZ,KAAA0a,KAAAiB,IAIAzD,EAAAlmB,UAAA8U,IAAA,SAAA/W,EAAAyV,GACA,GAAAA,EAAA2C,SAAA,WAAA/D,EAAA,GAAA+T,MAAAnY,MACA,OAAAwF,EAAA4R,KAAA,UAAArnB,EAAAiX,QAEA,IACA4U,EAAA,IAAAxe,MAAA,IACAwe,EAAA,OAAAxX,EAAA,GAAA+T,MAAAnY,MACA4b,EAAA,GAAA7rB,EACA,QAAAC,EAAA,EAAmBA,EAAA4rB,EAAArmB,OAAgBvF,IACnC4rB,EAAA5rB,GAAAgQ,KAAAuF,IAAAqW,EAAA5rB,EAAA,GAAAD,GAGA,IAAAgZ,EAAA6S,EAAA,GACAC,EAAA,EACAC,EAAA,EACA7W,EAAAO,EAAA8D,YAAA,GAKA,IAJA,IAAArE,IACAA,EAAA,IAGAjV,EAAAwV,EAAAjQ,OAAA,EAA4BvF,GAAA,EAAQA,IAAA,CAEpC,IADA,IAAA2W,EAAAnB,EAAAd,MAAA1U,GACA2I,EAAAsM,EAAA,EAA6BtM,GAAA,EAAQA,IAAA,CACrC,IAAAwS,EAAAxE,GAAAhO,EAAA,EACAoQ,IAAA6S,EAAA,KACA7S,EAAA/I,KAAA4T,IAAA7K,IAGA,IAAAoC,GAAA,IAAA0Q,GAKAA,IAAA,EACAA,GAAA1Q,GA9BA,MA+BA2Q,GACA,IAAA9rB,GAAA,IAAA2I,KAEAoQ,EAAA/I,KAAAuF,IAAAwD,EAAA6S,EAAAC,IACAC,EAAA,EACAD,EAAA,IAXAC,EAAA,EAaA7W,EAAA,GAGA,OAAA8D,GAGAmP,EAAAlmB,UAAAqmB,UAAA,SAAA7S,GACA,IAAAtU,EAAAsU,EAAAqQ,KAAA7V,KAAAxP,GAEA,OAAAU,IAAAsU,EAAAtU,EAAA8V,QAAA9V,GAGAgnB,EAAAlmB,UAAAwmB,YAAA,SAAAhT,GACA,IAAAuD,EAAAvD,EAAAwB,QAEA,OADA+B,EAAApE,IAAA,KACAoE,GAOA3E,EAAA2X,KAAA,SAAAvW,GACA,WAAAiV,EAAAjV,IAmBA1B,EAAA2W,EAAAvC,GAEAuC,EAAAzoB,UAAAqmB,UAAA,SAAA7S,GACA,OAAAxF,KAAA0a,KAAAlV,EAAAkP,MAAA1U,KAAAoV,SAGAqF,EAAAzoB,UAAAwmB,YAAA,SAAAhT,GACA,IAAAtU,EAAA8O,KAAA0a,KAAAlV,EAAAD,IAAAvF,KAAA2a,OAEA,OADAzpB,EAAAyT,IAAA,KACAzT,GAGAupB,EAAAzoB,UAAAwd,KAAA,SAAAzf,EAAA2J,GACA,GAAA3J,EAAAoY,UAAAzO,EAAAyO,SAGA,OAFApY,EAAA2U,MAAA,KACA3U,EAAAwF,OAAA,EACAxF,EAGA,IAAAuB,EAAAvB,EAAAyf,KAAA9V,GACAjJ,EAAAa,EAAAwjB,MAAA9U,KAAAoV,OAAA7P,IAAAvF,KAAA4a,MAAA/F,OAAA7U,KAAAoV,OAAA7P,IAAAvF,KAAAxP,GACAwrB,EAAA1qB,EAAAga,KAAA7a,GAAAyY,OAAAlJ,KAAAoV,OACArM,EAAAiT,EAQA,OANAA,EAAApW,IAAA5F,KAAAxP,IAAA,EACAuY,EAAAiT,EAAA1Q,KAAAtL,KAAAxP,GACKwrB,EAAA5E,KAAA,OACLrO,EAAAiT,EAAA3Q,KAAArL,KAAAxP,IAGAuY,EAAAuP,UAAAtY,OAGAya,EAAAzoB,UAAAuT,IAAA,SAAAxV,EAAA2J,GACA,GAAA3J,EAAAoY,UAAAzO,EAAAyO,SAAA,WAAA/D,EAAA,GAAAkU,UAAAtY,MAEA,IAAA1O,EAAAvB,EAAAwV,IAAA7L,GACAjJ,EAAAa,EAAAwjB,MAAA9U,KAAAoV,OAAA7P,IAAAvF,KAAA4a,MAAA/F,OAAA7U,KAAAoV,OAAA7P,IAAAvF,KAAAxP,GACAwrB,EAAA1qB,EAAAga,KAAA7a,GAAAyY,OAAAlJ,KAAAoV,OACArM,EAAAiT,EAOA,OANAA,EAAApW,IAAA5F,KAAAxP,IAAA,EACAuY,EAAAiT,EAAA1Q,KAAAtL,KAAAxP,GACKwrB,EAAA5E,KAAA,OACLrO,EAAAiT,EAAA3Q,KAAArL,KAAAxP,IAGAuY,EAAAuP,UAAAtY,OAGAya,EAAAzoB,UAAAqlB,KAAA,SAAAtnB,GAGA,OADAiQ,KAAA0a,KAAA3qB,EAAAinB,OAAAhX,KAAAxP,GAAA+U,IAAAvF,KAAAiW,KACAqC,UAAAtY,OAh2G8C,CAk2GrCpQ,EAAAoQ,QAEmBzP,KAAAyP,KAAA7P,0CAAA,2CAAAA,CAAAP,KAI5BqsB;;;;8BAKA,SAAArsB,EAAAD,EAAAQ,GAEA,aACA,IAAA+rB,GAWA,SAAAC,GAAa,SAAA7F,EAAA7lB,EAAAV,EAAA2J,GAAkB,IAAA8c,EAAAnmB,EAAAK,EAAA0rB,EAAA5rB,EAAAwY,EAAAgT,EAAA9qB,EAAAI,EAAA8C,EAAA,EAAAwD,EAAA,GAAA/F,EAAA,EAAAwqB,GAAA,EAAA3d,EAAA,GAAA2H,EAAA,GAAA0K,GAAA,EAAA2K,GAAA,EAAA5K,GAAA,EAA+G,GAAtC0F,GAAR9c,KAAA,IAAQ4iB,UAAA,QAAqBhrB,EAAAoI,EAAA6iB,WAAA,KAAiB1f,SAAAvL,EAAA,OAAAA,EAAA,MAAAsF,MAAA,iCAAwE,aAAAnG,EAAAD,EAAA,IAAAwY,EAAAwT,EAAAR,EAAAS,EAAAL,EAAA,IAAAlrB,EAAA,SAAAnB,GAAiD,OAAAA,EAAAiJ,cAAkB,OAAAvI,EAAAisB,YAAA,aAAA1T,EAAA,SAAAjZ,EAAA2J,GAAuD,OAAAijB,EAAA5sB,EAAA2J,EAAAjJ,IAAgBurB,EAAA,SAAAjsB,EAAA2J,EAAA9B,EAAAxD,GAAqB,IAAAyT,EAAAuU,EAAQ,eAAA3rB,GAAA,YAAAA,EAAAoX,EAAA,IAAAnO,EAAA,WAAA0iB,EAAA,OAAwD,gBAAA3rB,GAAA,YAAAA,EAC1a,MAAAmG,MAAA,4CAD0aiR,EACrb,IADqbnO,EAAA,UACrb,GAAA0iB,EAAA,GAAwE,KAAKrsB,EAAAwF,QAAAsS,GAAY9X,EAAA8D,KAAA,GAA2F,IAAhF9D,EAAA2J,IAAA,YAAAA,EAAA,GAAuBA,GAAA9B,EAAM7H,EAAA8X,GAAA,WAAAnO,EAAkB3J,EAAA8X,EAAA,GAAAnO,EAAA,aAAsB9B,EAAA7H,EAAAwF,OAAWmE,EAAA,EAAQA,EAAA9B,EAAI8B,GAAA0iB,EAAAhoB,EAAAuoB,EAAA5sB,EAAAiJ,MAAAU,IAAA0iB,GAAAhoB,EAAA3D,GAA6B,eAAAA,EAAAV,EAAA,CAAAqE,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,SAAwD,eAAA3D,EAAAV,EAAAqE,OAA0B,eAAA3D,EAAAV,EAAA,CAAAqE,EAAA,GAAArE,EAAAqE,EAAA,GAAAsF,EAAAtF,EAAA,GAAArE,EAAAqE,EAAA,GAAAsF,EAAAtF,EAAA,GAAArE,EAAAqE,EAAA,GAAAsF,EAAAtF,EAAA,GAAArE,EAAAqE,EAAA,GAAAsF,EAAAtF,EAAA,GAAArE,EAAAqE,EAAA,GAAAsF,EAAAtF,EAAA,GAAArE,EAAAqE,EAAA,GAAAsF,OAA8G,gBAAAjJ,EAC3W,MAAAmG,MAAA,4CAD2W7G,EAAA,CAAAqE,EAAA,GAAArE,EAAAqE,EAAA,GAAAsF,EAAAtF,EAAA,GAAArE,EAAAqE,EAAA,GAAAsF,EAAAtF,EAAA,GAAArE,EAAAqE,EAAA,GAAAsF,EAAAtF,EAAA,GAAArE,EAAAqE,EAAA,GAAAsF,EAAAtF,EAAA,GAAArE,EAC7ZqE,EAAA,GAAAsF,EAAAtF,EAAA,GAAArE,EAAAqE,EAAA,GAAAsF,EAAAtF,EAAA,GAAArE,EAAAqE,EAAA,GAAAsF,EAAAtF,EAAA,GAAArE,EAAAqE,EAAA,GAAAsF,GAA+G,OAAA3J,GAASmB,EAAA,SAAAnB,GAAe,OAAAA,EAAAiJ,SAAiB,YAAAvI,EAAAD,EAAA,IAAA4rB,EAAA,SAA2B,eAAA3rB,EAAAD,EAAA,IAAA4rB,EAAA,SAAkC,eAAA3rB,EAAAD,EAAA,KAAA4rB,EAAA,QAAmC,gBAAA3rB,EAAmC,MAAAmG,MAAA,uCAAnCpG,EAAA,KAAA4rB,EAAA,QAA2F,QAAA3rB,EAAAisB,YAAA,gBAAAjsB,EAAAisB,YAAA,WAEpP,MAAA9lB,MAAA,uCAFwT,IAAAgmB,EAAA,EAAsF,GAA9E5T,EAAAuN,EAAIrlB,EAAA,SAAAnB,GAAc,IAAAqE,EAAA3D,EAAA,GAAW,IAAA2D,EAAA,EAAQ,EAAAA,EAAIA,GAAA,EAAA3D,EAAA2D,GAAArE,EAAAqE,GAAA4E,QAAuB,OAAAvI,GAAUqgB,EAAA,EAAI,aAC7ergB,EAAAD,EAAA,KAAA4rB,EAAA,SAAe,gBAAA3rB,EAAAD,EAAA,KAAA4rB,EAAA,SAAoC,gBAAA3rB,EAAAD,EAAA,IAAA4rB,EAAA,SAAmC,gBAAA3rB,EAAAD,EAAA,IAAA4rB,EAAA,SAAmC,gBAAA3rB,EAAAD,EAAA,KAAA4rB,GAAA,EAAAQ,EAAA,GAAAlB,GAAA,MAA6C,iBAAAjrB,EAA6C,MAAAmG,MAAA,uCAA7CpG,EAAA,KAAA4rB,GAAA,EAAAQ,EAAA,GAAAlB,GAAA,EAAqGM,EAAA,SAAAjsB,EAAAU,EAAA2D,EAAAsF,EAAA9B,GAA0B,IAAAwkB,EAAAvU,EAAA+U,EAAApG,EAAA,GAAA3kB,GAAJuC,EAAA5D,KAAI,EAAAH,EAAA,EAAAK,EAAAD,IAAA,EAAmC,IAAA2rB,EAAA,EAAQA,EAAA1rB,GAAAD,GAAA2D,EAAUgoB,GAAAvqB,EAAA6H,EAAA6c,EAAAxmB,EAAAiJ,MAAAojB,IAAAvqB,GAAA6H,GAAAjJ,GAAA2D,EAA6C,IAAbrE,IAAAiJ,MAAAojB,GAAa3rB,GAAA2D,EAASrE,EAAAwF,OAAA1D,GAAW9B,EAAA8D,KAAA,GAAwD,IAArC9D,GAARqsB,EAAA3rB,IAAA,IAAQ,IAAAoX,GAAAuU,EAAA,IAAkBrsB,EAAA8B,EAAA,eAAmB6H,EAAA6c,EAAAxmB,EAAA2J,GAAa,GAAA8c,EAAAjhB,OAAAqC,IAAgB7H,EAAA2J,EAAArJ,EAChf,GAAAA,EAAA,KAAUmmB,EAAA3iB,KAAA9D,EAAA2J,KAAY,GAAA8c,EAAAjhB,QAAAqC,KAAwB4e,EAAA3iB,KAAA9D,KAAiB,OAALM,GAAA,GAAK+D,GAAAmiB,EAAA,KAAA7c,GAAsB,OAAA8c,GAAkE9lB,EAAAmsB,EAAA9sB,EAAAymB,EAAA1F,GAAWzgB,EAAA+lB,EAAA3lB,GAAOuP,KAAA8c,WAAA,SAAA/sB,EAAA2J,EAAA9B,GAAgC,IAAAiQ,EAAM,QAAAwU,EAAA,MAAAzlB,MAAA,wBAA8C,QAAAma,EAAA,MAAAna,MAAA,4CAAkE,QAAA8kB,EAAA,MAAA9kB,MAAA,mCAAuI,GAArC7G,GAAd2J,EAAAmjB,EAAAnjB,EAA3B8c,GAAA5e,GAAA,IAAQ0kB,UAAA,OAAmBxL,EAAA+L,CAAA9sB,IAAcgtB,OAAWrjB,IAAArI,MAAkBuG,GAARiQ,EAAArX,IAAA,GAAQ,IAAQqX,EAAA9X,EAAA,GAAU,IAAA2J,EAAAsiB,EAAAtiB,EAAA3J,EAAA,EAAAqmB,EAAA3lB,GAAA2rB,GAAsB1iB,EAAAnE,QAAAqC,GAAY8B,EAAA7F,KAAA,GAClf6F,EAAA9B,IAAA,gBAAiB,GAAAiQ,EAAA9X,EAAA,GAAe,KAAK2J,EAAAnE,QAAAqC,GAAY8B,EAAA7F,KAAA,GAAW6F,EAAA9B,IAAA,WAAiB,IAAA7H,EAAA,EAAQA,GAAA6H,EAAK7H,GAAA,EAAA2O,EAAA3O,GAAA,UAAA2J,EAAA3J,GAAAsW,EAAAtW,GAAA,WAAA2J,EAAA3J,GAA8CM,EAAA2Y,EAAAtK,EAAArO,GAAS+D,EAAA5D,EAAI6rB,GAAA,GAAMrc,KAAAxI,OAAA,SAAAzH,GAAwB,IAAAU,EAAAiJ,EAAAmO,EAAAuU,EAAA,EAAA5F,EAAAhmB,IAAA,EAA8D,IAA7BT,GAAXU,EAAAC,EAAAX,EAAA6H,EAAA/F,IAAWkrB,OAAWrjB,EAAAjJ,EAAAY,MAAUZ,EAAAV,IAAA,EAAQ8X,EAAA,EAAQA,EAAApX,EAAIoX,GAAA2O,EAAA4F,EAAA5rB,GAAAT,IAAAM,EAAA2Y,EAAAtP,EAAAV,MAAA6O,IAAA2O,GAAAnmB,GAAA+rB,GAAA5rB,GAA0C4D,GAAAgoB,EAAKxkB,EAAA8B,EAAAV,MAAAojB,IAAA,GAAiBvqB,EAAA9B,EAAAS,EAAMugB,GAAA,GAAM/Q,KAAAgd,QAAA,SAAAjtB,EAAA2J,GAA2B,IAAAmO,EAAA2O,EAAA9lB,EAAAF,EAAY,QAAA6rB,EAAA,MAAAzlB,MAAA,8CAA2E,GAAPlG,EAAA0gB,EAAA1X,IAAO,IAAAgiB,EAAA,CAAW,QAAAhrB,EAAAusB,SAAA,MAAArmB,MAAA,yCACtcwlB,EAAA1rB,EAAAusB,SAAa,OAAAltB,GAAU,UAAA8X,EAAA,SAAA9X,GAAyB,OAAAmtB,EAAAntB,EAAAqsB,EAAAtL,EAAApgB,IAAmB,MAAM,UAAAmX,EAAA,SAAA9X,GAAyB,OAAAotB,EAAAptB,EAAAqsB,EAAAtL,EAAApgB,IAAmB,MAAM,YAAAmX,EAAA,SAAA9X,GAA2B,OAAAqtB,EAAArtB,EAAAqsB,EAAAtL,IAAiB,MAAM,sBAAuB0F,EAAA,IAAA6G,YAAA,GAAqB,MAAAnrB,GAAS,MAAA0E,MAAA,iDAA8DiR,EAAA,SAAA9X,GAAc,OAAAutB,EAAAvtB,EAAAqsB,EAAAtL,IAAiB,MAAM,cAAAla,MAAA,kDAAiG,IAA1BpG,EAAAwrB,EAAApkB,EAAAoB,QAAAnH,EAAAuC,EAAAlD,EAAAb,GAAA+rB,GAA0B5F,EAAA,EAAQA,EAAAllB,EAAIklB,GAAA,OAAAkF,GAAA,GAAAU,EAAA,KAAA5rB,IAAA+E,OAAA,kBAAA6mB,EAAA,IAAA5rB,EAAAwrB,EAAAxrB,EAAA4rB,EAClb,EAAAhG,EAAA3lB,GAAA2rB,GAAU,OAAAvU,EAAArX,IAAawP,KAAAud,QAAA,SAAAxtB,EAAA2J,GAA2B,IAAAmO,EAAA2O,EAAA9lB,EAAAwB,EAAY,QAAAmqB,EAAA,MAAAzlB,MAAA,sDAAmF,OAAPlG,EAAA0gB,EAAA1X,GAAO3J,GAAU,UAAA8X,EAAA,SAAA9X,GAAyB,OAAAmtB,EAAAntB,EAAAqsB,EAAAtL,EAAApgB,IAAmB,MAAM,UAAAmX,EAAA,SAAA9X,GAAyB,OAAAotB,EAAAptB,EAAAqsB,EAAAtL,EAAApgB,IAAmB,MAAM,YAAAmX,EAAA,SAAA9X,GAA2B,OAAAqtB,EAAArtB,EAAAqsB,EAAAtL,IAAiB,MAAM,sBAAuBjJ,EAAA,IAAAwV,YAAA,GAAqB,MAAA3e,GAAS,MAAA9H,MAAA,iDAA8DiR,EAAA,SAAA9X,GAAc,OAAAutB,EAAAvtB,EAAAqsB,EAAAtL,IAAiB,MAAM,cAAAla,MAAA,wDACnZ,OAArD4f,EAAAwF,EAAApkB,EAAAoB,QAAAnH,EAAAuC,EAAAlD,EAAAb,GAAA+rB,GAA0BlqB,EAAA8W,EAAA3C,EAAA+P,EAAA3lB,IAA2BoX,EAAf3V,EAAA8pB,EAAAxF,EAAA4F,EAAA5rB,EAAA0B,EAAAkqB,KAA4B,SAAA1iB,EAAAjJ,EAAAV,GAAgBiQ,KAAAjQ,EAAAU,EAASuP,KAAAtG,EAAA3J,EAAS,SAAAmtB,EAAAzsB,EAAAV,EAAA2J,EAAAtF,GAAoB,IAAcvC,EAAA2kB,EAAA9lB,EAAdkH,EAAA,GAAqC,IAA5B7H,GAAA,EAAeW,GAAA,IAAAgJ,EAAA,IAAa7H,EAAA,EAAQA,EAAA9B,EAAI8B,GAAA,EAAA2kB,EAAA/lB,EAAAoB,IAAA,QAAAnB,EAAAmB,EAAA,EAAA6H,GAAA9B,GAAA,mBAAA4lB,OAAAhH,IAAA,yBAAAgH,OAAA,GAAAhH,GAAqG,OAAApiB,EAAAqpB,YAAA7lB,EAAA8lB,cAAA9lB,EAAuC,SAAAulB,EAAA1sB,EAAAV,EAAA2J,EAAAtF,GAAoB,IAAAoiB,EAAA9lB,EAAAwB,EAAAkqB,EAAAxkB,EAAA,GAAA/F,EAAA9B,EAAA,EAAoC,IAAbqsB,GAAA,IAAA1iB,EAAA,IAAa8c,EAAA,EAAQA,EAAA3kB,EAAI2kB,GAAA,MAAA9lB,EAAA8lB,EAAA,EAAA3kB,EAAApB,EAAA+lB,EAAA,SAAAtkB,EAAAskB,EAAA,EAAA3kB,EAAApB,EAAA+lB,EAAA,SAAAtkB,GAAAzB,EAAA+lB,IAAA,QAAA4F,EAAA5F,EAAA,EAAA9c,GAAA,UAAAhJ,IAAA,GAAA0rB,GAAA5F,EAAA,KAAA9c,GAAA,QAAAxH,IAAA,GAAAkqB,GAC1X5F,EAAA,KAAA9c,GAAA,IAAAhJ,EAAA,EAAmB,EAAAA,EAAIA,GAAA,EAAAkH,GAAA,EAAA4e,EAAA,EAAA9lB,GAAAX,EAAA,mEAAAytB,OAAAtrB,IAAA,KAAAxB,GAAA,IAAA0D,EAAAupB,OAAyH,OAAA/lB,EAAS,SAAAwlB,EAAA3sB,EAAAV,EAAA2J,GAAkB,IAAc9B,EAAAlH,EAAA8lB,EAAdpiB,EAAA,GAAqC,IAA5BrE,GAAA,EAAeymB,GAAA,IAAA9c,EAAA,IAAa9B,EAAA,EAAQA,EAAA7H,EAAI6H,GAAA,EAAAlH,EAAAD,EAAAmH,IAAA,QAAA4e,EAAA5e,EAAA,EAAA8B,GAAA,IAAAtF,GAAAkK,OAAAC,aAAA7N,GAA4D,OAAA0D,EAAS,SAAAkpB,EAAA7sB,EAAAV,EAAA2J,GAAkB3J,GAAA,EAAK,IAAAqE,EAAA1D,EAAA8lB,EAAA5e,EAAA,IAAAylB,YAAAttB,GAAgE,IAAjCymB,EAAA,IAAAlZ,WAAA1F,GAAoBlH,GAAA,IAAAgJ,EAAA,IAAatF,EAAA,EAAQA,EAAArE,EAAIqE,GAAA,EAAAoiB,EAAApiB,GAAA3D,EAAA2D,IAAA,QAAA1D,EAAA0D,EAAA,EAAAsF,GAAA,IAAqC,OAAA9B,EAAS,SAAAwZ,EAAA3gB,GAAc,IAAAV,EAAA,CAAO0tB,aAAA,EAAAE,OAAA,IAAAV,UAAA,GAClX,GADyZxsB,KAAA,GAC9eV,EAAA0tB,YAAAhtB,EAAAgtB,cAAA,GAAgC,IAAAhtB,EAAAwB,eAAA,YAAAlC,EAAA4tB,OAAAltB,EAAAktB,SAAqD,IAAAltB,EAAAwB,eAAA,aAAsC,MAAAxB,EAAAwsB,SAAA,QAAArmB,MAAA,oCAAoE7G,EAAAktB,SAAAxsB,EAAAwsB,SAAsB,qBAAAltB,EAAA0tB,YAAA,MAAA7mB,MAAA,yCAAyF,oBAAA7G,EAAA4tB,OAAA,MAAA/mB,MAAA,oCAA8E,OAAA7G,EAAS,SAAA8sB,EAAApsB,EAAAV,EAAA2J,GAAkB,OAAA3J,GAAU,6CAAgD,cAAA6G,MAAA,8CAChd,OAAAnG,GAAU,UAAAA,EAAA,SAAAV,EAAAU,EAAAC,GAA6B,IAAAL,EAAA6B,EAAAkqB,EAAA5rB,EAAAwY,EAAAgT,EAAAxF,EAAAzmB,EAAAwF,OAA2B,MAAAihB,EAAA,QAAA5f,MAAA,iDAA6G,IAArCnG,KAAA,IAAgBuY,GAAPtY,KAAA,KAAO,EAAQsrB,GAAA,IAAAtiB,EAAA,IAAarJ,EAAA,EAAQA,EAAAmmB,EAAInmB,GAAA,GAAmC,GAA7B6B,EAAA2K,SAAA9M,EAAAoO,OAAA9N,EAAA,OAA6ButB,MAAA1rB,GAAA,MAAA0E,MAAA,kDAAsF,IAAAwlB,GAAZ5rB,GAAAH,IAAA,GAAA2Y,KAAY,EAAYvY,EAAA8E,QAAA6mB,GAAY3rB,EAAAoD,KAAA,GAAWpD,EAAA2rB,IAAAlqB,GAAA,GAAA8pB,EAAAxrB,EAAA,EAAAkJ,GAAqB,OAAOrI,MAAAZ,EAAAssB,OAAA,EAAAvG,EAAA9lB,IAAuB,MAAM,WAAAD,EAAA,SAAAA,EAAAmH,EAAAlH,GAA8B,IAAA8lB,EAAAnmB,EAAA+rB,EAAA5rB,EAAAwY,EAAAgT,EAAA9qB,EAAAI,EAAAY,EAAA,EAAgD,GAAxB0F,KAAA,IAAgBoR,GAAPtY,KAAA,KAAO,EAAQ,SAAAX,EAAA,IAAAuB,GAAA,IAC/doI,EAAA,IAAA0iB,EAAA,EAAUA,EAAA3rB,EAAA8E,OAAW6mB,GAAA,MAAA/rB,EAAA,QAAAmmB,EAAA/lB,EAAAyN,WAAAke,IAAA/rB,EAAAwD,KAAA2iB,GAAA,KAAAA,GAAAnmB,EAAAwD,KAAA,IAAA2iB,IAAA,GAAAnmB,EAAAwD,KAAA,OAAA2iB,IAAA,MAAAA,GAAA,OAAAA,EAAAnmB,EAAAwD,KAAA,IAAA2iB,IAAA,OAAAA,IAAA,YAAAA,IAAA4F,GAAA,EAAA5F,EAAA,aAAAA,IAAA,QAAA/lB,EAAAyN,WAAAke,IAAA/rB,EAAAwD,KAAA,IAAA2iB,IAAA,OAAAA,IAAA,UAAAA,IAAA,YAAAA,IAAAhmB,EAAA,EAAqQA,EAAAH,EAAAkF,OAAW/E,GAAA,GAAY,IAAAwrB,GAAN9qB,EAAAgB,EAAA8W,KAAM,EAAYpR,EAAArC,QAAAymB,GAAYpkB,EAAA/D,KAAA,GAAW+D,EAAAokB,IAAA3rB,EAAAG,IAAA,GAAAc,EAAAJ,EAAA,EAAAwI,GAAwBxH,GAAA,OAAK,eAAAnC,GAAA,YAAAA,EAAA,IAAAuB,GAAA,IAAAoI,EAAA,IAAArJ,EAAA,YAAAN,GAAA,IAAA2J,GAAA,YAAA3J,GAAA,IAAA2J,EAAA0iB,EAAA,EAAuGA,EAAA3rB,EAAA8E,OAAW6mB,GAAA,GAC9b,IADoc5F,EAAA/lB,EAAAyN,WAAAke,IACze,IAAA/rB,IAAAmmB,GAAAhmB,EAAA,IAAAgmB,IAAA,EAAAA,IAAA,GAAqCwF,GAAN9qB,EAAAgB,EAAA8W,KAAM,EAAYpR,EAAArC,QAAAymB,GAAYpkB,EAAA/D,KAAA,GAAW+D,EAAAokB,IAAAxF,GAAA,GAAAllB,EAAAJ,EAAA,EAAAwI,GAAqBxH,GAAA,EAAK,OAAOb,MAAAuG,EAAAmlB,OAAA,EAAA7qB,EAAAxB,IAAuB,MAAM,UAAAD,EAAA,SAAAV,EAAAU,EAAAC,GAA6B,IAAAL,EAAA6B,EAAAkqB,EAAA5rB,EAAAwY,EAAAgT,EAAA9qB,EAAAI,EAAAklB,EAAA,EAAwB,QAAAzmB,EAAA8tB,OAAA,4BAAAjnB,MAAA,uCAAiI,GAAvC1E,EAAAnC,EAAA6D,QAAA,KAAiB7D,IAAAiW,QAAA,WAAsB,IAAA9T,KAAAnC,EAAAwF,OAAA,MAAAqB,MAAA,uCAA8G,IAArCnG,KAAA,IAAgBurB,GAAPtrB,KAAA,KAAO,EAAQY,GAAA,IAAAoI,EAAA,IAAaxH,EAAA,EAAQA,EAAAnC,EAAAwF,OAAWrD,GAAA,GAAsB,IAAhB8W,EAAAjZ,EAAAoO,OAAAjM,EAAA,GAAgBkqB,EAAA5rB,EAAA,EAAU4rB,EAAApT,EAAAzT,OAAW6mB,GAAA,EACxe5rB,IADweH,EAAA,mEAAAuD,QAAAoV,EAAAoT,MACxe,KAAAA,EAAa,IAAAA,EAAA,EAAQA,EAAApT,EAAAzT,OAAA,EAAa6mB,GAAA,GAAY,IAAA/rB,GAANa,EAAAslB,EAAAwF,KAAM,EAAYvrB,EAAA8E,QAAAlF,GAAYI,EAAAoD,KAAA,GAAWpD,EAAAJ,KAAAG,IAAA,KAAA4rB,EAAA,SAAA9qB,EAAAJ,EAAA,EAAAwI,GAAoC8c,GAAA,GAAM,OAAOnlB,MAAAZ,EAAAssB,OAAA,EAAAvG,EAAA9lB,IAAuB,MAAM,YAAAD,EAAA,SAAAV,EAAAU,EAAAC,GAA+B,IAAA8lB,EAAAnmB,EAAA6B,EAAAkqB,EAAA5rB,EAAAwY,EAAqD,IAArCvY,KAAA,IAAgByB,GAAPxB,KAAA,KAAO,EAAQsY,GAAA,IAAAtP,EAAA,IAAarJ,EAAA,EAAQA,EAAAN,EAAAwF,OAAWlF,GAAA,EAAAmmB,EAAAzmB,EAAAmO,WAAA7N,GAAA+rB,GAAA5rB,EAAAH,EAAA6B,KAAA,EAAAzB,EAAA8E,QAAA6mB,GAAA3rB,EAAAoD,KAAA,GAAApD,EAAA2rB,IAAA5F,GAAA,GAAAxN,EAAAxY,EAAA,EAAAkJ,GAAiF,OAAOrI,MAAAZ,EAAAssB,OAAA,EAAAhtB,EAAAwF,OAAA7E,IAA8B,MAAM,sBAAuBD,EAAA,IAAA4sB,YAAA,GAAqB,MAAAjpB,GAAS,MAAAwC,MAAA,iDAA8DnG,EACrf,SAAAV,EAAAU,EAAAC,GAAgB,IAAA8lB,EAAAnmB,EAAA6B,EAAAkqB,EAAA5rB,EAAAwY,EAAyE,IAAzDvY,KAAA,IAAgBJ,GAAPK,KAAA,KAAO,EAAQF,GAAA,IAAAkJ,EAAA,IAAasP,EAAA,IAAA1L,WAAAvN,GAAoBymB,EAAA,EAAQA,EAAAzmB,EAAA6Y,WAAe4N,GAAA,EAAAtkB,GAAAkqB,EAAA5F,EAAAnmB,KAAA,EAAAI,EAAA8E,QAAArD,GAAAzB,EAAAoD,KAAA,GAAApD,EAAAyB,IAAA8W,EAAAwN,IAAA,GAAAhmB,EAAA4rB,EAAA,EAAA1iB,GAAkE,OAAOrI,MAAAZ,EAAAssB,OAAA,EAAAhtB,EAAA6Y,WAAAlY,IAAkC,MAAM,cAAAkG,MAAA,wDAA6E,OAAAnG,EAAS,SAAAsgB,EAAAtgB,EAAAV,GAAgB,OAAAU,GAAAV,EAAAU,IAAA,GAAAV,EAAqB,SAAAiP,EAAAvO,EAAAV,GAAgB,UAAAA,MAAA,OAAA2J,EAAAjJ,EAAAiJ,GAAA3J,EAAAU,EAAAV,IAAA,GAAAA,EAAAU,EAAAV,KAAAU,EAAAiJ,IAAA,GAAA3J,IAAA,IAAAA,EAAA,IAAA2J,EAAAjJ,EAAAV,KAAAU,EAAAiJ,IAAA,GAAA3J,EAAAU,EAAAiJ,GAAA3J,EAAAU,EAAAV,IAAA,GAAAA,GAAAU,EAAkH,SAAA4V,EAAA5V,EAAAV,GAAgB,OAAAU,IAC9eV,EAAAU,GAAA,GAAAV,EAAU,SAAAuB,EAAAb,EAAAV,GAAgB,IAAA8X,EAAA,KAAAA,EAAA,IAAAnO,EAAAjJ,EAAAV,EAAAU,EAAAiJ,GAA4B,WAAA3J,EAAA,IAAA2J,EAAAmO,EAAA9X,MAAA8X,EAAAnO,GAAA,GAAA3J,EAAA,WAAA8X,EAAAnO,IAAA3J,EAAA8X,EAAA9X,GAAA,GAAAA,EAAA,gBAAA2J,EAAAmO,EAAAnO,IAAA3J,EAAA,GAAA8X,EAAA9X,GAAA,GAAAA,EAAA,WAAA8X,EAAA9X,MAAA,GAAA8X,EAAAnO,GAAA,GAAA3J,EAAA,YAAuJ,SAAA+tB,EAAArtB,EAAAV,GAA2B,WAAAA,EAAA,IAAA2J,EAAAjJ,EAAAV,MAAAU,EAAAiJ,IAAA3J,EAAAU,EAAAV,GAAA,GAAAA,EAAA,gBAAA2J,EAAA,EAAAjJ,EAAAV,MAAA,IAA+E,SAAAguB,EAAAttB,EAAAV,EAAA2J,GAAmB,OAAAjJ,EAAAV,GAAAU,EAAAiJ,EAAgB,SAAAskB,EAAAvtB,EAAAV,EAAA8X,GAAmB,WAAAnO,EAAAjJ,EAAAV,OAAAU,EAAAV,EAAA8X,EAAA9X,EAAAU,EAAAiJ,EAAA3J,EAAA2J,GAAAjJ,EAAAiJ,EAAAmO,EAAAnO,GAAgD,SAAAukB,EAAAxtB,EAAAV,EAAA2J,GAAkB,OAAAjJ,EAAAV,EAAAU,EAAAiJ,EAAA3J,EAAA2J,EAAmB,SAAAwkB,EAAAztB,EAAAV,EAAA8X,GAAmB,WAAAnO,EAAAjJ,EAAAV,MAAAU,EAAAV,EAAA8X,EAAA9X,MACrd8X,EAAA9X,EAAAU,EAAAiJ,EAAA3J,EAAA2J,EAAAjJ,EAAAiJ,EAAAmO,EAAAnO,EAAA3J,EAAA2J,EAAAmO,EAAAnO,GAA6B,SAAAykB,EAAA1tB,GAAe,OAAA4V,EAAA5V,EAAA,GAAA4V,EAAA5V,EAAA,IAAA4V,EAAA5V,EAAA,IAA8B,SAAA2tB,EAAA3tB,GAAe,IAAAV,EAAAuB,EAAAb,EAAA,IAAAoX,EAAAvW,EAAAb,EAAA,IAAkC,OAAVA,EAAAa,EAAAb,EAAA,IAAU,IAAAiJ,EAAA3J,IAAA8X,EAAA9X,EAAAU,EAAAV,IAAA2J,EAAAmO,EAAAnO,EAAAjJ,EAAAiJ,GAAsC,SAAA2kB,EAAA5tB,GAAe,OAAA4V,EAAA5V,EAAA,GAAA4V,EAAA5V,EAAA,IAAA4V,EAAA5V,EAAA,IAA8B,SAAA6tB,EAAA7tB,GAAe,IAAAV,EAAAuB,EAAAb,EAAA,IAAAoX,EAAAvW,EAAAb,EAAA,IAAkC,OAAVA,EAAAa,EAAAb,EAAA,IAAU,IAAAiJ,EAAA3J,IAAA8X,EAAA9X,EAAAU,EAAAV,IAAA2J,EAAAmO,EAAAnO,EAAAjJ,EAAAiJ,GAAsC,SAAA6kB,EAAA9tB,GAAe,OAAA4V,EAAA5V,EAAA,GAAA4V,EAAA5V,EAAA,IAAAA,IAAA,EAA4B,SAAA+tB,EAAA/tB,GAAe,IAAAV,EAAAuB,EAAAb,EAAA,GAAAoX,EAAAvW,EAAAb,EAAA,GAA+B,OAATA,EAAAqtB,EAAArtB,EAAA,GAAS,IAAAiJ,EAAA3J,IAAA8X,EAAA9X,EAAAU,EAAAV,IAAA2J,EAAAmO,EAAAnO,EAAAjJ,EAAAiJ,GAAsC,SAAA+kB,EAAAhuB,GAAe,OAAA4V,EAAA5V,EAAA,IAAA4V,EAAA5V,EAAA,IAAAA,IAAA,GAA8B,SAAAiuB,EAAAjuB,GAAe,IAAAV,EAAAuB,EAAAb,EAAA,IAAAoX,EAAAvW,EAAAb,EAAA,IACvd,OAATA,EAAAqtB,EAAArtB,EAAA,GAAS,IAAAiJ,EAAA3J,IAAA8X,EAAA9X,EAAAU,EAAAV,IAAA2J,EAAAmO,EAAAnO,EAAAjJ,EAAAiJ,GAAsC,SAAAilB,EAAAluB,EAAAV,GAAgB,IAAA2J,GAAA,MAAAjJ,IAAA,MAAAV,GAA0B,QAAAU,IAAA,KAAAV,IAAA,KAAA2J,IAAA,qBAAAA,EAAqD,SAAAklB,EAAAnuB,EAAAV,EAAA2J,EAAAtF,GAAqB,IAAAwD,GAAA,MAAAnH,IAAA,MAAAV,IAAA,MAAA2J,IAAA,MAAAtF,GAA8C,QAAA3D,IAAA,KAAAV,IAAA,KAAA2J,IAAA,KAAAtF,IAAA,KAAAwD,IAAA,qBAAAA,EAAuE,SAAAinB,EAAApuB,EAAAV,EAAA2J,EAAAtF,EAAAwD,GAAsB,IAAAlH,GAAA,MAAAD,IAAA,MAAAV,IAAA,MAAA2J,IAAA,MAAAtF,IAAA,MAAAwD,GAAwD,QAAAnH,IAAA,KAAAV,IAAA,KAAA2J,IAAA,KAAAtF,IAAA,KAAAwD,IAAA,KAAAlH,IAAA,qBAAAA,EAAgF,SAAAouB,EAAAruB,EAAAV,GAAiB,IAAAW,EAAA0D,EAAAwD,EACvV,OADiWlH,GAAA,MAAAD,EAAAiJ,IAAA,MAAA3J,EAAA2J,GAC7b9B,GAAA,OADudxD,GAAA3D,EAAAiJ,IAAA,KAC3e3J,EAAA2J,IAAA,KAAAhJ,IAAA,OAAoB,SAAAA,EAAwBA,GAAA,MAAAD,EAAAV,IAAA,MAAAA,MAAAqE,IAAA,IAAoE,IAAAsF,GAAA,OAAjCtF,GAAA3D,EAAAV,IAAA,KAAAA,MAAA,KAAAW,IAAA,OAAiC,SAAAA,EAAAkH,GAAsC,SAAAmnB,EAAAtuB,EAAAV,EAAAW,EAAA0D,GAAqB,IAAAwD,EAAA/F,EAAA2kB,EAA6P,OAAnP5e,GAAA,MAAAnH,EAAAiJ,IAAA,MAAA3J,EAAA2J,IAAA,MAAAhJ,EAAAgJ,IAAA,MAAAtF,EAAAsF,GAAyG8c,GAAA,OAAvD3kB,GAAApB,EAAAiJ,IAAA,KAAA3J,EAAA2J,IAAA,KAAAhJ,EAAAgJ,IAAA,KAAAtF,EAAAsF,IAAA,KAAA9B,IAAA,OAAuD,SAAAA,EAAwBA,GAAA,MAAAnH,EAAAV,IAAA,MAAAA,MAAA,MAAAW,EAAAX,IAAA,MAAAqE,EAAArE,IAAA8B,IAAA,IAAkH,IAAA6H,GAAA,OAAvD7H,GAAApB,EAAAV,IAAA,KAAAA,MAAA,KAAAW,EAAAX,IAAA,KAAAqE,EAAArE,IAAA,KAAA6H,IAAA,OAAuD,SAAAA,EAAA4e,GAAsC,SAAAwI,EAAAvuB,EAAAV,EAAAW,EAAA0D,EAAAwD,GAAuB,IAAA/F,EAAA2kB,EAAAnmB,EAC3M,OADqNwB,GAC/e,MAD+epB,EAAAiJ,IAC/e,MAAA3J,EAAA2J,IAAA,MAAAhJ,EAAAgJ,IAAA,MAAAtF,EAAAsF,IAAA,MAAA9B,EAAA8B,GAAyHrJ,GAAA,OAAlEmmB,GAAA/lB,EAAAiJ,IAAA,KAAA3J,EAAA2J,IAAA,KAAAhJ,EAAAgJ,IAAA,KAAAtF,EAAAsF,IAAA,KAAA9B,EAAA8B,IAAA,KAAA7H,IAAA,OAAkE,SAAAA,EAAwBA,GAAA,MAAApB,EAAAV,IAAA,MAAAA,MAAA,MAAAW,EAAAX,IAAA,MAAAqE,EAAArE,IAAA,MAAA6H,EAAA7H,IAAAymB,IAAA,IAAyI,IAAA9c,GAAA,OAAlE8c,GAAA/lB,EAAAV,IAAA,KAAAA,MAAA,KAAAW,EAAAX,IAAA,KAAAqE,EAAArE,IAAA,KAAA6H,EAAA7H,IAAA,KAAA8B,IAAA,OAAkE,SAAAA,EAAAxB,GAAsC,SAAAgmB,EAAA5lB,EAAAV,GAAgB,WAAA2J,EAAAjJ,EAAAV,MAAAU,EAAAiJ,EAAA3J,EAAA2J,GAA8B,SAAA0c,EAAA3lB,GAAc,IAAAC,EAAAX,EAAA,GAAW,aAAAU,EAAAV,EAAA,6DAAyE,OAAAU,EAAAisB,YAAA,iBAAA3sB,EAChd,wFAAAW,EAAA,yFAAAD,GAAsL,oBAAqB,cAAAV,EAAAW,EAAmB,MAAM,cAAAX,EAAA,KAAA2J,EAAA,WAAA3J,EAAA,QAAA2J,EAAA,WAAA3J,EAAA,QAAA2J,EAAA,WAAA3J,EAAA,QAAA2J,EAAA,UAAA3J,EAAA,QAAA2J,EAAA,WAAA3J,EAAA,QAAA2J,EAAA,YAAA3J,EAAA,QAAA2J,EAAA,WAAA3J,EAAA,QAAA2J,EAAA,WAAA3J,EAAA,KAA2M,MAAM,cAAAA,EAAA,KAAA2J,EAAAhJ,EAAA,mBAAAgJ,EAAAhJ,EAAA,eACrb,IAAAgJ,EAAAhJ,EAAA,mBAAAgJ,EAAAhJ,EAAA,mBAAAgJ,EAAAhJ,EAAA,mBAAAgJ,EAAAhJ,EAAA,kBAAAgJ,EAAAhJ,EAAA,mBAAAgJ,EAAAhJ,EAAA,eAAyI,MAAM,cAAAkG,MAAA,2BAA4C,QAAAnG,EAAAisB,YAAA,gBAAAjsB,EAAAisB,YAAA,WAAkJ,MAAA9lB,MAAA,6BAAlJ,IAAAnG,EAAA,EAA2E,EAAAA,EAAIA,GAAA,EAAAV,EAAAU,GAAA,KAAAiJ,EAAA,SAAAA,EAAA,SAAAA,EAAA,SAAAA,EAAA,SAAAA,EAAA,MAAiH,OAAA3J,EAAS,SAAAysB,EAAA/rB,EAAAV,GAAgB,IAAAqE,EAAA1D,EAAAmB,EAAA2kB,EAAAnmB,EAAA6B,EAAAkqB,EAAA1iB,EAAA,GAA0D,IAAnCtF,EAAArE,EAAA,GAAOW,EAAAX,EAAA,GAAO8B,EAAA9B,EAAA,GAAOymB,EAAAzmB,EAAA,GAAOM,EAAAN,EAAA,GAAOqsB,EAAA,EAAQ,GAAAA,EAAKA,GAAA,EAAA1iB,EAAA0iB,GAAA,GAAAA,EAAA3rB,EAAA2rB,GAAArL,EAAArX,EAAA0iB,EAC3d,GAAA1iB,EAAA0iB,EAAA,GAAA1iB,EAAA0iB,EAAA,IAAA1iB,EAAA0iB,EAAA,OAAAlqB,EAAA,GAAAkqB,EAAAyC,EAAA9N,EAAA3c,EAAA,GAAA1D,EAAAmB,GAAAnB,EAAA8lB,EAAAnmB,EAAA,WAAAqJ,EAAA0iB,IAAA,GAAAA,EAAAyC,EAAA9N,EAAA3c,EAAA,GAAA1D,EAAAmB,EAAA2kB,EAAAnmB,EAAA,WAAAqJ,EAAA0iB,IAAA,GAAAA,EAAAyC,EAAA9N,EAAA3c,EAAA,GAAA6pB,EAAAvtB,EAAAmB,EAAA2kB,GAAAnmB,EAAA,WAAAqJ,EAAA0iB,IAAAyC,EAAA9N,EAAA3c,EAAA,GAAA1D,EAAAmB,EAAA2kB,EAAAnmB,EAAA,WAAAqJ,EAAA0iB,IAAA/rB,EAAAmmB,IAAA3kB,IAAAkf,EAAArgB,EAAA,IAAAA,EAAA0D,IAAAlC,EAAiS,OAA3EnC,EAAA,GAAA4uB,EAAAvqB,EAAArE,EAAA,IAAeA,EAAA,GAAA4uB,EAAAjuB,EAAAX,EAAA,IAAeA,EAAA,GAAA4uB,EAAA9sB,EAAA9B,EAAA,IAAeA,EAAA,GAAA4uB,EAAAnI,EAAAzmB,EAAA,IAAeA,EAAA,GAAA4uB,EAAAtuB,EAAAN,EAAA,IAAeA,EAAS,SAAA0sB,EAAAhsB,EAAAV,EAAA2J,EAAAtF,GAAoB,IAAA1D,EAAM,IAAAA,EAAA,IAAAX,EAAA,WAAuBU,EAAA8E,QAAA7E,GAAYD,EAAAoD,KAAA,GAA0F,IAA/EpD,EAAAV,IAAA,YAAAA,EAAA,GAAuBA,GAAA2J,EAAKjJ,EAAAC,GAAA,WAAAX,EAAkBU,EAAAC,EAAA,GAAAX,EAAA,aAAsBA,EAAAU,EAAA8E,OAAW7E,EAAA,EAAQA,EAAAX,EAAIW,GAAA,GAAA0D,EAAAooB,EAAA/rB,EAAAuI,MAAAtI,IAAA,IAAA0D,GAA6B,OAAAA,EAAS,SAAAuoB,EAAAlsB,EACnfV,EAAA8X,GAAK,IAAAzT,EAAAwD,EAAA/F,EAAA2kB,EAAAnmB,EAAA6B,EAAAkqB,EAAA5rB,EAAAwY,EAAAgT,EAAA9qB,EAAAI,EAAAoN,EAAA2H,EAAA0K,EAAAqF,EAAAsF,EAAA5K,EAAA8L,EAAAvG,EAAAC,EAAAC,EAAA0I,EAAAC,EAAA,GAAuD,eAAArX,GAAA,YAAAA,EAAAmU,EAAA,GAAA1qB,EAAA,EAAAilB,EAAApU,OAAAzD,EAAAigB,EAAAtY,EAAAuY,EAAA7N,EAAA8N,EAAAzI,EAAAmI,EAAA7C,EAAA+C,EAAA3N,EAAAqN,EAAAvB,EAAAyB,EAAA/H,EAAA2H,EAAA5H,EAAA0H,EAAAkB,EAAAvuB,MAAgG,gBAAAmX,GAAA,YAAAA,EAAmG,MAAAjR,MAAA,4CAAnGolB,EAAA,GAAA1qB,EAAA,EAAAilB,EAAA7c,EAAAgF,EAAAogB,EAAAzY,EAAA0Y,EAAAhO,EAAAiO,EAAA5I,EAAAoI,EAAA9C,EAAAgD,EAAA5N,EAAAsN,EAAAxB,EAAA0B,EAAAhI,EAAA4H,EAAA7H,EAAA2H,EAAAiB,EAAAE,EAAwN,IAAxDtX,EAAA9X,EAAA,GAAOqE,EAAArE,EAAA,GAAO6H,EAAA7H,EAAA,GAAO8B,EAAA9B,EAAA,GAAOymB,EAAAzmB,EAAA,GAAOM,EAAAN,EAAA,GAAOmC,EAAAnC,EAAA,GAAOqsB,EAAArsB,EAAA,GAAOmB,EAAA,EAAQA,EAAA8qB,EAAI9qB,GAAA,KAAAA,GAAA8X,EAAA9X,EAAAI,EAAAd,EAAAC,EAAA8E,QAAAyT,EAAA,EAAAvY,EAAAuY,KAAAvY,EAAA8E,QAAAyT,EAAA,IAAAvY,EAAAuY,EAAA,GAAAkW,EAAAhuB,GAAA,IAAAqlB,EAAA/lB,EAAAwY,IAAAkW,EAAAhuB,GAAAmV,EAAAqV,EAAAwD,EAAAhuB,EAAA,IAAAguB,EAAAhuB,EAAA,GAAAklB,EAAA8I,EAAAhuB,EAAA,KAAAguB,EAAAhuB,EAChY,KAAAV,EAAAugB,EAAAqL,EAAAQ,EAAApG,GAAAH,EAAAG,EAAAnmB,EAAA6B,GAAA+sB,EAAA/tB,GAAAguB,EAAAhuB,IAAA8X,EAAAtK,EAAAoS,EAAAjJ,GAAAyO,EAAAzO,EAAAzT,EAAAwD,IAAAwkB,EAAAlqB,IAAA7B,IAAAmmB,IAAA9X,EAAA7M,EAAArB,GAAAqB,EAAA+F,IAAAxD,IAAAyT,IAAAnJ,EAAAlO,EAAAwY,GAAyN,OAAxHjZ,EAAA,GAAA2O,EAAAmJ,EAAA9X,EAAA,IAAeA,EAAA,GAAA2O,EAAAtK,EAAArE,EAAA,IAAeA,EAAA,GAAA2O,EAAA9G,EAAA7H,EAAA,IAAeA,EAAA,GAAA2O,EAAA7M,EAAA9B,EAAA,IAAeA,EAAA,GAAA2O,EAAA8X,EAAAzmB,EAAA,IAAeA,EAAA,GAAA2O,EAAArO,EAAAN,EAAA,IAAeA,EAAA,GAAA2O,EAAAxM,EAAAnC,EAAA,IAAeA,EAAA,GAAA2O,EAAA0d,EAAArsB,EAAA,IAAeA,EAAS,SAAAwmB,EAAA9lB,EAAAV,GAAgB,IAAAW,EAAA0D,EAAAwD,EAAA/F,EAAA2kB,EAAA,GAAAnmB,EAAA,GAAsB,UAAAI,EAAA,IAAA2D,EAAA,EAAoBA,EAAA3D,EAAA8E,OAAWnB,GAAA,EAAArE,GAAAqE,IAAA,OAAAA,IAAA,QAAAiiB,EAAAtmB,GAAAqE,IAAA,OAAAA,IAAA,YAAAsF,EAAAjJ,EAAA2D,EAAA,GAAA3D,EAAA2D,KAA+E,IAAA1D,EAAA,EAAQ,GAAAA,EAAKA,GAAA,GAAmB,IAAbmB,EAAAukB,EAAA,SAAahiB,EAAA,EAAQ,EAAAA,EAAIA,GAAA,GAAMwD,EAAA7H,EAAAqE,GAAA,GAAU,IAAAlC,EAAAnC,EAAAqE,GAAA,GAAAgoB,EAAArsB,EAAAqE,GAAA,GAAA5D,EAAAT,EAAAqE,GAAA,GAAA4U,EAAAjZ,EAAAqE,GAAA,GAA4CoiB,EAAApiB,GAAA,IAAAsF,EAAA9B,EAAA7H,EAAAmC,EAAAnC,EAAAqsB,EAAArsB,EAC9dS,EAAAT,EAAAiZ,EAAAjZ,EAAA6H,EAAA8B,EAAAxH,EAAAwH,EAAA0iB,EAAA1iB,EAAAlJ,EAAAkJ,EAAAsP,EAAAtP,GAA6B,IAAAtF,EAAA,EAAQ,EAAAA,EAAIA,GAAA,EAAA/D,EAAA+D,GAAAiiB,EAAAG,GAAApiB,EAAA,MAAA4K,EAAAwX,GAAApiB,EAAA,UAAwC,IAAAA,EAAA,EAAQ,EAAAA,EAAIA,GAAA,MAAAwD,EAAA,EAAa,EAAAA,EAAIA,GAAA,EAAA7H,EAAAqE,GAAAwD,GAAAye,EAAAtmB,EAAAqE,GAAAwD,GAAAvH,EAAA+D,IAA6B,IAAAA,EAAA,EAAQ,EAAAA,EAAIA,GAAA,MAAAwD,EAAA,EAAa,EAAAA,EAAIA,GAAA,EAAA/F,EAAA+F,IAAA,EAAAxD,EAAA,EAAAwD,GAAA,GAAAoH,EAAAjP,EAAAqE,GAAAwD,GAAAwnB,EAAAhrB,GAAAwD,IAA0C,IAAAxD,EAAA,EAAQ,EAAAA,EAAIA,GAAA,MAAAwD,EAAA,EAAa,EAAAA,EAAIA,GAAA,EAAA7H,EAAAqE,GAAAwD,GAAAye,EAAAxkB,EAAAuC,GAAAwD,GAAA,IAAA8B,GAAA7H,GAAAuC,EAAA,MAAAwD,GAAA7H,EAAA8B,GAAAuC,EAAA,MAAAwD,GAAA7H,GAAA8B,GAAAuC,EAAA,MAAAwD,GAAA8B,EAAA7H,GAAAuC,EAAA,MAAAwD,GAAA8B,IAAiG3J,EAAA,MAAAsmB,EAAAtmB,EAAA,MAAAsvB,EAAA3uB,IAAwB,OAAAX,EAAS,IAAAW,EAAAyuB,EAAAC,EAAAC,EAE9SF,EAAA,KAAAzlB,GAF0ThJ,EAAA,uHAC7X,wfACA,oEAAmE,mBAAAgJ,EAAAhJ,EAAA,kBAAAgJ,EAAAhJ,EAAA,mBAAAgJ,EAAAhJ,EAAA,mBAAAgJ,EAAAhJ,EAAA,mBAAAgJ,EAAAhJ,EAAA,mBAAAgJ,EAAAhJ,EAAA,mBAAAgJ,EAAAhJ,EAAA,mBAAAgJ,EAAAhJ,EAAA,mBAAAgJ,EAAAhJ,EAAA,mBAAAgJ,EAAAhJ,EAAA,oBAAAgJ,EAAAhJ,EAAA,oBAAAgJ,EAAAhJ,EAAA,oBAAAgJ,EAAAhJ,EAAA,mBAAAgJ,EAAAhJ,EAAA,mBAAAgJ,EAAAhJ,EAAA,oBAAAgJ,EAAAhJ,EAAA,oBAAAgJ,EAAAhJ,EAAA,mBAAAgJ,EAAAhJ,EAAA,gBACnE,IAAAgJ,EAAAhJ,EAAA,oBAAAgJ,EAAAhJ,EAAA,oBAAAgJ,EAAAhJ,EAAA,oBAAAgJ,EAAAhJ,EAAA,oBAAAgJ,EAAAhJ,EAAA,oBAAAgJ,EAAAhJ,EAAA,oBAAAgJ,EAAAhJ,EAAA,mBAAAgJ,EAAAhJ,EAAA,oBAAAgJ,EAAAhJ,EAAA,oBAAAgJ,EAAAhJ,EAAA,oBAAAgJ,EAAAhJ,EAAA,oBAAAgJ,EAAAhJ,EAAA,oBAAAgJ,EAAAhJ,EAAA,mBAAAgJ,EAAAhJ,EAAA,oBAAAgJ,EAAAhJ,EAAA,oBAAAgJ,EAAAhJ,EAAA,oBAAAgJ,EAAAhJ,EAAA,oBAAAgJ,EAAAhJ,EAAA,oBAAAgJ,EAAAhJ,EAAA,oBAAAgJ,EAAAhJ,EAAA,oBAAAgJ,EAAAhJ,EAAA,eACA,IAAAgJ,EAAAhJ,EAAA,oBAAAgJ,EAAAhJ,EAAA,oBAAAgJ,EAAAhJ,EAAA,oBAAAgJ,EAAAhJ,EAAA,mBAAAgJ,EAAAhJ,EAAA,oBAAAgJ,EAAAhJ,EAAA,oBAAAgJ,EAAAhJ,EAAA,oBAAAgJ,EAAAhJ,EAAA,mBAAAgJ,EAAAhJ,EAAA,oBAAAgJ,EAAAhJ,EAAA,oBAAAgJ,EAAAhJ,EAAA,oBAAAgJ,EAAAhJ,EAAA,oBAAAgJ,EAAAhJ,EAAA,oBAAAgJ,EAAAhJ,EAAA,oBAAAgJ,EAAAhJ,EAAA,oBAAAgJ,EAAAhJ,EAAA,oBAAAgJ,EAAAhJ,EAAA,oBAAAgJ,EAAAhJ,EAAA,oBAAAgJ,EAAAhJ,EAAA,oBAAAgJ,EAAAhJ,EAAA,mBAAAgJ,EAAAhJ,EAAA,mBAAAgJ,EAAAhJ,EAAA,IACA,gBAAAgJ,EAAAhJ,EAAA,oBAAAgJ,EAAAhJ,EAAA,oBAAAgJ,EAAA,2BAAAA,EAAA,0BAAAA,EAAA,2BAAAA,EAAA,2BAAAA,EAAA,0BAAAA,EAAA,0BAAAA,EAAA,0BAAAA,EAAA,yBAAAA,EAAA,yBAAAA,EAAA,0BAAAA,EAAA,0BAAAA,EAAA,2BAAAA,EAAA,2BAAAA,EAAA,2BAAAA,EAAA,0BAAAA,EAAA,WACA,aAAa2lB,EAAA,KAAA3lB,EAAA,SAAAA,EAAA,aAAAA,EAAA,sBAAAA,EAAA,2BAAAA,EAAA,aAAAA,EAAA,kBAAAA,EAAA,2BAAAA,EAAA,sBAAAA,EAAA,WAAAA,EAAA,WAAAA,EAAA,kBAAAA,EAAA,kBAAAA,EAAA,kBAAAA,EAAA,oBAAAA,EAAA,sBAAAA,EAAA,sBAAAA,EAAA,sBAAAA,EAAA,oBAAAA,EAAA,aAAAA,EAAA,2BAAAA,EAAA,2BAAAA,EAAA,sBAAAA,EAAA,cACb,IAAAA,EAAA,wBAA8B0lB,EAAA,sFAC9B9pB,KADiH4mB,EAAA,WAAoD,OAAA5F,GAAS/lB,KAAAZ,EAAAQ,EAAAR,EAAAC,MAC9KA,EAAAD,QAAAusB,GAlCA,IAuCAoD;;;;8BAKA,SAAA1vB,EAAAD,GAEAC,EAAAD,QAAA,SAAAC,GAoBA,OAnBAA,EAAA2vB,kBACA3vB,EAAA4vB,UAAA,aACA5vB,EAAA6vB,MAAA,GAEA7vB,EAAAkE,WAAAlE,EAAAkE,SAAA,IACAhD,OAAAC,eAAAnB,EAAA,UACAoB,YAAA,EACAC,IAAA,WACA,OAAArB,EAAAS,KAGAS,OAAAC,eAAAnB,EAAA,MACAoB,YAAA,EACAC,IAAA,WACA,OAAArB,EAAAI,KAGAJ,EAAA2vB,gBAAA,GAEA3vB,IAMA8vB;;;;gEAKA,SAAA9vB,EAAA+L,EAAAxL,GAEA,aACAA,EAAAe,EAAAyK,GACAxL,EAAAO,EAAAiL,EAAA,gCAA4G,OAAAgkB,IAC5GxvB,EAAAO,EAAAiL,EAAA,iCAA6G,OAAAikB,IAC7G,IAAAC,EAAA1vB,mBAAA,qBACA2vB,EAAA3vB,oBAAA,sBACA4vB,EAAA5vB,0BAAA,4BACA,SAAA6vB,EAAAC,EAAAC,GAAiD,KAAAD,aAAAC,GAA0C,UAAAC,UAAA,qCAE3F,SAAAC,EAAAC,EAAAC,GAA2C,QAAAtwB,EAAA,EAAgBA,EAAAswB,EAAA/qB,OAAkBvF,IAAA,CAAO,IAAAuwB,EAAAD,EAAAtwB,GAA2BuwB,EAAAvvB,WAAAuvB,EAAAvvB,aAAA,EAAwDuvB,EAAArsB,cAAA,EAAgC,UAAAqsB,MAAAC,UAAA,GAAuD1vB,OAAAC,eAAAsvB,EAAAE,EAAA5uB,IAAA4uB,IAE9P,SAAAE,EAAAP,EAAAQ,EAAAC,GAAiM,OAApID,GAAAN,EAAAF,EAAAluB,UAAA0uB,GAAsEC,GAAAP,EAAAF,EAAAS,GAA8DT,EAKjM,IAAAP,EAEA,WACA,SAAAA,EAAAiB,EAAAC,EAAAC,GACAd,EAAAhgB,KAAA2f,GAEA3f,KAAA+gB,SAAAF,EACA7gB,KAAAghB,cAAAJ,EACA5gB,KAAAihB,gBAAAH,EACA9gB,KAAAkhB,OAAA,IAAApB,EAAA,UACA9f,KAAAmhB,QAAA,IAAArB,EAAA,mBAgBA,OAbAW,EAAAd,EAAA,EACAhuB,IAAA,YACAN,MAAA,WACA,IAAAiF,EAAA,CACA8qB,WAAAphB,KAAA+gB,SACAM,YAAArhB,KAAAghB,cACAM,iBAAAthB,KAAAihB,iBAGA,OADAjhB,KAAAkhB,OAAAK,iBAAAjrB,GACA,IAAAupB,EAAA,QAAAE,EAAA,gBAAAyB,GAAA,UAAA3B,EAAA,OAAAF,mBAAArpB,GAAA,OAIAqpB,EAxBA,GA0BAC,EAEA,WACA,SAAAA,EAAApvB,GACAwvB,EAAAhgB,KAAA4f,GAEA5f,KAAAyhB,GAAAjxB,EACAwP,KAAA0hB,UAAAlxB,EAAAgxB,GACAxhB,KAAA+gB,SAAAvwB,EAAAmxB,KAAAP,WACAphB,KAAA4hB,WAAApxB,EAAAmxB,KAAAE,YACA7hB,KAAA8hB,QAAAtxB,EAAAuxB,mBAAAlC,EAAA,aAAAiC,QAoGA,OAjGArB,EAAAb,EAAA,EACAjuB,IAAA,SACAN,MAAA,WACA,OAAA2O,KAAAyhB,GAAAE,KAAA,MAEG,CACHhwB,IAAA,mBACAN,MAAA,WACA,OAAA2O,KAAAyhB,GAAAE,KAAA,cAEG,CACHhwB,IAAA,uBACAN,MAAA,WACA,OAAA2O,KAAAyhB,GAAAE,KAAA,sBAEG,CACHhwB,IAAA,oBACAN,MAAA,WACA,OAAA2O,KAAAyhB,GAAAE,KAAA,mBAEG,CACHhwB,IAAA,qBACAN,MAAA,WACA,OAAA2O,KAAAyhB,GAAAE,KAAA,mBAEG,CACHhwB,IAAA,qBACAN,MAAA,WACA,OAAA2O,KAAAyhB,GAAAE,KAAA,mBAEG,CACHhwB,IAAA,kBACAN,MAAA,WACA,OAAA2O,KAAAyhB,GAAAE,KAAA,qBAEG,CACHhwB,IAAA,kBACAN,MAAA,WACA,OAAA2O,KAAAyhB,GAAAE,KAAA,qBAEG,CACHhwB,IAAA,yBACAN,MAAA,WACA,OAAA2O,KAAAyhB,GAAAE,KAAA,kBAEG,CACHhwB,IAAA,iBACAN,MAAA,WACA,OAAA2O,KAAAyhB,GAAAE,KAAA,eAEG,CACHhwB,IAAA,cACAN,MAAA,WACA,OAAA2O,KAAAyhB,GAAAE,KAAA,YAEG,CACHhwB,IAAA,cACAN,MAAA,WACA,OAAA2O,KAAAyhB,GAAAE,KAAA,YAEG,CACHhwB,IAAA,cACAN,MAAA,WACA,OAAA2O,KAAAyhB,GAAAE,KAAA,YAEG,CACHhwB,IAAA,eACAN,MAAA,WACA,OAAA2O,KAAAyhB,GAAAE,KAAA,aAEG,CACHhwB,IAAA,gBACAN,MAAA,WACA,OAAA2O,KAAAyhB,GAAAE,KAAA,cAEG,CACHhwB,IAAA,4BACAN,MAAA,WACA,OAAA2O,KAAAyhB,GAAAE,KAAA,2BAEG,CACHhwB,IAAA,4BACAN,MAAA,WACA,OAAA2O,KAAAyhB,GAAAE,KAAA,2BAEG,CACHhwB,IAAA,qBACAN,MAAA,WACA,OAAA2O,KAAAyhB,GAAAE,KAAA,mBAEG,CACHhwB,IAAA,mBACAN,MAAA,SAAA2wB,GACA,OAAAhiB,KAAAyhB,GAAAE,KAAAK,OAIApC,EA5GA,IAiHAqC;;;;8GAKA,SAAAryB,EAAA+L,EAAAxL,GAEA,aAOA,SAAAiwB,EAAAC,EAAAC,GAA2C,QAAAtwB,EAAA,EAAgBA,EAAAswB,EAAA/qB,OAAkBvF,IAAA,CAAO,IAAAuwB,EAAAD,EAAAtwB,GAA2BuwB,EAAAvvB,WAAAuvB,EAAAvvB,aAAA,EAAwDuvB,EAAArsB,cAAA,EAAgC,UAAAqsB,MAAAC,UAAA,GAAuD1vB,OAAAC,eAAAsvB,EAAAE,EAAA5uB,IAAA4uB,IAI9P,SAAAP,EAAAC,EAAAC,GAAiD,KAAAD,aAAAC,GAA0C,UAAAC,UAAA,qCAV3FhwB,EAAAe,EAAAyK,GACAxL,EAAAO,EAAAiL,EAAA,6BAAyG,OAAAumB,IACzG/xB,EAAAO,EAAAiL,EAAA,0BAAsG,OAAAwmB,IACtGhyB,EAAAO,EAAAiL,EAAA,sCAAkH,OAAAymB,IAClHjyB,EAAAO,EAAAiL,EAAA,8BAA0G,OAAA0mB,IAC1GlyB,EAAAO,EAAAiL,EAAA,wBAAoG,OAAA2mB,IAOpG,IAAAJ,EAAA,CACAK,aAAA,eACAC,WAAA,aACAC,UAAA,aAEAN,EAAA,YACAC,EAAA,SAAAA,EAAAM,GACA1C,EAAAhgB,KAAAoiB,GAEApiB,KAAAkiB,gBAAAQ,GAEAL,EAAA,SAAAA,EAAAM,GACA3C,EAAAhgB,KAAAqiB,GAEAriB,KAAA4iB,QAAAD,GAEAL,EAEA,WACA,SAAAA,IASA,GARAtC,EAAAhgB,KAAAsiB,GAEAtiB,KAAA6iB,QAAA,KACA7iB,KAAAyiB,WAAA,EACAziB,KAAA8iB,MAAAZ,EAAAK,aACAviB,KAAA+iB,YAAAZ,EACAniB,KAAAgjB,IAAA,KAEA,oBAAAC,UACA,UAAArsB,MAAA,2CAjCA,IAAAspB,EAAAQ,EAAAC,EAsJA,OAtJAT,EAqCAoC,GArCA5B,EAqCA,EACA/uB,IAAA,UACAN,MAAA,SAAA6xB,GACA,IAAAC,EAAAnjB,KAEAA,KAAA8iB,QAAAZ,EAAAO,WAAAziB,KAAA8iB,QAAAZ,EAAAM,aAKAxiB,KAAA8iB,MAAAZ,EAAAM,WAGAxiB,KAAAgjB,IAAA,IAAAC,UAAAjjB,KAAA6iB,QAAA7iB,KAAA+iB,aAEA/iB,KAAAgjB,IAAAI,OAAA,WACA,OAAAD,EAAAE,2BAGArjB,KAAAgjB,IAAAM,UAAA,SAAAC,GACA,OAAAJ,EAAAK,kBAAAD,IAGAvjB,KAAAgjB,IAAAS,QAAA,WACA,OAAAN,EAAAO,YAGA1jB,KAAAgjB,IAAAW,QAAA,SAAAlvB,GACA,OAAA0uB,EAAAS,QAAAnvB,IAGAsD,SAAA8rB,cAAA,IAAAC,YAAA,2BACAC,OAAA,IAAA3B,EAAAF,EAAAM,kBAGG,CACH7wB,IAAA,aACAN,MAAA,WACA2O,KAAA8iB,OAAAZ,EAAAK,eAEAviB,KAAAgjB,KAAAhjB,KAAAgjB,IAAAzrB,YAAAyI,KAAAgjB,IAAAgB,QACAhkB,KAAAgjB,IAAAiB,QAGAjkB,KAAAgjB,MACAhjB,KAAAgjB,IAAAI,OAAA,KACApjB,KAAAgjB,IAAAM,UAAA,KACAtjB,KAAAgjB,IAAAS,QAAA,KACAzjB,KAAAgjB,IAAAW,QAAA,MAGA3jB,KAAA0jB,cAEG,CACH/xB,IAAA,OACAN,MAAA,SAAAsxB,GACA3iB,KAAAgjB,IAAA3rB,KAAAsrB,KAEG,CACHhxB,IAAA,WACAN,MAAA,WACA2O,KAAA8iB,MAAAZ,EAAAO,UACAziB,KAAAyiB,WAAA,EACA1qB,SAAA8rB,cAAA,IAAAC,YAAA,2BACAC,OAAA,IAAA3B,EAAAF,EAAAO,gBAGG,CACH9wB,IAAA,WACAN,MAAA,WACA2O,KAAAyiB,WAAA,EACAziB,KAAA8iB,MAAAZ,EAAAK,aACAviB,KAAAgjB,IAAA,KACAjrB,SAAA8rB,cAAA,IAAAC,YAAA,2BACAC,OAAA,IAAA3B,EAAAF,EAAAK,mBAGG,CACH5wB,IAAA,0BACAN,MAAA,WACA,IAAA6yB,EAAAlkB,KAEAmkB,EAAAC,UAAA7uB,OAAA,QAAAD,IAAA8uB,UAAA,GAAAA,UAAA,KAEA,OAAApkB,KAAAgjB,IAAAzrB,aAAAyI,KAAAgjB,IAAAqB,MACArkB,KAAAskB,YACA,GACOH,EAAA,IACPA,SACAI,WAAA,WACA,OAAAL,EAAAb,wBAAAc,IACS,OAETnkB,KAAAwkB,cACA,KAGG,CACH7yB,IAAA,oBACAN,MAAA,SAAAsxB,GACA5qB,SAAA8rB,cAAA,IAAAC,YAAA,mBACAC,OAAA,IAAA1B,EAAAM,EAAArsB,WAGG,CACH3E,IAAA,UACAN,MAAA,SAAAoD,GACAsD,SAAA8rB,cAAA,IAAAC,YAAA,iBACAC,OAAA,IAAA1B,EAAA5tB,WAjJ6D2rB,EAAAF,EAAAluB,UAAA0uB,GAAsEC,GAAAP,EAAAF,EAAAS,GAsJnI2B,EAhIA,IAqIAmC;;;;+BAKA,SAAA70B,EAAA+L,EAAAxL,GAEA,aACAA,EAAAe,EAAAyK,GACAxL,EAAAO,EAAAiL,EAAA,oBAAgG,OAAA+oB,IAChG,IAAAC,EAAAx0B,cAAA,mCACAy0B,EAAAz0B,EAAA0B,EAAA8yB,GACAE,EAAA10B,eAAA,kCACA20B,EAAA30B,EAAA0B,EAAAgzB,GAGA,SAAAzE,EAAAC,EAAAC,GAA2C,QAAAtwB,EAAA,EAAgBA,EAAAswB,EAAA/qB,OAAkBvF,IAAA,CAAO,IAAAuwB,EAAAD,EAAAtwB,GAA2BuwB,EAAAvvB,WAAAuvB,EAAAvvB,aAAA,EAAwDuvB,EAAArsB,cAAA,EAAgC,UAAAqsB,MAAAC,UAAA,GAAuD1vB,OAAAC,eAAAsvB,EAAAE,EAAA5uB,IAAA4uB,IAM9P,IAAAmE,EAEA,WACA,SAAAA,KAXA,SAAAzE,EAAAC,GAAiD,KAAAD,aAAAC,GAA0C,UAAAC,UAAA,qCAY3FH,CAAAhgB,KAAA0kB,GARA,IAAAxE,EAAAQ,EAAAC,EA0EA,OA1EAT,EAiBAwE,EAjBA/D,EAiBA,EACAhvB,IAAA,aACAN,MAAA,SAAAM,EAAA2E,GACA,IAAA+H,EAAAymB,EAAA/0B,EAAAkT,MAAAC,IAAAnF,QAAApM,GAEAozB,EAAAD,EAAA/0B,EAAAqT,QAAAC,MAAAC,IAAAwhB,EAAA/0B,EAAAkT,MAAAE,KAAApF,QAAAzH,IAEA0uB,EADA,IAAAF,EAAA/0B,EAAA4S,gBAAAE,IAAAxE,EAFA,mCAGAsC,QAAAokB,GAEA,OADAD,EAAA/0B,EAAAkT,MAAAC,IAAA9E,UAAA4mB,KASG,CACHrzB,IAAA,aACAN,MAAA,SAAAM,EAAA2E,GACA,IAAA+H,EAAAymB,EAAA/0B,EAAAkT,MAAAC,IAAAnF,QAAApM,GAEAqzB,EAAAF,EAAA/0B,EAAAkT,MAAAC,IAAAnF,QAAAzH,GAEA2uB,EADA,IAAAH,EAAA/0B,EAAA4S,gBAAAE,IAAAxE,EAFA,mCAGAwC,QAAAmkB,GAEA,OADAF,EAAA/0B,EAAAkT,MAAAE,KAAA/E,UAAA0mB,EAAA/0B,EAAAqT,QAAAC,MAAAG,MAAAyhB,MASG,CACHtzB,IAAA,gBACAN,MAAA,SAAAM,EAAAuzB,GACA,IAAAC,EAAA,IAAAP,EAAA70B,EAAA,kBAGA,OAFAo1B,EAAArI,WAAAnrB,EAAA,OACAwzB,EAAA3tB,OAAA0tB,GACAC,EAAA5H,QAAA,SAOG,CACH5rB,IAAA,eACAN,MAAA,SAAAA,GACA,IAAA8zB,EAAA,IAAAP,EAAA70B,EAAA,iBAGA,OAFAo1B,EAAA3tB,OAAAnG,GACA8zB,EAAAnI,QAAA,WArEA0D,EAiBA,OAjB6DN,EAAAF,EAAAluB,UAAA0uB,GAAsEC,GAAAP,EAAAF,EAAAS,GA0EnI+D,EApEA,IAyEAU;;;;sCAKA,SAAAx1B,EAAA+L,EAAAxL,GAEA,aACAA,EAAAe,EAAAyK,GACAxL,EAAAO,EAAAiL,EAAA,2BAAuG,OAAA0pB,IACvG,IAAAC,EAAAn1B,cAAA,kCACAo1B,EAAAp1B,EAAA0B,EAAAyzB,GAGA,SAAAlF,EAAAC,EAAAC,GAA2C,QAAAtwB,EAAA,EAAgBA,EAAAswB,EAAA/qB,OAAkBvF,IAAA,CAAO,IAAAuwB,EAAAD,EAAAtwB,GAA2BuwB,EAAAvvB,WAAAuvB,EAAAvvB,aAAA,EAAwDuvB,EAAArsB,cAAA,EAAgC,UAAAqsB,MAAAC,UAAA,GAAuD1vB,OAAAC,eAAAsvB,EAAAE,EAAA5uB,IAAA4uB,IAgB9P,IAAA8E,EAEA,WACA,SAAAA,KArBA,SAAApF,EAAAC,GAAiD,KAAAD,aAAAC,GAA0C,UAAAC,UAAA,qCAsB3FH,CAAAhgB,KAAAqlB,GAlBA,IAAAnF,EAAAQ,EAAAC,EA4EA,OA5EAT,EA0BAmF,GA1BA3E,EA0BA,EACA/uB,IAAA,mBACAN,MAAA,SAAAm0B,GACA,IAAAC,EAAA,IAAAF,EAAAx1B,EAAAy1B,GACAE,EAAAtgB,KAAAugB,MAAA,IAAAvgB,KAAAwgB,SAAA,GACAC,EAAAJ,EAAA9Q,KAAA+Q,GAEArgB,EAAA,IAAAkgB,EAAAx1B,EAAA,GAEA,UAAA81B,EAAAjgB,IAAAP,GACAA,EAGAwgB,IASG,CACHl0B,IAAA,YACAN,MAAA,SAAAa,EAAAskB,EAAAsP,GACA,IAAAC,EAAA,IAAAR,EAAAx1B,EAAA+1B,EAAA,IACAE,EAAA,IAAAT,EAAAx1B,EAAAymB,EAAA,IACAyP,EAAAV,EAAAx1B,EAAAgsB,KAAA,IAAAwJ,EAAAx1B,EAAAmC,EAAA,KAGA,OAFA8zB,EAAA7N,MAAA8N,GACAvM,OAAAqM,GAAAxN,UAAAxS,SAAA,MAUG,CACHpU,IAAA,SACAN,MAAA,SAAAa,EAAAg0B,EAAAC,GACA,IAAAC,EAAA,IAAAb,EAAAx1B,EAAAm2B,EAAA,IACAG,EAAA,IAAAd,EAAAx1B,EAAAo2B,EAAA,IACAF,EAAAV,EAAAx1B,EAAAgsB,KAAA,IAAAwJ,EAAAx1B,EAAAmC,EAAA,KAEA,OADAk0B,EAAAjO,MAAA8N,GACAvM,OAAA2M,GAAA9N,UAAAxS,SAAA,IAAA2X,mBAxE6D0C,EAAAF,EAAAluB,UAAA0uB,GAAsEC,GAAAP,EAAAF,EAAAS,GA4EnI0E,EA5DA,IAiEAiB;;;;2DAKA,SAAA12B,EAAA+L,EAAAxL,GAEA,aACAA,EAAAe,EAAAyK,GACAxL,EAAAO,EAAAiL,EAAA,8BAA0G,OAAA4qB,IAC1Gp2B,EAAAO,EAAAiL,EAAA,8BAA0G,OAAA6qB,IAC1G,IAAA3G,EAAA1vB,mBAAA,qBACAs2B,EAAAt2B,iBAAA,mBACAu2B,EAAAv2B,kBAAA,oBACA,SAAA6vB,EAAAC,EAAAC,GAAiD,KAAAD,aAAAC,GAA0C,UAAAC,UAAA,qCAE3F,SAAAC,EAAAC,EAAAC,GAA2C,QAAAtwB,EAAA,EAAgBA,EAAAswB,EAAA/qB,OAAkBvF,IAAA,CAAO,IAAAuwB,EAAAD,EAAAtwB,GAA2BuwB,EAAAvvB,WAAAuvB,EAAAvvB,aAAA,EAAwDuvB,EAAArsB,cAAA,EAAgC,UAAAqsB,MAAAC,UAAA,GAAuD1vB,OAAAC,eAAAsvB,EAAAE,EAAA5uB,IAAA4uB,IAO9P,IAAAgG,EAEA,WACA,SAAAA,IACAvG,EAAAhgB,KAAAumB,GATA,IAAArG,EAAAQ,EAAAC,EAuBA,OAvBAT,EAYAqG,EAZA5F,EAYA,EACAhvB,IAAA,oBACAN,MAAA,SAAAs1B,EAAAC,GACA,IAAAp2B,EAAA,IAAAqvB,EAAA,QAAA8G,EAAAnF,GAAA3B,EAAA,OAAAgH,gBAAA,CACA3wB,OAAA,cACO,GACP4wB,EAAA,IAAAJ,EAAA,QAAAD,EAAA,OAAAM,aAAAH,EAAAI,QAAAtJ,cAAA+I,EAAA,OAAAM,aAAAH,EAAAK,SAAAvJ,eACA,WAAA8I,EAAAh2B,EAAAs2B,OAnBApG,EAYA,OAZ6DN,EAAAF,EAAAluB,UAAA0uB,GAAsEC,GAAAP,EAAAF,EAAAS,GAuBnI4F,EAhBA,GAkBAC,EAAA,SAAAA,EAAAU,EAAAJ,GACA9G,EAAAhgB,KAAAwmB,GAEAxmB,KAAAmnB,uBAAAD,EACAlnB,KAAAonB,WAAAN,IAKAO;;;;wCAKA,SAAAz3B,EAAA+L,EAAAxL,GAEA,aAMA,SAAAiwB,EAAAC,EAAAC,GAA2C,QAAAtwB,EAAA,EAAgBA,EAAAswB,EAAA/qB,OAAkBvF,IAAA,CAAO,IAAAuwB,EAAAD,EAAAtwB,GAA2BuwB,EAAAvvB,WAAAuvB,EAAAvvB,aAAA,EAAwDuvB,EAAArsB,cAAA,EAAgC,UAAAqsB,MAAAC,UAAA,GAAuD1vB,OAAAC,eAAAsvB,EAAAE,EAAA5uB,IAAA4uB,IAL9PpwB,EAAAe,EAAAyK,GACAxL,EAAAO,EAAAiL,EAAA,qBAAiG,OAAAc,IACjGtM,EAAAO,EAAAiL,EAAA,oBAAgG,OAAAc,IAOhG,IAAAA,EAEA,WACA,SAAAA,EAAA6qB,GACA,IAAAC,EAAAnD,UAAA7uB,OAAA,QAAAD,IAAA8uB,UAAA,GAAAA,UAAA,SAVA,SAAAnE,EAAAC,GAAiD,KAAAD,aAAAC,GAA0C,UAAAC,UAAA,qCAY3FH,CAAAhgB,KAAAvD,GAEAuD,KAAA7C,OAAA,GACA6C,KAAAsnB,UACAtnB,KAAAunB,gBAZA,IAAArH,EAAAQ,EAAAC,EAmFA,OAnFAT,EAeAzjB,GAfAikB,EAeA,EACA/uB,IAAA,OACAN,MAAA,WACA,QAAAm2B,EAAApD,UAAA7uB,OAAAkyB,EAAA,IAAArqB,MAAAoqB,GAAAE,EAAA,EAAyEA,EAAAF,EAAaE,IACtFD,EAAAC,GAAAtD,UAAAsD,GAGA1nB,KAAA7C,OAAAtJ,KAAA4zB,EAAAvtB,KAAA,MAEA8F,KAAA2nB,YAEG,CACHh2B,IAAA,QACAN,MAAA,WACA,QAAAu2B,EAAAxD,UAAA7uB,OAAAkyB,EAAA,IAAArqB,MAAAwqB,GAAAC,EAAA,EAA4EA,EAAAD,EAAeC,IAC3FJ,EAAAI,GAAAzD,UAAAyD,GAGA7nB,KAAA7C,OAAAtJ,KAAA4zB,EAAAvtB,KAAA,MAEA8F,KAAA2nB,YAEG,CACHh2B,IAAA,OACAN,MAAA,WACA,QAAAy2B,EAAA1D,UAAA7uB,OAAAkyB,EAAA,IAAArqB,MAAA0qB,GAAAC,EAAA,EAA4EA,EAAAD,EAAeC,IAC3FN,EAAAM,GAAA3D,UAAA2D,GAGA/nB,KAAA7C,OAAAtJ,KAAA4zB,EAAAvtB,KAAA,MAEA8F,KAAA2nB,YAEG,CACHh2B,IAAA,QACAN,MAAA,WACA,QAAA22B,EAAA5D,UAAA7uB,OAAAkyB,EAAA,IAAArqB,MAAA4qB,GAAAC,EAAA,EAA4EA,EAAAD,EAAeC,IAC3FR,EAAAQ,GAAA7D,UAAA6D,GAGAjoB,KAAA7C,OAAAtJ,KAAA4zB,EAAAvtB,KAAA,MAEA8F,KAAA2nB,YAEG,CACHh2B,IAAA,UACAN,MAAA,WACA,QAAA62B,EAAA9D,UAAA7uB,OAAAkyB,EAAA,IAAArqB,MAAA8qB,GAAAC,EAAA,EAA4EA,EAAAD,EAAeC,IAC3FV,EAAAU,GAAA/D,UAAA+D,GAGAp0B,QAAAq0B,IAAAX,EAAAvtB,KAAA,QAEG,CACHvI,IAAA,UACAN,MAAA,WACA2O,KAAAsnB,QAAAe,UAAAroB,KAAA7C,OAAAjD,KAAA8F,KAAAunB,eACAvnB,KAAAsnB,QAAAgB,UAAAtoB,KAAAsnB,QAAAiB,eAEG,CACH52B,IAAA,QACAN,MAAA,WACA2O,KAAA7C,OAAA,GAEA6C,KAAA2nB,eA/E6DvH,EAAAF,EAAAluB,UAAA0uB,GAAsEC,GAAAP,EAAAF,EAAAS,GAmFnIlkB,EA/EA,IAuFA+rB;;;;qFAKA,SAAA54B,EAAA+L,EAAAxL,GAEA,aACAA,EAAAe,EAAAyK,GACAxL,EAAAO,EAAAiL,EAAA,oBAAgG,OAAA8sB,IAChGt4B,EAAAO,EAAAiL,EAAA,0BAAsG,OAAA+sB,IACtGv4B,EAAAO,EAAAiL,EAAA,0BAAsG,OAAAgtB,IACtGx4B,EAAAO,EAAAiL,EAAA,6BAAyG,OAAAitB,IACzGz4B,EAAAO,EAAAiL,EAAA,qBAAiG,OAAAinB,IACjG,IAAAiG,EAAA14B,iBAAA,mBACA,SAAAiwB,EAAAC,EAAAC,GAA2C,QAAAtwB,EAAA,EAAgBA,EAAAswB,EAAA/qB,OAAkBvF,IAAA,CAAO,IAAAuwB,EAAAD,EAAAtwB,GAA2BuwB,EAAAvvB,WAAAuvB,EAAAvvB,aAAA,EAAwDuvB,EAAArsB,cAAA,EAAgC,UAAAqsB,MAAAC,UAAA,GAAuD1vB,OAAAC,eAAAsvB,EAAAE,EAAA5uB,IAAA4uB,IAE9P,SAAAE,EAAAP,EAAAQ,EAAAC,GAAiM,OAApID,GAAAN,EAAAF,EAAAluB,UAAA0uB,GAAsEC,GAAAP,EAAAF,EAAAS,GAA8DT,EAEjM,SAAAF,EAAAC,EAAAC,GAAiD,KAAAD,aAAAC,GAA0C,UAAAC,UAAA,qCAM3F,IAAAsI,EAAA,CACAK,YAAA,eACAC,WAAA,cACAC,YAAA,eACAC,SAAA,YACAC,aAAA,gBACAC,eAAA,YACAC,aAAA,gBACAC,cAAA,iBACAC,KAAA,OACAC,KAAA,OACAC,gBAAA,WACAC,iBAAA,oBACAC,yBAAA,qBACAC,0BAAA,kBACAC,0BAAA,uBACAC,2BAAA,mBACAC,cAAA,SACAC,eAAA,kBACAC,kBAAA,qBACAC,kBAAA,oBACAC,kBAAA,mBACAC,iBAAA,8BACAC,eAAA,4BACAzK,mBAAA,OACAC,oBAAA,gBACAyK,oBAAA,gBACAC,qBAAA,yBACAC,cAAA,SACAC,eAAA,kBACAC,yBAAA,qBACAC,0BAAA,8BACAC,kBAAA,eACAC,mBAAA,wBACAC,eAAA,wBACAhE,gBAAA,yBACAjwB,MAAA,QACAk0B,qBAAA,sBAEAC,yBAAA,mBAEAC,yBAAA,mBAEAC,yBAAA,mBAEAC,sBAAA,eAEAC,sBAAA,eAEAC,gBAAA,QACAC,iBAAA,iBACAC,sBAAA,sBACAC,uBAAA,kBACAC,oBAAA,yBAEA9C,EAAA,CACA+C,QAAA,UACA3J,QAAA,UACA4J,OAAA,UAMA/C,EAAA,SAAAA,EAAAgD,EAAAC,EAAAC,GACA7L,EAAAhgB,KAAA2oB,GAEA3oB,KAAA8rB,MAAAH,EACA3rB,KAAA+rB,QAAAH,EACA5rB,KAAAgsB,gBAAAH,GAOAjD,EAEA,WACA,SAAAA,EAAAjG,EAAAsJ,EAAAC,EAAAP,GACA3L,EAAAhgB,KAAA4oB,GAMA5oB,KAAA4iB,QAAAD,EAKA3iB,KAAAmsB,IAAAF,EAKAjsB,KAAAosB,KAAAF,EAIAlsB,KAAA8rB,MAAAH,EAeA,OAZAlL,EAAAmI,EAAA,EACAj3B,IAAA,SACAN,MAAA,WACA,OACAsxB,QAAA3iB,KAAA4iB,QACAqJ,IAAAjsB,KAAAmsB,IACAD,KAAAlsB,KAAAosB,KACAC,OAAArsB,KAAA8rB,WAKAlD,EArCA,GA2CAhG,EAEA,WACA,SAAAA,EAAAjsB,EAAA21B,EAAAh2B,EAAAi2B,GACAvM,EAAAhgB,KAAA4iB,GAEA5iB,KAAAwhB,GAAA7qB,EACAqJ,KAAAwsB,UAAAF,EACAtsB,KAAA2hB,KAAArrB,EACA0J,KAAAysB,cAAA,GACAzsB,KAAA8rB,MAAA,GAEA9rB,KAAA0sB,cAAA,GAEA1sB,KAAA2sB,iBAAAJ,EAEAvsB,KAAA4sB,cAAA,GAiIA,OA9HAnM,EAAAmC,EAAA,EACAjxB,IAAA,kBACAN,MAAA,WACA,OAAA2O,KAAA2hB,WAAA,IAAA3hB,KAAA2hB,KAAAkL,QAIA7sB,KAAA2hB,KAAAkL,QAAAnE,EAAA5G,QAAA4G,EAAAgD,OAHAhD,EAAA+C,UAKG,CACH95B,IAAA,WACAN,MAAA,WACA,OAAA2O,KAAA2hB,KAAAmL,aAAA9sB,KAAA2hB,KAAAmL,aAAA,KAEG,CACHn7B,IAAA,iBACAN,MAAA,WACA,OAAA2O,KAAA2hB,KAAAoL,eAEG,CACHp7B,IAAA,qBACAN,MAAA,WACA,IAAA27B,EAAAC,KAAAD,MAEAE,EAAAltB,KAAAysB,cAAA1R,MAAA,eAKA,OAJA,IAAAkS,KACAC,EAAA,GAAAA,EAAA,KAAAA,EAAA,GACAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,IAAAC,UAEAH,IAGG,CACHr7B,IAAA,SACAN,MAAA,SAAA+7B,GACA,IAAAJ,EAAAC,KAAAD,MACAK,EAAA,QAAAJ,MAAAK,oBAAA,IACAC,EAAA,IAAAN,KAAAD,EAAAK,EAAAD,EAAApB,iBAEAhsB,KAAAysB,cAAAc,EAAAC,cAAAx0B,MAAA,MACAgH,KAAA8rB,MAAAsB,EAAAtB,MACA,IAAA2B,EAAA,CACA9K,QAAA,CACAhsB,GAAAqJ,KAAAwhB,GACAkM,MAAA1tB,KAAAwsB,UACAl2B,KAAA0J,KAAA2hB,KACAgM,SAAA3tB,KAAAysB,gBAWA,GAPAzsB,KAAA2sB,mBAEAc,EAAA9K,QAAA0J,OAAArsB,KAAA8rB,OAGA9rB,KAAA4sB,cAAAn1B,KAAAm2B,UAAAH,IAEAztB,KAAA2sB,iBACA,OAAA3sB,KAAA4sB,cAGA,IAAAiB,EAAAhF,EAAA,OAAAiF,WAAAV,EAAArB,QAAA/E,OAAAhnB,KAAA4sB,eAEAmB,EAAA,CACA9B,IAAA4B,EACA3B,KAHArD,EAAA,OAAAmF,cAAAZ,EAAArB,QAAA9E,QAAA4G,GAGAnQ,cACA2O,OAAAe,EAAAtB,OAEA,OAAAr0B,KAAAm2B,UAAAG,MAEG,EACHp8B,IAAA,gBACAN,MAAA,SAAA48B,GACA,WAAAA,EAAA14B,OAAA,KACA,IAAA03B,KAAA,GAAAzzB,OAAAy0B,EAAA9vB,OAAA,UAAA3E,OAAAy0B,EAAA9vB,OAAA,UAAA3E,OAAAy0B,EAAA9vB,OAAA,SAGG,CACHxM,IAAA,uBACAN,MAAA,SAAA68B,EAAAC,GACA,WAAAlB,KAAA,GAAAzzB,OAAA00B,EAAA/vB,OAAA,UAAA3E,OAAA00B,EAAA/vB,OAAA,UAAA3E,OAAA00B,EAAA/vB,OAAA,UAAA3E,OAAA20B,MAEG,CACHx8B,IAAA,WACAN,MAAA,SAAA+8B,EAAAxC,GACA,IAAAyC,EAAA52B,KAAAC,MAAA02B,GAEA,SAAAC,EAAA1L,QAAA,CACA,IAAAA,EAAA,IAAAC,EAAAyL,EAAA1L,QAAAhsB,GAAA03B,EAAA1L,QAAA+K,MAAAW,EAAA1L,QAAArsB,MAAA,GAEA,OADAqsB,EAAAiK,cAAAwB,EACAzL,EAGA,SAAAiJ,EAGA,WAAAhJ,EAAA,+BAMA,GAFAiG,EAAA,OAAAmF,cAAApC,EAAA3E,QAAAoH,EAAApC,KAEAvO,eAAA2Q,EAAAnC,KACA,WAAAtJ,EAAA,IAAA6F,EAAAqC,qBAAA,SAGA,IAAAwD,EAAAzF,EAAA,OAAA0F,WAAA3C,EAAA5E,OAAAqH,EAAApC,KAEA,IACA,IAAAuC,EAAA/2B,KAAAC,MAAA42B,GAEAG,EAAA,IAAA7L,EAAA4L,EAAA7L,QAAAhsB,GAAA63B,EAAA7L,QAAA+K,MAAAc,EAAA7L,QAAArsB,MAAA,GAMA,OAJAm4B,EAAAhC,cAAA+B,EAAA7L,QAAAgL,SACAc,EAAA3C,MAAA0C,EAAA7L,QAAA0J,OACAoC,EAAAC,aAAAL,EAAAnC,KACAuC,EAAA7B,cAAA0B,EACAG,EACO,MAAAr6B,GACP,WAAAwuB,EAAA,yBACA/e,IAAAyqB,IACS,QAKT1L,EA/IA,IAoJA+L;;;;6HAKA,SAAA/+B,EAAA+L,EAAAxL,GAEA,aACAA,EAAAe,EAAAyK,GACAxL,EAAAO,EAAAiL,EAAA,yBAAqG,OAAAmtB,IACrG34B,EAAAO,EAAAiL,EAAA,wBAAoG,OAAAotB,IACpG54B,EAAAO,EAAAiL,EAAA,yBAAqG,OAAAqtB,IACrG74B,EAAAO,EAAAiL,EAAA,sBAAkG,OAAAstB,IAClG94B,EAAAO,EAAAiL,EAAA,0BAAsG,OAAAutB,IACtG/4B,EAAAO,EAAAiL,EAAA,mCAA+G,OAAAizB,IAC/Gz+B,EAAAO,EAAAiL,EAAA,6BAAyG,OAAAkzB,IACzG,IAAAhP,EAAA1vB,mBAAA,qBACA2+B,EAAA3+B,0BAAA,4BACA,SAAA6vB,EAAAC,EAAAC,GAAiD,KAAAD,aAAAC,GAA0C,UAAAC,UAAA,qCAE3F,SAAAC,EAAAC,EAAAC,GAA2C,QAAAtwB,EAAA,EAAgBA,EAAAswB,EAAA/qB,OAAkBvF,IAAA,CAAO,IAAAuwB,EAAAD,EAAAtwB,GAA2BuwB,EAAAvvB,WAAAuvB,EAAAvvB,aAAA,EAAwDuvB,EAAArsB,cAAA,EAAgC,UAAAqsB,MAAAC,UAAA,GAAuD1vB,OAAAC,eAAAsvB,EAAAE,EAAA5uB,IAAA4uB,IAE9P,SAAAE,EAAAP,EAAAQ,EAAAC,GAAiM,OAApID,GAAAN,EAAAF,EAAAluB,UAAA0uB,GAAsEC,GAAAP,EAAAF,EAAAS,GAA8DT,EAOjM,IAAA4I,EAEA,WACA,SAAAA,IACA9I,EAAAhgB,KAAA8oB,GAaA,OAVArI,EAAAqI,EAAA,EACAn3B,IAAA,YACAN,MAAA,WAIA,WAAAwuB,EAAA,QAAAiP,EAAA,gBAAAtN,GAAA,MAAA3B,EAAA,OAAAiJ,YAHA,CACA1lB,SAAA,IAEA,OAIA0lB,EAfA,GAkBAC,EAAA,SAAAA,EAAAv4B,GACAwvB,EAAAhgB,KAAA+oB,GAEA/oB,KAAA0hB,UAAAlxB,EAAAgxB,GACAxhB,KAAA+uB,KAAAv+B,EAAAmxB,KAAAsK,IAAA7V,EACApW,KAAAgvB,MAAAx+B,EAAAmxB,KAAAuK,KAAA9V,GAGA4S,EAEA,WACA,SAAAA,EAAAiG,EAAAC,EAAAC,GACAnP,EAAAhgB,KAAAgpB,GAEAhpB,KAAA0hB,UAAAuN,EACAjvB,KAAAkvB,OACAlvB,KAAAmvB,QAkBA,OAfA1O,EAAAuI,EAAA,EACAr3B,IAAA,YACAN,MAAA,WACA,IAAAiF,EAAA,CACA21B,IAAA,CACA5V,EAAArW,KAAAkvB,MAEAhD,KAAA,CACA7V,EAAArW,KAAAmvB,QAGA,WAAAtP,EAAA,QAAA7f,KAAA0hB,UAAA7B,EAAA,OAAAmJ,YAAA1yB,GAAA,OAIA0yB,EAxBA,GA2BAC,EAAA,SAAAA,EAAAz4B,GACAwvB,EAAAhgB,KAAAipB,GAEAjpB,KAAAovB,iBAAA5+B,EAAAk+B,aAAAW,UAAA,MAGAnG,EAAA,SAAAA,EAAA14B,GACAwvB,EAAAhgB,KAAAkpB,GAEAlpB,KAAA8hB,QAAAtxB,EAAAmxB,KAAAkL,SAGA+B,EAAA,SAAAA,EAAAhD,EAAA0D,GACAtP,EAAAhgB,KAAA4uB,GAEA5uB,KAAA+rB,QAAAH,EACA5rB,KAAAgpB,YAAAsG,GAEAT,EAEA,WACA,SAAAA,IACA7O,EAAAhgB,KAAA6uB,GAUA,OAPApO,EAAAoO,EAAA,EACAl9B,IAAA,YACAN,MAAA,WACA,WAAAwuB,EAAA,QAAAiP,EAAA,gBAAAtN,GAAA,UAAA3B,EAAA,OAAAsJ,eAAA,aAIA0F,EAZA,IAiBAU;;;;4FAKA,SAAA3/B,EAAA+L,EAAAxL,GAEA,aACAA,EAAAe,EAAAyK,GACAxL,EAAAO,EAAAiL,EAAA,uBAAmG,OAAA6zB,IACnGr/B,EAAAO,EAAAiL,EAAA,mCAA+G,OAAA8zB,IAC/Gt/B,EAAAO,EAAAiL,EAAA,2BAAuG,OAAA+zB,IACvGv/B,EAAAO,EAAAiL,EAAA,gCAA4G,OAAAg0B,IAC5G,IAAAC,EAAAz/B,kBAAA,oBACA0/B,EAAA1/B,kBAAA,oBACA2/B,EAAA3/B,iBAAA,mBACA4/B,EAAA5/B,wBAAA,0BACA,SAAA6vB,EAAAC,EAAAC,GAAiD,KAAAD,aAAAC,GAA0C,UAAAC,UAAA,qCAE3F,SAAAC,EAAAC,EAAAC,GAA2C,QAAAtwB,EAAA,EAAgBA,EAAAswB,EAAA/qB,OAAkBvF,IAAA,CAAO,IAAAuwB,EAAAD,EAAAtwB,GAA2BuwB,EAAAvvB,WAAAuvB,EAAAvvB,aAAA,EAAwDuvB,EAAArsB,cAAA,EAAgC,UAAAqsB,MAAAC,UAAA,GAAuD1vB,OAAAC,eAAAsvB,EAAAE,EAAA5uB,IAAA4uB,IAS9P,IAAAiP,EAAA,EAEAC,EAAA,mgBAKAC,EAEA,WACA,SAAAA,IACA1P,EAAAhgB,KAAA0vB,GAlBA,IAAAxP,EAAAQ,EAAAC,EAwFA,OAxFAT,EAqBAwP,EArBA/O,EA6EG,EACHhvB,IAAA,iBAKAN,MAAA,WACA,WAAAu+B,EAAA,gBApFAlP,EAqBA,EACA/uB,IAAA,gCAMAN,MAAA,SAAA2+B,GACA,IAAAC,EAAAjwB,KAAAkwB,+BAAAF,EAAAjB,MAEAG,EAAAe,EAAAE,YACAC,EAAAH,EAAAI,gBAEAC,EAAAtwB,KAAAkwB,+BAAAF,EAAAhB,OAEAG,EAAAmB,EAAAH,YACAI,EAAAD,EAAAD,gBACAzE,EAAA,IAAAiE,EAAA,QAAAO,EAAAG,GACAjB,EAAA,IAAAM,EAAA,YAAAI,EAAAtO,UAAAwN,EAAAC,GACA,WAAAS,EAAA,sBAAAhE,EAAA0D,KAQG,CACH39B,IAAA,iCACAN,MAAA,SAAA60B,GACA,IAAAsK,EAAA,IAAAT,EAAA,cACAU,EAAAD,EAAAE,iBAAAjB,GACAkB,EAAAH,EAAAI,UAAAnB,EAAAD,EAAAiB,GACAI,EAAAL,EAAAM,OAAArB,EAAAvJ,EAAAuK,GACAM,EAAA/wB,KAAAgxB,oBAAAH,GACA,WAAAlB,EAAAgB,EAAAI,KASG,CACHp/B,IAAA,sBACAN,MAAA,SAAA0/B,GAQA,OANAA,EAAAx7B,OAAA,OACAw7B,EAAA,IAAAA,GAGAA,IAAAE,SAAA,SAEAnB,EAAA,OAAA/I,aAAAgK,QA3E6D3Q,EAAAF,EAAAluB,UAAA0uB,GAAsEC,GAAAP,EAAAF,EAAAS,GAwFnI+O,EAxEA,GA6EAC,EAAA,SAAAA,EAAAuB,EAAAC,GACAnR,EAAAhgB,KAAA2vB,GAEA3vB,KAAAmwB,YAAAe,EACAlxB,KAAAqwB,gBAAAc,IAKAC;;;;iIAKA,SAAAxhC,EAAA+L,EAAAxL,GAEA,aACAA,EAAAe,EAAAyK,GACAxL,EAAAO,EAAAiL,EAAA,gCAA4G,OAAA01B,IAC5GlhC,EAAAO,EAAAiL,EAAA,iCAA6G,OAAA21B,IAC7GnhC,EAAAO,EAAAiL,EAAA,yBAAqG,OAAA41B,IACrGphC,EAAAO,EAAAiL,EAAA,yBAAqG,OAAA61B,IACrGrhC,EAAAO,EAAAiL,EAAA,iCAA6G,OAAA81B,IAC7GthC,EAAAO,EAAAiL,EAAA,8BAA0G,OAAA+1B,IAC1G,IAAA7R,EAAA1vB,mBAAA,qBACAwhC,EAAAxhC,mBAAA,qBACA,SAAA6vB,EAAAC,EAAAC,GAAiD,KAAAD,aAAAC,GAA0C,UAAAC,UAAA,qCAE3F,SAAAC,EAAAC,EAAAC,GAA2C,QAAAtwB,EAAA,EAAgBA,EAAAswB,EAAA/qB,OAAkBvF,IAAA,CAAO,IAAAuwB,EAAAD,EAAAtwB,GAA2BuwB,EAAAvvB,WAAAuvB,EAAAvvB,aAAA,EAAwDuvB,EAAArsB,cAAA,EAAgC,UAAAqsB,MAAAC,UAAA,GAAuD1vB,OAAAC,eAAAsvB,EAAAE,EAAA5uB,IAAA4uB,IAE9P,SAAAE,EAAAP,EAAAQ,EAAAC,GAAiM,OAApID,GAAAN,EAAAF,EAAAluB,UAAA0uB,GAAsEC,GAAAP,EAAAF,EAAAS,GAA8DT,EAOjM,IAAAmR,EAEA,WACA,SAAAA,IACArR,EAAAhgB,KAAAqxB,GAKArxB,KAAA4xB,OAAA,KAKA5xB,KAAA6xB,OAAA,KAMA7xB,KAAA8xB,QAAA,KAIA9xB,KAAA+xB,YAAA,EAIA/xB,KAAAgyB,kBAAA,EAMAhyB,KAAAiyB,SAAA,GA+CA,OA5CAxR,EAAA4Q,EAAA,EACA1/B,IAAA,wBACAN,MAAA,WACA,IAAA2O,KAAAiyB,SACA,SAKA,OADAx6B,KAAAC,MAAAsI,KAAAiyB,UACAh5B,IAAA,SAAAi5B,GACA,WAAAT,EAAAS,EAAAC,aAAAD,EAAAE,qBAGG,CACHzgC,IAAA,YACAN,MAAA,SAAAghC,GACA,IAAA/7B,EAAA,CACAu2B,QAAA7sB,KAAA4xB,QAAAN,EAAAgB,SAcA,OAZAtyB,KAAA6xB,SAAAv7B,EAAAi8B,QAAAvyB,KAAA6xB,QACA7xB,KAAA8xB,UAAAx7B,EAAAk8B,SAAAxyB,KAAA8xB,SAEA9xB,KAAA4xB,QAAAN,EAAAgB,SACAh8B,EAAAm8B,kBAAAzyB,KAAA+xB,YACAz7B,EAAAo8B,wBAAA1yB,KAAAgyB,kBACA17B,EAAAq8B,qBAAA3yB,KAAA4yB,0BAEAt8B,EAAAw2B,aAAA9sB,KAAA4xB,OAAA7rB,WACAzP,EAAAy2B,aAAA/sB,KAAA4xB,OAAA7rB,YAGA,IAAA8Z,EAAA,QAAAwS,EAAAxS,EAAA,OAAAqL,sBAAA50B,GAAA,MAEG,EACH3E,IAAA,aACAN,MAAA,SAAA6hB,GACA,OAAAA,EAAA3d,OAAA,EACA,GAGAkC,KAAAm2B,UAAA1a,OAIAme,EA/EA,GAiFAC,EAAA,CACAgB,QAAA,UACAO,iBAAA,mBACAC,gBAAA,kBACAC,oBAAA,uBAEAxB,EAAA,CACAyB,KAAA,OACAC,KAAA,QAEAzB,EAAA,SAAAA,EAAAhhC,GACAwvB,EAAAhgB,KAAAwxB,GAEAxxB,KAAAkzB,gBAAA1iC,EACAwP,KAAA6xB,OAAA7xB,KAAAkzB,gBAAAvR,KAAA,QACA3hB,KAAA8xB,QAAA9xB,KAAAkzB,gBAAAvR,KAAA,SACA3hB,KAAAmzB,WAAAnzB,KAAAkzB,gBAAAvR,KAAA,YACA,IAAAyR,EAAApzB,KAAAkzB,gBAAAvR,KAAA,aACA3hB,KAAAuxB,YAAA6B,EAEA,IAAAC,EAAA,IAAAxT,EAAA,QAAArvB,EAAAgxB,GAAA,kBAAAhxB,EAAAmxB,KAAA,oBACA3hB,KAAAypB,iBAAA,IAAAkI,EAAA,iBAAA0B,GACArzB,KAAAszB,eAAAtzB,KAAAypB,iBAAA8J,oBACAvzB,KAAAwzB,UAAAxzB,KAAAypB,iBAAAgK,gBAEAhC,EAEA,WACA,SAAAA,EAAAiC,EAAAC,GACA3T,EAAAhgB,KAAAyxB,GAEAzxB,KAAAuxB,YAAAmC,EACA1zB,KAAA4zB,eAAAD,EAkBA,OAfAlT,EAAAgR,EAAA,EACA9/B,IAAA,SACAN,MAAA,WACA,OACA8gC,aAAAnyB,KAAAuxB,YACAa,gBAAApyB,KAAA4zB,kBAGG,CACHjiC,IAAA,mBACAN,MAAA,WACA,OAAA2O,KAAA4zB,eAAA,oBAIAnC,EAvBA,GAyBAC,EAEA,WACA,SAAAA,IACA1R,EAAAhgB,KAAA0xB,GAEA1xB,KAAA6zB,oBAAA,EACA7zB,KAAA8zB,mBAAA,EACA9zB,KAAA+zB,sBAAA,EACA/zB,KAAAg0B,mBAAA,EACAh0B,KAAAi0B,uBAAA,EACAj0B,KAAAk0B,gBAAA,EACAl0B,KAAAm0B,sBAAA,EACAn0B,KAAAo0B,eAAA,GACAp0B,KAAAq0B,gBAAA,GACAr0B,KAAAs0B,aAAA,GAMAt0B,KAAAu0B,mBAAA,GA+BA,OA5BA9T,EAAAiR,EAAA,EACA//B,IAAA,YACAN,MAAA,SAAAghC,GACA,IAAA/7B,EAAA,CACAk+B,qBAAAx0B,KAAA6zB,mBACAY,oBAAAz0B,KAAA8zB,kBACAY,wBAAA10B,KAAA+zB,qBACAY,oBAAA30B,KAAAg0B,kBACAY,gBAAA50B,KAAAk0B,eACAW,uBAAA70B,KAAAm0B,qBACAW,iBAAA90B,KAAAo0B,eACAW,kBAAA/0B,KAAAq0B,gBACAW,eAAAh1B,KAAAs0B,aACAW,iBAAAj1B,KAAAu0B,mBACAW,wBAAAl1B,KAAAi0B,uBAEA,WAAApU,EAAA,QAAAwS,EAAAxS,EAAA,OAAAmL,yBAAA10B,GAAA,MAEG,EACH3E,IAAA,wBACAN,MAAA,SAAAghC,GAIA,WAAAxS,EAAA,QAAAwS,EAAAxS,EAAA,OAAAmL,yBAHA,CACAwJ,sBAAA,IAEA,OAIA9C,EAlDA,IAuDAyD;;;;+CAKA,SAAAvlC,EAAA+L,EAAAxL,GAEA,aACAA,EAAAe,EAAAyK,GACAxL,EAAAO,EAAAiL,EAAA,wBAAoG,OAAAy5B,IACpGjlC,EAAAO,EAAAiL,EAAA,wBAAoG,OAAA05B,IACpG,IAAAC,EAAAnlC,0BAAA,4BACAolC,EAAAplC,mBAAA,qBACA,SAAA6vB,EAAAC,EAAAC,GAAiD,KAAAD,aAAAC,GAA0C,UAAAC,UAAA,qCAE3F,SAAAC,EAAAC,EAAAC,GAA2C,QAAAtwB,EAAA,EAAgBA,EAAAswB,EAAA/qB,OAAkBvF,IAAA,CAAO,IAAAuwB,EAAAD,EAAAtwB,GAA2BuwB,EAAAvvB,WAAAuvB,EAAAvvB,aAAA,EAAwDuvB,EAAArsB,cAAA,EAAgC,UAAAqsB,MAAAC,UAAA,GAAuD1vB,OAAAC,eAAAsvB,EAAAE,EAAA5uB,IAAA4uB,IAE9P,SAAAE,EAAAP,EAAAQ,EAAAC,GAAiM,OAApID,GAAAN,EAAAF,EAAAluB,UAAA0uB,GAAsEC,GAAAP,EAAAF,EAAAS,GAA8DT,EAIjM,IAAAkV,EAEA,WACA,SAAAA,IACApV,EAAAhgB,KAAAo1B,GAUA,OAPA3U,EAAA2U,EAAA,OACAzjC,IAAA,wBACAN,MAAA,SAAAmkC,GACA,WAAAD,EAAA,QAAAC,EAAAhU,GAAA+T,EAAA,OAAAhM,KAAA,aAIA6L,EAZA,GAcAC,EAEA,WACA,SAAAA,IACArV,EAAAhgB,KAAAq1B,GAUA,OAPA5U,EAAA4U,EAAA,OACA1jC,IAAA,sBACAN,MAAA,WACA,WAAAkkC,EAAA,QAAAD,EAAA,gBAAA9T,GAAA,QAAA+T,EAAA,OAAAjM,KAAA,aAIA+L,EAZA,IAiBAI;;;;0EAKA,SAAA7lC,EAAA+L,EAAAxL,GAEA,aACAA,EAAAe,EAAAyK,GACAxL,EAAAO,EAAAiL,EAAA,+BAA2G,OAAAgvB,IAC3Gx6B,EAAAO,EAAAiL,EAAA,gCAA4G,OAAAivB,IAC5Gz6B,EAAAO,EAAAiL,EAAA,wBAAoG,OAAA+5B,IACpG,IAAA7V,EAAA1vB,mBAAA,qBACA2+B,EAAA3+B,0BAAA,4BACA,SAAA6vB,EAAAC,EAAAC,GAAiD,KAAAD,aAAAC,GAA0C,UAAAC,UAAA,qCAE3F,SAAAC,EAAAC,EAAAC,GAA2C,QAAAtwB,EAAA,EAAgBA,EAAAswB,EAAA/qB,OAAkBvF,IAAA,CAAO,IAAAuwB,EAAAD,EAAAtwB,GAA2BuwB,EAAAvvB,WAAAuvB,EAAAvvB,aAAA,EAAwDuvB,EAAArsB,cAAA,EAAgC,UAAAqsB,MAAAC,UAAA,GAAuD1vB,OAAAC,eAAAsvB,EAAAE,EAAA5uB,IAAA4uB,IAE9P,SAAAE,EAAAP,EAAAQ,EAAAC,GAAiM,OAApID,GAAAN,EAAAF,EAAAluB,UAAA0uB,GAAsEC,GAAAP,EAAAF,EAAAS,GAA8DT,EAIjM,IAAAyK,EAEA,WACA,SAAAA,EAAAgL,EAAAC,EAAAC,EAAAC,EAAAC,GACA/V,EAAAhgB,KAAA2qB,GAEA3qB,KAAAg2B,SAAAL,EACA31B,KAAAi2B,UAAAL,EACA51B,KAAAk2B,iBAAAL,EACA71B,KAAAm2B,gBAAAL,EACA91B,KAAAo2B,WAAAL,EAiBA,OAdAtV,EAAAkK,EAAA,EACAh5B,IAAA,YACAN,MAAA,WACA,IAAAiF,EAAA,CACA+/B,YAAAr2B,KAAAg2B,SACAM,cAAAt2B,KAAAi2B,UACAM,iBAAAv2B,KAAAk2B,iBACAM,gBAAAx2B,KAAAm2B,gBACAM,WAAAz2B,KAAAo2B,YAEA,WAAAvW,EAAA,QAAAiP,EAAA,gBAAAtN,GAAA,QAAA3B,EAAA,OAAA8K,kBAAAr0B,GAAA,OAIAq0B,EAzBA,GA2BAC,EAEA,WACA,SAAAA,EAAAp6B,GACAwvB,EAAAhgB,KAAA4qB,GAEA5qB,KAAA02B,SAAAlmC,EAAAuxB,mBAAAlC,EAAA,aAAAiC,QACA9hB,KAAAyhB,GAAAjxB,EAyBA,OAtBAiwB,EAAAmK,EAAA,EACAj5B,IAAA,YACAN,MAAA,WACA,OAAA2O,KAAA02B,WAEG,CACH/kC,IAAA,iBACAN,MAAA,WACA,OAAA2O,KAAAyhB,GAAAE,KAAAmL,eAEG,CACHn7B,IAAA,iBACAN,MAAA,WACA,OAAA2O,KAAAyhB,GAAAE,KAAAoL,eAEG,CACHp7B,IAAA,gCACAN,MAAA,SAAA2wB,GACA,OAAAhiB,KAAAyhB,GAAAE,KAAAK,OAIA4I,EA9BA,GAgCA8K,EAEA,WACA,SAAAA,IACA1V,EAAAhgB,KAAA01B,GAaA,OAVAjV,EAAAiV,EAAA,OACA/jC,IAAA,mBACAN,MAAA,WACA,IAAAslC,EAAA,GAGA,OAFAA,EAAA,cAAAC,UAAAC,UAEAF,MAIAjB,EAfA,IAoBAoB;;;;sPAKA,SAAAlnC,EAAA+L,EAAAxL,GAEA,aACAA,EAAAe,EAAAyK,GACAxL,EAAAO,EAAAiL,EAAA,2BAAuG,OAAAo7B,IACvG5mC,EAAAO,EAAAiL,EAAA,kCAA8G,OAAAq7B,IAC9G7mC,EAAAO,EAAAiL,EAAA,mCAA+G,OAAAs7B,IAC/G9mC,EAAAO,EAAAiL,EAAA,gCAA4G,OAAAu7B,IAC5G/mC,EAAAO,EAAAiL,EAAA,iCAA6G,OAAAw7B,IAC7GhnC,EAAAO,EAAAiL,EAAA,+CAA2H,OAAAy7B,IAC3HjnC,EAAAO,EAAAiL,EAAA,kCAA8G,OAAA07B,IAC9GlnC,EAAAO,EAAAiL,EAAA,kCAA8G,OAAA27B,IAC9GnnC,EAAAO,EAAAiL,EAAA,sCAAkH,OAAA47B,IAClHpnC,EAAAO,EAAAiL,EAAA,6BAAyG,OAAA67B,IACzG,IAAAlC,EAAAnlC,0BAAA,4BACAolC,EAAAplC,mBAAA,qBACAsnC,EAAAtnC,mBAAA,qBACA,SAAA6vB,EAAAC,EAAAC,GAAiD,KAAAD,aAAAC,GAA0C,UAAAC,UAAA,qCAE3F,SAAAC,EAAAC,EAAAC,GAA2C,QAAAtwB,EAAA,EAAgBA,EAAAswB,EAAA/qB,OAAkBvF,IAAA,CAAO,IAAAuwB,EAAAD,EAAAtwB,GAA2BuwB,EAAAvvB,WAAAuvB,EAAAvvB,aAAA,EAAwDuvB,EAAArsB,cAAA,EAAgC,UAAAqsB,MAAAC,UAAA,GAAuD1vB,OAAAC,eAAAsvB,EAAAE,EAAA5uB,IAAA4uB,IAE9P,SAAAE,EAAAP,EAAAQ,EAAAC,GAAiM,OAApID,GAAAN,EAAAF,EAAAluB,UAAA0uB,GAAsEC,GAAAP,EAAAF,EAAAS,GAA8DT,EAKjM,IAAA6W,EAAA,CACAC,qBAAA,iBACAC,sBAAA,0BACAC,mBAAA,UACAQ,oBAAA,mBACAP,oBAAA,gBACAQ,qBAAA,yBACAN,qBAAA,iBACAO,sBAAA,0BACAR,kCAAA,+BACAS,mCAAA,wCACAC,2BAAA,uBACAC,4BAAA,gCACAC,uBAAA,aACAC,wBAAA,uBAEAjB,EAEA,WACA,SAAAA,EAAAnW,GACAb,EAAAhgB,KAAAg3B,GAEAh3B,KAAA+gB,SAAAF,EAaA,OAVAJ,EAAAuW,EAAA,EACArlC,IAAA,YACAN,MAAA,WACA,IAAAiF,EAAA,CACA8qB,WAAAphB,KAAA+gB,UAEA,WAAAwU,EAAA,QAAAD,EAAA,gBAAA9T,GAAA,QAAAuV,EAAAC,qBAAA1gC,GAAA,OAIA0gC,EAjBA,GAmBAC,EAAA,SAAAA,EAAAzmC,GACAwvB,EAAAhgB,KAAAi3B,GAEAj3B,KAAAk4B,QAAA,IAAAT,EAAA,iBAAAjnC,GACAwP,KAAA+gB,SAAA/gB,KAAAk4B,QAAAnX,SACA/gB,KAAAyhB,GAAAjxB,GAEA0mC,EAEA,WACA,SAAAA,EAAAtW,EAAAC,GACAb,EAAAhgB,KAAAk3B,GAEAl3B,KAAA+gB,SAAAF,EACA7gB,KAAAm4B,cAAAvX,EAcA,OAXAH,EAAAyW,EAAA,EACAvlC,IAAA,YACAN,MAAA,WACA,IAAAiF,EAAA,CACA8qB,WAAAphB,KAAA+gB,SACAqX,eAAAp4B,KAAAm4B,eAEA,WAAA5C,EAAA,QAAAD,EAAA,gBAAA9T,GAAA,QAAAuV,EAAAG,mBAAA5gC,GAAA,OAIA4gC,EAnBA,GAqBAC,EAEA,WACA,SAAAA,EAAAkB,EAAAC,EAAAzX,GACAb,EAAAhgB,KAAAm3B,GAEAn3B,KAAAu4B,UAAAF,EACAr4B,KAAAw4B,YAAAF,EACAt4B,KAAA+gB,SAAAF,EAeA,OAZAJ,EAAA0W,EAAA,EACAxlC,IAAA,YACAN,MAAA,WACA,IAAAiF,EAAA,CACA8qB,WAAAphB,KAAA+gB,SACA0X,WAAAz4B,KAAAu4B,UACAG,aAAA14B,KAAAw4B,aAEA,WAAAjD,EAAA,QAAAD,EAAA,gBAAA9T,GAAA,QAAAuV,EAAAI,oBAAA7gC,GAAA,OAIA6gC,EArBA,GAuBAC,EAEA,WACA,SAAAA,EAAAiB,EAAAM,EAAA9X,GACAb,EAAAhgB,KAAAo3B,GAEAp3B,KAAAu4B,UAAAF,EACAr4B,KAAA44B,0BAAAD,EACA34B,KAAA+gB,SAAAF,EAeA,OAZAJ,EAAA2W,EAAA,EACAzlC,IAAA,YACAN,MAAA,WACA,IAAAiF,EAAA,CACA8qB,WAAAphB,KAAA+gB,SACA0X,WAAAz4B,KAAAu4B,UACAM,sBAAA74B,KAAA44B,2BAEA,WAAArD,EAAA,QAAAD,EAAA,gBAAA9T,GAAA,QAAAuV,EAAAK,kCAAA9gC,GAAA,OAIA8gC,EArBA,GAuBAC,EAEA,WACA,SAAAA,EAAAgB,EAAAxX,GACAb,EAAAhgB,KAAAq3B,GAEAr3B,KAAAu4B,UAAAF,EACAr4B,KAAA+gB,SAAAF,EAcA,OAXAJ,EAAA4W,EAAA,EACA1lC,IAAA,YACAN,MAAA,WACA,IAAAiF,EAAA,CACA8qB,WAAAphB,KAAA+gB,SACA0X,WAAAz4B,KAAAu4B,WAEA,WAAAhD,EAAA,QAAAD,EAAA,gBAAA9T,GAAA,SAAAuV,EAAAM,qBAAA/gC,GAAA,OAIA+gC,EAnBA,GAqBAC,EAEA,WACA,SAAAA,EAAAe,EAAAxX,GACAb,EAAAhgB,KAAAs3B,GAEAt3B,KAAAu4B,UAAAF,EACAr4B,KAAA+gB,SAAAF,EAcA,OAXAJ,EAAA6W,EAAA,EACA3lC,IAAA,YACAN,MAAA,WACA,IAAAiF,EAAA,CACA8qB,WAAAphB,KAAA+gB,SACA0X,WAAAz4B,KAAAu4B,WAEA,WAAAhD,EAAA,QAAAD,EAAA,gBAAA9T,GAAA,QAAAuV,EAAAe,2BAAAxhC,GAAA,OAIAghC,EAnBA,GAqBAC,EAEA,WACA,SAAAA,EAAAc,EAAAS,EAAAjY,EAAAC,GACAd,EAAAhgB,KAAAu3B,GAEAv3B,KAAAu4B,UAAAF,EACAr4B,KAAA+4B,iBAAAD,EACA94B,KAAA+gB,SAAAF,EACA7gB,KAAAihB,gBAAAH,EAgBA,OAbAL,EAAA8W,EAAA,EACA5lC,IAAA,YACAN,MAAA,WACA,IAAAiF,EAAA,CACA8qB,WAAAphB,KAAA+gB,SACA0X,WAAAz4B,KAAAu4B,UACAS,kBAAAh5B,KAAA+4B,iBACAzX,iBAAAthB,KAAAihB,iBAEA,WAAAsU,EAAA,QAAAD,EAAA,gBAAA9T,GAAA,QAAAuV,EAAAiB,uBAAA1hC,GAAA,OAIAihC,EAvBA,GAyBAC,EAEA,WACA,SAAAA,EAAAhnC,GACAwvB,EAAAhgB,KAAAw3B,GAEAx3B,KAAAu4B,UAAA/nC,EAAAmxB,KAAA,WACA3hB,KAAAk4B,QAAA,IAAAT,EAAA,iBAAAjnC,GACAwP,KAAA+gB,SAAA/gB,KAAAk4B,QAAAnX,SACA/gB,KAAAyhB,GAAAjxB,EA8FA,OA3FAiwB,EAAA+W,EAAA,EACA7lC,IAAA,mBACAN,MAAA,WAGA,OAFA2O,KAAAyhB,GAAAE,KAAA,kBAGA,eACA,OAAA3hB,KAAAyhB,GAAAE,KAAA,eAEA,YAGA,aAIA,mBACA,OAAA3hB,KAAAyhB,GAAAE,KAAA,eAEA,YAIA,sBAIA,QACA,YAGG,CACHhwB,IAAA,2BACAN,MAAA,WAGA,OAFA2O,KAAAyhB,GAAAE,KAAA,kBAGA,eACA,SAEA,YAGA,aAIA,mBACA,OAAA3hB,KAAAyhB,GAAAE,KAAA,wBAEA,YAIA,OAAA3hB,KAAAyhB,GAAAE,KAAA,kBAEA,sBACA,OAAA3hB,KAAAyhB,GAAAE,KAAA,eAEA,QACA,YAGG,CACHhwB,IAAA,sBACAN,MAAA,WAGA,OAFA2O,KAAAyhB,GAAAE,KAAA,kBAGA,YACA,OAAA3hB,KAAAyhB,GAAAE,KAAA,kBAEA,QACA,YAGG,CACHhwB,IAAA,qBACAN,MAAA,WAGA,OAFA2O,KAAAyhB,GAAAE,KAAA,kBAGA,YACA,OAAA3hB,KAAAyhB,GAAAE,KAAA,iBAEA,QACA,cAKA6V,EArGA,IA0GAyB;;;;mEAKA,SAAArpC,EAAA+L,EAAAxL,GAEA,aACAA,EAAAe,EAAAyK,GACAxL,EAAAO,EAAAiL,EAAA,6BAAyG,OAAAyvB,IACzGj7B,EAAAO,EAAAiL,EAAA,8BAA0G,OAAA0vB,IAC1Gl7B,EAAAO,EAAAiL,EAAA,qBAAiG,OAAAe,IACjG,IAAAmjB,EAAA1vB,mBAAA,qBACA2+B,EAAA3+B,0BAAA,4BACA,SAAA6vB,EAAAC,EAAAC,GAAiD,KAAAD,aAAAC,GAA0C,UAAAC,UAAA,qCAE3F,SAAAC,EAAAC,EAAAC,GAA2C,QAAAtwB,EAAA,EAAgBA,EAAAswB,EAAA/qB,OAAkBvF,IAAA,CAAO,IAAAuwB,EAAAD,EAAAtwB,GAA2BuwB,EAAAvvB,WAAAuvB,EAAAvvB,aAAA,EAAwDuvB,EAAArsB,cAAA,EAAgC,UAAAqsB,MAAAC,UAAA,GAAuD1vB,OAAAC,eAAAsvB,EAAAE,EAAA5uB,IAAA4uB,IAE9P,SAAAE,EAAAP,EAAAQ,EAAAC,GAAiM,OAApID,GAAAN,EAAAF,EAAAluB,UAAA0uB,GAAsEC,GAAAP,EAAAF,EAAAS,GAA8DT,EAIjM,IAAAkL,EAEA,WACA,SAAAA,EAAAz5B,EAAA4xB,GACAvD,EAAAhgB,KAAAorB,GAEAprB,KAAA0nB,KAAA/1B,EACAqO,KAAAk5B,SAAA3V,EAcA,OAXA9C,EAAA2K,EAAA,EACAz5B,IAAA,YACAN,MAAA,WACA,IAAAiF,EAAA,CACA3E,IAAAqO,KAAA0nB,KACAnE,QAAAvjB,KAAAk5B,UAEA,WAAArZ,EAAA,QAAAiP,EAAA,gBAAAtN,GAAA,SAAA3B,EAAA,OAAAuL,gBAAA90B,GAAA,OAIA80B,EAnBA,GAqBAC,EAEA,WACA,SAAAA,EAAA76B,GACAwvB,EAAAhgB,KAAAqrB,GAEArrB,KAAA02B,SAAAlmC,EAAAuxB,mBAAAlC,EAAA,aAAAiC,QACA9hB,KAAAyhB,GAAAjxB,EAyBA,OAtBAiwB,EAAA4K,EAAA,EACA15B,IAAA,YACAN,MAAA,WACA,OAAA2O,KAAA02B,WAEG,CACH/kC,IAAA,iBACAN,MAAA,WACA,OAAA2O,KAAAyhB,GAAAE,KAAAmL,eAEG,CACHn7B,IAAA,iBACAN,MAAA,WACA,OAAA2O,KAAAyhB,GAAAE,KAAAoL,eAEG,CACHp7B,IAAA,gCACAN,MAAA,SAAA2wB,GACA,OAAAhiB,KAAAyhB,GAAAE,KAAAK,OAIAqJ,EA9BA,GAoCA3uB,EAEA,WACA,SAAAA,EAAA4qB,GACAtH,EAAAhgB,KAAAtD,GAEAsD,KAAA7C,OAAA,GACA6C,KAAAsnB,UA6BA,OA1BA7G,EAAA/jB,EAAA,EACA/K,IAAA,QACAN,MAAA,WACA,QAAAm2B,EAAApD,UAAA7uB,OAAAkyB,EAAA,IAAArqB,MAAAoqB,GAAAE,EAAA,EAAyEA,EAAAF,EAAaE,IACtFD,EAAAC,GAAAtD,UAAAsD,GAGA1nB,KAAA7C,OAAAtJ,KAAA4zB,EAAAvtB,KAAA,MAEA8F,KAAA2nB,YAEG,CACHh2B,IAAA,UACAN,MAAA,WACA2O,KAAAsnB,QAAAe,UAAAroB,KAAA7C,OAAAjD,KAAA,2DACA8F,KAAAsnB,QAAAgB,UAAAtoB,KAAAsnB,QAAAiB,eAEG,CACH52B,IAAA,QACAN,MAAA,WACA2O,KAAA7C,OAAA,GAEA6C,KAAA2nB,cAIAjrB,EAlCA,IAuCAy8B;;;;4UAKA,SAAAvpC,EAAA+L,EAAAxL,GAEA,aACAA,EAAAe,EAAAyK,GACAxL,EAAAO,EAAAiL,EAAA,6BAAyG,OAAA6tB,IACzGr5B,EAAAO,EAAAiL,EAAA,8BAA0G,OAAA8tB,IAC1Gt5B,EAAAO,EAAAiL,EAAA,sCAAkH,OAAA+tB,IAClHv5B,EAAAO,EAAAiL,EAAA,uCAAmH,OAAAguB,IACnHx5B,EAAAO,EAAAiL,EAAA,uCAAmH,OAAAiuB,IACnHz5B,EAAAO,EAAAiL,EAAA,wCAAoH,OAAAkuB,IACpH15B,EAAAO,EAAAiL,EAAA,2BAAuG,OAAAmuB,IACvG35B,EAAAO,EAAAiL,EAAA,4BAAwG,OAAAouB,IACxG55B,EAAAO,EAAAiL,EAAA,+BAA2G,OAAAquB,IAC3G75B,EAAAO,EAAAiL,EAAA,8BAA0G,OAAAy9B,IAC1GjpC,EAAAO,EAAAiL,EAAA,6BAAyG,OAAA09B,IACzGlpC,EAAAO,EAAAiL,EAAA,iCAA6G,OAAA0uB,IAC7Gl6B,EAAAO,EAAAiL,EAAA,kCAA8G,OAAA2uB,IAC9Gn6B,EAAAO,EAAAiL,EAAA,kCAA8G,OAAA29B,IAC9GnpC,EAAAO,EAAAiL,EAAA,4BAAwG,OAAAyuB,IACxG,IAAAvK,EAAA1vB,mBAAA,qBACA2+B,EAAA3+B,0BAAA,4BACAopC,EAAAppC,oBAAA,sBACA,SAAA6vB,EAAAC,EAAAC,GAAiD,KAAAD,aAAAC,GAA0C,UAAAC,UAAA,qCAE3F,SAAAC,EAAAC,EAAAC,GAA2C,QAAAtwB,EAAA,EAAgBA,EAAAswB,EAAA/qB,OAAkBvF,IAAA,CAAO,IAAAuwB,EAAAD,EAAAtwB,GAA2BuwB,EAAAvvB,WAAAuvB,EAAAvvB,aAAA,EAAwDuvB,EAAArsB,cAAA,EAAgC,UAAAqsB,MAAAC,UAAA,GAAuD1vB,OAAAC,eAAAsvB,EAAAE,EAAA5uB,IAAA4uB,IAE9P,SAAAE,EAAAP,EAAAQ,EAAAC,GAAiM,OAApID,GAAAN,EAAAF,EAAAluB,UAAA0uB,GAAsEC,GAAAP,EAAAF,EAAAS,GAA8DT,EAKjM,IAAAsJ,EAEA,WACA,SAAAA,EAAA5I,EAAAC,GACAb,EAAAhgB,KAAAwpB,GAEAxpB,KAAA+gB,SAAAF,EACA7gB,KAAAszB,eAAA1S,EACA5gB,KAAAwzB,UAAA,EACAxzB,KAAAghB,cAAA,EACAhhB,KAAAw5B,kBAAA,EACAx5B,KAAAihB,gBAAA,EACAjhB,KAAAkhB,OAAA,IAAAqY,EAAA,UACAv5B,KAAAmhB,QAAA,IAAAoY,EAAA,mBAEAv5B,KAAAwhB,GAAAX,EACA7gB,KAAAy5B,YAAA7Y,EAyBA,OAtBAH,EAAA+I,EAAA,EACA73B,IAAA,gBACAN,MAAA,WACA,mBAAAmI,QAAAwG,KAAAszB,eAAA,KAAAoG,QAAA,4BAA6ElgC,QAAAwG,KAAAwzB,UAAA,KAAAkG,QAAA,gCAAqElgC,QAAAwG,KAAAghB,cAAA,KAAA0Y,QAAA,UAE/I,CACH/nC,IAAA,YACAN,MAAA,WACA,IAAAiF,EAAA,CACA8qB,WAAAphB,KAAA+gB,SACA4Y,gBAAA35B,KAAAszB,eACAsG,WAAA55B,KAAAwzB,UACAnS,YAAArhB,KAAAghB,cACA6Y,mBAAA75B,KAAAw5B,iBACAlY,iBAAAthB,KAAAihB,iBAIA,OAFAjhB,KAAAkhB,OAAAK,iBAAAjrB,GACA0J,KAAAmhB,QAAA2Y,WAAAxjC,GACA,IAAAupB,EAAA,QAAAiP,EAAA,gBAAAtN,GAAA,SAAA3B,EAAA,OAAA2J,gBAAAlzB,GAAA,OAIAkzB,EAvCA,GAyCAC,EAEA,WACA,SAAAA,EAAAj5B,GACAwvB,EAAAhgB,KAAAypB,GAEAzpB,KAAAyhB,GAAAjxB,EACAwP,KAAA0hB,UAAAlxB,EAAAgxB,GACAxhB,KAAA+gB,SAAAvwB,EAAAmxB,KAAAP,WACAphB,KAAA4hB,WAAApxB,EAAAmxB,KAAAE,YACA7hB,KAAA+5B,cAAAvpC,EAAAmxB,KAAAE,YACA7hB,KAAA8hB,QAAAtxB,EAAAuxB,mBAAAlC,EAAA,aAAAiC,QA+IA,OA5IArB,EAAAgJ,EAAA,EACA93B,IAAA,SACAN,MAAA,WACA,OAAA2O,KAAAyhB,GAAAE,KAAAqY,MAEG,CACHroC,IAAA,oBACAN,MAAA,WACA,OAAA2O,KAAAyhB,GAAAE,KAAAgY,kBAEG,CACHhoC,IAAA,eACAN,MAAA,WACA,OAAA2O,KAAAyhB,GAAAE,KAAAiY,aAEG,CACHjoC,IAAA,qBACAN,MAAA,WACA,OAAA2O,KAAAyhB,GAAAE,KAAAL,mBAEG,CACH3vB,IAAA,mBACAN,MAAA,WACA,OAAA2O,KAAAyhB,GAAAE,KAAAN,cAEG,CACH1vB,IAAA,uBACAN,MAAA,WACA,OAAA2O,KAAAyhB,GAAAE,KAAAsY,sBAEG,CACHtoC,IAAA,oBACAN,MAAA,WACA,OAAA2O,KAAAyhB,GAAAE,KAAAuY,mBAEG,CACHvoC,IAAA,qBACAN,MAAA,WACA,OAAA2O,KAAAyhB,GAAAE,KAAAwY,kBAAA,KAEG,CACHxoC,IAAA,qBACAN,MAAA,WACA,OAAA2O,KAAAyhB,GAAAE,KAAAyY,kBAAA,KAEG,CACHzoC,IAAA,kBACAN,MAAA,WACA,OAAA2O,KAAAyhB,GAAAE,KAAA0Y,oBAAA,KAEG,CACH1oC,IAAA,kBACAN,MAAA,WACA,OAAA2O,KAAAyhB,GAAAE,KAAA2Y,qBAEG,CACH3oC,IAAA,yBACAN,MAAA,WACA,OAAA2O,KAAAyhB,GAAAE,KAAA4Y,kBAEG,CACH5oC,IAAA,eACAN,MAAA,WACA,OAAA2O,KAAAyhB,GAAAE,KAAA6Y,aAEG,CACH7oC,IAAA,iBACAN,MAAA,WACA,OAAA2O,KAAAyhB,GAAAE,KAAA8Y,eAEG,CACH9oC,IAAA,cACAN,MAAA,WACA,OAAA2O,KAAAyhB,GAAAE,KAAA+Y,YAEG,CACH/oC,IAAA,cACAN,MAAA,WACA,OAAA2O,KAAAyhB,GAAAE,KAAAgZ,YAEG,CACHhpC,IAAA,cACAN,MAAA,WACA,OAAA2O,KAAAyhB,GAAAE,KAAAiZ,YAEG,CACHjpC,IAAA,eACAN,MAAA,WACA,OAAA2O,KAAAyhB,GAAAE,KAAAkZ,aAEG,CACHlpC,IAAA,gBACAN,MAAA,WACA,OAAA2O,KAAAyhB,GAAAE,KAAAmZ,cAEG,CACHnpC,IAAA,4BACAN,MAAA,WACA,OAAA2O,KAAAyhB,GAAAE,KAAAoZ,2BAEG,CACHppC,IAAA,4BACAN,MAAA,WACA,OAAA2O,KAAAyhB,GAAAE,KAAAqZ,2BAEG,CACHrpC,IAAA,oBACAN,MAAA,WAEA,IAAA4pC,EAAAj7B,KAAAyhB,GAAAE,KAAAuZ,qBACA,OAAAD,EACApb,EAAA,QAAAsb,cAAAF,GADA,OAGG,CACHtpC,IAAA,mBACAN,MAAA,SAAA2wB,GACA,OAAAhiB,KAAAyhB,GAAAE,KAAAK,KAEG,CACHrwB,IAAA,mBACAN,MAAA,WACA,OACAopC,aAAAz6B,KAAAo7B,iBACAV,UAAA16B,KAAAq7B,cACAV,UAAA36B,KAAAs7B,cACAV,UAAA56B,KAAAu7B,cACAjB,mBAAAt6B,KAAAw7B,kBACAnB,mBAAAr6B,KAAAy7B,kBACAZ,WAAA76B,KAAA07B,eACA/B,gBAAA35B,KAAAuzB,oBACAyG,IAAAh6B,KAAA27B,SACA9Z,YAAA7hB,KAAA4hB,WACAkZ,YAAA96B,KAAA47B,gBACArB,gBAAAv6B,KAAA67B,yBACAjC,WAAA55B,KAAAyzB,eACAnS,iBAAAthB,KAAA87B,0BAKArS,EAxJA,GA0JAC,EAEA,WACA,SAAAA,IACA1J,EAAAhgB,KAAA0pB,GAUA,OAPAjJ,EAAAiJ,EAAA,EACA/3B,IAAA,YACAN,MAAA,WACA,WAAAwuB,EAAA,QAAAiP,EAAA,gBAAAtN,GAAA,OAAA3B,EAAA,OAAA6J,yBAAA,aAIAA,EAZA,GAcAC,EAEA,WACA,SAAAA,EAAAn5B,GACAwvB,EAAAhgB,KAAA2pB,GAEA3pB,KAAAyhB,GAAAjxB,EACAwP,KAAA+gB,SAAA/gB,KAAAyhB,GAAAE,KAAAP,WACAphB,KAAA8hB,QAAA9hB,KAAAyhB,GAAAM,mBAAAlC,EAAA,aAAAiC,QAoBA,OAjBArB,EAAAkJ,EAAA,EACAh4B,IAAA,iBACAN,MAAA,WACA,OAAA2O,KAAAyhB,GAAAE,KAAAmL,eAEG,CACHn7B,IAAA,iBACAN,MAAA,WACA,OAAA2O,KAAAyhB,GAAAE,KAAAoL,eAEG,CACHp7B,IAAA,gCACAN,MAAA,SAAA2wB,GACA,OAAAhiB,KAAAyhB,GAAAE,KAAAK,OAIA2H,EA1BA,GA4BAC,EAEA,WACA,SAAAA,IACA5J,EAAAhgB,KAAA4pB,GAUA,OAPAnJ,EAAAmJ,EAAA,EACAj4B,IAAA,YACAN,MAAA,WACA,WAAAwuB,EAAA,QAAAiP,EAAA,gBAAAtN,GAAA,OAAA3B,EAAA,OAAA+J,0BAAA,aAIAA,EAZA,GAcAC,EAEA,WACA,SAAAA,EAAAr5B,GACAwvB,EAAAhgB,KAAA6pB,GAEA7pB,KAAAyhB,GAAAjxB,EAqHA,OAlHAiwB,EAAAoJ,EAAA,EACAl4B,IAAA,2BACAN,MAAA,WAKA,QAAA2O,KAAAw7B,oBAEG,CACH7pC,IAAA,wBACAN,MAAA,WACA,OAAA2O,KAAAyhB,GAAAsa,WAAAC,WAAA,sBAEG,CACHrqC,IAAA,8BACAN,MAAA,WACA,OAAA2O,KAAAyhB,GAAAsa,WAAAC,WAAA,2BAEG,CACHrqC,IAAA,gCACAN,MAAA,WACA,OAAA2O,KAAAyhB,GAAAsa,WAAAC,WAAA,8CAEG,CACHrqC,IAAA,uBACAN,MAAA,WACA,OAAA2O,KAAAyhB,GAAAsa,WAAAC,WAAA,oDAEG,CACHrqC,IAAA,oBACAN,MAAA,SAAAwvB,GACA,OAAA7gB,KAAAi8B,+BAAAj8B,KAAAk8B,eAAArb,IAEG,CACHlvB,IAAA,kBACAN,MAAA,WACA,OAAA2O,KAAAyhB,GAAAM,oBAEG,CACHpwB,IAAA,kBACAN,MAAA,WACA,OAAA2O,KAAAyhB,GAAAM,mBAAAlC,EAAA,aAAAiC,UAEG,CACHnwB,IAAA,YACAN,MAAA,WACA,OAAA2O,KAAAyhB,GAAAE,KAAAwa,mBAEG,CACHxqC,IAAA,cACAN,MAAA,WACA,OAAA2O,KAAAyhB,GAAAE,KAAAP,aAEG,CACHzvB,IAAA,eACAN,MAAA,WACA,OAAA2O,KAAAyhB,GAAAE,KAAAE,cAEG,CACHlwB,IAAA,gBACAN,MAAA,WACA,OAAA2O,KAAAyhB,GAAAE,KAAAE,cAEG,CACHlwB,IAAA,YACAN,MAAA,WACA,OAAA2O,KAAAyhB,GAAAE,KAAAya,kBAEG,CACHzqC,IAAA,uBACAN,MAAA,WACA,OAAA2O,KAAAyhB,GAAAE,KAAA0a,0BAEG,CACH1qC,IAAA,wBACAN,MAAA,WAEA,OADA2O,KAAAyhB,GAAAE,KAAAgZ,UAAA36B,KAAAyhB,GAAAE,KAAAiZ,YAGG,CACHjpC,IAAA,SACAN,MAAA,WACA,OAAA2O,KAAAyhB,GAAAE,KAAAqY,MAEG,CACHroC,IAAA,kBACAN,MAAA,WACA,SAAA2O,KAAAyhB,GAAAE,KAAA0Y,qBAEG,CACH1oC,IAAA,kBACAN,MAAA,WACA,OAAA2O,KAAAyhB,GAAAE,KAAA2Y,qBASG,CACH3oC,IAAA,uCACAN,MAAA,WACA,IAAAirC,EAAAt8B,KAAAyhB,GAAAE,KAAAwY,iBACAoC,EAAAv8B,KAAAyhB,GAAAE,KAAAyY,iBAEA,IAAAmC,GAAAD,IACAt8B,KAAAyhB,GAAAE,KAAAwY,iBAAAoC,OAKA1S,EAzHA,GA2HAC,EAEA,WACA,SAAAA,EAAAlJ,EAAAC,EAAA2b,GACAxc,EAAAhgB,KAAA8pB,GAEA9pB,KAAAy5B,YAAA7Y,EACA5gB,KAAAwhB,GAAAsN,EAAA,gBAAAtN,GAAA,UACAxhB,KAAA+gB,SAAAF,EACA7gB,KAAAy8B,2BAAAD,EACAx8B,KAAAkhB,OAAA,IAAAqY,EAAA,UACAv5B,KAAAmhB,QAAA,IAAAoY,EAAA,mBAiBA,OAdA9Y,EAAAqJ,EAAA,EACAn4B,IAAA,YACAN,MAAA,WACA,IAAAiF,EAAA,CACAomC,cAAA18B,KAAAy5B,YACArY,WAAAphB,KAAA+gB,SACA4b,2BAAA38B,KAAAy8B,4BAIA,OAFAz8B,KAAAkhB,OAAAK,iBAAAjrB,GAEA,IAAAupB,EAAA,QAAAiP,EAAA,gBAAAtN,GAAA,UAAA3B,EAAA,OAAAiK,cAAAxzB,GAAA,OAIAwzB,EA1BA,GA4BAC,EAEA,WACA,SAAAA,EAAAv5B,GACAwvB,EAAAhgB,KAAA+pB,GAEA/pB,KAAAyhB,GAAAjxB,EACAwP,KAAA0hB,UAAAlxB,EAAAgxB,GACAxhB,KAAA+gB,SAAAvwB,EAAAmxB,KAAAP,WACAphB,KAAA4hB,WAAApxB,EAAAmxB,KAAAE,YACA7hB,KAAA+5B,cAAAvpC,EAAAmxB,KAAAE,YACA7hB,KAAA8hB,QAAAtxB,EAAAuxB,mBAAAlC,EAAA,aAAAiC,QAkGA,OA/FArB,EAAAsJ,EAAA,EACAp4B,IAAA,kBACAN,MAAA,WACA,OAAA2O,KAAAyhB,GAAAE,KAAA+a,gBAEG,CACH/qC,IAAA,SACAN,MAAA,WACA,OAAA2O,KAAAyhB,GAAAE,KAAAqY,MAEG,CACHroC,IAAA,qBACAN,MAAA,WACA,OAAA2O,KAAAyhB,GAAAE,KAAAwY,kBAAA,KAEG,CACHxoC,IAAA,qBACAN,MAAA,WACA,OAAA2O,KAAAyhB,GAAAE,KAAAyY,mBAEG,CACHzoC,IAAA,kBACAN,MAAA,WACA,OAAA2O,KAAAyhB,GAAAE,KAAA0Y,oBAAA,KAEG,CACH1oC,IAAA,kBACAN,MAAA,WACA,OAAA2O,KAAAyhB,GAAAE,KAAA2Y,oBAAA,KAEG,CACH3oC,IAAA,yBACAN,MAAA,WACA,OAAA2O,KAAAyhB,GAAAE,KAAA4Y,iBAAA,KAEG,CACH5oC,IAAA,eACAN,MAAA,WACA,OAAA2O,KAAAyhB,GAAAE,KAAA6Y,YAAA,KAEG,CACH7oC,IAAA,iBACAN,MAAA,WACA,OAAA2O,KAAAyhB,GAAAE,KAAA8Y,cAAA,KAEG,CACH9oC,IAAA,cACAN,MAAA,WACA,OAAA2O,KAAAyhB,GAAAE,KAAA+Y,WAAA,KAEG,CACH/oC,IAAA,cACAN,MAAA,WACA,OAAA2O,KAAAyhB,GAAAE,KAAAgZ,WAAA,KAEG,CACHhpC,IAAA,cACAN,MAAA,WACA,OAAA2O,KAAAyhB,GAAAE,KAAAiZ,WAAA,KAEG,CACHjpC,IAAA,eACAN,MAAA,WACA,OAAA2O,KAAAyhB,GAAAE,KAAAkZ,YAAA,KAEG,CACHlpC,IAAA,gBACAN,MAAA,WACA,OAAA2O,KAAAyhB,GAAAE,KAAAmZ,aAAA,KAEG,CACHnpC,IAAA,4BACAN,MAAA,WACA,OAAA2O,KAAAyhB,GAAAE,KAAAoZ,2BAEG,CACHppC,IAAA,4BACAN,MAAA,WACA,OAAA2O,KAAAyhB,GAAAE,KAAAqZ,2BAEG,CACHrpC,IAAA,oBACAN,MAAA,WAEA,IAAA4pC,EAAAj7B,KAAAyhB,GAAAE,KAAAuZ,qBACA,OAAAD,EACApb,EAAA,QAAAsb,cAAAF,GADA,OAGG,CACHtpC,IAAA,mBACAN,MAAA,SAAA2wB,GACA,OAAAhiB,KAAAyhB,GAAAE,KAAAK,OAIA+H,EA3GA,GA6GAC,EAEA,WACA,SAAAA,EAAAx5B,GACAwvB,EAAAhgB,KAAAgqB,GAEAhqB,KAAA0hB,UAAAlxB,EAAAgxB,GACAxhB,KAAA+gB,SAAAvwB,EAAAmxB,KAAAP,WACAphB,KAAA48B,eAAApsC,EAAAmxB,KAAAyY,iBAiBA,OAdA3Z,EAAAuJ,EAAA,EACAr4B,IAAA,oBACAN,MAAA,SAAAwvB,EAAAoO,EAAA4N,GACA78B,KAAA0hB,UAAAuN,EACAjvB,KAAA+gB,SAAAF,EACA7gB,KAAA48B,eAAAC,IAEG,CACHlrC,IAAA,qBACAN,MAAA,WACA,OAAA2O,KAAA48B,mBAIA5S,EAvBA,GAyBAoP,EAEA,WACA,SAAAA,EAAAvY,GACAb,EAAAhgB,KAAAo5B,GAEAp5B,KAAA+gB,SAAAF,EAaA,OAVAJ,EAAA2Y,EAAA,EACAznC,IAAA,YACAN,MAAA,WACA,IAAAiF,EAAA,CACA8qB,WAAAphB,KAAA+gB,UAEA,WAAAlB,EAAA,QAAAiP,EAAA,gBAAAtN,GAAA,UAAA3B,EAAA,OAAAoK,kBAAA3zB,GAAA,OAIA8iC,EAjBA,GAmBAC,EAEA,WACA,SAAAA,EAAAxY,GACAb,EAAAhgB,KAAAq5B,GAEAr5B,KAAA+gB,SAAAF,EAaA,OAVAJ,EAAA4Y,EAAA,EACA1nC,IAAA,YACAN,MAAA,WACA,IAAAiF,EAAA,CACA8qB,WAAAphB,KAAA+gB,UAEA,WAAAlB,EAAA,QAAAiP,EAAA,gBAAAtN,GAAA,UAAA3B,EAAA,OAAAqK,kBAAA5zB,GAAA,OAIA+iC,EAjBA,GAmBAhP,EAEA,WACA,SAAAA,EAAAzJ,EAAAC,EAAAC,GACAd,EAAAhgB,KAAAqqB,GAEArqB,KAAA+gB,SAAAF,EACA7gB,KAAAszB,eAAA1S,EACA5gB,KAAAihB,gBAAAH,EACA9gB,KAAAkhB,OAAA,IAAAqY,EAAA,UACAv5B,KAAAmhB,QAAA,IAAAoY,EAAA,mBAgBA,OAbA9Y,EAAA4J,EAAA,EACA14B,IAAA,YACAN,MAAA,WACA,IAAAiF,EAAA,CACA8qB,WAAAphB,KAAA+gB,SACA4Y,gBAAA35B,KAAAszB,eACAhS,iBAAAthB,KAAAihB,iBAGA,OADAjhB,KAAAkhB,OAAAK,iBAAAjrB,GACA,IAAAupB,EAAA,QAAAiP,EAAA,gBAAAtN,GAAA,QAAA3B,EAAA,OAAAwK,oBAAA/zB,GAAA,OAIA+zB,EAxBA,GA0BAC,EAAA,SAAAA,EAAA95B,GACAwvB,EAAAhgB,KAAAsqB,GAEAtqB,KAAAypB,iBAAA,IAAAA,EAAAj5B,GACAwP,KAAA+gB,SAAA0I,EAAA1I,UAEAuY,EAEA,WACA,SAAAA,IACAtZ,EAAAhgB,KAAAs5B,GAEA,QAAA9R,EAAApD,UAAA7uB,OAAAkyB,EAAA,IAAArqB,MAAAoqB,GAAAE,EAAA,EAAuEA,EAAAF,EAAaE,IACpFD,EAAAC,GAAAtD,UAAAsD,GAGA,OAAAD,EAAAlyB,OACAyK,KAAA+gB,SAAA0G,EAAA,GACAznB,KAAA0hB,UAAA+F,EAAA,GACAznB,KAAA88B,aAAArV,EAAA,GACAznB,KAAA+8B,YAAAtV,EAAA,OACK,QAAAA,EAAAlyB,OAML,UAAAqB,MAAA,kDALAoJ,KAAA0hB,UAAA+F,EAAA,GAAAjG,GACAxhB,KAAA+gB,SAAA0G,EAAA,GAAA9F,KAAAP,WACAphB,KAAA88B,aAAArV,EAAA,GAAA9F,KAAAqb,yBACAh9B,KAAA+8B,YAAAtV,EAAA,GAAA9F,KAAAsb,aAkBA,OAZAxc,EAAA6Y,EAAA,EACA3nC,IAAA,iBACAN,MAAA,WACA,OAAA2O,KAAA88B,eAEG,CACHnrC,IAAA,gBACAN,MAAA,WACA,OAAA2O,KAAA+8B,gBAIAzD,EAnCA,GAqCAlP,EAEA,WACA,SAAAA,EAAAvJ,EAAAqc,GACAld,EAAAhgB,KAAAoqB,GAEApqB,KAAA+gB,SAAAF,EACA7gB,KAAAm9B,SAAAD,EAcA,OAXAzc,EAAA2J,EAAA,EACAz4B,IAAA,YACAN,MAAA,WACA,IAAAiF,EAAA,CACA8qB,WAAAphB,KAAA+gB,SACA2Z,UAAA16B,KAAAm9B,UAEA,WAAAtd,EAAA,QAAAiP,EAAA,gBAAAtN,GAAA,UAAA3B,EAAA,OAAAuK,eAAA9zB,GAAA,OAIA8zB,EAnBA,IAwBAgT;;;;uCAKA,SAAAxtC,EAAA+L,EAAAxL,GAEA,aACAA,EAAAe,EAAAyK,GACAxL,EAAAO,EAAAiL,EAAA,4BAAwG,OAAA0hC,IACxG,IAAAC,EAAAntC,mBAAA,qBAGA,SAAAiwB,EAAAC,EAAAC,GAA2C,QAAAtwB,EAAA,EAAgBA,EAAAswB,EAAA/qB,OAAkBvF,IAAA,CAAO,IAAAuwB,EAAAD,EAAAtwB,GAA2BuwB,EAAAvvB,WAAAuvB,EAAAvvB,aAAA,EAAwDuvB,EAAArsB,cAAA,EAAgC,UAAAqsB,MAAAC,UAAA,GAAuD1vB,OAAAC,eAAAsvB,EAAAE,EAAA5uB,IAAA4uB,IAK9P,IAAA8c,EAEA,WACA,SAAAA,KAVA,SAAApd,EAAAC,GAAiD,KAAAD,aAAAC,GAA0C,UAAAC,UAAA,qCAW3FH,CAAAhgB,KAAAq9B,GAPA,IAAAnd,EAAAQ,EAAAC,EAiCA,OAjCAT,EAUAmd,EAVA1c,EAUA,EACAhvB,IAAA,wBACAN,MAAA,SAAAuvB,EAAA2c,GACA,WAAAD,EAAA,gBAAA1c,EAAA2c,KAEG,CACH5rC,IAAA,0BACAN,MAAA,SAAAwvB,EAAA2c,EAAAC,EAAAC,EAAAC,EAAA7c,GAOA,OANAhwB,OAAA8sC,OAAA,IAAAN,EAAA,gBAAAE,EAAA3c,GAAA,CACAG,cAAA0c,EACAlK,UAAAiK,EACAjE,iBAAAmE,EACA1c,gBAAAH,MAIG,CACHnvB,IAAA,sBACAN,MAAA,SAAAuvB,EAAA2c,EAAAf,GACA,WAAAc,EAAA,cAAA1c,EAAA2c,EAAAf,OA7BA9b,EAUA,OAV6DN,EAAAF,EAAAluB,UAAA0uB,GAAsEC,GAAAP,EAAAF,EAAAS,GAiCnI0c,EA5BA,IAiCAQ;;;;wCAKA,SAAAjuC,EAAA+L,EAAAxL,GAEA,aAKA,SAAAiwB,EAAAC,EAAAC,GAA2C,QAAAtwB,EAAA,EAAgBA,EAAAswB,EAAA/qB,OAAkBvF,IAAA,CAAO,IAAAuwB,EAAAD,EAAAtwB,GAA2BuwB,EAAAvvB,WAAAuvB,EAAAvvB,aAAA,EAAwDuvB,EAAArsB,cAAA,EAAgC,UAAAqsB,MAAAC,UAAA,GAAuD1vB,OAAAC,eAAAsvB,EAAAE,EAAA5uB,IAAA4uB,IAJ9PpwB,EAAAe,EAAAyK,GACAxL,EAAAO,EAAAiL,EAAA,6BAAyG,OAAAmiC,IAOzG,IAAAC,EAAA,EACAD,EAEA,WACA,SAAAA,KAVA,SAAA7d,EAAAC,GAAiD,KAAAD,aAAAC,GAA0C,UAAAC,UAAA,qCAW3FH,CAAAhgB,KAAA89B,GAPA,IAAA5d,EAAAQ,EAAAC,EAiBA,OAjBAT,EAUA4d,EAVAnd,EAUA,EACAhvB,IAAA,KACAN,MAAA,SAAA2sC,GACA,OAAAA,EAAAD,QAbArd,EAUA,OAV6DN,EAAAF,EAAAluB,UAAA0uB,GAAsEC,GAAAP,EAAAF,EAAAS,GAiBnImd,EAZA,IAiBAG;;;;gCAKA,SAAAruC,EAAA+L,EAAAxL,GAEA,aAKA,SAAAiwB,EAAAC,EAAAC,GAA2C,QAAAtwB,EAAA,EAAgBA,EAAAswB,EAAA/qB,OAAkBvF,IAAA,CAAO,IAAAuwB,EAAAD,EAAAtwB,GAA2BuwB,EAAAvvB,WAAAuvB,EAAAvvB,aAAA,EAAwDuvB,EAAArsB,cAAA,EAAgC,UAAAqsB,MAAAC,UAAA,GAAuD1vB,OAAAC,eAAAsvB,EAAAE,EAAA5uB,IAAA4uB,IAJ9PpwB,EAAAe,EAAAyK,GACAxL,EAAAO,EAAAiL,EAAA,qBAAiG,OAAAowB,IAOjG,IAAAA,EAEA,WACA,SAAAA,EAAAmS,EAAAC,IATA,SAAAle,EAAAC,GAAiD,KAAAD,aAAAC,GAA0C,UAAAC,UAAA,qCAU3FH,CAAAhgB,KAAA+rB,GAEA/rB,KAAAgnB,OAAAkX,EACAl+B,KAAAinB,QAAAkX,EATA,IAAAje,EAAAQ,EAAAC,EAoCA,OApCAT,EAYA6L,EAZApL,EAYA,EACAhvB,IAAA,OACAN,MAAA,SAAA21B,EAAAC,GACAmX,aAAAC,QAAA,SAAArX,GACAoX,aAAAC,QAAA,UAAApX,KAEG,CACHt1B,IAAA,UACAN,MAAA,WACA,WAAA06B,EAAAqS,aAAAE,QAAA,UAAAF,aAAAE,QAAA,cAEG,CACH3sC,IAAA,UACAN,MAAA,WACA,OAAA+sC,aAAAE,QAAA,WAAAF,aAAAE,QAAA,aAEG,CACH3sC,IAAA,QACAN,MAAA,WACA+sC,aAAAG,WAAA,UACAH,aAAAG,WAAA,eAhCA7d,EAYA,OAZ6DN,EAAAF,EAAAluB,UAAA0uB,GAAsEC,GAAAP,EAAAF,EAAAS,GAoCnIoL,EAhCA,IAqCAyS;;;;kEAKA,SAAA5uC,EAAA+L,EAAAxL,GAEA,aAIA,SAAA6vB,EAAAC,EAAAC,GAAiD,KAAAD,aAAAC,GAA0C,UAAAC,UAAA,qCAE3F,SAAAC,EAAAC,EAAAC,GAA2C,QAAAtwB,EAAA,EAAgBA,EAAAswB,EAAA/qB,OAAkBvF,IAAA,CAAO,IAAAuwB,EAAAD,EAAAtwB,GAA2BuwB,EAAAvvB,WAAAuvB,EAAAvvB,aAAA,EAAwDuvB,EAAArsB,cAAA,EAAgC,UAAAqsB,MAAAC,UAAA,GAAuD1vB,OAAAC,eAAAsvB,EAAAE,EAAA5uB,IAAA4uB,IAE9P,SAAAE,EAAAP,EAAAQ,EAAAC,GAAiM,OAApID,GAAAN,EAAAF,EAAAluB,UAAA0uB,GAAsEC,GAAAP,EAAAF,EAAAS,GAA8DT,EAPjM/vB,EAAAe,EAAAyK,GACAxL,EAAAO,EAAAiL,EAAA,iCAA6G,OAAA8iC,IAC7GtuC,EAAAO,EAAAiL,EAAA,kCAA8G,OAAA+iC,IAO9G,IAAAD,EAEA,WAmBA,SAAAA,EAAAE,GACA3e,EAAAhgB,KAAAy+B,GAEAz+B,KAAAkjB,oBAAAyb,EACA3+B,KAAA4+B,GAAA,KACA5+B,KAAA6+B,KAAA,KACA7+B,KAAA8+B,aAAA,KAGA,OA3BAre,EAAAge,EAAA,EACA9sC,IAAA,UACAV,IAAA,WACA,OAAA+O,KAAAkjB,oBACAljB,KAAA6+B,KAEA7+B,KAAA4+B,IAGAzqC,IAAA,SAAA4qC,GACA/+B,KAAAkjB,oBACAljB,KAAA6+B,KAAAG,SAEAh/B,KAAA4+B,GAAAG,MAcAN,EA5BA,GA8BAC,EAEA,WACA,SAAAA,IACA1e,EAAAhgB,KAAA0+B,GA4BA,OAzBAje,EAAAie,EAAA,EACA/sC,IAAA,kBAEAN,MAAA,SAAA4tC,GACA,IAAAC,EAAA9a,UAAA7uB,OAAA,QAAAD,IAAA8uB,UAAA,GAAAA,UAAA,qBACA+a,EAAA/a,UAAA7uB,OAAA,EAAA6uB,UAAA,QAAA9uB,EACA8pC,EAAAhb,UAAA7uB,OAAA,EAAA6uB,UAAA,QAAA9uB,EACA+pC,EAAAjb,UAAA7uB,OAAA,EAAA6uB,UAAA,QAAA9uB,EACA8yB,EAAAhE,UAAA7uB,OAAA,EAAA6uB,UAAA,QAAA9uB,EACAgqC,EAAAF,EAAA,YACAG,EAAAF,EAAA,iCAAA7lC,OAAA2lC,EAAA,iCAAA3lC,OAAAylC,EAAA,KAAAzlC,OAAA8lC,GAAA,8BAAA9lC,OAAA2lC,EAAA,iCAAA3lC,OAAAylC,EAAA,KAAAzlC,OAAA8lC,GAEA,OADAlX,EAAAoX,KAAA,qBAAAD,GACAE,MAAAF,EAAA,CACAG,OAAA,MACAC,QAAA,CACAC,iCAAAV,KAEO3qC,KAAA,SAAAsrC,GACP,OAAAA,EAAAC,SACOC,MAAA,SAAAF,GACPzX,EAAAjtB,MAAA,eAAA3B,OAAAqmC,EAAAG,WAAA,mBAAAxmC,OAAA+lC,EAAA,iBAAA/lC,OAAAqmC,EAAA1kC,cAKAujC,EA9BA,IAmCAuB;;;;mGAKA,SAAArwC,EAAA+L,EAAAxL,GAEA,aACAA,EAAAe,EAAAyK,GACAxL,EAAAO,EAAAiL,EAAA,2BAAuG,OAAA4uB,IACvGp6B,EAAAO,EAAAiL,EAAA,wBAAoG,OAAAukC,IACpG/vC,EAAAO,EAAAiL,EAAA,mCAA+G,OAAAwkC,IAC/GhwC,EAAAO,EAAAiL,EAAA,sCAAkH,OAAA8uB,IAClH,IAAA5K,EAAA1vB,mBAAA,qBACA,SAAA6vB,EAAAC,EAAAC,GAAiD,KAAAD,aAAAC,GAA0C,UAAAC,UAAA,qCAE3F,SAAAC,EAAAC,EAAAC,GAA2C,QAAAtwB,EAAA,EAAgBA,EAAAswB,EAAA/qB,OAAkBvF,IAAA,CAAO,IAAAuwB,EAAAD,EAAAtwB,GAA2BuwB,EAAAvvB,WAAAuvB,EAAAvvB,aAAA,EAAwDuvB,EAAArsB,cAAA,EAAgC,UAAAqsB,MAAAC,UAAA,GAAuD1vB,OAAAC,eAAAsvB,EAAAE,EAAA5uB,IAAA4uB,IAE9P,SAAAE,EAAAP,EAAAQ,EAAAC,GAAiM,OAApID,GAAAN,EAAAF,EAAAluB,UAAA0uB,GAAsEC,GAAAP,EAAAF,EAAAS,GAA8DT,EAGjM,IAAAqK,EAEA,WACA,SAAAA,EAAA5zB,GACAqpB,EAAAhgB,KAAAuqB,GAEAvqB,KAAAwhB,GAAA7qB,EAUA,OAPA8pB,EAAA8J,EAAA,EACA54B,IAAA,YACAN,MAAA,WACA,WAAAwuB,EAAA,QAAA7f,KAAAwhB,GAAA3B,EAAA,OAAA0K,cAAA,aAIAA,EAdA,GAgBA2V,EAEA,WACA,SAAAA,EAAA1vC,GACAwvB,EAAAhgB,KAAAkgC,GAEAlgC,KAAA0hB,UAAAlxB,EAAAgxB,GACAxhB,KAAAyhB,GAAAjxB,EACAwP,KAAA8hB,QAAAtxB,EAAAuxB,mBAAAlC,EAAA,aAAAiC,QAiFA,OA9EArB,EAAAyf,EAAA,EACAvuC,IAAA,2BACAN,MAAA,WACA,OAAA2O,KAAAyhB,GAAAE,KAAAye,uCAEG,CACHzuC,IAAA,2BACAN,MAAA,WACA,OAAA2O,KAAAyhB,GAAAE,KAAA0e,uCAEG,CACH1uC,IAAA,gBACAN,MAAA,WACA,OAAA2O,KAAAyhB,GAAAE,KAAA2e,0BAEG,CACH3uC,IAAA,gBACAN,MAAA,WACA,OAAA2O,KAAAyhB,GAAAE,KAAA4e,0BAEG,CACH5uC,IAAA,qBACAN,MAAA,WACA,IAAAmvC,EAAAxgC,KAAAyhB,GAAAE,KAAA8e,6BAEAxF,EAAAj7B,KAAAyhB,GAAAE,KAAA+e,6BAEA,OAAA7gB,EAAA,QAAA8gB,qBAAA1F,EAAAuF,KAEG,CACH7uC,IAAA,mBACAN,MAAA,WACA,IAAAmvC,EAAAxgC,KAAAyhB,GAAAE,KAAAif,2BAEA3F,EAAAj7B,KAAAyhB,GAAAE,KAAAkf,2BAEA,OAAAhhB,EAAA,QAAA8gB,qBAAA1F,EAAAuF,KAEG,CACH7uC,IAAA,mBACAN,MAAA,WACA,IAAAmvC,EAAAxgC,KAAAyhB,GAAAE,KAAAmf,0BAEA7F,EAAAj7B,KAAAyhB,GAAAE,KAAAof,0BAEA,OAAAlhB,EAAA,QAAA8gB,qBAAA1F,EAAAuF,KAEG,CACH7uC,IAAA,kBACAN,MAAA,WACA,OAAA2O,KAAAyhB,GAAAE,KAAA0Y,qBAEG,CACH1oC,IAAA,aACAN,MAAA,WACA,OAAA2O,KAAAyhB,GAAAE,KAAAyY,mBAEG,CACHzoC,IAAA,sBACAN,MAAA,WACA,OAAA2O,KAAAyhB,GAAAE,KAAAqf,oBAEG,CACHrvC,IAAA,gBACAN,MAAA,WACA,OAAA2O,KAAAyhB,GAAAE,KAAAmZ,cAEG,CACHnpC,IAAA,6BACAN,MAAA,WACA,IAAA4vC,EAAAjhC,KAAAyhB,GAAAE,KAAAsf,QACA,OAAAA,EACAA,EAAAhoC,IAAA,SAAAioC,GACA,WAAAf,EAAAe,KAFA,OAOAhB,EAvFA,GAyFAC,EAEA,WAGA,SAAAA,IACAngB,EAAAhgB,KAAAmgC,GAEA,QAAA3Y,EAAApD,UAAA7uB,OAAAkyB,EAAA,IAAArqB,MAAAoqB,GAAAE,EAAA,EAAuEA,EAAAF,EAAaE,IACpFD,EAAAC,GAAAtD,UAAAsD,GAGA,IAAAD,EAAAlyB,QACAyK,KAAA4hB,WAAA6F,EAAA,GAAA5F,YACA7hB,KAAAmhC,iBAAA,OAAA1Z,EAAA,GAAA2Z,mBAAAC,cACArhC,KAAAshC,WAAAzkC,SAAA4qB,EAAA,GAAA8Z,YAAA,IACAvhC,KAAAwhC,WAAA3kC,SAAA4qB,EAAA,GAAAga,YAAA,KACK,IAAAha,EAAAlyB,SACLyK,KAAA4hB,WAAA6F,EAAA,GACAznB,KAAAmhC,iBAAA1Z,EAAA,GACAznB,KAAAwhC,WAAA/Z,EAAA,GACAznB,KAAAshC,WAAA7Z,EAAA,IAWA,OAPAhH,EAAA0f,EAAA,EACAxuC,IAAA,WACAN,MAAA,WACA,qBAAAmI,OAAAwG,KAAA4hB,WAAA,wBAAApoB,OAAAwG,KAAAmhC,iBAAA,kBAAA3nC,OAAAwG,KAAAwhC,WAAA,kBAAAhoC,OAAAwG,KAAAshC,gBAIAnB,EA9BA,GAgCA1V,EAEA,WACA,SAAAA,EAAA9zB,GACAqpB,EAAAhgB,KAAAyqB,GAEAzqB,KAAAwhB,GAAA7qB,EAUA,OAPA8pB,EAAAgK,EAAA,EACA94B,IAAA,YACAN,MAAA,WACA,WAAAwuB,EAAA,QAAA7f,KAAAwhB,GAAA3B,EAAA,OAAA4K,yBAAA,aAIAA,EAdA,IAmBAiX;;;;kDAKA,SAAA9xC,EAAA+L,EAAAxL,GAEA,aACAA,EAAAe,EAAAyK,GACAxL,EAAAO,EAAAiL,EAAA,yBAAqG,OAAAgmC,IACrGxxC,EAAAO,EAAAiL,EAAA,qBAAiG,OAAAa,IACjGrM,EAAAO,EAAAiL,EAAA,iBAA6F,OAAAa,IAC7F,IAAAqjB,EAAA1vB,mBAAA,qBACA2vB,EAAA3vB,oBAAA,sBACA4vB,EAAA5vB,0BAAA,4BACAyxC,EAAAzxC,wBAAA,0BACA0xC,EAAA1xC,qBAAA,uBACA2xC,EAAA3xC,wBAAA,0BACA4xC,EAAA5xC,qBAAA,uBACA6xC,EAAA7xC,qBAAA,uBACA8xC,EAAA9xC,kBAAA,oBACA+xC,EAAA/xC,qBAAA,uBACAgyC,EAAAhyC,kBAAA,oBACAiyC,EAAAjyC,kBAAA,oBACAkyC,EAAAlyC,yBAAA,2BACAmyC,EAAAnyC,2BAAA,6BACAoyC,EAAApyC,qBAAA,uBACAqyC,EAAAryC,mBAAA,qBACAsyC,EAAAtyC,gCAAA,kCACAuyC,EAAAvyC,mBAAA,qBACAwyC,EAAAxyC,yBAAA,2BAGA,SAAAiwB,EAAAC,EAAAC,GAA2C,QAAAtwB,EAAA,EAAgBA,EAAAswB,EAAA/qB,OAAkBvF,IAAA,CAAO,IAAAuwB,EAAAD,EAAAtwB,GAA2BuwB,EAAAvvB,WAAAuvB,EAAAvvB,aAAA,EAAwDuvB,EAAArsB,cAAA,EAAgC,UAAAqsB,MAAAC,UAAA,GAAuD1vB,OAAAC,eAAAsvB,EAAAE,EAAA5uB,IAAA4uB,IAE9P,SAAAE,EAAAP,EAAAQ,EAAAC,GAAiM,OAApID,GAAAN,EAAAF,EAAAluB,UAAA0uB,GAAsEC,GAAAP,EAAAF,EAAAS,GAA8DT,EAqBjM,IAAAyhB,EAAA,QAEAnlC,EAEA,WAkBA,SAAAA,EAAAmvB,EAAAsT,EAAA2D,EAAAhX,IA/CA,SAAA3L,EAAAC,GAAiD,KAAAD,aAAAC,GAA0C,UAAAC,UAAA,qCAgD3FH,CAAAhgB,KAAAxD,GAEAwD,KAAA6iC,OAAAlX,EACA3rB,KAAA8iC,cAAA7D,EACAj/B,KAAA+iC,SAAAnX,EACA5rB,KAAAgjC,wBAAA,EACAhjC,KAAAijC,eAAA,QAAAL,EACA5iC,KAAAkjC,KAAAnvC,QACAiM,KAAAkhB,OAAA,IAAApB,EAAA,UACA9f,KAAAmjC,MAAA,IAAAtB,EAAA,WACA7hC,KAAAojC,oBAAA,KACApjC,KAAAqjC,cAAA,KACArjC,KAAAsjC,cAAA,KACAtjC,KAAAujC,aAAA,EACAvjC,KAAAwjC,+BAAA,EAEAxjC,KAAAyjC,iBAAA,IAAA5jB,EAAA,aAAA7f,KAAA6iC,OAAA7iC,KAAA+iC,SAAA,GACA/iC,KAAA0jC,aAAA,KACA1jC,KAAA2jC,YAAA,KACA3jC,KAAA4jC,YAAA,KAEA5jC,KAAA6jC,oBAAA,KACA7jC,KAAA8jC,wBAAA,KACA9jC,KAAA+jC,kBAAA,EACA/jC,KAAAgkC,yCAAA,EACAhkC,KAAAikC,yBAAA,KACAjkC,KAAAkkC,aAAA,IACAlkC,KAAAmkC,eAAA,KACAnkC,KAAAokC,iBAAA,KACApkC,KAAAqkC,oBAAA,KACArkC,KAAAskC,yBAAA,IACAtkC,KAAAukC,oBAAA,IACAvkC,KAAAwkC,oBAAA,IACAxkC,KAAAykC,wBAAA,IACAzkC,KAAA0kC,yBAAA,EACA1kC,KAAA2kC,qCAAA,EACA3kC,KAAA4kC,YAAA,KACA5kC,KAAA6kC,wBAAA,KACA7kC,KAAA8kC,mBAAA,KAmuDA,OA3xDArkB,EAAAjkB,EAAA,EACA7K,IAAA,gBACAV,IAAA,WACA,OAAA+O,KAAA+kC,gBAEA5wC,IAAA,SAAA9C,GACA2O,KAAA+kC,iBAAA1zC,IAIA2O,KAAA+kC,eAAA1zC,EACA0G,SAAA8rB,cAAA,IAAAC,YAAA,iBACAC,OAAA1yB,UA+CAovB,EAAAjkB,EAAA,EACA7K,IAAA,mBACAN,MAAA,WAEA,OADA2O,KAAAglC,QAAA,IAAAlD,EAAA,cAAA9hC,MACAA,KAAAglC,UAEG,CACHrzC,IAAA,oBACAN,MAAA,WAGA,OAFA2O,KAAAglC,QAAA,IAAAlD,EAAA,cAAA9hC,MACAA,KAAAglC,QAAA9jB,OAAA2S,oBAAA,EACA7zB,KAAAglC,UAEG,CACHrzC,IAAA,gBACAN,MAAA,WAEA,OADA2O,KAAAilC,YAAA,IAAAjD,EAAA,WAAAhiC,MACAA,KAAAilC,cAEG,CACHtzC,IAAA,QACAN,MAAA,WACA,IAAA2O,KAAA0jC,eAAA1jC,KAAA2jC,YAIA,MAFA3jC,KAAAkjC,KAAAlvC,KAAA,8FAEA,IAAA4C,MAAA,8FAGAoJ,KAAAklC,aAEAllC,KAAAmlC,oCAEAnlC,KAAA4kC,YAAA9kB,EAAA,QAAAslB,KAEA,MAAAplC,KAAA+iC,UACA/iC,KAAAkjC,KAAA1D,KAAA,4BAEAx/B,KAAA+kC,eAAAjlB,EAAA,UAAAulB,iBAEArlC,KAAAmjC,MAAAmC,YAGAtlC,KAAAkjC,KAAA1D,KAAA,8BAEAx/B,KAAA+kC,eAAAjlB,EAAA,UAAAylB,YAMG,CACH5zC,IAAA,kBACAN,MAAA,SAAA8tC,GAEA,OADAn/B,KAAAsjC,cAAAnE,GACA,IAMG,CACHxtC,IAAA,kBACAN,MAAA,SAAAm0C,GAEA,OADAxlC,KAAAqjC,cAAAmC,GACA,IAKG,CACH7zC,IAAA,kBACAN,MAAA,SAAA4tC,GACA,GAAAj/B,KAAAylC,eAAA3lB,EAAA,UAAAylB,SAAA,SACA,IAAAG,EAAA1lC,KAAA8iC,cAOA,OANA9iC,KAAA8iC,cAAA7D,EAEAj/B,KAAAwjC,+BAAAxjC,KAAA2lC,uBAAAD,IACA1lC,KAAA4lC,6BAGA,IAMG,CACHj0C,IAAA,2BACAN,MAAA,SAAAw0C,GACA,GAAA7lC,KAAAylC,eAAA3lB,EAAA,UAAAgmB,gBAAA,SACA,IAAAJ,EAAA1lC,KAAAwjC,8BAQA,OAPAxjC,KAAAwjC,8BAAAqC,EAEAA,IAAAH,GAEA1lC,KAAA4lC,6BAGA,IASG,CACHj0C,IAAA,cACAN,MAAA,SAAA00C,GACA,OAAA/lC,KAAAylC,eAAA3lB,EAAA,UAAAylB,WACAQ,GAAA/lC,KAAAujC,cAEAvjC,KAAAujC,YAAAwC,EAEA/lC,KAAA4lC,6BAEA,MAOG,CACHj0C,IAAA,sBACAN,MAAA,SAAAstC,GACA3+B,KAAAgjC,uBAAArE,IAMG,CACHhtC,IAAA,WACAN,MAAA,SAAAs6B,GACA,OAAA3rB,KAAAylC,eAAA3lB,EAAA,UAAAylB,WACAvlC,KAAA6iC,OAAAlX,EACA3rB,KAAAyjC,iBAAA3X,MAAAH,GACA,KAOG,CACHh6B,IAAA,mBACAN,MAAA,SAAA0tC,GACA,OAAA/+B,KAAAylC,eAAA3lB,EAAA,UAAAgmB,kBAAA9lC,KAAAwjC,gCAIAxjC,KAAAijC,eAAA,QAAAlE,EACA/+B,KAAAmjC,MAAAtgB,QAAA7iB,KAAAijC,gBACA,KAEG,CACHtxC,IAAA,aASAN,MAAA,SAAA20C,EAAAC,GACAjmC,KAAA0jC,aAAAsC,EACAhmC,KAAA2jC,YAAAsC,IASG,CACHt0C,IAAA,4BACAN,MAAA,WACA,OAAA2O,KAAA4kC,aAAA9kB,EAAA,QAAAslB,OAEAplC,KAAA4kC,aAAA9kB,EAAA,QAAAomB,SAAAlmC,KAAA6kC,wBAAAsB,UACAnmC,KAAA4kC,YAAA9kB,EAAA,QAAAslB,MACA,KAGAplC,KAAA4kC,aAAA9kB,EAAA,QAAAsmB,cAAApmC,KAAA8kC,mBAAAqB,YACAnmC,KAAA4kC,YAAA9kB,EAAA,QAAAslB,MACA,MAYG,CACHzzC,IAAA,OACAN,MAAA,WACA,OAAA2O,KAAAylC,eAAA3lB,EAAA,UAAAylB,UACAvlC,KAAAkjC,KAAAlvC,KAAA,wCAEA,GAGAgM,KAAA6iC,QAAA7iC,KAAAijC,gBAMAjjC,KAAA4kC,YAAA9kB,EAAA,QAAAomB,QACAlmC,KAAA6kC,wBAAA,IAAA/kB,EAAA,kBACAumB,YAAA,EACAF,UAAA,EACAvjB,QAAA,gBACA0jB,yBAAA,EACAC,sBAAA,EACAnX,iBAAA,KAEAr3B,SAAA8rB,cAAA,IAAAC,YAAA,2BACAC,OAAA/jB,KAAA6kC,2BAGA7kC,KAAAmjC,MAAAmC,WAGA,IArBAtlC,KAAAkjC,KAAAlvC,KAAA,4DAEA,KAyBG,CACHrC,IAAA,qBACAN,MAAA,WACA2O,KAAA6kC,wBAAA0B,uBAKAvmC,KAAA6kC,wBAAA0B,sBAAA,EAEAvmC,KAAA6kC,wBAAAyB,yBAEAtmC,KAAAkjC,KAAA1D,KAAA,yFAEAx/B,KAAA6kC,wBAAAjiB,QAAA,mCAAA5iB,KAAA6kC,wBAAAzV,iBACAr3B,SAAA8rB,cAAA,IAAAC,YAAA,2BACAC,OAAA/jB,KAAA6kC,6BAIA7kC,KAAAkjC,KAAA1D,KAAA,qGAEAx/B,KAAAwmC,oBAEAxmC,KAAAymC,yBAMG,CACH90C,IAAA,gBACAN,MAAA,WACA2O,KAAA4kC,aAAA9kB,EAAA,QAAAomB,SAAAlmC,KAAA6kC,wBAAAsB,WAIAnmC,KAAA6kC,wBAAA0B,uBAAAvmC,KAAA6kC,wBAAAyB,yBAGAtmC,KAAA0mC,OAAA,IAAAvE,EAAA,iBAAAwE,aAGA3mC,KAAA4mC,sBAQG,CACHj1C,IAAA,SACAN,MAAA,WACA,OAAA2O,KAAAylC,eAAA3lB,EAAA,UAAAylB,WAIAvlC,KAAA4kC,aAAA9kB,EAAA,QAAAslB,OAKAplC,KAAA0mC,OAAA,IAAAvE,EAAA,iBAAAwE,aAEA3mC,KAAA6mC,aAEA,MAUG,CACHl1C,IAAA,qBACAN,MAAA,SAAAwvB,EAAAD,GACA,GAAA5gB,KAAAylC,eAAA3lB,EAAA,UAAAylB,SACA,WAAAzlB,EAAA,kCAGA,GAAA9f,KAAA4kC,aAAA9kB,EAAA,QAAAslB,KACA,WAAAtlB,EAAA,gCAGA,IAAAgnB,EAAAzE,EAAA,eAAA0E,sBAAAnmB,EAAAC,GACAimB,EAAA5lB,OAAAlhB,KAAAkhB,OACA,IAAAmS,EAAAyT,EAAAH,YAWA,OAVA3mC,KAAA4kC,YAAA9kB,EAAA,QAAAsmB,YACApmC,KAAA8kC,mBAAA,IAAAhlB,EAAA,qBAAAe,EAAAf,EAAA,gBAAAknB,SAAApmB,EAAAyS,EAAA,6DAAA75B,OAAAonB,EAAA,MAEA5gB,KAAA0mC,MAAArT,IACArzB,KAAA8kC,mBAAAmC,KAAA,sCAAAztC,OAAAonB,EAAA,MAGA7oB,SAAA8rB,cAAA,IAAAC,YAAA,sBACAC,OAAA/jB,KAAA8kC,sBAEA,IAAAhlB,EAAA,4CAcG,CACHnuB,IAAA,uBACAN,MAAA,SAAAwvB,EAAA2c,EAAAC,EAAAC,EAAAC,GACA,IAAAllC,EAAA2rB,UAAA7uB,OAAA,QAAAD,IAAA8uB,UAAA,GAAAA,UAAA,MACAtD,EAAAsD,UAAA7uB,OAAA,QAAAD,IAAA8uB,UAAA,GAAAA,UAAA,KACA,GAAApkB,KAAAylC,eAAA3lB,EAAA,UAAAylB,SAAA,WAAAzlB,EAAA,kCACA,GAAA2d,EAAA,IAAAC,EAAA,GAAAC,GAAA,WAAA7d,EAAA,wEACA,GAAA9f,KAAA4kC,aAAA9kB,EAAA,QAAAslB,KAAA,WAAAtlB,EAAA,gCACA9f,KAAA4kC,YAAA9kB,EAAA,QAAAsmB,YACA,IAAAc,EAAA7E,EAAA,eAAA8E,wBAAAtmB,EAAA2c,EAAAC,EAAAC,EAAAC,EAAA7c,GACAomB,EAAAhmB,OAAAlhB,KAAAkhB,OACAgmB,EAAA/lB,QAAA1oB,EACA,IAAA46B,EAAA6T,EAAAP,YAUA,OATA3mC,KAAA8kC,mBAAA,IAAAhlB,EAAA,qBAAAe,EAAAf,EAAA,gBAAAknB,SAAAxJ,EAAAnK,EAAA,0DAAA75B,OAAA0tC,EAAAE,kBAEApnC,KAAA0mC,MAAArT,IACArzB,KAAA8kC,mBAAAmC,KAAA,sCAAAztC,OAAA0tC,EAAAE,kBAGArvC,SAAA8rB,cAAA,IAAAC,YAAA,sBACAC,OAAA/jB,KAAA8kC,sBAEA,IAAAhlB,EAAA,4CASG,CACHnuB,IAAA,mBACAN,MAAA,SAAAwvB,EAAAD,GACA,IAAA4b,EAAApY,UAAA7uB,OAAA,QAAAD,IAAA8uB,UAAA,IAAAA,UAAA,GAEA,GAAApkB,KAAAylC,eAAA3lB,EAAA,UAAAylB,SACA,WAAAzlB,EAAA,kCAGA,GAAA9f,KAAA4kC,aAAA9kB,EAAA,QAAAslB,KACA,WAAAtlB,EAAA,gCAGA,IAAAunB,EAAAhF,EAAA,eAAAiF,oBAAA1mB,EAAAC,EAAA2b,GACA6K,EAAAnmB,OAAAlhB,KAAAkhB,OACA,IAAAqmB,EAAAF,EAAAV,YAWA,OAVA3mC,KAAA4kC,YAAA9kB,EAAA,QAAAsmB,YACApmC,KAAA8kC,mBAAA,IAAAhlB,EAAA,qBAAAe,EAAAf,EAAA,gBAAA0nB,OAAA5mB,EAAA2mB,EAAA,4DAAA/tC,QAAAonB,EAAA,KAAA8Y,QAAA,KAEA15B,KAAA0mC,MAAAa,IACAvnC,KAAA8kC,mBAAAmC,KAAA,0BAAAztC,QAAAonB,EAAA,KAAA8Y,QAAA,KAGA3hC,SAAA8rB,cAAA,IAAAC,YAAA,sBACAC,OAAA/jB,KAAA8kC,sBAEA,IAAAhlB,EAAA,0CAMG,CACHnuB,IAAA,kBACAN,MAAA,SAAAo2C,GACA,GAAAznC,KAAA4kC,aAAA9kB,EAAA,QAAAsmB,aAAApmC,KAAA8kC,mBAAAqB,WAAAnmC,KAAA8kC,mBAAA4C,uBAGA,OAFA1nC,KAAAkjC,KAAA1D,KAAA,4DAEA,IAAA1f,EAAA,2EAGA9f,KAAA8kC,mBAAA6C,mBAAAF,EAAA,mDACAznC,KAAA8kC,mBAAA8C,yBAOA,OALA5nC,KAAA0mC,MAAAe,EAAA,IAAAjF,EAAA,gBAAAxiC,KAAA8kC,mBAAA/jB,UAAA4lB,YAAA,IAAAnE,EAAA,iBAAAxiC,KAAA8kC,mBAAA/jB,UAAA4lB,aAEA5uC,SAAA8rB,cAAA,IAAAC,YAAA,sBACAC,OAAA/jB,KAAA8kC,sBAEA,IAAAhlB,EAAA,qBAUG,CACHnuB,IAAA,iBACAN,MAAA,SAAA6rC,GACA,UAAAA,EAAA3nC,OACA,IAAAuqB,EAAA,+CAGA9f,KAAA4kC,aAAA9kB,EAAA,QAAAsmB,aAAApmC,KAAA8kC,mBAAAqB,WAAAnmC,KAAA8kC,mBAAA+C,sBACA7nC,KAAAkjC,KAAA1D,KAAA,0DAEA,IAAA1f,EAAA,sDAGA9f,KAAA8kC,mBAAAgD,aAAA,wBAAAtuC,OAAA0jC,IAEAl9B,KAAA0mC,MAAA,IAAAlE,EAAA,eAAAxiC,KAAA8kC,mBAAA/jB,SAAAmc,GAAAyJ,aAEA5uC,SAAA8rB,cAAA,IAAAC,YAAA,sBACAC,OAAA/jB,KAAA8kC,sBAEA,IAAAhlB,EAAA,0CAQG,CACHnuB,IAAA,oBACAN,MAAA,WACA,GAAA2O,KAAA4kC,aAAA9kB,EAAA,QAAAsmB,aAAApmC,KAAA8kC,mBAAAqB,SAGA,OAFAnmC,KAAAkjC,KAAA1D,KAAA,mEAEA,IAAA1f,EAAA,kFAIA,GAAA9f,KAAA8kC,mBAAAiD,YAAA,CACA,IAAAC,EAAA,IAAAxF,EAAA,yBACAxiC,KAAA8kC,mBAAAmD,WAAA,uCAEAjoC,KAAA0mC,MAAAsB,EAAArB,kBAGA3mC,KAAA8kC,mBAAApZ,OAAA,mEAMA,OAHA3zB,SAAA8rB,cAAA,IAAAC,YAAA,sBACAC,OAAA/jB,KAAA8kC,sBAEA,IAAAhlB,EAAA,qBASG,CACHnuB,IAAA,wBACAN,MAAA,SAAAwvB,EAAAD,GACA,IAAAE,EAAAsD,UAAA7uB,OAAA,QAAAD,IAAA8uB,UAAA,GAAAA,UAAA,KACA,GAAApkB,KAAAylC,eAAA3lB,EAAA,UAAAylB,SAAA,WAAAzlB,EAAA,kCACA,GAAA9f,KAAA4kC,aAAA9kB,EAAA,QAAAslB,KAAA,WAAAtlB,EAAA,gCACA,IAAAooB,EAAA,IAAAjG,EAAA,mBAAArhB,EAAAC,EAAAC,GACAonB,EAAAhnB,OAAAlhB,KAAAkhB,OACA,IAAAinB,EAAAD,EAAAvB,YAWA,OAVA3mC,KAAA4kC,YAAA9kB,EAAA,QAAAsmB,YACApmC,KAAA8kC,mBAAA,IAAAhlB,EAAA,qBAAAe,EAAAf,EAAA,gBAAAsoB,YAAAxnB,EAAAunB,EAAA,6DAAA3uC,QAAAonB,EAAA,KAAA8Y,QAAA,KAEA15B,KAAA0mC,MAAAyB,IACAnoC,KAAA8kC,mBAAAmC,KAAA,kCAAAztC,QAAAonB,EAAA,KAAA8Y,QAAA,KAGA3hC,SAAA8rB,cAAA,IAAAC,YAAA,sBACAC,OAAA/jB,KAAA8kC,sBAEA,IAAAhlB,EAAA,2CASG,CACHnuB,IAAA,yBACAN,MAAA,SAAAwvB,EAAAD,GACA,IAAAE,EAAAsD,UAAA7uB,OAAA,QAAAD,IAAA8uB,UAAA,GAAAA,UAAA,KACA,GAAApkB,KAAAylC,eAAA3lB,EAAA,UAAAylB,SAAA,WAAAzlB,EAAA,kCACA,GAAA9f,KAAA4kC,aAAA9kB,EAAA,QAAAslB,KAAA,WAAAtlB,EAAA,gCACA,IAAAuoB,EAAA,IAAA7F,EAAA,oBAAA5hB,EAAAC,EAAAC,GACAunB,EAAAnnB,OAAAlhB,KAAAkhB,OACA,IAAAinB,EAAAE,EAAA1B,YAWA,OAVA3mC,KAAA4kC,YAAA9kB,EAAA,QAAAsmB,YACApmC,KAAA8kC,mBAAA,IAAAhlB,EAAA,qBAAAe,EAAAf,EAAA,gBAAAwoB,KAAA1nB,EAAAunB,EAAA,0DAAA3uC,QAAAonB,EAAA,KAAA8Y,QAAA,KAEA15B,KAAA0mC,MAAAyB,IACAnoC,KAAA8kC,mBAAAmC,KAAA,4BAAAztC,QAAAonB,EAAA,KAAA8Y,QAAA,KAGA3hC,SAAA8rB,cAAA,IAAAC,YAAA,sBACAC,OAAA/jB,KAAA8kC,sBAEA,IAAAhlB,EAAA,wCAMG,CACHnuB,IAAA,mBACAN,MAAA,SAAAwvB,GACA,GAAA7gB,KAAAylC,eAAA3lB,EAAA,UAAAylB,SACA,WAAAzlB,EAAA,kCAGA,GAAA9f,KAAA4kC,aAAA9kB,EAAA,QAAAslB,KACA,WAAAtlB,EAAA,gCAGA,IAAAyoB,EAAA,IAAArG,EAAA,cAAAniB,EAAA,gBAAAyB,GAAA,WAAAmlB,YAWA,OAVA3mC,KAAA4kC,YAAA9kB,EAAA,QAAAsmB,YACApmC,KAAA8kC,mBAAA,IAAAhlB,EAAA,qBAAAe,EAAAf,EAAA,gBAAA0oB,OAAA,EAAAD,EAAA,0DAEAvoC,KAAA0mC,MAAA6B,IACAvoC,KAAA8kC,mBAAAmC,KAAA,2BAGAlvC,SAAA8rB,cAAA,IAAAC,YAAA,sBACAC,OAAA/jB,KAAA8kC,sBAEA,IAAAhlB,EAAA,0CAIG,CACHnuB,IAAA,4BACAN,MAAA,SAAAwvB,GACA,GAAA7gB,KAAAylC,eAAA3lB,EAAA,UAAAylB,SAAA,WAAAzlB,EAAA,kCACA,GAAA9f,KAAA4kC,aAAA9kB,EAAA,QAAAslB,KAAA,WAAAtlB,EAAA,gCACA,IAAA2oB,EAAA,IAAAvG,EAAA,yBAAAniB,EAAA,gBAAAyB,GAAA,WAAAmlB,YAWA,OAVA3mC,KAAA4kC,YAAA9kB,EAAA,QAAAsmB,YACApmC,KAAA8kC,mBAAA,IAAAhlB,EAAA,qBAAAe,EAAAf,EAAA,gBAAA4oB,kBAAA,EAAAD,EAAA,8DAEAzoC,KAAA0mC,MAAA+B,IACAzoC,KAAA8kC,mBAAAmC,KAAA,8CAGAlvC,SAAA8rB,cAAA,IAAAC,YAAA,sBACAC,OAAA/jB,KAAA8kC,sBAEA,IAAAhlB,EAAA,0CAOG,CACHnuB,IAAA,oBACAN,MAAA,WACA,GAAA2O,KAAAylC,eAAA3lB,EAAA,UAAAylB,SACA,WAAAzlB,EAAA,kCAGA,GAAA9f,KAAA4kC,aAAA9kB,EAAA,QAAAslB,KACA,WAAAtlB,EAAA,gCAGA,IAAA6oB,GAAA,IAAAnG,EAAA,2BAAAmE,YACA3mC,KAAA4kC,YAAA9kB,EAAA,QAAAsmB,YACA,IAAAvlB,EAAA8nB,EAAAnnB,GAWA,OATAxhB,KAAA8kC,mBAAA,IAAAhlB,EAAA,qBAAAe,EAAAf,EAAA,gBAAA8oB,mBAAA,EAAAD,EAAA,yEAEA3oC,KAAA0mC,MAAAiC,IACA3oC,KAAA8kC,mBAAAmC,KAAA,sCAGAlvC,SAAA8rB,cAAA,IAAAC,YAAA,sBACAC,OAAA/jB,KAAA8kC,sBAEA,IAAAhlB,EAAA,uCAYG,CACHnuB,IAAA,mBACAN,MAAA,SAAAwvB,EAAAgoB,GACA,GAAA7oC,KAAAylC,eAAA3lB,EAAA,UAAAylB,SAAA,WAAAzlB,EAAA,kCACA,GAAA9f,KAAA4kC,aAAA9kB,EAAA,QAAAslB,KAAA,WAAAtlB,EAAA,gCACA9f,KAAA4kC,YAAA9kB,EAAA,QAAAsmB,YACA,IAAAuC,GAAA,IAAAnG,EAAA,2BAAAmE,YAUA,OATA3mC,KAAA8kC,mBAAA,IAAAhlB,EAAA,qBAAAe,EAAAgoB,EAAA,EAAAF,EAAA,sDAEA3oC,KAAA0mC,MAAAiC,IACA3oC,KAAA8kC,mBAAAmC,KAAA,kCAGAlvC,SAAA8rB,cAAA,IAAAC,YAAA,sBACAC,OAAA/jB,KAAA8kC,sBAEA,IAAAhlB,EAAA,4CAWG,CACHnuB,IAAA,WACAN,MAAA,SAAAy3C,EAAAjoB,GAGA,KAAAuD,UAAA7uB,QAAA,IAAA6uB,UAAA7uB,OAAA,GACA,OAAA6uB,UAAA7uB,QAAA,IAAA6uB,UAAA7uB,OAAA,GAGA,OAFAyK,KAAAkjC,KAAA1D,KAAA,sEAEAx/B,KAAA+oC,SAAAD,EAAA1kB,UAAA7uB,QAAA,OAAAD,EAAA8uB,UAAA,IAEA,UAAAxtB,MAAA,iHAMA,OAFAoJ,KAAAkjC,KAAA1D,KAAA,wBAAAhmC,OAAAqnB,EAAA,MAAArnB,OAAAsvC,EAAA5M,iBAEArb,GAAAioB,EAAA5M,cACArc,EAAA,aAAA4L,QAGAqd,EAAA/mB,oBAEG,CACHpwB,IAAA,eACAN,MAAA,SAAAM,EAAA4xB,GACAvjB,KAAA0mC,MAAA,IAAAhE,EAAA,gBAAA/wC,EAAA4xB,GAAAylB,eAEG,CACHr3C,IAAA,oBACAN,MAAA,WACA2O,KAAA0mC,OAAA,IAAA/D,EAAA,uBAAAgE,eAQG,CACHh1C,IAAA,oBACAN,MAAA,SAAAb,GACAwP,KAAA6kC,wBAAAjiB,QAAA,yBACA7qB,SAAA8rB,cAAA,IAAAC,YAAA,2BACAC,OAAA/jB,KAAA6kC,2BAGA,IACAtsC,GADA,IAAAqpC,EAAA,eACAqH,8BAAA,IAAA9G,EAAA,WAAA3xC,IACAwP,KAAA+iC,SAAAxqC,EAAAwzB,QAEA/rB,KAAAyjC,iBAAA1X,QAAA/rB,KAAA+iC,SAEA/iC,KAAA0mC,MAAAnuC,EAAAywB,YAAA2d,eAOG,CACHh1C,IAAA,kBACAN,MAAA,SAAAb,GACA,IAAA04C,EAAA,IAAA/G,EAAA,SAAA3xC,GACAwP,KAAA6kC,wBAAAzV,iBAAA8Z,EAAA9Z,iBACApvB,KAAA6kC,wBAAAyB,yBAAA,EACAtmC,KAAA6kC,wBAAA0B,sBAAA,EACAvmC,KAAA6kC,wBAAAjiB,QAAA,6DACA7qB,SAAA8rB,cAAA,IAAAC,YAAA,2BACAC,OAAA/jB,KAAA6kC,6BAOG,CACHlzC,IAAA,sBACAN,MAAA,SAAAb,GACA,IAAA24C,EAAA,IAAAhH,EAAA,aAAA3xC,GACAwP,KAAA6kC,wBAAAyB,yBAAA,EAEA6C,EAAArnB,SACA9hB,KAAA6kC,wBAAA0B,sBAEAvmC,KAAAkjC,KAAA1D,KAAA,gFAEAx/B,KAAA6kC,wBAAAjiB,QAAA,4DACA7qB,SAAA8rB,cAAA,IAAAC,YAAA,2BACAC,OAAA/jB,KAAA6kC,6BAGA7kC,KAAAkjC,KAAA1D,KAAA,oGAEAx/B,KAAAwmC,qBAKAxmC,KAAAopC,sBAEAppC,KAAA4mC,qBAGG,CACHj1C,IAAA,wBACAN,MAAA,SAAAb,GACAwP,KAAAkjC,KAAA1D,KAAA,4DAEAx/B,KAAA6mC,cAEG,CACHl1C,IAAA,oBACAN,MAAA,WACA2O,KAAA6kC,wBAAAwB,YAAA,EACArmC,KAAA6kC,wBAAAsB,UAAA,EACAnmC,KAAA6kC,wBAAAjiB,QAAA,sBACA5iB,KAAAylC,cAAA3lB,EAAA,UAAAgmB,gBACA/tC,SAAA8rB,cAAA,IAAAC,YAAA,kBACAC,OAAA/jB,KAAA+iC,YAEAhrC,SAAA8rB,cAAA,IAAAC,YAAA,2BACAC,OAAA/jB,KAAA6kC,6BAGG,CACHlzC,IAAA,mBACAN,MAAA,WACA2O,KAAA+iC,SAAA,KACA/iC,KAAAyjC,iBAAA1X,QAAA,KAEA/rB,KAAAmjC,MAAA3e,aAEAxkB,KAAAylC,cAAA3lB,EAAA,UAAAylB,SACAvlC,KAAA6kC,wBAAAjiB,QAAA,iBACA5iB,KAAA6kC,wBAAAsB,UAAA,EACAnmC,KAAA6kC,wBAAAwB,YAAA,EACArmC,KAAA6kC,wBAAA0B,sBAAA,EACAxuC,SAAA8rB,cAAA,IAAAC,YAAA,2BACAC,OAAA/jB,KAAA6kC,6BAGG,CACHlzC,IAAA,YACAN,MAAA,WACA2O,KAAAylC,cAAA3lB,EAAA,UAAAylB,SAEAvlC,KAAAmjC,MAAA3e,aAEAxkB,KAAA+iC,SAAA,KACA/iC,KAAAyjC,iBAAA1X,QAAA,KACAh0B,SAAA8rB,cAAA,IAAAC,YAAA,kBACAC,OAAA/jB,KAAA+iC,cAOG,CACHpxC,IAAA,2BACAN,MAAA,SAAAb,GAEA,IAAA64C,EAAA/G,EAAA,iBAAAgH,kBAAA94C,EAAAwP,KAAA+iC,UACA/iC,KAAA+iC,SAAAsG,EAAAjiB,WAEApnB,KAAAyjC,iBAAA1X,QAAA/rB,KAAA+iC,SAEA/iC,KAAA0mC,MAAA2C,EAAAliB,wBAGApvB,SAAA8rB,cAAA,IAAAC,YAAA,kBACAC,OAAA/jB,KAAA+iC,cASG,CACHpxC,IAAA,2BACAN,MAAA,SAAAb,GACA,IAAA+4C,EAAA/4C,EAAAmxB,KAAAP,WAEAphB,KAAA4kC,aAAA9kB,EAAA,QAAAsmB,aAAApmC,KAAA8kC,mBAAAqB,WAAAnmC,KAAA8kC,mBAAA/jB,UAAAwoB,EACAvpC,KAAAkjC,KAAA1D,KAAA,mFAAAhmC,OAAA+vC,KAKAvpC,KAAA8kC,mBAAA9a,kBAAA,IAAAwY,EAAA,kBAAAhyC,GAAA,oCACAuH,SAAA8rB,cAAA,IAAAC,YAAA,sBACAC,OAAA/jB,KAAA8kC,yBAOG,CACHnzC,IAAA,0BACAN,MAAA,SAAAb,GACA,IAAA+4C,EAAA/4C,EAAAmxB,KAAAP,WAEA,GAAAphB,KAAA4kC,aAAA9kB,EAAA,QAAAsmB,aAAApmC,KAAA8kC,mBAAAqB,WAAAnmC,KAAA8kC,mBAAA/jB,UAAAwoB,EACArG,KAAA1D,KAAA,mFAAAhmC,OAAA+vC,QADA,CAMA,IAAAC,EAAA,IAAAhH,EAAA,qBAAAhyC,GACAqT,EAAA,4BAAArK,OAAAgwC,EAAAC,iBAAA,2BAAAjwC,OAAAgwC,EAAAE,iBACA1pC,KAAA8kC,mBAAAxL,qBAAAkQ,EAAA3lC,GACA9L,SAAA8rB,cAAA,IAAAC,YAAA,sBACAC,OAAA/jB,KAAA8kC,yBAOG,CACHnzC,IAAA,0BACAN,MAAA,SAAAb,GACA,IAAA+4C,EAAA/4C,EAAAmxB,KAAAP,WAEAphB,KAAA4kC,aAAA9kB,EAAA,QAAAsmB,aAAApmC,KAAA8kC,mBAAAqB,WAAAnmC,KAAA8kC,mBAAA/jB,UAAAwoB,EACAvpC,KAAAkjC,KAAA1D,KAAA,kFAAAhmC,OAAA+vC,EAAA,OAMAvpC,KAAA8kC,mBAAA6E,UAAAn5C,EAAAuxB,kBAAAvxB,EAAA,+BAEAuH,SAAA8rB,cAAA,IAAAC,YAAA,sBACAC,OAAA/jB,KAAA8kC,yBAOG,CACHnzC,IAAA,6BACAN,MAAA,SAAAb,GACA,IAAA+4C,EAAA/4C,EAAAmxB,KAAAP,WAEAphB,KAAA4kC,aAAA9kB,EAAA,QAAAsmB,aAAApmC,KAAA8kC,mBAAAqB,WAAAnmC,KAAA8kC,mBAAA/jB,UAAAwoB,EACAvpC,KAAAkjC,KAAA1D,KAAA,iFAAAhmC,OAAA+vC,KAMAvpC,KAAA8kC,mBAAA6E,UAAAn5C,EAAAuxB,kBAAAvxB,EAAA,8BAEAuH,SAAA8rB,cAAA,IAAAC,YAAA,sBACAC,OAAA/jB,KAAA8kC,yBAOG,CACHnzC,IAAA,8BACAN,MAAA,SAAAb,GACA,IAAA+4C,EAAA/4C,EAAAmxB,KAAAP,WAEAphB,KAAA4kC,aAAA9kB,EAAA,QAAAsmB,aAAApmC,KAAA8kC,mBAAAqB,WAAAnmC,KAAA8kC,mBAAA/jB,UAAAwoB,EACAvpC,KAAAkjC,KAAA1D,KAAA,8EAAAhmC,OAAA+vC,KAMAvpC,KAAA8kC,mBAAA6E,UAAAn5C,EAAAuxB,kBAAAvxB,EAAA,2BAEAuH,SAAA8rB,cAAA,IAAAC,YAAA,sBACAC,OAAA/jB,KAAA8kC,yBAOG,CACHnzC,IAAA,wBACAN,MAAA,SAAAb,GACA,IAAA+4C,EAAA/4C,EAAAmxB,KAAAP,WAEAphB,KAAA4kC,aAAA9kB,EAAA,QAAAsmB,aAAApmC,KAAA8kC,mBAAAqB,UAAAnmC,KAAA8kC,mBAAA/jB,UAAAwoB,EACAvpC,KAAAkjC,KAAA1D,KAAA,qFAAAhmC,OAAA+vC,KAMAvpC,KAAA8kC,mBAAA6E,UAAAn5C,EAAAuxB,kBAAAvxB,EAAA,6BAEAuH,SAAA8rB,cAAA,IAAAC,YAAA,sBACAC,OAAA/jB,KAAA8kC,yBAOG,CACHnzC,IAAA,uBACAN,MAAA,SAAAb,GACAwP,KAAA4kC,aAAA9kB,EAAA,QAAAsmB,aAAApmC,KAAA8kC,mBAAAqB,SACAnmC,KAAAkjC,KAAA1D,KAAA,2DAAAhmC,OAAAhJ,EAAAo8B,iBAMA5sB,KAAA8kC,mBAAA6E,UAAAn5C,EAAAuxB,kBAAAvxB,EAAA,6BAEAuH,SAAA8rB,cAAA,IAAAC,YAAA,sBACAC,OAAA/jB,KAAA8kC,yBAOG,CACHnzC,IAAA,mCACAN,MAAA,SAAAb,GACAwP,KAAA4kC,aAAA9kB,EAAA,QAAAsmB,aAAApmC,KAAA8kC,mBAAAqB,SACAnmC,KAAAkjC,KAAA1D,KAAA,uEAAAhmC,OAAAhJ,EAAAo8B,iBAMA5sB,KAAA8kC,mBAAA6E,UAAAn5C,EAAAuxB,kBAAAvxB,EAAA,6BAEAuH,SAAA8rB,cAAA,IAAAC,YAAA,sBACAC,OAAA/jB,KAAA8kC,yBAOG,CACHnzC,IAAA,oBACAN,MAAA,SAAAb,GACAwP,KAAA4kC,aAAA9kB,EAAA,QAAAsmB,cAAApmC,KAAA8kC,mBAAAqB,UAAAnmC,KAAA8kC,mBAAA8E,oBAAA,kBAAAp5C,EAAAurC,YAEA/7B,KAAAkjC,KAAA1D,KAAA,mGAEAx/B,KAAA6pC,2BAEA7pC,KAAAkjC,KAAA1D,KAAA,2DAAAhmC,OAAAhJ,EAAAo8B,kBAOG,CACHj7B,IAAA,oCACAN,MAAA,SAAAb,GACA,IAAAs5C,EAAA9pC,KAAA8kC,mBAEA,GAAA9kC,KAAA4kC,aAAA9kB,EAAA,QAAAsmB,cAAA0D,EAAA3D,SAAA,CAOAnmC,KAAAkjC,KAAA1D,KAAA,0BAEAsK,EAAAC,iBACA,IAAAC,EAAA,IAAAxH,EAAA,2BAAAhyC,GAGA,GAFAs5C,EAAAG,oBAAAD,EAAA9N,cAEA8N,EAAAE,2BA+BA,GAAAJ,EAAAK,MAAArqB,EAAA,gBAAA8oB,mBAEA5oC,KAAAkjC,KAAA1D,KAAA,6DAEAwK,EAAAI,uCACAN,EAAAH,UAAAn5C,EAAAuxB,kBAAAvxB,EAAA,kCACS,CAET,IAAA65C,EAAArqC,KAAA+oC,SAAAiB,EAAAF,EAAA/oB,UAEAspB,GAAAxqB,EAAA,aAAA4L,SAEAzrB,KAAAkjC,KAAA1D,KAAA,8BAEAsK,EAAAQ,iBAAA,0DAGAN,EAAAI,uCACAN,EAAAH,UAAAU,EAAA75C,EAAA,4BAhDA,GAAAw5C,EAAAO,kBAAAT,EAAA/oB,UAEA,GAAAipB,EAAAQ,kCAAAV,EAAApC,uBACA1nC,KAAAkjC,KAAA1D,KAAA,4LAEAx/B,KAAA8kC,mBAAA9a,kBAAA,IAAAwY,EAAA,kBAAAsH,EAAA/oB,SAAAvwB,EAAAgxB,GAAA,0IACW,KAAAwoB,EAAAS,wBAAAX,EAAAjC,qBAQX,YAHA7nC,KAAAkjC,KAAA1D,KAAA,gDAJAx/B,KAAAkjC,KAAA1D,KAAA,4LAEAx/B,KAAA8kC,mBAAAxL,qBAAA,IAAAkJ,EAAA,qBAAAsH,EAAA/oB,SAAAvwB,EAAAgxB,GAAA,4GAOS,IAAAwoB,EAAAU,wBAMT,YAHA1qC,KAAAkjC,KAAA1D,KAAA,iGAMAx/B,KAAAkjC,KAAA1D,KAAA,0EAAAhmC,OAAAwwC,EAAA9N,cAAA,WAAA1iC,OAAAhJ,EAAAurC,aAEA+N,EAAAQ,iBAAA,uEA0BAvyC,SAAA8rB,cAAA,IAAAC,YAAA,sBACAC,OAAA+lB,QAIG,CACHn4C,IAAA,mCACAN,MAAA,SAAAb,GACA,IAAA+4C,EAAA/4C,EAAAmxB,KAAAP,WAEA,GAAAphB,KAAA4kC,aAAA9kB,EAAA,QAAAsmB,aAAApmC,KAAA8kC,mBAAAqB,WAAAnmC,KAAA8kC,mBAAA/jB,UAAAwoB,EACAvpC,KAAAkjC,KAAA1D,KAAA,gFAAAhmC,OAAA+vC,QADA,CAMA,IAAAO,EAAA9pC,KAAA8kC,mBACA6F,EAAA,IAAAnI,EAAA,0BAAAhyC,GACAm6C,EAAA7oB,UAEA9hB,KAAAkjC,KAAAlvC,KAAA,wCAAA22C,EAAAC,iBAAA,YAAAD,EAAAE,kBAEAf,EAAAgB,aAAA,iCAAAH,EAAAE,iBAAA,mBACA9yC,SAAA8rB,cAAA,IAAAC,YAAA,sBACAC,OAAA+lB,SAGG,CACHn4C,IAAA,4BACAN,MAAA,SAAAb,GACA,IAAAqvC,EAAA,IAAAuC,EAAA,mBAAA5xC,GAEAqvC,EAAAkL,aACA/qC,KAAA4jC,aAAA,EAEA5jC,KAAAkjC,KAAA1D,KAAA,gCAEAx/B,KAAAkjC,KAAAlvC,KAAA,mCAAA6rC,EAAAmL,iBAAA,YAAAnL,EAAAoL,oBAGG,CACHt5C,IAAA,oCACAN,MAAA,WACA,IAAA8xB,EAAAnjB,KAEAkrC,GAAA,EACApB,EAAA9pC,KAAA8kC,mBAEA,GAAA9kC,KAAA4kC,aAAA9kB,EAAA,QAAAsmB,cAAA0D,EAAA3D,SAAA,CACA,IAAAgF,EAAArB,EAEAqB,EAAAvB,oBAAA3c,KAAAD,MAAAme,EAAAC,kBAAAprC,KAAAwkC,qBAEAxkC,KAAAkjC,KAAA1D,KAAA,oDAEAsK,EAAAQ,iBAAA,oEACAY,GAAA,GACSC,EAAApD,aAAA9a,KAAAD,MAAAme,EAAAE,qBAAArrC,KAAAukC,sBAETvkC,KAAAkjC,KAAA1D,KAAA,qDAAAhmC,OAAA2xC,EAAAE,qBAAA,QAEAvB,EAAAwB,aAEAtrC,KAAA6pC,2BAIAqB,GACAnzC,SAAA8rB,cAAA,IAAAC,YAAA,sBACAC,OAAA/jB,KAAA8kC,sBAIAvgB,WAAA,WACA,OAAApB,EAAAgiB,qCACOnlC,KAAAskC,4BAEJ,CACH3yC,IAAA,mBACAN,MAAA,SAAAb,GACA,UAAAoG,MAAA,sEAEG,CACHjF,IAAA,yBACAN,MAAA,SAAAb,GACA,UAAAoG,MAAA,sEAEG,CACHjF,IAAA,sBACAN,MAAA,SAAAb,GACA,UAAAoG,MAAA,sEAEG,CACHjF,IAAA,0BACAN,MAAA,SAAAb,GACAwP,KAAAqrB,iBAAA76B,KAEG,CACHmB,IAAA,gCACAN,MAAA,SAAAb,GACAwP,KAAAurB,uBAAA/6B,KAEG,CACHmB,IAAA,6BACAN,MAAA,SAAAb,GACAwP,KAAAwrB,oBAAAh7B,KAIG,CACHmB,IAAA,aACAN,MAAA,WACA,IAAA6yB,EAAAlkB,KAGAA,KAAAmjC,MAAA,IAAAtB,EAAA,YAEA7hC,KAAAurC,iBAAAvrC,KAAAgjC,0BACAhjC,KAAAkjC,KAAA1D,KAAA,+BAEAx/B,KAAAijC,eAAAjjC,KAAAijC,eAAAj9B,QAAA,mBAGAhG,KAAAmjC,MAAAtgB,QAAA7iB,KAAAijC,eAEAlrC,SAAAyzC,iBAAA,mCAAAp3C,GACA,OAAA8vB,EAAAunB,8BAAAr3C,EAAA2vB,UAEAhsB,SAAAyzC,iBAAA,2BAAAp3C,GACA,OAAA8vB,EAAAwnB,sBAAAt3C,EAAA2vB,UAEAhsB,SAAAyzC,iBAAA,yBAAAp3C,GACA,OAAA8vB,EAAAynB,mBAAAv3C,EAAA2vB,YAQG,CACHpyB,IAAA,gCACAN,MAAA,SAAA85C,GACA,IAAAS,EAAA5rC,KAEA,OAAAmrC,EAAAjpB,iBACA,KAAA2f,EAAA,gBAAArf,WACAxiB,KAAAkjC,KAAA1D,KAAA,mCAAAhmC,OAAAwG,KAAAijC,eAAA,QAEA,MAEA,KAAApB,EAAA,gBAAApf,UAGA,GAFAziB,KAAAgkC,yCAAA,EAEAhkC,KAAA4kC,aAAA9kB,EAAA,QAAAomB,SAAAlmC,KAAAylC,eAAA3lB,EAAA,UAAAylB,SAAA,CACAvlC,KAAA6kC,wBAAAjiB,QAAA,wBACA7qB,SAAA8rB,cAAA,IAAAC,YAAA,2BACAC,OAAA/jB,KAAA6kC,2BAEA,IAAAgH,EAAAjK,EAAA,cAAAkK,iBAEA9rC,KAAA0mC,MAAAmF,EAAAlF,kBAEA3mC,KAAAkjC,KAAA1D,KAAA,oBAAAhmC,OAAAwG,KAAAijC,eAAA,QAEAjjC,KAAAyjC,iBAAA1X,QAAA/rB,KAAA+iC,SAEA/iC,KAAAopC,qBAGA,MAEA,KAAAvH,EAAA,gBAAAtf,aAUA,GARAviB,KAAAkjC,KAAA1D,KAAA,yBAAAhmC,OAAAwG,KAAAijC,eAAA,QAEAjjC,KAAA6jC,oBAAA,KACA7jC,KAAA8jC,wBAAA,KACA9jC,KAAA+jC,kBAAA,EAEA/jC,KAAA+rC,oBAEA/rC,KAAAylC,eAAA3lB,EAAA,UAAAylB,SAAA,CASA,GARAvlC,KAAAylC,cAAA3lB,EAAA,UAAAulB,iBAEArlC,KAAA4kC,aAAA9kB,EAAA,QAAAsmB,aAAApmC,KAAA8kC,mBAAAqB,UAGAnmC,KAAAkjC,KAAA1D,KAAA,qDAGA,MAAAx/B,KAAAmjC,MAAA,OAEAnjC,KAAAwjC,gCACAxjC,KAAAgkC,0CAAAhkC,KAAA2kC,sCACA3kC,KAAA4lC,4BAEA5lC,KAAAgkC,yCAAA,GAEAhkC,KAAAgkC,0CAAA,GAIAhkC,KAAAkjC,KAAA1D,KAAA,4BAAAhmC,OAAAwG,KAAAykC,wBAAA,UAEAlgB,WAAA,WACAqnB,EAAAnG,eAAA3lB,EAAA,UAAAylB,UAEAqG,EAAAzI,OACAyI,EAAAzI,MAAAmC,WAGatlC,KAAAykC,8BACFzkC,KAAA4kC,aAAA9kB,EAAA,QAAAomB,UACXlmC,KAAAkjC,KAAA1D,KAAA,mCAEAx/B,KAAA6kC,wBAAAjiB,QAAA,4DAEA5iB,KAAA4mC,mBAEA7uC,SAAA8rB,cAAA,IAAAC,YAAA,2BACAC,OAAA/jB,KAAA6kC,4BAIA,MAEA,QACA,UAAAjuC,MAAA,kBAAAu0C,MAQG,CACHx5C,IAAA,qBACAN,MAAA,WACA,IAAA26C,EAAAhsC,KAEAA,KAAA+rC,oBAEA/rC,KAAAqkC,oBAAA4H,YAAA,WACA,OAAAD,EAAAE,iBACOlsC,KAAAmkC,gBAEPnkC,KAAAksC,kBAEG,CACHv6C,IAAA,gBACAN,MAAA,WACA,IAAA86C,EAAAnsC,KAGAA,KAAAmjC,MAAA1gB,WAAA,MAAAziB,KAAA+iC,UACA/iC,KAAAosC,UAEA7nB,WAAA,WACA,SAAA4nB,EAAAtI,sBAAA,MAAAsI,EAAArI,yBAAAqI,EAAArI,wBAAAtiB,IAAA2qB,EAAAtI,oBAAAriB,IAAA,CAKA,GAJA2qB,EAAApI,mBAAA,EAEAoI,EAAAjJ,KAAA1D,KAAA,iDAAAhmC,OAAA2yC,EAAApI,kBAAA,KAAAvqC,OAAA2yC,EAAAzH,yBAAA,MAEAyH,EAAApI,kBAAAoI,EAAAzH,yBAKA,OAJAyH,EAAAjJ,KAAA1D,KAAA,+BAEA2M,EAAA/C,qBAQA+C,EAAAjJ,KAAA1D,KAAA,oBAEA2M,EAAAhJ,MAAA3e,aAEA2nB,EAAAJ,oBAGAI,EAAApI,kBAAA,GACS/jC,KAAAkkC,gBAETlkC,KAAA+rC,oBAEA/rC,KAAAkjC,KAAA1D,KAAA,kEAOG,CACH7tC,IAAA,qBACAN,MAAA,WACA2O,KAAAkjC,KAAA1D,KAAA,yBAGAx/B,KAAAylC,cAAA3lB,EAAA,UAAAgmB,gBAEA9lC,KAAA4kC,aAAA9kB,EAAA,QAAAsmB,aAAApmC,KAAA8kC,mBAAAqB,UAiBAnmC,KAAA4jC,aACA5jC,KAAAqsC,kBAIArsC,KAAAglC,SACAhlC,KAAAglC,QAAAsH,wBAtBAtsC,KAAA8kC,mBAAAiD,aAGA/nC,KAAA8kC,mBAAAwG,aAEAtrC,KAAA6pC,4BAGA7pC,KAAA0mC,MAAA1mC,KAAA8kC,mBAAAyH,SAEAvsC,KAAA8kC,mBAAAmC,KAAA,0BACAlvC,SAAA8rB,cAAA,IAAAC,YAAA,sBACAC,OAAA/jB,KAAA8kC,yBAcG,CACHnzC,IAAA,kBACAN,MAAA,WACA,IAAAm7C,EAAA,IAAApK,EAAA,kBAAApiC,KAAA2jC,YAAA3jC,KAAA0jC,aAAA,KAAA/B,EAAAS,EAAA,WAAAqK,oBAEAzsC,KAAA0mC,MAAA8F,EAAAxD,eAKG,CACHr3C,IAAA,oBACAN,MAAA,WACA2O,KAAAqkC,sBAEAqI,cAAA1sC,KAAAqkC,qBACArkC,KAAAqkC,oBAAA,QAIG,CACH1yC,IAAA,UACAN,MAAA,WACA,IAAAmkC,EAAA+M,EAAA,WAAAoK,sBACA3sC,KAAA6jC,oBAAArO,EAEAx1B,KAAA0mC,MAAAlR,GAEAx1B,KAAA4sC,wBAAA3f,KAAAD,QAMG,CACHr7B,IAAA,sBACAN,MAAA,SAAAb,GAEAwP,KAAAyjC,iBAAAzX,gBAAAx7B,EAAAq8C,qBAEA,MAAA7sC,KAAA8jC,0BAEA9jC,KAAAylC,eAAA3lB,EAAA,UAAAylB,UACAvlC,KAAAkjC,KAAA1D,KAAA,iDAEAx/B,KAAAymC,sBAEAzmC,KAAAkjC,KAAA1D,KAAA,oEAIAx/B,KAAA8jC,wBAAAtzC,EAEAwP,KAAAkjC,KAAA4J,MAAA,eAAAtzC,OAAAyzB,KAAAD,MAAAhtB,KAAA4sC,4BAMG,CACHj7C,IAAA,sBACAN,MAAA,SAAAb,GACA,IAAAu8C,EAAAxK,EAAA,WAAAyK,sBAAAx8C,GAEAwP,KAAA0mC,MAAAqG,KAKG,CACHp7C,IAAA,0BACAN,MAAA,WACA,IAAA47C,EAAA,IAAAzK,EAAA,0BAEAxiC,KAAA0mC,MAAAuG,EAAAtG,eAMG,CACHh1C,IAAA,wBACAN,MAAA,SAAA67C,GAEA,IAAA18C,EAAAqvB,EAAA,QAAAstB,SAAAD,EAAAtqB,QAAA5iB,KAAA+iC,UAIA,GAFA/iC,KAAAkjC,KAAA1D,KAAA,YAAAhvC,EAAAo8B,eAEAoV,EAAA,WAAAoL,eAAA58C,EAAAg8B,WACAxsB,KAAAilC,YAAAoI,sBAAA78C,QAMA,OAAAA,EAAAg8B,WACA,KAAA3M,EAAA,OAAAkJ,WACA/oB,KAAAstC,kBAAA98C,GAEA,MAEA,KAAAqvB,EAAA,OAAAoJ,SACAjpB,KAAAutC,gBAAA/8C,GAEA,MAEA,KAAAqvB,EAAA,OAAAqJ,aACAlpB,KAAAwtC,oBAAAh9C,GAEA,MAEA,KAAAqvB,EAAA,OAAAsJ,eACAnpB,KAAAytC,sBAAAj9C,GAEA,MAEA,KAAAqvB,EAAA,OAAA4J,iBACAzpB,KAAA0tC,wBAAAl9C,GAEA,MAEA,KAAAqvB,EAAA,OAAAkK,eACA/pB,KAAA2tC,sBAAAn9C,GAEA,MAEA,KAAAqvB,EAAA,OAAAD,oBACA5f,KAAA4tC,2BAAAp9C,GAEA,MAEA,KAAAqvB,EAAA,OAAAyK,qBACAtqB,KAAA6tC,4BAAAr9C,GAEA,MAEA,KAAAqvB,EAAA,OAAAmK,kBACAhqB,KAAA8tC,yBAAAt9C,GAEA,MAEA,KAAAqvB,EAAA,OAAAsK,iBACAnqB,KAAA+tC,wBAAAv9C,GAEA,MAEA,KAAAqvB,EAAA,OAAAgK,2BACA7pB,KAAAguC,kCAAAx9C,GAEA,MAEA,KAAAqvB,EAAA,OAAA2K,eACAxqB,KAAAiuC,qBAAAz9C,GACA,MAEA,KAAAqvB,EAAA,OAAA6K,0BACA1qB,KAAAkuC,iCAAA19C,GAEA,MAEA,KAAAqvB,EAAA,OAAAyJ,KACAtpB,KAAAmuC,oBAAA39C,GAEA,MAEA,KAAAqvB,EAAA,OAAA0J,KACAvpB,KAAAouC,oBAAA59C,GAEA,MAEA,KAAAqvB,EAAA,OAAAgL,eACA7qB,KAAAquC,yBAAA79C,GAEA,MAEA,KAAAqvB,EAAA,OAAA8J,0BACA3pB,KAAAsuC,iCAAA99C,GAEA,MAEA,KAAAqvB,EAAA,OAAA+K,mBACA5qB,KAAAuuC,0BAAA/9C,GAEA,MAEA,KAAAqvB,EAAA,OAAAkL,yBACA,SAAA/qB,KAAAglC,QAAA,CACAhlC,KAAA0mC,MAAA3E,EAAA,iBAAAyM,sBAAAzuB,EAAA,gBAAAyB,GAAA,aAEA,MAGAxhB,KAAAglC,QAAAyJ,sBAAAj+C,GAEA,MAEA,KAAAqvB,EAAA,OAAAoL,yBACAjrB,KAAAglC,QAAA0J,6BAAAl+C,GAEA,MAEA,KAAAqvB,EAAA,OAAAsL,sBACAnrB,KAAAglC,QAAA2J,yBAAAn+C,GAEA,MAEA,KAAAqvB,EAAA,OAAAwL,iBACArrB,KAAA4uC,wBAAAp+C,GAEA,MAEA,KAAAqvB,EAAA,OAAA0L,uBACAvrB,KAAA6uC,8BAAAr+C,GAEA,MAEA,KAAAqvB,EAAA,OAAA2L,oBACAxrB,KAAA8uC,2BAAAt+C,GAEA,MAEA,KAAAqvB,EAAA,OAAAjpB,MACAoJ,KAAA+uC,kBAAAv+C,GAEA,MAEA,KAAAqvB,EAAA,OAAAiL,qBACA9qB,KAAAkjC,KAAA1D,KAAA,gGAEA,MAEA,QACAx/B,KAAAkjC,KAAA1D,KAAA,6BAAAhmC,OAAAhJ,EAAAg8B,UAAA,MAAAhzB,OAAAhJ,EAAAmxB,KAAA,gDAKG,CACHhwB,IAAA,qBACAN,MAAA,SAAA8J,GACA6E,KAAAkjC,KAAAlvC,KAAA,oBAAAmH,EAAAynB,WAEG,CACHjxB,IAAA,QACAN,MAAA,SAAAsxB,GACA,IAAAmd,EAAAnd,EAAAqsB,OAAAhvC,KAAAyjC,kBAEA,OAAAzjC,KAAAmjC,MAAA1gB,WACAziB,KAAAkjC,KAAA1D,KAAA,YAAA7c,EAAAiK,eAEA5sB,KAAAmjC,MAAA8L,KAAAnP,IAEA,IAEA9/B,KAAAkjC,KAAA1D,KAAA,qCAAA7c,EAAAiK,gBAEA,KAGG,CACHj7B,IAAA,yBACAN,MAAA,SAAA69C,GACA,OAAAlvC,KAAA8iC,eAAAoM,IAEG,CACHv9C,IAAA,0BACAN,MAAA,SAAA89C,GACA,OAAAnvC,KAAAijC,gBAAAkM,IAEG,CACHx9C,IAAA,4BACAN,MAAA,WACA,IAAA+9C,EAAApvC,KAEA,GAAAA,KAAAwjC,+BACAxjC,KAAA8iC,cAAA,CACA,IAAAuM,EAAA,IAAA5M,EAAA,qBACArD,GAAA,EAUA,OARAp/B,KAAAurC,iBAAAvrC,KAAAgjC,0BACAhjC,KAAAkjC,KAAA1D,KAAA,+BAEAJ,GAAA,GAGAp/B,KAAAkjC,KAAA1D,KAAA,gCAAAhmC,OAAAwG,KAAA8iC,cAAA,MAEAuM,EAAAC,gBAAAtvC,KAAA8iC,cAAA9iC,KAAAqjC,cAAArjC,KAAAsjC,cAAAlE,EAAAp/B,KAAAujC,YAAAvjC,KAAAkjC,MAAA3uC,KAAA,SAAAsrC,GACA,IAAA0P,EAAAz+C,OAAA8sC,OAAA,IAAA6E,EAAA,oBAAArD,GAAAS,GAEA,GAAA0P,KAAA1sB,SAQA,GAFAusB,EAAAlM,KAAA1D,KAAA,kCAAAhmC,OAAA+1C,EAAA1sB,UAEAusB,EAAAI,wBAAAD,EAAA1sB,SAAA,CAEA,IAAA4sB,EAAArQ,EAAA,WAOA,OANAgQ,EAAAnM,eAAAwM,EAAA,MAAAF,EAAA1sB,QACAusB,EAAAjM,MAAAtgB,QAAAusB,EAAAnM,eACAmM,EAAAhM,oBAAAmM,EACAx3C,SAAA8rB,cAAA,IAAAC,YAAA,wBACAC,OAAAqrB,EAAAhM,uBAEAgM,EAAAhM,0BAhBAgM,EAAAlM,KAAA1D,KAAA,oCAAAK,QAmBG,CACHluC,IAAA,gBACAN,MAAA,WACA,gBAAA0G,SAAA23C,SAAAD,YAEG,EACH99C,IAAA,aACAN,MAAA,WACA,OAAAswC,MAIAnlC,EA5xDA,IAoyDAmzC;;;;wLAKA,SAAA//C,EAAA+L,EAAAxL,GAEA,aACAA,EAAAe,EAAAyK,GACAxL,EAAAO,EAAAiL,EAAA,uBAAmG,OAAAi0C,IACnGz/C,EAAAO,EAAAiL,EAAA,qBAAiG,OAAAk0C,IACjG1/C,EAAAO,EAAAiL,EAAA,8BAA0G,OAAAm0C,IAC1G3/C,EAAAO,EAAAiL,EAAA,6BAAyG,OAAAo0C,IACzG5/C,EAAAO,EAAAiL,EAAA,8BAA0G,OAAAq0C,IAC1G7/C,EAAAO,EAAAiL,EAAA,yBAAqG,OAAAs0C,IACrG9/C,EAAAO,EAAAiL,EAAA,kCAA8G,OAAAu0C,IAC9G//C,EAAAO,EAAAiL,EAAA,kCAA8G,OAAAw0C,IAC9GhgD,EAAAO,EAAAiL,EAAA,uBAAmG,OAAAy0C,IACnGjgD,EAAAO,EAAAiL,EAAA,gCAA4G,OAAA00C,IAC5G,IAAAxwB,EAAA1vB,mBAAA,qBACA,SAAAiwB,EAAAC,EAAAC,GAA2C,QAAAtwB,EAAA,EAAgBA,EAAAswB,EAAA/qB,OAAkBvF,IAAA,CAAO,IAAAuwB,EAAAD,EAAAtwB,GAA2BuwB,EAAAvvB,WAAAuvB,EAAAvvB,aAAA,EAAwDuvB,EAAArsB,cAAA,EAAgC,UAAAqsB,MAAAC,UAAA,GAAuD1vB,OAAAC,eAAAsvB,EAAAE,EAAA5uB,IAAA4uB,IAE9P,SAAAE,EAAAP,EAAAQ,EAAAC,GAAiM,OAApID,GAAAN,EAAAF,EAAAluB,UAAA0uB,GAAsEC,GAAAP,EAAAF,EAAAS,GAA8DT,EAEjM,SAAAF,EAAAC,EAAAC,GAAiD,KAAAD,aAAAC,GAA0C,UAAAC,UAAA,qCAM3F,IAAAyvB,EAAA,CAIA9J,gBAAA,kBAIAT,iBAAA,mBAIAE,SAAA,YAKAsK,EAAA,CAKA3J,QAAA,UAKAE,YAAA,cAIAhB,KAAA,QAKA0K,EAAA,SAAAA,EAAA3E,GACAnrB,EAAAhgB,KAAA8vC,GAMA9vC,KAAA4iB,QAAA,KAKA5iB,KAAAsmC,wBAAA,KAKAtmC,KAAAumC,qBAAA,KAIAvmC,KAAAovB,iBAAA,KAIApvB,KAAAmmC,SAAA,KAIAnmC,KAAAqmC,WAAA,KAEA8E,GACAr6C,OAAA8sC,OAAA59B,KAAAmrC,IAGA4E,EAAA,CACA/I,SAAA,WACAQ,OAAA,SACAY,YAAA,cACAE,KAAA,OACAE,OAAA,SACAE,kBAAA,oBACAE,mBAAA,qBACA0H,QAAA,UACAC,cAAA,iBAMAP,EAAA,SAAAA,EAAAQ,EAAA7tB,GACA3C,EAAAhgB,KAAAgwC,GAOAhwC,KAAAywC,UAAAD,EAIAxwC,KAAA4iB,QAAAD,GAOAstB,EAGA,SAAAA,EAAAS,EAAA/tB,GACA3C,EAAAhgB,KAAAiwC,GAEAjwC,KAAA2wC,MAAAD,EACA1wC,KAAA4iB,QAAAD,GAKAutB,EAEA,WACA,SAAAA,EAAArvB,EAAAxnB,EAAAunB,EAAA+B,EAAA9e,GACAmc,EAAAhgB,KAAAkwC,GAKAlwC,KAAA+gB,SAAAF,EACA7gB,KAAAwhB,GAAAX,EAKA7gB,KAAAmqC,KAAA9wC,EAIA2G,KAAA4wC,eAAA/sC,EAIA7D,KAAAy5B,YAAA7Y,EAMA5gB,KAAA+nC,aAAA,EAIA/nC,KAAA6wC,YAAA,KAIA7wC,KAAAqrC,qBAAA,KAIArrC,KAAA4pC,mBAAA,KAKA5pC,KAAA0nC,wBAAA,EAKA1nC,KAAA6nC,qBAAA,KAIA7nC,KAAAmmC,UAAA,EAKAnmC,KAAA8hB,QAAAjC,EAAA,aAAA4L,QAOAzrB,KAAA8wC,SAAA,KAIA9wC,KAAA4nC,yBAAA,KAIA5nC,KAAA+wC,4BAAA,KAIA/wC,KAAAorC,kBAAA,KAIAprC,KAAAusC,QAAA5pB,EAIA3iB,KAAAgxC,oBAAA,KACAhxC,KAAAiqC,oBAAA,KA+FA,OA5FAxpB,EAAAyvB,EAAA,EACAv+C,IAAA,OACAN,MAAA,SAAAwS,GACA7D,KAAA+nC,aAAA,EACA/nC,KAAA6wC,YAAA5jB,KAAAD,MACAhtB,KAAAqrC,qBAAApe,KAAAD,MACAhtB,KAAA4wC,eAAA/sC,IAEG,CACHlS,IAAA,aACAN,MAAA,SAAAwS,GACA7D,KAAA4pC,oBAAA,EACA5pC,KAAAorC,kBAAAne,KAAAD,MACAhtB,KAAA4wC,eAAA/sC,IAEG,CACHlS,IAAA,eACAN,MAAA,SAAAwS,GACA7D,KAAA4pC,oBAAA,EACA5pC,KAAA4wC,eAAA/sC,IAEG,CACHlS,IAAA,aACAN,MAAA,WACA2O,KAAAgxC,qBAAA,EACAhxC,KAAAqrC,qBAAApe,KAAAD,QAEG,CACHr7B,IAAA,iBACAN,MAAA,WACA2O,KAAAgxC,qBAAA,IAEG,CACHr/C,IAAA,SACAN,MAAA,SAAAwuC,EAAAh8B,GACA7D,KAAA8hB,QAAAjC,EAAA,aAAA6L,OACA1rB,KAAAmmC,UAAA,EACAnmC,KAAA8wC,SAAAjR,EACA7/B,KAAA4wC,eAAA/sC,IAEG,CACHlS,IAAA,oBACAN,MAAA,SAAA4/C,EAAAptC,GACA7D,KAAA4nC,yBAAAqJ,EACAjxC,KAAA0nC,wBAAA,EACA1nC,KAAA4wC,eAAA/sC,IAEG,CACHlS,IAAA,qBACAN,MAAA,SAAAwS,GACA7D,KAAA0nC,wBAAA,EACA1nC,KAAA4wC,eAAA/sC,IAEG,CACHlS,IAAA,uBACAN,MAAA,SAAA4/C,EAAAptC,GACA7D,KAAA+wC,4BAAAE,EACAjxC,KAAA6nC,sBAAA,EACA7nC,KAAA4wC,eAAA/sC,IAEG,CACHlS,IAAA,eACAN,MAAA,SAAAwS,GACA7D,KAAA6nC,sBAAA,EACA7nC,KAAA4wC,eAAA/sC,IAEG,CACHlS,IAAA,YACAN,MAAA,SAAA85C,EAAAtL,EAAAh8B,GACA7D,KAAA8hB,QAAAqpB,EACAnrC,KAAA8wC,SAAAjR,EACA7/B,KAAAmmC,UAAA,EACAnmC,KAAA4pC,oBAAA,EACA5pC,KAAAgxC,qBAAA,EACAhxC,KAAA0nC,wBAAA,EACA1nC,KAAA6nC,sBAAA,EACA7nC,KAAA4wC,eAAA/sC,IAEG,CACHlS,IAAA,mBACAN,MAAA,SAAAwS,GACA7D,KAAA8hB,QAAAjC,EAAA,aAAA4L,QACAzrB,KAAA8wC,SAAA,KACA9wC,KAAAmmC,UAAA,EACAnmC,KAAA4pC,oBAAA,EACA5pC,KAAAgxC,qBAAA,EACAhxC,KAAA0nC,wBAAA,EACA1nC,KAAA6nC,sBAAA,EACA7nC,KAAA4wC,eAAA/sC,MAIAqsC,EArLA,GA0LAC,EAAA,SAAAA,EAAAe,EAAAvuB,GACA3C,EAAAhgB,KAAAmwC,GAEAnwC,KAAAmxC,YAAAD,EAIAlxC,KAAA4iB,QAAAD,GAEAytB,EAEA,WACA,SAAAA,IACApwB,EAAAhgB,KAAAowC,GAEApwC,KAAAoxC,+BAAA,EACApxC,KAAAqxC,uBAAA,EACArxC,KAAAsxC,mBAAA,EA2BA,OAxBA7wB,EAAA2vB,EAAA,EACAz+C,IAAA,mBACAN,MAAA,SAAAkgD,GAaA,OAZAvxC,KAAAoxC,gCACAG,EAAAC,yBAAAxxC,KAAAoxC,+BAGApxC,KAAAqxC,wBACAE,EAAAE,0CAAAzxC,KAAAqxC,uBAGArxC,KAAAsxC,oBACAC,EAAAG,oBAAA1xC,KAAAsxC,mBAGAC,IAEG,CACH5/C,IAAA,WACAN,MAAA,WACA,uCAAAmI,OAAAwG,KAAAoxC,8BAAA,2BAAA53C,OAAAwG,KAAAqxC,sBAAA,wBAAA73C,OAAAwG,KAAAsxC,uBAIAlB,EAjCA,GAmCAC,EAEA,WACA,SAAAA,IACArwB,EAAAhgB,KAAAqwC,GAEArwC,KAAA2xC,uBAAA,KACA3xC,KAAA4xC,uBAAA,KACA5xC,KAAA6xC,uBAAA,KACA7xC,KAAA8xC,uBAAA,KAkCA,OA/BArxB,EAAA4vB,EAAA,EACA1+C,IAAA,2BACAN,MAAA,SAAA0gD,GACA/xC,KAAA2xC,uBAAAI,IAEG,CACHpgD,IAAA,2BACAN,MAAA,SAAA2gD,GACAhyC,KAAA4xC,uBAAAI,IAEG,CACHrgD,IAAA,2BACAN,MAAA,SAAA4gD,GACAjyC,KAAA6xC,uBAAAI,IAEG,CACHtgD,IAAA,2BACAN,MAAA,SAAA6gD,GACAlyC,KAAA8xC,uBAAAI,IAEG,CACHvgD,IAAA,aACAN,MAAA,SAAAkgD,GAKA,OAJAA,EAAAY,wBAAAnyC,KAAA2xC,uBACAJ,EAAAa,wBAAApyC,KAAA4xC,uBACAL,EAAAc,wBAAAryC,KAAA6xC,uBACAN,EAAAe,wBAAAtyC,KAAA8xC,uBACAP,MAIAlB,EAzCA,IA8CAkC;;;;sCAKA,SAAA3iD,EAAA+L,EAAAxL,GAEA,aACAA,EAAAe,EAAAyK,GACAxL,EAAAO,EAAAiL,EAAA,2BAAuG,OAAA62C,IACvG,IAAAld,EAAAnlC,0BAAA,4BACAsiD,EAAAtiD,qBAAA,uBAGA,SAAAiwB,EAAAC,EAAAC,GAA2C,QAAAtwB,EAAA,EAAgBA,EAAAswB,EAAA/qB,OAAkBvF,IAAA,CAAO,IAAAuwB,EAAAD,EAAAtwB,GAA2BuwB,EAAAvvB,WAAAuvB,EAAAvvB,aAAA,EAAwDuvB,EAAArsB,cAAA,EAAgC,UAAAqsB,MAAAC,UAAA,GAAuD1vB,OAAAC,eAAAsvB,EAAAE,EAAA5uB,IAAA4uB,IAM9P,IAAAiyB,EAEA,WACA,SAAAA,EAAAE,IAXA,SAAAzyB,EAAAC,GAAiD,KAAAD,aAAAC,GAA0C,UAAAC,UAAA,qCAY3FH,CAAAhgB,KAAAwyC,GAEAxyC,KAAA2yC,KAAAD,EACA1yC,KAAAkjC,KAAAnvC,QACAiM,KAAAkhB,OAAApwB,OAAA8sC,OAAA,IAAA6U,EAAA,kBACA5e,oBAAA,EACAC,mBAAA,EACAS,mBAAA,GACAP,mBAAA,EACAD,sBAAA,EACAI,sBAAA,EACAD,gBAAA,EACAG,gBAAA,cACAD,eAAA,eACAE,aAAA,iBAtBA,IAAApU,EAAAQ,EAAAC,EAoIA,OApIAT,EAqCAsyB,GArCA9xB,EAqCA,EACA/uB,IAAA,gBACAN,MAAA,SAAAuhD,EAAAC,EAAAC,GACA,UAAAl8C,MAAA,sEAGG,CACHjF,IAAA,sBACAN,MAAA,SAAA0hD,EAAAC,GACA,UAAAp8C,MAAA,sEAEG,CACHjF,IAAA,uBACAN,MAAA,WACA2O,KAAA2yC,KAAAjM,MAAA1mC,KAAAkhB,OAAAylB,UAAArR,EAAA,gBAAA9T,GAAA,eAEG,CACH7vB,IAAA,+BACAN,MAAA,SAAAb,GACA,IAAA2yB,EAAAnjB,KAEA8yC,EAAAtiD,EAAAmxB,KAAA,YACAkxB,EAAAriD,EAAAmxB,KAAA,SAEA,OAAA7qB,QAAAC,QAAAiJ,KAAAizC,cAAA,KAAAJ,EAAAC,IAAAv+C,KAAA,SAAA2+C,GACAA,EAAAphB,QAAA+gB,EAEAK,EAAAnhB,aAAA,IACA5O,EAAA+f,KAAA1D,KAAA,uDAEA0T,EAAAthB,OAAA6gB,EAAA,oBAAA5f,kBAGA1P,EAAAwvB,KAAAjM,MAAAwM,EAAAvM,UAAAn2C,EAAAgxB,SAGG,CACH7vB,IAAA,2BACAN,MAAA,SAAAb,GACA,IAAA0zB,EAAAlkB,KAEA+yC,EAAA,IAAAN,EAAA,YAAAjiD,GAEA,OAAAsG,QAAAC,QAAAiJ,KAAAizC,cAAAF,EAAAlhB,OAAAkhB,EAAAjhB,QAAAihB,EAAA5f,aAAA5+B,KAAA,SAAA4+C,GACAA,EAAAvhB,QAAA6gB,EAAA,oBAAAngB,UACApO,EAAAgf,KAAAlvC,KAAA,+EAEAkwB,EAAAyuB,KAAAjM,MAAAyM,EAAAxM,UAAAn2C,EAAAgxB,MAGA,IAAA4xB,EAAAD,EAAAvgB,wBAKA,GAJAwgB,EAAAC,KAAA,SAAAC,GACA,OAAAA,EAAAC,oBAAAR,EAAAtpB,iBAAAoS,2BAWA,OAJA3X,EAAAgf,KAAAlvC,KAAA,8EAEAkwB,EAAAyuB,KAAAjM,MAAAyM,EAAAxM,UAAAn2C,EAAAgxB,KAMA,IAAAgyB,EAAAJ,EACAI,EAAA3/C,KAAA,IAAA4+C,EAAA,oBAAAM,EAAAxhB,YAAA8P,cAAA0R,EAAAtpB,iBAAAgqB,qBACA,IAAAT,EAAAP,EAAA,mBAAAiB,WAAAF,GAEA18C,QAAAC,QAAAmtB,EAAAyvB,oBAAAZ,EAAAC,IAAAz+C,KAAA,SAAAq/C,GAEAA,EAAA/hB,OAAAkhB,EAAAlhB,OACA+hB,EAAA9hB,QAAAihB,EAAAjhB,QAEA8hB,EAAAhiB,QAAA6gB,EAAA,oBAAAngB,SACApO,EAAAgf,KAAAlvC,KAAA,mGAEA4/C,EAAA3hB,SAAAkhB,EAAAlhB,UAEA2hB,EAAA3hB,SAAA+gB,EAGA9uB,EAAAyuB,KAAAjM,MAAAkN,EAAAjN,UAAAn2C,EAAAgxB,WAIG,CACH7vB,IAAA,wBACAN,MAAA,SAAAb,GACAwP,KAAA2yC,KAAAjM,MAAA1mC,KAAAkhB,OAAAylB,UAAAn2C,EAAAgxB,UAhI6DpB,EAAAF,EAAAluB,UAAA0uB,GAAsEC,GAAAP,EAAAF,EAAAS,GAoInI6xB,EA9HA,IAmIAqB;;;;mCAKA,SAAAjkD,EAAA+L,EAAAxL,GAEA,aACAA,EAAAe,EAAAyK,GACAxL,EAAAO,EAAAiL,EAAA,wBAAoG,OAAAm4C,IACpG,IAAAC,EAAA5jD,kBAAA,oBACA2vB,EAAA3vB,oBAAA,sBAGA,SAAAiwB,EAAAC,EAAAC,GAA2C,QAAAtwB,EAAA,EAAgBA,EAAAswB,EAAA/qB,OAAkBvF,IAAA,CAAO,IAAAuwB,EAAAD,EAAAtwB,GAA2BuwB,EAAAvvB,WAAAuvB,EAAAvvB,aAAA,EAAwDuvB,EAAArsB,cAAA,EAAgC,UAAAqsB,MAAAC,UAAA,GAAuD1vB,OAAAC,eAAAsvB,EAAAE,EAAA5uB,IAAA4uB,IAM9P,IAAAuzB,EAEA,WACA,SAAAA,EAAApB,IAXA,SAAAzyB,EAAAC,GAAiD,KAAAD,aAAAC,GAA0C,UAAAC,UAAA,qCAY3FH,CAAAhgB,KAAA8zC,GAEA9zC,KAAA2yC,KAAAD,EACA1yC,KAAAkjC,KAAAnvC,QAXA,IAAAmsB,EAAAQ,EAAAC,EA6JA,OA7JAT,EAcA4zB,EAdAnzB,EAsJG,EACHhvB,IAAA,iBACAN,MAAA,SAAAi7B,GACA,WAAAA,EAAA5P,YAAA,cAAA4P,GAAAynB,EAAA,cAAA9b,yBAAA3L,GAAAynB,EAAA,cAAA/b,wBAAA1L,GAAAynB,EAAA,cAAA/c,sBAAA1K,GAAAynB,EAAA,cAAA9c,0BAzJAvW,EAcA,EACA/uB,IAAA,0BACAN,MAAA,SAAAwvB,GACA,IAAAmzB,EAAA,IAAAD,EAAA,qBAAAlzB,GAAA8lB,YACAsN,EAAA,IAAAn0B,EAAA,qBAAAe,EAAAf,EAAA,gBAAAywB,cAAA,EAAAyD,EAAA,gEAEA,OAAAh0C,KAAAk0C,mBAAAD,EADA,oCAGG,CACHtiD,IAAA,iBACAN,MAAA,SAAAwvB,EAAAD,GACA,IAAA/c,EAAA,IAAAkwC,EAAA,mBAAAnzB,EAAAC,GAAA8lB,YACAsN,EAAA,IAAAn0B,EAAA,qBAAAe,EAAAf,EAAA,gBAAAwwB,QAAA1vB,EAAA/c,EAAA,6DAAArK,QAAAonB,EAAA,KAAA8Y,QAAA,KACAya,EAAA,sCAAA36C,QAAAonB,EAAA,KAAA8Y,QAAA,IACA,OAAA15B,KAAAk0C,mBAAAD,EAAAE,KAEG,CACHxiD,IAAA,kBACAN,MAAA,SAAAwvB,EAAAwX,EAAAzX,GACA,IAAA/c,EAAA,IAAAkwC,EAAA,oBAAA1b,EAAAzX,EAAAC,GAAA8lB,YACAsN,EAAA,IAAAn0B,EAAA,qBAAAe,EAAAf,EAAA,gBAAAwwB,QAAA1vB,EAAA/c,EAAA,mEAAArK,QAAAonB,EAAA,KAAA8Y,QAAA,KACAya,EAAA,0CAAA36C,QAAAonB,EAAA,KAAA8Y,QAAA,IACA,OAAA15B,KAAAk0C,mBAAAD,EAAAE,KAEG,CACHxiD,IAAA,gCACAN,MAAA,SAAAwvB,EAAAwX,EAAAzX,GACA,IAAA/c,EAAA,IAAAkwC,EAAA,kCAAA1b,EAAAzX,EAAAC,GAAA8lB,YACAsN,EAAA,IAAAn0B,EAAA,qBAAAe,EAAAf,EAAA,gBAAAwwB,QAAA1vB,EAAA/c,EAAA,kFAAArK,QAAAonB,EAAA,KAAA8Y,QAAA,KACAya,EAAA,yDAAA36C,QAAAonB,EAAA,KAAA8Y,QAAA,IACA,OAAA15B,KAAAk0C,mBAAAD,EAAAE,KAEG,CACHxiD,IAAA,mBACAN,MAAA,SAAAwvB,EAAAwX,GACA,IAAAx0B,EAAA,IAAAkwC,EAAA,qBAAA1b,EAAAxX,GAAA8lB,YACAsN,EAAA,IAAAn0B,EAAA,qBAAAe,EAAAf,EAAA,gBAAAwwB,QAAA,EAAAzsC,EAAA,gEAEA,OAAA7D,KAAAk0C,mBAAAD,EADA,iDAGG,CACHtiD,IAAA,uBACAN,MAAA,SAAAwvB,EAAAwX,EAAAzX,EAAAE,GACA,IAAAjd,EAAA,IAAAkwC,EAAA,yBAAA1b,EAAAzX,EAAAC,EAAAC,GAAA6lB,YACAsN,EAAA,IAAAn0B,EAAA,qBAAAe,EAAAf,EAAA,gBAAAwwB,QAAA1vB,EAAA/c,EAAA,wEAAArK,QAAAonB,EAAA,KAAA8Y,QAAA,KACAya,EAAA,+CAAA36C,QAAAonB,EAAA,KAAA8Y,QAAA,IACA,OAAA15B,KAAAk0C,mBAAAD,EAAAE,KAEG,CACHxiD,IAAA,mBACAN,MAAA,SAAAwvB,EAAAwX,GACA,IAAAx0B,EAAA,IAAAkwC,EAAA,qBAAA1b,EAAAxX,GAAA8lB,YACAsN,EAAA,IAAAn0B,EAAA,qBAAAe,EAAAf,EAAA,gBAAAwwB,QAAA,EAAAzsC,EAAA,sEAEA,OAAA7D,KAAAk0C,mBAAAD,EADA,uDAGG,CACHtiD,IAAA,qBACAN,MAAA,SAAA4iD,EAAAE,GACA,OAAAn0C,KAAA2yC,KAAAlN,eAAA3lB,EAAA,UAAAylB,SAAA,IAAAzlB,EAAA,kCACA9f,KAAA2yC,KAAA/N,aAAA9kB,EAAA,QAAAslB,KAAA,IAAAtlB,EAAA,iCACA9f,KAAA2yC,KAAA/N,YAAA9kB,EAAA,QAAAsmB,YACApmC,KAAA2yC,KAAA7N,mBAAAmP,EAEAj0C,KAAA2yC,KAAAjM,MAAAuN,EAAA1H,UACAvsC,KAAA2yC,KAAA7N,mBAAAmC,KAAAkN,GAGAp8C,SAAA8rB,cAAA,IAAAC,YAAA,sBACAC,OAAA/jB,KAAA2yC,KAAA7N,sBAEA,IAAAhlB,EAAA,4CAEG,CACHnuB,IAAA,wBACAN,MAAA,SAAAb,GACA,OAAAA,EAAAg8B,WACA,KAAAunB,EAAA,cAAA9c,sBACAj3B,KAAAo0C,6BAAA5jD,GAEA,MAEA,KAAAujD,EAAA,cAAArc,oBACA,KAAAqc,EAAA,cAAApc,qBACA,KAAAoc,EAAA,cAAAlc,mCACA,KAAAkc,EAAA,cAAAnc,sBACA,KAAAmc,EAAA,cAAA9b,wBACA,KAAA8b,EAAA,cAAAhc,4BACA/3B,KAAAq0C,uBAAA7jD,GAEA,MAEA,QACAwP,KAAAkjC,KAAA1D,KAAA,qCAAAhmC,OAAAhJ,EAAAg8B,UAAA,MAAAhzB,OAAAhJ,EAAAmxB,KAAA,gDAKG,CACHhwB,IAAA,+BACAN,MAAA,SAAAb,GACA,IAAA+4C,EAAA/4C,EAAAmxB,KAAAP,WACAkzB,EAAAt0C,KAAA2yC,KAAA7N,mBAEA9kC,KAAA2yC,KAAA/N,aAAA9kB,EAAA,QAAAsmB,aAAAkO,EAAAnO,WAAAmO,EAAAvzB,WAAAwoB,EACAvpC,KAAAkjC,KAAA1D,KAAA,wFAAAhmC,OAAA+vC,KAMA+K,EAAA3K,UAAAn5C,EAAAuxB,kBAAAvxB,EAAA,qCAEAuH,SAAA8rB,cAAA,IAAAC,YAAA,sBACAC,OAAA/jB,KAAA2yC,KAAA7N,yBAGG,CACHnzC,IAAA,yBACAN,MAAA,SAAAb,GACA,IAAA+4C,EAAA/4C,EAAAmxB,KAAAP,WACAkzB,EAAAt0C,KAAA2yC,KAAA7N,mBAEA9kC,KAAA2yC,KAAA/N,aAAA9kB,EAAA,QAAAsmB,aAAAkO,EAAAnO,WAAAmO,EAAAvzB,WAAAwoB,EACAvpC,KAAAkjC,KAAA1D,KAAA,iFAAAhmC,OAAA+vC,KAMA+K,EAAA3K,UAAAn5C,EAAAuxB,kBAAAvxB,EAAA,8BAEAuH,SAAA8rB,cAAA,IAAAC,YAAA,sBACAC,OAAA/jB,KAAA2yC,KAAA7N,4BAnJ6D1kB,EAAAF,EAAAluB,UAAA0uB,GAAsEC,GAAAP,EAAAF,EAAAS,GA6JnImzB,EAvJA,IA4JAS;;;;uFAKA,SAAA3kD,EAAA+L,EAAAxL,GAEA,aACAA,EAAAe,EAAAyK,GACAxL,EAAAO,EAAAiL,EAAA,mCAA+G,OAAA2vB,IAC/Gn7B,EAAAO,EAAAiL,EAAA,oCAAgH,OAAA4vB,IAChHp7B,EAAAO,EAAAiL,EAAA,6BAAyG,OAAA64C,IACzG,IAAA30B,EAAA1vB,mBAAA,qBACA2+B,EAAA3+B,0BAAA,4BACA,SAAA6vB,EAAAC,EAAAC,GAAiD,KAAAD,aAAAC,GAA0C,UAAAC,UAAA,qCAE3F,SAAAC,EAAAC,EAAAC,GAA2C,QAAAtwB,EAAA,EAAgBA,EAAAswB,EAAA/qB,OAAkBvF,IAAA,CAAO,IAAAuwB,EAAAD,EAAAtwB,GAA2BuwB,EAAAvvB,WAAAuvB,EAAAvvB,aAAA,EAAwDuvB,EAAArsB,cAAA,EAAgC,UAAAqsB,MAAAC,UAAA,GAAuD1vB,OAAAC,eAAAsvB,EAAAE,EAAA5uB,IAAA4uB,IAE9P,SAAAE,EAAAP,EAAAQ,EAAAC,GAAiM,OAApID,GAAAN,EAAAF,EAAAluB,UAAA0uB,GAAsEC,GAAAP,EAAAF,EAAAS,GAA8DT,EAIjM,IAAAoL,EAEA,WACA,SAAAA,IACAtL,EAAAhgB,KAAAsrB,GAWA,OARA7K,EAAA6K,EAAA,EACA35B,IAAA,YACAN,MAAA,WAEA,WAAAwuB,EAAA,QAAAiP,EAAA,gBAAAtN,GAAA,SAAA3B,EAAA,OAAAyL,sBADA,IACA,OAIAA,EAbA,GAeAC,EAEA,WACA,SAAAA,EAAA/6B,GACAwvB,EAAAhgB,KAAAurB,GAEAvrB,KAAAyhB,GAAAjxB,EAoBA,OAjBAiwB,EAAA8K,EAAA,EACA55B,IAAA,YACAN,MAAA,WACA,OAAA2O,KAAAyhB,GAAAE,KAAAzrB,SAEG,CACHvE,IAAA,kBACAN,MAAA,WACA,OAAAwL,SAAAmD,KAAAyhB,GAAAE,KAAA8yB,cAAA,MAEG,CACH9iD,IAAA,aACAN,MAAA,WACA,QAAA2O,KAAAyhB,GAAAE,KAAA+yB,aAIAnpB,EAxBA,GA0BAipB,EAAA,SAAAA,EAAAhkD,GACAwvB,EAAAhgB,KAAAw0C,GAEAx0C,KAAA20C,aAAA93C,SAAArM,EAAAmxB,KAAA8yB,cAAA,MAKAG;;;;8BAKA,SAAAhlD,EAAAD,QAv5VAC,EAAAD,QAAAD,mQC2CO,IAAMmlD,EAAb,WAEI,SAAAA,EAAYzsB,EAAK0sB,EAASC,gGAC1B/0B,CAAAhgB,KAAA60C,GACI70C,KAAK2yC,KAAO,KACZ3yC,KAAK6iC,OAAS,YACd7iC,KAAKijC,eAAiB,cACtBjjC,KAAKg1C,YAAc,KACnBh1C,KAAKg2B,SAAW,QAChBh2B,KAAKi1C,mBAAoB,EACzBj1C,KAAKk1C,uBAAwB,EAE7Bl1C,KAAKkjC,KAAO9a,EACZpoB,KAAKm1C,SAAWL,EAChB90C,KAAKo1C,UAAYL,YAdzB,SAAAF,KAAA,EAAAljD,IAAA,QAAAN,MAAA,WAkBI,IAAA8xB,EAAAnjB,KACIA,KAAKkjC,KAAK1D,KAAK,wBACfx/B,KAAKq1C,qBAILr1C,KAAK2yC,KAAO,IAAIn2C,MAAIwD,KAAK6iC,OAAQ7iC,KAAKijC,eAAgBjjC,KAAKg1C,aAC3Dh1C,KAAK2yC,KAAKzxB,OAAOkwB,8BAAgCpxC,KAAKi1C,kBACtDj1C,KAAK2yC,KAAKzxB,OAAOmwB,sBAAwBrxC,KAAKk1C,sBAE9Cl1C,KAAK2yC,KAAK2C,WAAW,WAAYt1C,KAAKg2B,UAEtCj+B,SAASyzC,iBAAiB,gBAAiB,SAACp3C,GAAD,OAAO+uB,EAAKoyB,mBAAmBnhD,EAAE2vB,UAC5EhsB,SAASyzC,iBAAiB,0BAA2B,SAACp3C,GAAD,OAAO+uB,EAAKqyB,0BAA0BphD,EAAE2vB,UAC7FhsB,SAASyzC,iBAAiB,iBAAkB,SAACp3C,GAAD,OAAO+uB,EAAKsyB,iBAAiBrhD,EAAE2vB,UAC3EhsB,SAASyzC,iBAAiB,qBAAsB,SAACp3C,GAAD,OAAO+uB,EAAKuyB,qBAAqBthD,EAAE2vB,UACnF/jB,KAAK2yC,KAAKgD,QAIV31C,KAAKo1C,UAAUQ,QACf51C,KAAKo1C,UAAUS,KAAK,2BAEpB71C,KAAK81C,wBACL91C,KAAK+1C,oBA1Cb,CAAApkD,IAAA,uBAAAN,MAAA,SA6CyBy4C,GAEjB9pC,KAAKo1C,UAAUQ,QACf51C,KAAK81C,wBACL91C,KAAKo1C,UAAUS,KAAK,QAjD5B,CAAAlkD,IAAA,4BAAAN,MAAA,SAoD8B2kD,GAEtBh2C,KAAKo1C,UAAUQ,QACf51C,KAAK81C,wBACL91C,KAAKo1C,UAAUS,KAAK,QAxD5B,CAAAlkD,IAAA,mBAAAN,MAAA,SA2DqBu6B,GAEb5rB,KAAKg1C,YAAcppB,EACJ,MAAXA,GAEA5rB,KAAKkjC,KAAK1D,KAAV,qBAAAhmC,OAAoCoyB,EAAQ5E,QAA5CxtB,OAAqDoyB,EAAQ3E,QAA7D,6BACAmX,aAAaC,QAAQ,SAAUzS,EAAQ5E,QACvCoX,aAAaC,QAAQ,UAAWzS,EAAQ3E,WAIxCjnB,KAAKkjC,KAAK1D,KAAV,4EACApB,aAAaG,WAAW,UACxBH,aAAaG,WAAW,cAxEpC,CAAA5sC,IAAA,qBAAAN,MAAA,SAiFuB4kD,GAEfj2C,KAAKkjC,KAAKgT,QACVl2C,KAAKkjC,KAAK1D,KAAV,gCAAAhmC,OAA4Cy8C,IAC5Cj2C,KAAK81C,0BArFb,CAAAnkD,IAAA,wBAAAN,MAAA,WA0FQ2O,KAAKm2C,gBAELn2C,KAAKo2C,eAELp2C,KAAKq2C,uBA9Fb,CAAA1kD,IAAA,gBAAAN,MAAA,WAmGQ,OAAQ2O,KAAK2yC,KAAK/N,aAEd,KAAKiL,UAAQ3J,QACT,IAAIoQ,EAAet2C,KAAK2yC,KAAK9N,wBAC7B7kC,KAAKo1C,UAAUS,KAAK,kCACpB71C,KAAKo1C,UAAUS,KAAf,KAAAr8C,OAAyB88C,EAAa1zB,UACtC5iB,KAAKo1C,UAAUS,KAAf,eAAAr8C,OAAmC88C,EAAanQ,WAChDnmC,KAAKo1C,UAAUS,KAAf,iBAAAr8C,OAAqC88C,EAAajQ,aAClDrmC,KAAKo1C,UAAUS,KAAf,wBAAAr8C,OAA4C88C,EAAalnB,mBACzDpvB,KAAKo1C,UAAUS,KAAf,kCAAAr8C,OAAsD88C,EAAahQ,0BACnEtmC,KAAKo1C,UAAUS,KAAf,+BAAAr8C,OAAmD88C,EAAa/P,uBAChE,MAEJ,KAAKsJ,UAAQzJ,YACT,IAAI0D,EAAU9pC,KAAK2yC,KAAK7N,mBAyBxB,GAxBA9kC,KAAKo1C,UAAUS,KAAK,6BACpB71C,KAAKo1C,UAAUS,KAAf,KAAAr8C,OAAyBswC,EAAQ8G,iBACjC5wC,KAAKo1C,UAAUS,KAAf,eAAAr8C,OAAmCswC,EAAQ/oB,WAC3C/gB,KAAKo1C,UAAUS,KAAf,WAAAr8C,OAA+BswC,EAAQK,OACvCnqC,KAAKo1C,UAAUS,KAAf,cAAAr8C,QAAmCswC,EAAQrQ,YAAc,KAAOC,QAAQ,KACxE15B,KAAKo1C,UAAUS,KAAf,4BAAAr8C,OAAgDswC,EAAQpC,yBACxD1nC,KAAKo1C,UAAUS,KAAf,4BAAAr8C,OAAgDswC,EAAQF,qBACxD5pC,KAAKo1C,UAAUS,KAAf,eAAAr8C,OAAmCswC,EAAQ3D,WAC3CnmC,KAAKo1C,UAAUS,KAAf,cAAAr8C,OAAkCswC,EAAQhoB,UAEtCgoB,EAAQpC,yBAGR1nC,KAAKo1C,UAAUS,KAAf,oCACA71C,KAAKm1C,SAASU,KAAK/L,EAAQlC,yBAAyB2O,qBAAqBC,SAGzE1M,EAAQjC,uBAER7nC,KAAKo1C,UAAUS,KAAf,6BACA71C,KAAKo1C,UAAUS,KAAf,WAAAr8C,OAA+BswC,EAAQiH,4BAA4BtH,mBACnEzpC,KAAKo1C,UAAUS,KAAf,yBAAAr8C,OAA6CswC,EAAQiH,4BAA4BrH,mBAGjFI,EAAQ3D,SAER,OAAQ2D,EAAQK,MAEZ,KAAK4F,kBAAgB/I,SACjBhnC,KAAKy2C,uBAAuB3M,GAC5B,MACJ,KAAKiG,kBAAgBvI,OACjBxnC,KAAK02C,qBAAqB5M,GAC1B,MACJ,KAAKiG,kBAAgB3H,YACjBpoC,KAAK22C,sBAAsB7M,GAC3B,MACJ,KAAKiG,kBAAgBzH,KACjBtoC,KAAK42C,mBAAmB9M,GACxB,MACJ,KAAKiG,kBAAgBvH,OACjBxoC,KAAK62C,qBAAqB/M,GAC1B,MACJ,KAAKiG,kBAAgBrH,kBACjB1oC,KAAK82C,gCAAgChN,GACrC,MACJ,KAAKiG,kBAAgBnH,mBACjB5oC,KAAK+2C,iCAAiCjN,GACtC,MACJ,QACI9pC,KAAKo1C,UAAUx+C,MAAf,2BAAA4C,OAAgDswC,EAAQK,WApKpF,CAAAx4C,IAAA,yBAAAN,MAAA,SA4K2By4C,GAEnB,IAAIkN,EACJ,OAAQlN,EAAQhoB,SAEZ,KAAK4G,eAAa5G,QACd9hB,KAAKo1C,UAAUS,KAAf,2BACAmB,EAAmB,IAAIvtB,mBAAiBqgB,EAAQgH,UAChD9wC,KAAKo1C,UAAUS,KAAf,eAAAr8C,OAAmCw9C,EAAiBvb,oBACpDz7B,KAAKo1C,UAAUS,KAAf,UAAAr8C,OAA8Bw9C,EAAiBrb,WAC/C37B,KAAKo1C,UAAUS,KAAf,aAAAr8C,OAAiCw9C,EAAiBp1B,aAClD5hB,KAAKo1C,UAAUS,KAAf,uBACA71C,KAAKm1C,SAASU,KAAMmB,EAAiBC,4BAAlB,wBAAgDD,EAAiBE,qBAAqBV,QACzGx2C,KAAKo1C,UAAUS,KAAf,eAAAr8C,OAAmCw9C,EAAiBzjB,sBACpDvzB,KAAKo1C,UAAUS,KAAf,UAAAr8C,OAA8Bw9C,EAAiBvjB,iBAC/CzzB,KAAKo1C,UAAUS,KAAf,cAAAr8C,OAAkCw9C,EAAiBG,qBACnDn3C,KAAKo1C,UAAUS,KAAf,6BAAAr8C,OAAiDw9C,EAAiBI,yBAClEp3C,KAAKo1C,UAAUS,KAAf,yBAAAr8C,OAA6Cw9C,EAAiBK,sBAC9D,MACJ,KAAK3uB,eAAagD,OACd1rB,KAAKo1C,UAAUS,KAAf,4BACwB,MAApB/L,EAAQgH,WAERkG,EAAmB,IAAIvtB,mBAAiBqgB,EAAQgH,UAChD9wC,KAAKo1C,UAAUS,KAAf,YAAAr8C,OAAgCswC,EAAQgH,SAAS/U,aACjD/7B,KAAKo1C,UAAUS,KAAf,mBAAAr8C,OAAuCswC,EAAQgH,SAASjG,mBACxD7qC,KAAKo1C,UAAUS,KAAf,eAAAr8C,OAAmCw9C,EAAiBvb,oBACpDz7B,KAAKo1C,UAAUS,KAAf,UAAAr8C,OAA8Bw9C,EAAiBrb,WAC/C37B,KAAKo1C,UAAUS,KAAf,aAAAr8C,OAAiCw9C,EAAiBp1B,aAClD5hB,KAAKo1C,UAAUS,KAAf,uBACA71C,KAAKm1C,SAASU,KAAMmB,EAAiBC,4BAAlB,wBACbD,EAAiBE,qBAAqBV,SAGhD,MACJ,KAAK9tB,eAAa+C,QACdzrB,KAAKo1C,UAAUS,KAAf,wDACA71C,KAAKo1C,UAAUS,KAAf,qFACA71C,KAAKo1C,UAAUS,KAAf,6DACA71C,KAAKo1C,UAAUS,KAAf,gDACA,MACJ,QACI,MAAM,IAAIj/C,MAAM,gCAtNhC,CAAAjF,IAAA,uBAAAN,MAAA,SA0NyBy4C,GAEjB,IAAIwN,EACJ,OAAQxN,EAAQhoB,SAEZ,KAAK4G,eAAa5G,QACd9hB,KAAKo1C,UAAUS,KAAf,4BACAyB,EAAiB,IAAIvtB,iBAAe+f,EAAQgH,UAC5C9wC,KAAKo1C,UAAUS,KAAf,eAAAr8C,OAAmC89C,EAAe7b,oBAClDz7B,KAAKo1C,UAAUS,KAAf,UAAAr8C,OAA8B89C,EAAe3b,WAC7C37B,KAAKo1C,UAAUS,KAAf,aAAAr8C,OAAiC89C,EAAe11B,aAChD5hB,KAAKo1C,UAAUS,KAAf,uBACA71C,KAAKm1C,SAASU,KAAMyB,EAAeL,4BAA2E,wBAA7CK,EAAeJ,qBAAqBV,QACrGx2C,KAAKo1C,UAAUS,KAAf,sBAAAr8C,OAA0C89C,EAAeC,oBACzD,MACJ,KAAK7uB,eAAagD,OACd1rB,KAAKo1C,UAAUS,KAAf,oBACwB,MAApB/L,EAAQgH,WAERwG,EAAiB,IAAIvtB,iBAAe+f,EAAQgH,UAC5C9wC,KAAKo1C,UAAUS,KAAf,YAAAr8C,OAAgCswC,EAAQgH,SAAS/U,aACjD/7B,KAAKo1C,UAAUS,KAAf,mBAAAr8C,OAAuCswC,EAAQgH,SAASjG,mBACxD7qC,KAAKo1C,UAAUS,KAAf,eAAAr8C,OAAmC89C,EAAe7b,oBAClDz7B,KAAKo1C,UAAUS,KAAf,UAAAr8C,OAA8B89C,EAAe3b,WAC7C37B,KAAKo1C,UAAUS,KAAf,aAAAr8C,OAAiC89C,EAAe11B,aAChD5hB,KAAKo1C,UAAUS,KAAf,uBACA71C,KAAKm1C,SAASU,KAAMyB,EAAeL,4BAA2E,wBAA7CK,EAAeJ,qBAAqBV,SAEzG,MACJ,KAAK9tB,eAAa+C,QACdzrB,KAAKo1C,UAAUS,KAAK,oEACpB71C,KAAKo1C,UAAUS,KAAK,qFACpB71C,KAAKo1C,UAAUS,KAAK,8CACpB,MACJ,QACI,MAAM,IAAIj/C,MAAM,gCA7PhC,CAAAjF,IAAA,wBAAAN,MAAA,SAiQ0By4C,GAElB,IAAI0N,EACJ,OAAQ1N,EAAQhoB,SAEZ,KAAK4G,eAAa5G,QACd9hB,KAAKo1C,UAAUS,KAAf,+CACA2B,EAAkB,IAAI53B,sBAAoBkqB,EAAQgH,UAClD9wC,KAAKo1C,UAAUS,KAAf,eAAAr8C,OAAmCg+C,EAAgB/b,oBACnDz7B,KAAKo1C,UAAUS,KAAf,UAAAr8C,OAA8Bg+C,EAAgB7b,WAC9C37B,KAAKo1C,UAAUS,KAAf,aAAAr8C,OAAiCg+C,EAAgB51B,aACjD5hB,KAAKo1C,UAAUS,KAAf,uBACA71C,KAAKm1C,SAASU,KAAM2B,EAAgBP,4BAA4E,wBAA9CO,EAAgBN,qBAAqBV,QACvGx2C,KAAKo1C,UAAUS,KAAf,cAAAr8C,OAAkCg+C,EAAgBL,qBAClDn3C,KAAKo1C,UAAUS,KAAf,6BAAAr8C,OAAiDg+C,EAAgBJ,yBACjEp3C,KAAKo1C,UAAUS,KAAf,yBAAAr8C,OAA6Cg+C,EAAgBH,sBAC7D,MACJ,KAAK3uB,eAAagD,OACd1rB,KAAKo1C,UAAUS,KAAf,qBACwB,MAApB/L,EAAQgH,WAER0G,EAAkB,IAAI53B,sBAAoBkqB,EAAQgH,UAClD9wC,KAAKo1C,UAAUS,KAAf,YAAAr8C,OAAgCswC,EAAQgH,SAAS/U,aACjD/7B,KAAKo1C,UAAUS,KAAf,mBAAAr8C,OAAuCswC,EAAQgH,SAASjG,mBACxD7qC,KAAKo1C,UAAUS,KAAf,eAAAr8C,OAAmCg+C,EAAgB/b,oBACnDz7B,KAAKo1C,UAAUS,KAAf,UAAAr8C,OAA8Bg+C,EAAgB7b,WAC9C37B,KAAKo1C,UAAUS,KAAf,aAAAr8C,OAAiCg+C,EAAgB51B,aACjD5hB,KAAKo1C,UAAUS,KAAf,uBACA71C,KAAKm1C,SAASU,KAAK2B,EAAgBN,uBAEvC,MACJ,KAAKxuB,eAAa+C,QACdzrB,KAAKo1C,UAAUS,KAAf,qEACA71C,KAAKo1C,UAAUS,KAAf,qFACA71C,KAAKo1C,UAAUS,KAAf,8CACA,MACJ,QACI,MAAM,IAAIj/C,MAAM,gCAtShC,CAAAjF,IAAA,qBAAAN,MAAA,SA0SuBy4C,GAEf,IACIkN,EACJ,OAAQlN,EAAQhoB,SAEZ,KAAK4G,eAAa5G,QACd9hB,KAAKo1C,UAAUS,KAAK,gCAEpBmB,EADe,IAAI1sB,uBAAqBwf,EAAQgH,UAChBrnB,iBAChCzpB,KAAKo1C,UAAUS,KAAf,eAAAr8C,OAAmCw9C,EAAiBvb,oBACpDz7B,KAAKo1C,UAAUS,KAAf,UAAAr8C,OAA8Bw9C,EAAiBrb,WAC/C37B,KAAKo1C,UAAUS,KAAf,aAAAr8C,OAAiCw9C,EAAiBp1B,aAClD5hB,KAAKo1C,UAAUS,KAAf,iBAAAr8C,OAAqCw9C,EAAiBS,iBACtDz3C,KAAKo1C,UAAUS,KAAf,uBACA71C,KAAKm1C,SAASU,KAAMmB,EAAiBC,4BAA6E,wBAA/CD,EAAiBE,qBAAqBV,QACzGx2C,KAAKo1C,UAAUS,KAAf,eAAAr8C,OAAmCw9C,EAAiBzjB,sBACpDvzB,KAAKo1C,UAAUS,KAAf,6BAAAr8C,OAAiDw9C,EAAiBI,yBAClEp3C,KAAKo1C,UAAUS,KAAf,yBAAAr8C,OAA6Cw9C,EAAiBK,sBAC9D,MACJ,KAAK3uB,eAAagD,OACd1rB,KAAKo1C,UAAUS,KAAf,iCACwB,MAApB/L,EAAQgH,WAGRkG,EADe,IAAI1sB,uBAAqBwf,EAAQgH,UAChBrnB,iBAChCzpB,KAAKo1C,UAAUS,KAAf,YAAAr8C,OAAgCswC,EAAQgH,SAAS/U,aACjD/7B,KAAKo1C,UAAUS,KAAf,mBAAAr8C,OAAuCswC,EAAQgH,SAASjG,mBACxD7qC,KAAKo1C,UAAUS,KAAf,eAAAr8C,OAAmCw9C,EAAiBvb,oBACpDz7B,KAAKo1C,UAAUS,KAAf,UAAAr8C,OAA8Bw9C,EAAiBrb,WAC/C37B,KAAKo1C,UAAUS,KAAf,aAAAr8C,OAAiCw9C,EAAiBp1B,aAClD5hB,KAAKo1C,UAAUS,KAAf,uBACA71C,KAAKm1C,SAASU,KAAKmB,EAAiBE,qBAAqBV,SAE7D,MACJ,KAAK9tB,eAAa+C,QACdzrB,KAAKo1C,UAAUS,KAAK,kEACpB71C,KAAKo1C,UAAUS,KAAK,qFACpB71C,KAAKo1C,UAAUS,KAAK,8CACpB,MACJ,QACI,MAAM,IAAIj/C,MAAM,gCAnVhC,CAAAjF,IAAA,mCAAAN,MAAA,SAuVqCy4C,GAE7B,GAAwB,MAApBA,EAAQgH,SACZ,CACI,IAAIhI,EAAc,IAAIjf,6BAA2BigB,EAAQgH,UACrD1vB,EAAcrpB,SAAS2/C,eAAe,cAAcrmD,MAExD,GAAI+vB,EAAW7rB,OAAS,EAINyK,KAAK2yC,KAAK5J,SAASD,EAAa1nB,IAC/BsH,eAAa+C,QAExBzrB,KAAKo1C,UAAUS,KAAK,iEAEpB71C,KAAKo1C,UAAUS,KAAK,2CAI5B,IAAImB,EAAmB,IAAIvtB,mBAAiBqgB,EAAQgH,UACpD9wC,KAAKo1C,UAAUS,KAAf,aAAAr8C,OAAiCw9C,EAAiBp1B,aAClD5hB,KAAKo1C,UAAUS,KAAf,eAAAr8C,OAAmCw9C,EAAiBvb,oBACpDz7B,KAAKo1C,UAAUS,KAAf,UAAAr8C,OAA8Bw9C,EAAiBrb,WAC/C37B,KAAKo1C,UAAUS,KAAf,YAAAr8C,OAAgCswC,EAAQgH,SAAS/U,aACjD/7B,KAAKo1C,UAAUS,KAAf,uBACA71C,KAAKm1C,SAASU,KAAKmB,EAAiBE,qBAAqBV,aAKzDx2C,KAAKo1C,UAAUS,KAAK,4CAtXhC,CAAAlkD,IAAA,uBAAAN,MAAA,SA0XyBy4C,GAEjB,OAAQA,EAAQhoB,SAEZ,KAAK4G,eAAa5G,QAEd,GADA9hB,KAAKo1C,UAAUS,KAAK,4BACI,MAApB/L,EAAQgH,SACZ,CACI,IAAI6G,EAAiB,IAAIzX,aAAW4J,EAAQgH,UAC5C9wC,KAAKo1C,UAAUS,KAAf,eAAAr8C,OAAmCm+C,EAAelc,oBAClDz7B,KAAKo1C,UAAUS,KAAK,uBACpB71C,KAAKm1C,SAASU,KAAK8B,EAAeC,aAAapB,QAC/Cx2C,KAAKo1C,UAAUS,KAAK,mBAAqB8B,EAAeE,sBACxD73C,KAAKo1C,UAAUS,KAAK,iBAAmB8B,EAAeG,oBACtD93C,KAAKo1C,UAAUS,KAAK,sBAAwB8B,EAAeI,oBAC3D/3C,KAAKo1C,UAAUS,KAAK,wBAA0B8B,EAAeK,uBAC7Dh4C,KAAKo1C,UAAUS,KAAK,kBAAoB8B,EAAe/b,iBACvD57B,KAAKo1C,UAAUS,KAAK,qBAAuB8B,EAAeM,iBAC1Dj4C,KAAKo1C,UAAUS,KAAf,sBAAAr8C,QAA2Cm+C,EAAeO,gBAAkB,KAAOxe,QAAQ,KAC3F15B,KAAKo1C,UAAUS,KAAK,2BAA6B8B,EAAeQ,4BAChEn4C,KAAKo1C,UAAUS,KAAf,4BAAAr8C,QAAiDm+C,EAAeS,2BAA6B,KAAO1e,QAAQ,KAC5G15B,KAAKo1C,UAAUS,KAAK,yBACpB,IAAI5U,EAAU0W,EAAeU,6BAC7B,IAAK,IAAIlmD,KAAK8uC,EAEVjhC,KAAKo1C,UAAUS,KAAK,KAAOp+C,KAAKm2B,UAAUqT,EAAQ9uC,KAG1D,MACJ,KAAKu2B,eAAagD,OAEd,GADA1rB,KAAKo1C,UAAUS,KAAK,wBACI,MAApB/L,EAAQgH,SACZ,CACQ6G,EAAiB,IAAIzX,aAAW4J,EAAQgH,UAC5C9wC,KAAKo1C,UAAUS,KAAf,eAAAr8C,OAAmCm+C,EAAelc,oBAClDz7B,KAAKo1C,UAAUS,KAAf,YAAAr8C,OAAgCswC,EAAQgH,SAAS/U,aACjD/7B,KAAKo1C,UAAUS,KAAK,uBACpB71C,KAAKm1C,SAASU,KAAK8B,EAAeC,cAEtC,MACJ,KAAKlvB,eAAa+C,QACdzrB,KAAKo1C,UAAUS,KAAK,wCACpB,MACJ,QACI,MAAM,IAAIj/C,MAAM,oBAtahC,CAAAjF,IAAA,kCAAAN,MAAA,SA0aoCy4C,GAE5B,OAAQA,EAAQhoB,SAEZ,KAAK4G,eAAa5G,QAEd,GADA9hB,KAAKo1C,UAAUS,KAAK,oCACI,MAApB/L,EAAQgH,SACZ,CACI,IAAI6G,EAAiB,IAAIzX,aAAW4J,EAAQgH,UAC5C9wC,KAAKo1C,UAAUS,KAAf,eAAAr8C,OAAmCm+C,EAAelc,oBAClDz7B,KAAKo1C,UAAUS,KAAf,uBACA71C,KAAKm1C,SAASU,KAAK8B,EAAeC,aAAapB,QAC/Cx2C,KAAKo1C,UAAUS,KAAK,mBAAqB8B,EAAeE,sBACxD73C,KAAKo1C,UAAUS,KAAK,iBAAmB8B,EAAeG,oBACtD93C,KAAKo1C,UAAUS,KAAK,sBAAwB8B,EAAeI,oBAC3D/3C,KAAKo1C,UAAUS,KAAK,wBAA0B8B,EAAeK,uBAC7Dh4C,KAAKo1C,UAAUS,KAAK,kBAAoB8B,EAAe/b,iBACvD57B,KAAKo1C,UAAUS,KAAK,qBAAuB8B,EAAeM,iBAC1Dj4C,KAAKo1C,UAAUS,KAAf,sBAAAr8C,QAA2Cm+C,EAAeO,gBAAkB,KAAOxe,QAAQ,KAC3F15B,KAAKo1C,UAAUS,KAAK,2BAA6B8B,EAAeQ,4BAChEn4C,KAAKo1C,UAAUS,KAAf,4BAAAr8C,QAAiDm+C,EAAeS,2BAA6B,KAAO1e,QAAQ,KAC5G15B,KAAKo1C,UAAUS,KAAf,yBACA,IAAI5U,EAAU0W,EAAeU,6BAC7B,IAAK,IAAIlmD,KAAK8uC,EAEVjhC,KAAKo1C,UAAUS,KAAK,KAAOp+C,KAAKm2B,UAAUqT,EAAQ9uC,KAG1D,MACJ,KAAKu2B,eAAagD,OAEd,GADA1rB,KAAKo1C,UAAUS,KAAK,gCACI,MAApB/L,EAAQgH,SACZ,CACQ6G,EAAiB,IAAIzX,aAAW4J,EAAQgH,UAC5C9wC,KAAKo1C,UAAUS,KAAf,eAAAr8C,OAAmCm+C,EAAelc,oBAClDz7B,KAAKo1C,UAAUS,KAAf,YAAAr8C,OAAgCswC,EAAQgH,SAAS/U,aACjD/7B,KAAKo1C,UAAUS,KAAf,uBACA71C,KAAKm1C,SAASU,KAAK8B,EAAeC,cAEtC,MACJ,KAAKlvB,eAAa+C,QACdzrB,KAAKo1C,UAAUS,KAAK,wCACpB,MACJ,QACI,MAAM,IAAIj/C,MAAM,gCAtdhC,CAAAjF,IAAA,eAAAN,MAAA,WA6dQ,IAAIinD,EAAkB,GAClBC,EAAkBxgD,SAAS2/C,eAAe,oBAC1Cc,EAAkBzgD,SAAS2/C,eAAe,kBAC1Ce,EAAkB1gD,SAAS2/C,eAAe,eAC1CgB,EAAoB3gD,SAAS2/C,eAAe,uBAShD,OAPAa,EAASI,QAAT,OAA8B34C,KAAK2yC,KAAKlN,cACxC8S,EAASI,QAAT,KAA8B34C,KAAK2yC,KAAK/N,YACxC4T,EAAgBnwB,UAAcroB,KAAK2yC,KAAKlN,cACxCgT,EAAapwB,UAAiBroB,KAAK2yC,KAAK/N,YACxC8T,EAAkBrwB,UAAYroB,KAAK2yC,KAAK/N,YAGhC5kC,KAAK2yC,KAAKlN,eAEd,KAAKmK,YAAUrK,SACX,OAAQvlC,KAAK2yC,KAAK/N,aAEd,KAAKiL,UAAQzK,KACTkT,EAAczkD,KAAK,UACnBykD,EAAczkD,KAAK,kBACnBykD,EAAczkD,KAAK,oBACnBykD,EAAczkD,KAAK,wBACnBykD,EAAczkD,KAAK,QACnBykD,EAAczkD,KAAK,iBACnB,MAEJ,KAAKg8C,UAAQ3J,QACT,IAAIoQ,EAAet2C,KAAK2yC,KAAK9N,wBACzByR,EAAa/P,sBAEb+R,EAAczkD,KAAK,gBAElByiD,EAAanQ,SAMdmS,EAAczkD,KAAK,MAJnBykD,EAAczkD,KAAK,eAMvB,MAEJ,KAAKg8C,UAAQzJ,YACb,QACIpmC,KAAKkjC,KAAK1D,KAAV,2BAAAhmC,OAA0CwG,KAAK2yC,KAAK/N,cAG5D,MACJ,KAAKgL,YAAUvK,iBAEXiT,EAAczkD,KAAK,kBACnBykD,EAAczkD,KAAK,oBACnBykD,EAAczkD,KAAK,wBACnBykD,EAAczkD,KAAK,iBAIvB,KAAK+7C,YAAU9J,gBACX,OAAQ9lC,KAAK2yC,KAAK/N,aAEd,KAAKiL,UAAQzK,KACTkT,EAAczkD,KAAK,gBACnBykD,EAAczkD,KAAK,oBACnBykD,EAAczkD,KAAK,wBACnBykD,EAAczkD,KAAK,mBACnBykD,EAAczkD,KAAK,oBACnBykD,EAAczkD,KAAK,iBAEnBykD,EAAczkD,KAAK,YACnBykD,EAAczkD,KAAK,QACnBykD,EAAczkD,KAAK,UACnBykD,EAAczkD,KAAK,WACnBykD,EAAczkD,KAAK,UACnBykD,EAAczkD,KAAK,cACnBykD,EAAczkD,KAAK,WACnBykD,EAAczkD,KAAK,UACnBykD,EAAczkD,KAAK,OACnBykD,EAAczkD,KAAK,oBACnBykD,EAAczkD,KAAK,wBACnB,MACJ,KAAKg8C,UAAQzJ,YAaT,GAZIpmC,KAAK2yC,KAAK7N,mBAAmB4C,yBAE7B4Q,EAAczkD,KAAK,kBACnBykD,EAAczkD,KAAK,oBAGpBmM,KAAK2yC,KAAK7N,mBAAmB+C,uBAE5ByQ,EAAczkD,KAAK,gBACnBykD,EAAczkD,KAAK,oBAGlBmM,KAAK2yC,KAAK7N,mBAAmBqB,UAAanmC,KAAK2yC,KAAK7N,mBAAmB8E,mBAMxE,OAAQ5pC,KAAK2yC,KAAK7N,mBAAmBhjB,SAEjC,KAAK4G,eAAa5G,QACdw2B,EAAczkD,KAAK,MACnB,MACJ,KAAK60B,eAAagD,OAGlB,QAEI4sB,EAAczkD,KAAK,kBAd3BykD,EAAczkD,KAAK,aAkBvB,MACJ,KAAKg8C,UAAQ3J,QACToS,EAAczkD,KAAK,MACnB,MACJ,QACImM,KAAKkjC,KAAK1D,KAAV,2BAAAhmC,OAA0CwG,KAAK2yC,KAAK/N,cAG5D,MAGJ,QACI5kC,KAAKkjC,KAAK1D,KAAV,4BAAAhmC,OAA2CwG,KAAK2yC,KAAKlN,gBAM7D,IADA,IAAImT,EAAS7gD,SAAS8gD,iBAAiB,UAC/B7oD,EAAI,EAAGA,EAAI4oD,EAAOrjD,OAAQvF,IAE9B4oD,EAAO5oD,GAAG8oD,UAAW,EAGzBR,EAAc19C,QAAQ,SAACqgB,GAEnBljB,SAAS2/C,eAAez8B,GAAO69B,UAAW,IAG9C94C,KAAKo1C,UAAUS,SA3mBvB,CAAAlkD,IAAA,qBAAAN,MAAA,WAgnBQ2O,KAAKo1C,UAAUS,KAAf,+CACA71C,KAAKo1C,UAAUS,KAAf,KAAAr8C,OAAyBwG,KAAK6iC,OAA9B,iBAAArpC,OAAoDwG,KAAKijC,eAAzD,OACAjjC,KAAKo1C,UAAUS,KAAf,iBAAAr8C,OAAqCwG,KAAK2yC,KAAKlN,cAA/C,eAAAjsC,OAA0EwG,KAAK2yC,KAAK/N,YAApF,OACA5kC,KAAKo1C,UAAUS,KAAf,iBAAAr8C,OAAqC/B,KAAKm2B,UAAU5tB,KAAK2yC,KAAKzxB,UAC9DlhB,KAAKo1C,UAAUS,KAAf,+CACA71C,KAAKo1C,UAAUS,KAAf,WAAAr8C,OAA+BwG,KAAKg2B,SAApC,WAAAx8B,OAAsDgD,MAAIu8C,iBArnBlE,CAAApnD,IAAA,kBAAAN,MAAA,WA0nBI,IAAA6yB,EAAAlkB,KACIjI,SAAS2/C,eAAe,iBAAiBlM,iBAAiB,QAAS,WAE5DtnB,EAAKyuB,KAAKlN,gBAAkBmK,YAAUrK,UAAYrhB,EAAKyuB,KAAK/N,cAAgBiL,UAAQzK,OAEnFlhB,EAAK2e,OAAiB9qC,SAAS2/C,eAAe,UAAUrmD,MACxD6yB,EAAK+e,eAAiBlrC,SAAS2/C,eAAe,kBAAkBrmD,MAEhE6yB,EAAKyuB,KAAKqG,SAAS90B,EAAK2e,QACxB3e,EAAKyuB,KAAKsG,iBAAiB/0B,EAAK+e,gBAEhC7E,aAAaC,QAAQ,SAAUna,EAAK2e,QACpCzE,aAAaC,QAAQ,iBAAkBna,EAAK+e,gBAC5C/e,EAAKgf,KAAK1D,KAAV,kBAAAhmC,OAAiC0qB,EAAK2e,OAAtC,KAAArpC,OAAgD0qB,EAAK+e,kBAGzD/e,EAAKyuB,KAAKzxB,OAAOkwB,8BAAgCr5C,SAAS2/C,eAAe,oBAAoBwB,QAC7Fh1B,EAAKyuB,KAAKzxB,OAAOmwB,sBAAwBt5C,SAAS2/C,eAAe,wBAAwBwB,QAEzF9a,aAAaC,QAAQ,mBAAoBna,EAAKyuB,KAAKzxB,OAAOkwB,+BAC1DhT,aAAaC,QAAQ,uBAAwBna,EAAKyuB,KAAKzxB,OAAOmwB,uBAE9DntB,EAAKmyB,uBAGTt+C,SAAS2/C,eAAe,QAAQlM,iBAAiB,QAAS,WAEtDtnB,EAAKyuB,KAAKwG,SAGdphD,SAAS2/C,eAAe,gBAAgBlM,iBAAiB,QAAS,WAE9DtnB,EAAKyuB,KAAKyG,uBAGdrhD,SAAS2/C,eAAe,eAAelM,iBAAiB,QAAS,WAE7DtnB,EAAKyuB,KAAK0G,kBAGdthD,SAAS2/C,eAAe,UAAUlM,iBAAiB,QAAS,WAExDtnB,EAAKyuB,KAAK2G,WAGdvhD,SAAS2/C,eAAe,YAAYlM,iBAAiB,QAAS,WAE1D,IAAI3qB,EAAQ,YAAArnB,QAAsB,IAAIyzB,MAAOO,eACzCgQ,EAAkB3gC,SAAS9E,SAAS2/C,eAAe,UAAUrmD,MAAM,IACnEosC,EAAkB5gC,SAAS9E,SAAS2/C,eAAe,cAAcrmD,MAAM,IACvEqsC,EAAkB7gC,SAAS9E,SAAS2/C,eAAe,kBAAkBrmD,MAAM,IAC3EssC,EAAmB5lC,SAAS2/C,eAAe,mBAAmBwB,QAC9DnwC,EAAkBmb,EAAKyuB,KAAK4G,qBAAqB14B,EAAU2c,EAAgBC,EAAWC,EAAeC,GACpG50B,EAAI0nC,WAELvsB,EAAKkxB,UAAUS,KAAf,kCAAAr8C,OAAsDuP,EAAI6Z,QAA1D,sBAIR7qB,SAAS2/C,eAAe,UAAUlM,iBAAiB,QAAS,WAExD,IAAIgO,EAAc38C,SAAS9E,SAAS2/C,eAAe,UAAUrmD,MAAM,IAC/DwvB,EAAQ,UAAArnB,QAAgB,IAAIyzB,MAAOO,eACnCzkB,EAAcmb,EAAKyuB,KAAK8G,iBAAiB54B,EAAU24B,GACvDt1B,EAAKkxB,UAAUS,KAAK9sC,EAAI0nC,UAAY,qDAAhB,gCAAAj3C,OAAuGuP,EAAI6Z,QAA3G,sBAGxB7qB,SAAS2/C,eAAe,WAAWlM,iBAAiB,QAAS,WAEzD,IAAIgO,EAAc38C,SAAS9E,SAAS2/C,eAAe,kBAAkBrmD,MAAM,IAE3E,IAAImoD,EAAS,EAETt1B,EAAKgf,KAAK1D,KAAK,6CAFnB,CAMA,IAAI3e,EAAQ,WAAArnB,QAAiB,IAAIyzB,MAAOO,eACpCzkB,EAAcmb,EAAKyuB,KAAK+G,sBAAsB74B,EAAU24B,GAC5Dt1B,EAAKkxB,UAAUS,KAAK9sC,EAAI0nC,UAAY,sDAAhB,iCAAAj3C,OAAyGuP,EAAI6Z,QAA7G,uBAGxB7qB,SAAS2/C,eAAe,QAAQlM,iBAAiB,QAAS,WAEtD,IAAIgO,EAAc38C,SAAS9E,SAAS2/C,eAAe,UAAUrmD,MAAM,IAC/DwvB,EAAQ,WAAArnB,QAAiB,IAAIyzB,MAAOO,eACpCzkB,EAAcmb,EAAKyuB,KAAKgH,uBAAuB94B,EAAU24B,GAC7Dt1B,EAAKkxB,UAAUS,KAAK9sC,EAAI0nC,UAAY,4DAAhB,uCAAAj3C,OAAqHuP,EAAI6Z,QAAzH,sBAGxB7qB,SAAS2/C,eAAe,kBAAkBlM,iBAAiB,QAAS,WAEhEtnB,EAAKyuB,KAAKiH,iBAAgB,KAG9B7hD,SAAS2/C,eAAe,mBAAmBlM,iBAAiB,QAAS,WAEjEtnB,EAAKyuB,KAAKiH,iBAAgB,KAG9B7hD,SAAS2/C,eAAe,aAAalM,iBAAiB,QAAS,WAE3DtnB,EAAKyuB,KAAKkH,sBAGd9hD,SAAS2/C,eAAe,gBAAgBlM,iBAAiB,QAAS,WAE9D,IAAItO,EAAWnlC,SAAS2/C,eAAe,aAAarmD,MAChD0X,EAAMmb,EAAKyuB,KAAKmH,eAAe5c,GACnChZ,EAAKkxB,UAAUS,KAAK9sC,EAAIooC,YAAJ,kDAAA33C,OAAsEuP,EAAI6Z,QAA1E,mBAGxB7qB,SAAS2/C,eAAe,UAAUlM,iBAAiB,QAAS,WAExD,IAAIziC,EAAMmb,EAAKyuB,KAAKoH,iBAAiBjc,kBAAgBtc,GAAG,WACxD0C,EAAKkxB,UAAUS,KAAK9sC,EAAI0nC,UAAY,qDAAhB,gCAAAj3C,OAAuGuP,EAAI6Z,QAA3G,sBAGxB7qB,SAAS2/C,eAAe,cAAclM,iBAAiB,QAAS,WAE5D,IAAIziC,EAAMmb,EAAKyuB,KAAKqH,0BAA0Blc,kBAAgBtc,GAAG,WACjE0C,EAAKkxB,UAAUS,KAAK9sC,EAAI0nC,UAAY,6DAAhB,wCAAAj3C,OAAuHuP,EAAI6Z,QAA3H,sBAGxB7qB,SAAS2/C,eAAe,MAAMlM,iBAAiB,QAAS,WAEpDtnB,EAAKyuB,KAAKsH,4BACV/1B,EAAKkxB,UAAUQ,QACf1xB,EAAKkxB,UAAU8E,UAAY,gCAC3Bh2B,EAAK4xB,0BAGT/9C,SAAS2/C,eAAe,WAAWlM,iBAAiB,QAAS,WAEzDtnB,EAAKkxB,UAAUQ,QACf,IAAI/0B,EAAW9oB,SAAS2/C,eAAe,cAAcrmD,MACjD0X,EAAMmb,EAAKyuB,KAAKwH,iBAAiBt5B,EAAUkvB,kBAAgB/I,UAC/D9iB,EAAKkxB,UAAUS,KAAK9sC,EAAI0nC,UAAY,uDAAhB,kCAAAj3C,OAA2GuP,EAAI6Z,QAA/G,sBAGxB7qB,SAAS2/C,eAAe,OAAOlM,iBAAiB,QAAS,WAErD,IAAIziC,EAAMmb,EAAKyuB,KAAKyH,oBACpBl2B,EAAKkxB,UAAUS,KAAK9sC,EAAI0nC,UAAY,kDAAhB,6BAAAj3C,OAAiGuP,EAAI6Z,QAArG,sBAGxB7qB,SAAS2/C,eAAe,aAAalM,iBAAiB,QAAS,WAE3DtnB,EAAKyuB,KAAKsH,4BACV/1B,EAAKkxB,UAAUQ,QACf1xB,EAAKkxB,UAAU8E,UAAY,kBAC3Bh2B,EAAK4xB,4BAjxBjB,CAAAnkD,IAAA,qBAAAN,MAAA,WAuxBW+sC,aAAaE,QAAQ,WAEpBt+B,KAAK6iC,OAASzE,aAAaE,QAAQ,UACnCvmC,SAAS2/C,eAAe,UAAUrmD,MAAQ2O,KAAK6iC,QAI/C7iC,KAAK6iC,OAAS9qC,SAAS2/C,eAAe,UAAUrmD,MAGjD+sC,aAAaE,QAAQ,mBAEpBt+B,KAAKijC,eAAiB7E,aAAaE,QAAQ,kBAC3CvmC,SAAS2/C,eAAe,kBAAkBrmD,MAAQ2O,KAAKijC,gBAIvDjjC,KAAKijC,eAAiBlrC,SAAS2/C,eAAe,kBAAkBrmD,MAGpE2O,KAAKi1C,kBAAoBl9C,SAAS2/C,eAAe,oBAAoBwB,QAAuD,SAA7C9a,aAAaE,QAAQ,sBAAkC,EACtIt+B,KAAKk1C,sBAAwBn9C,SAAS2/C,eAAe,wBAAwBwB,QAA2D,SAAjD9a,aAAaE,QAAQ,0BAAsC,EAE/IF,aAAaE,QAAQ,WAAaF,aAAaE,QAAQ,aAEtDt+B,KAAKg1C,YAAc,IAAIjpB,UAAQqS,aAAaE,QAAQ,UAAWF,aAAaE,QAAQ,6CAhzBhGuW,EAAA,GAwzBA98C,SAASyzC,iBAAiB,mBAAoB,WAE1C,IAEI,IAAIpjB,EAAcr0B,QACd+gD,EAAc,IAAIr4C,SAAO1E,SAAS2/C,eAAe,kBAAnC,2DACd3C,EAAc,IAAIt4C,SAAO1E,SAAS2/C,eAAe,aACnC,IAAI7C,EAASzsB,EAAK0sB,EAASC,GACzCY,QAER,MAAMlhD,GAEFV,QAAQoH,MAAM1G","file":"KebabPos.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 4);\n","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(window, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \tfunction hotDisposeChunk(chunkId) {\n/******/ \t\tdelete installedChunks[chunkId];\n/******/ \t}\n/******/ \tvar parentHotUpdateCallback = window[\"webpackHotUpdate\"];\n/******/ \twindow[\"webpackHotUpdate\"] = // eslint-disable-next-line no-unused-vars\n/******/ \tfunction webpackHotUpdateCallback(chunkId, moreModules) {\n/******/ \t\thotAddUpdateChunk(chunkId, moreModules);\n/******/ \t\tif (parentHotUpdateCallback) parentHotUpdateCallback(chunkId, moreModules);\n/******/ \t} ;\n/******/\n/******/ \t// eslint-disable-next-line no-unused-vars\n/******/ \tfunction hotDownloadUpdateChunk(chunkId) {\n/******/ \t\tvar script = document.createElement(\"script\");\n/******/ \t\tscript.charset = \"utf-8\";\n/******/ \t\tscript.src = __webpack_require__.p + \"\" + chunkId + \".\" + hotCurrentHash + \".hot-update.js\";\n/******/ \t\tif (null) script.crossOrigin = null;\n/******/ \t\tdocument.head.appendChild(script);\n/******/ \t}\n/******/\n/******/ \t// eslint-disable-next-line no-unused-vars\n/******/ \tfunction hotDownloadManifest(requestTimeout) {\n/******/ \t\trequestTimeout = requestTimeout || 10000;\n/******/ \t\treturn new Promise(function(resolve, reject) {\n/******/ \t\t\tif (typeof XMLHttpRequest === \"undefined\") {\n/******/ \t\t\t\treturn reject(new Error(\"No browser support\"));\n/******/ \t\t\t}\n/******/ \t\t\ttry {\n/******/ \t\t\t\tvar request = new XMLHttpRequest();\n/******/ \t\t\t\tvar requestPath = __webpack_require__.p + \"\" + hotCurrentHash + \".hot-update.json\";\n/******/ \t\t\t\trequest.open(\"GET\", requestPath, true);\n/******/ \t\t\t\trequest.timeout = requestTimeout;\n/******/ \t\t\t\trequest.send(null);\n/******/ \t\t\t} catch (err) {\n/******/ \t\t\t\treturn reject(err);\n/******/ \t\t\t}\n/******/ \t\t\trequest.onreadystatechange = function() {\n/******/ \t\t\t\tif (request.readyState !== 4) return;\n/******/ \t\t\t\tif (request.status === 0) {\n/******/ \t\t\t\t\t// timeout\n/******/ \t\t\t\t\treject(\n/******/ \t\t\t\t\t\tnew Error(\"Manifest request to \" + requestPath + \" timed out.\")\n/******/ \t\t\t\t\t);\n/******/ \t\t\t\t} else if (request.status === 404) {\n/******/ \t\t\t\t\t// no update available\n/******/ \t\t\t\t\tresolve();\n/******/ \t\t\t\t} else if (request.status !== 200 && request.status !== 304) {\n/******/ \t\t\t\t\t// other failure\n/******/ \t\t\t\t\treject(new Error(\"Manifest request to \" + requestPath + \" failed.\"));\n/******/ \t\t\t\t} else {\n/******/ \t\t\t\t\t// success\n/******/ \t\t\t\t\ttry {\n/******/ \t\t\t\t\t\tvar update = JSON.parse(request.responseText);\n/******/ \t\t\t\t\t} catch (e) {\n/******/ \t\t\t\t\t\treject(e);\n/******/ \t\t\t\t\t\treturn;\n/******/ \t\t\t\t\t}\n/******/ \t\t\t\t\tresolve(update);\n/******/ \t\t\t\t}\n/******/ \t\t\t};\n/******/ \t\t});\n/******/ \t}\n/******/\n/******/ \tvar hotApplyOnUpdate = true;\n/******/ \t// eslint-disable-next-line no-unused-vars\n/******/ \tvar hotCurrentHash = \"0f2587ddeaeee329d1a3\";\n/******/ \tvar hotRequestTimeout = 10000;\n/******/ \tvar hotCurrentModuleData = {};\n/******/ \tvar hotCurrentChildModule;\n/******/ \t// eslint-disable-next-line no-unused-vars\n/******/ \tvar hotCurrentParents = [];\n/******/ \t// eslint-disable-next-line no-unused-vars\n/******/ \tvar hotCurrentParentsTemp = [];\n/******/\n/******/ \t// eslint-disable-next-line no-unused-vars\n/******/ \tfunction hotCreateRequire(moduleId) {\n/******/ \t\tvar me = installedModules[moduleId];\n/******/ \t\tif (!me) return __webpack_require__;\n/******/ \t\tvar fn = function(request) {\n/******/ \t\t\tif (me.hot.active) {\n/******/ \t\t\t\tif (installedModules[request]) {\n/******/ \t\t\t\t\tif (installedModules[request].parents.indexOf(moduleId) === -1) {\n/******/ \t\t\t\t\t\tinstalledModules[request].parents.push(moduleId);\n/******/ \t\t\t\t\t}\n/******/ \t\t\t\t} else {\n/******/ \t\t\t\t\thotCurrentParents = [moduleId];\n/******/ \t\t\t\t\thotCurrentChildModule = request;\n/******/ \t\t\t\t}\n/******/ \t\t\t\tif (me.children.indexOf(request) === -1) {\n/******/ \t\t\t\t\tme.children.push(request);\n/******/ \t\t\t\t}\n/******/ \t\t\t} else {\n/******/ \t\t\t\tconsole.warn(\n/******/ \t\t\t\t\t\"[HMR] unexpected require(\" +\n/******/ \t\t\t\t\t\trequest +\n/******/ \t\t\t\t\t\t\") from disposed module \" +\n/******/ \t\t\t\t\t\tmoduleId\n/******/ \t\t\t\t);\n/******/ \t\t\t\thotCurrentParents = [];\n/******/ \t\t\t}\n/******/ \t\t\treturn __webpack_require__(request);\n/******/ \t\t};\n/******/ \t\tvar ObjectFactory = function ObjectFactory(name) {\n/******/ \t\t\treturn {\n/******/ \t\t\t\tconfigurable: true,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: function() {\n/******/ \t\t\t\t\treturn __webpack_require__[name];\n/******/ \t\t\t\t},\n/******/ \t\t\t\tset: function(value) {\n/******/ \t\t\t\t\t__webpack_require__[name] = value;\n/******/ \t\t\t\t}\n/******/ \t\t\t};\n/******/ \t\t};\n/******/ \t\tfor (var name in __webpack_require__) {\n/******/ \t\t\tif (\n/******/ \t\t\t\tObject.prototype.hasOwnProperty.call(__webpack_require__, name) &&\n/******/ \t\t\t\tname !== \"e\" &&\n/******/ \t\t\t\tname !== \"t\"\n/******/ \t\t\t) {\n/******/ \t\t\t\tObject.defineProperty(fn, name, ObjectFactory(name));\n/******/ \t\t\t}\n/******/ \t\t}\n/******/ \t\tfn.e = function(chunkId) {\n/******/ \t\t\tif (hotStatus === \"ready\") hotSetStatus(\"prepare\");\n/******/ \t\t\thotChunksLoading++;\n/******/ \t\t\treturn __webpack_require__.e(chunkId).then(finishChunkLoading, function(err) {\n/******/ \t\t\t\tfinishChunkLoading();\n/******/ \t\t\t\tthrow err;\n/******/ \t\t\t});\n/******/\n/******/ \t\t\tfunction finishChunkLoading() {\n/******/ \t\t\t\thotChunksLoading--;\n/******/ \t\t\t\tif (hotStatus === \"prepare\") {\n/******/ \t\t\t\t\tif (!hotWaitingFilesMap[chunkId]) {\n/******/ \t\t\t\t\t\thotEnsureUpdateChunk(chunkId);\n/******/ \t\t\t\t\t}\n/******/ \t\t\t\t\tif (hotChunksLoading === 0 && hotWaitingFiles === 0) {\n/******/ \t\t\t\t\t\thotUpdateDownloaded();\n/******/ \t\t\t\t\t}\n/******/ \t\t\t\t}\n/******/ \t\t\t}\n/******/ \t\t};\n/******/ \t\tfn.t = function(value, mode) {\n/******/ \t\t\tif (mode & 1) value = fn(value);\n/******/ \t\t\treturn __webpack_require__.t(value, mode & ~1);\n/******/ \t\t};\n/******/ \t\treturn fn;\n/******/ \t}\n/******/\n/******/ \t// eslint-disable-next-line no-unused-vars\n/******/ \tfunction hotCreateModule(moduleId) {\n/******/ \t\tvar hot = {\n/******/ \t\t\t// private stuff\n/******/ \t\t\t_acceptedDependencies: {},\n/******/ \t\t\t_declinedDependencies: {},\n/******/ \t\t\t_selfAccepted: false,\n/******/ \t\t\t_selfDeclined: false,\n/******/ \t\t\t_disposeHandlers: [],\n/******/ \t\t\t_main: hotCurrentChildModule !== moduleId,\n/******/\n/******/ \t\t\t// Module API\n/******/ \t\t\tactive: true,\n/******/ \t\t\taccept: function(dep, callback) {\n/******/ \t\t\t\tif (dep === undefined) hot._selfAccepted = true;\n/******/ \t\t\t\telse if (typeof dep === \"function\") hot._selfAccepted = dep;\n/******/ \t\t\t\telse if (typeof dep === \"object\")\n/******/ \t\t\t\t\tfor (var i = 0; i < dep.length; i++)\n/******/ \t\t\t\t\t\thot._acceptedDependencies[dep[i]] = callback || function() {};\n/******/ \t\t\t\telse hot._acceptedDependencies[dep] = callback || function() {};\n/******/ \t\t\t},\n/******/ \t\t\tdecline: function(dep) {\n/******/ \t\t\t\tif (dep === undefined) hot._selfDeclined = true;\n/******/ \t\t\t\telse if (typeof dep === \"object\")\n/******/ \t\t\t\t\tfor (var i = 0; i < dep.length; i++)\n/******/ \t\t\t\t\t\thot._declinedDependencies[dep[i]] = true;\n/******/ \t\t\t\telse hot._declinedDependencies[dep] = true;\n/******/ \t\t\t},\n/******/ \t\t\tdispose: function(callback) {\n/******/ \t\t\t\thot._disposeHandlers.push(callback);\n/******/ \t\t\t},\n/******/ \t\t\taddDisposeHandler: function(callback) {\n/******/ \t\t\t\thot._disposeHandlers.push(callback);\n/******/ \t\t\t},\n/******/ \t\t\tremoveDisposeHandler: function(callback) {\n/******/ \t\t\t\tvar idx = hot._disposeHandlers.indexOf(callback);\n/******/ \t\t\t\tif (idx >= 0) hot._disposeHandlers.splice(idx, 1);\n/******/ \t\t\t},\n/******/\n/******/ \t\t\t// Management API\n/******/ \t\t\tcheck: hotCheck,\n/******/ \t\t\tapply: hotApply,\n/******/ \t\t\tstatus: function(l) {\n/******/ \t\t\t\tif (!l) return hotStatus;\n/******/ \t\t\t\thotStatusHandlers.push(l);\n/******/ \t\t\t},\n/******/ \t\t\taddStatusHandler: function(l) {\n/******/ \t\t\t\thotStatusHandlers.push(l);\n/******/ \t\t\t},\n/******/ \t\t\tremoveStatusHandler: function(l) {\n/******/ \t\t\t\tvar idx = hotStatusHandlers.indexOf(l);\n/******/ \t\t\t\tif (idx >= 0) hotStatusHandlers.splice(idx, 1);\n/******/ \t\t\t},\n/******/\n/******/ \t\t\t//inherit from previous dispose call\n/******/ \t\t\tdata: hotCurrentModuleData[moduleId]\n/******/ \t\t};\n/******/ \t\thotCurrentChildModule = undefined;\n/******/ \t\treturn hot;\n/******/ \t}\n/******/\n/******/ \tvar hotStatusHandlers = [];\n/******/ \tvar hotStatus = \"idle\";\n/******/\n/******/ \tfunction hotSetStatus(newStatus) {\n/******/ \t\thotStatus = newStatus;\n/******/ \t\tfor (var i = 0; i < hotStatusHandlers.length; i++)\n/******/ \t\t\thotStatusHandlers[i].call(null, newStatus);\n/******/ \t}\n/******/\n/******/ \t// while downloading\n/******/ \tvar hotWaitingFiles = 0;\n/******/ \tvar hotChunksLoading = 0;\n/******/ \tvar hotWaitingFilesMap = {};\n/******/ \tvar hotRequestedFilesMap = {};\n/******/ \tvar hotAvailableFilesMap = {};\n/******/ \tvar hotDeferred;\n/******/\n/******/ \t// The update info\n/******/ \tvar hotUpdate, hotUpdateNewHash;\n/******/\n/******/ \tfunction toModuleId(id) {\n/******/ \t\tvar isNumber = +id + \"\" === id;\n/******/ \t\treturn isNumber ? +id : id;\n/******/ \t}\n/******/\n/******/ \tfunction hotCheck(apply) {\n/******/ \t\tif (hotStatus !== \"idle\") {\n/******/ \t\t\tthrow new Error(\"check() is only allowed in idle status\");\n/******/ \t\t}\n/******/ \t\thotApplyOnUpdate = apply;\n/******/ \t\thotSetStatus(\"check\");\n/******/ \t\treturn hotDownloadManifest(hotRequestTimeout).then(function(update) {\n/******/ \t\t\tif (!update) {\n/******/ \t\t\t\thotSetStatus(\"idle\");\n/******/ \t\t\t\treturn null;\n/******/ \t\t\t}\n/******/ \t\t\thotRequestedFilesMap = {};\n/******/ \t\t\thotWaitingFilesMap = {};\n/******/ \t\t\thotAvailableFilesMap = update.c;\n/******/ \t\t\thotUpdateNewHash = update.h;\n/******/\n/******/ \t\t\thotSetStatus(\"prepare\");\n/******/ \t\t\tvar promise = new Promise(function(resolve, reject) {\n/******/ \t\t\t\thotDeferred = {\n/******/ \t\t\t\t\tresolve: resolve,\n/******/ \t\t\t\t\treject: reject\n/******/ \t\t\t\t};\n/******/ \t\t\t});\n/******/ \t\t\thotUpdate = {};\n/******/ \t\t\tvar chunkId = \"main\";\n/******/ \t\t\t// eslint-disable-next-line no-lone-blocks\n/******/ \t\t\t{\n/******/ \t\t\t\t/*globals chunkId */\n/******/ \t\t\t\thotEnsureUpdateChunk(chunkId);\n/******/ \t\t\t}\n/******/ \t\t\tif (\n/******/ \t\t\t\thotStatus === \"prepare\" &&\n/******/ \t\t\t\thotChunksLoading === 0 &&\n/******/ \t\t\t\thotWaitingFiles === 0\n/******/ \t\t\t) {\n/******/ \t\t\t\thotUpdateDownloaded();\n/******/ \t\t\t}\n/******/ \t\t\treturn promise;\n/******/ \t\t});\n/******/ \t}\n/******/\n/******/ \t// eslint-disable-next-line no-unused-vars\n/******/ \tfunction hotAddUpdateChunk(chunkId, moreModules) {\n/******/ \t\tif (!hotAvailableFilesMap[chunkId] || !hotRequestedFilesMap[chunkId])\n/******/ \t\t\treturn;\n/******/ \t\thotRequestedFilesMap[chunkId] = false;\n/******/ \t\tfor (var moduleId in moreModules) {\n/******/ \t\t\tif (Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n/******/ \t\t\t\thotUpdate[moduleId] = moreModules[moduleId];\n/******/ \t\t\t}\n/******/ \t\t}\n/******/ \t\tif (--hotWaitingFiles === 0 && hotChunksLoading === 0) {\n/******/ \t\t\thotUpdateDownloaded();\n/******/ \t\t}\n/******/ \t}\n/******/\n/******/ \tfunction hotEnsureUpdateChunk(chunkId) {\n/******/ \t\tif (!hotAvailableFilesMap[chunkId]) {\n/******/ \t\t\thotWaitingFilesMap[chunkId] = true;\n/******/ \t\t} else {\n/******/ \t\t\thotRequestedFilesMap[chunkId] = true;\n/******/ \t\t\thotWaitingFiles++;\n/******/ \t\t\thotDownloadUpdateChunk(chunkId);\n/******/ \t\t}\n/******/ \t}\n/******/\n/******/ \tfunction hotUpdateDownloaded() {\n/******/ \t\thotSetStatus(\"ready\");\n/******/ \t\tvar deferred = hotDeferred;\n/******/ \t\thotDeferred = null;\n/******/ \t\tif (!deferred) return;\n/******/ \t\tif (hotApplyOnUpdate) {\n/******/ \t\t\t// Wrap deferred object in Promise to mark it as a well-handled Promise to\n/******/ \t\t\t// avoid triggering uncaught exception warning in Chrome.\n/******/ \t\t\t// See https://bugs.chromium.org/p/chromium/issues/detail?id=465666\n/******/ \t\t\tPromise.resolve()\n/******/ \t\t\t\t.then(function() {\n/******/ \t\t\t\t\treturn hotApply(hotApplyOnUpdate);\n/******/ \t\t\t\t})\n/******/ \t\t\t\t.then(\n/******/ \t\t\t\t\tfunction(result) {\n/******/ \t\t\t\t\t\tdeferred.resolve(result);\n/******/ \t\t\t\t\t},\n/******/ \t\t\t\t\tfunction(err) {\n/******/ \t\t\t\t\t\tdeferred.reject(err);\n/******/ \t\t\t\t\t}\n/******/ \t\t\t\t);\n/******/ \t\t} else {\n/******/ \t\t\tvar outdatedModules = [];\n/******/ \t\t\tfor (var id in hotUpdate) {\n/******/ \t\t\t\tif (Object.prototype.hasOwnProperty.call(hotUpdate, id)) {\n/******/ \t\t\t\t\toutdatedModules.push(toModuleId(id));\n/******/ \t\t\t\t}\n/******/ \t\t\t}\n/******/ \t\t\tdeferred.resolve(outdatedModules);\n/******/ \t\t}\n/******/ \t}\n/******/\n/******/ \tfunction hotApply(options) {\n/******/ \t\tif (hotStatus !== \"ready\")\n/******/ \t\t\tthrow new Error(\"apply() is only allowed in ready status\");\n/******/ \t\toptions = options || {};\n/******/\n/******/ \t\tvar cb;\n/******/ \t\tvar i;\n/******/ \t\tvar j;\n/******/ \t\tvar module;\n/******/ \t\tvar moduleId;\n/******/\n/******/ \t\tfunction getAffectedStuff(updateModuleId) {\n/******/ \t\t\tvar outdatedModules = [updateModuleId];\n/******/ \t\t\tvar outdatedDependencies = {};\n/******/\n/******/ \t\t\tvar queue = outdatedModules.slice().map(function(id) {\n/******/ \t\t\t\treturn {\n/******/ \t\t\t\t\tchain: [id],\n/******/ \t\t\t\t\tid: id\n/******/ \t\t\t\t};\n/******/ \t\t\t});\n/******/ \t\t\twhile (queue.length > 0) {\n/******/ \t\t\t\tvar queueItem = queue.pop();\n/******/ \t\t\t\tvar moduleId = queueItem.id;\n/******/ \t\t\t\tvar chain = queueItem.chain;\n/******/ \t\t\t\tmodule = installedModules[moduleId];\n/******/ \t\t\t\tif (!module || module.hot._selfAccepted) continue;\n/******/ \t\t\t\tif (module.hot._selfDeclined) {\n/******/ \t\t\t\t\treturn {\n/******/ \t\t\t\t\t\ttype: \"self-declined\",\n/******/ \t\t\t\t\t\tchain: chain,\n/******/ \t\t\t\t\t\tmoduleId: moduleId\n/******/ \t\t\t\t\t};\n/******/ \t\t\t\t}\n/******/ \t\t\t\tif (module.hot._main) {\n/******/ \t\t\t\t\treturn {\n/******/ \t\t\t\t\t\ttype: \"unaccepted\",\n/******/ \t\t\t\t\t\tchain: chain,\n/******/ \t\t\t\t\t\tmoduleId: moduleId\n/******/ \t\t\t\t\t};\n/******/ \t\t\t\t}\n/******/ \t\t\t\tfor (var i = 0; i < module.parents.length; i++) {\n/******/ \t\t\t\t\tvar parentId = module.parents[i];\n/******/ \t\t\t\t\tvar parent = installedModules[parentId];\n/******/ \t\t\t\t\tif (!parent) continue;\n/******/ \t\t\t\t\tif (parent.hot._declinedDependencies[moduleId]) {\n/******/ \t\t\t\t\t\treturn {\n/******/ \t\t\t\t\t\t\ttype: \"declined\",\n/******/ \t\t\t\t\t\t\tchain: chain.concat([parentId]),\n/******/ \t\t\t\t\t\t\tmoduleId: moduleId,\n/******/ \t\t\t\t\t\t\tparentId: parentId\n/******/ \t\t\t\t\t\t};\n/******/ \t\t\t\t\t}\n/******/ \t\t\t\t\tif (outdatedModules.indexOf(parentId) !== -1) continue;\n/******/ \t\t\t\t\tif (parent.hot._acceptedDependencies[moduleId]) {\n/******/ \t\t\t\t\t\tif (!outdatedDependencies[parentId])\n/******/ \t\t\t\t\t\t\toutdatedDependencies[parentId] = [];\n/******/ \t\t\t\t\t\taddAllToSet(outdatedDependencies[parentId], [moduleId]);\n/******/ \t\t\t\t\t\tcontinue;\n/******/ \t\t\t\t\t}\n/******/ \t\t\t\t\tdelete outdatedDependencies[parentId];\n/******/ \t\t\t\t\toutdatedModules.push(parentId);\n/******/ \t\t\t\t\tqueue.push({\n/******/ \t\t\t\t\t\tchain: chain.concat([parentId]),\n/******/ \t\t\t\t\t\tid: parentId\n/******/ \t\t\t\t\t});\n/******/ \t\t\t\t}\n/******/ \t\t\t}\n/******/\n/******/ \t\t\treturn {\n/******/ \t\t\t\ttype: \"accepted\",\n/******/ \t\t\t\tmoduleId: updateModuleId,\n/******/ \t\t\t\toutdatedModules: outdatedModules,\n/******/ \t\t\t\toutdatedDependencies: outdatedDependencies\n/******/ \t\t\t};\n/******/ \t\t}\n/******/\n/******/ \t\tfunction addAllToSet(a, b) {\n/******/ \t\t\tfor (var i = 0; i < b.length; i++) {\n/******/ \t\t\t\tvar item = b[i];\n/******/ \t\t\t\tif (a.indexOf(item) === -1) a.push(item);\n/******/ \t\t\t}\n/******/ \t\t}\n/******/\n/******/ \t\t// at begin all updates modules are outdated\n/******/ \t\t// the \"outdated\" status can propagate to parents if they don't accept the children\n/******/ \t\tvar outdatedDependencies = {};\n/******/ \t\tvar outdatedModules = [];\n/******/ \t\tvar appliedUpdate = {};\n/******/\n/******/ \t\tvar warnUnexpectedRequire = function warnUnexpectedRequire() {\n/******/ \t\t\tconsole.warn(\n/******/ \t\t\t\t\"[HMR] unexpected require(\" + result.moduleId + \") to disposed module\"\n/******/ \t\t\t);\n/******/ \t\t};\n/******/\n/******/ \t\tfor (var id in hotUpdate) {\n/******/ \t\t\tif (Object.prototype.hasOwnProperty.call(hotUpdate, id)) {\n/******/ \t\t\t\tmoduleId = toModuleId(id);\n/******/ \t\t\t\t/** @type {TODO} */\n/******/ \t\t\t\tvar result;\n/******/ \t\t\t\tif (hotUpdate[id]) {\n/******/ \t\t\t\t\tresult = getAffectedStuff(moduleId);\n/******/ \t\t\t\t} else {\n/******/ \t\t\t\t\tresult = {\n/******/ \t\t\t\t\t\ttype: \"disposed\",\n/******/ \t\t\t\t\t\tmoduleId: id\n/******/ \t\t\t\t\t};\n/******/ \t\t\t\t}\n/******/ \t\t\t\t/** @type {Error|false} */\n/******/ \t\t\t\tvar abortError = false;\n/******/ \t\t\t\tvar doApply = false;\n/******/ \t\t\t\tvar doDispose = false;\n/******/ \t\t\t\tvar chainInfo = \"\";\n/******/ \t\t\t\tif (result.chain) {\n/******/ \t\t\t\t\tchainInfo = \"\\nUpdate propagation: \" + result.chain.join(\" -> \");\n/******/ \t\t\t\t}\n/******/ \t\t\t\tswitch (result.type) {\n/******/ \t\t\t\t\tcase \"self-declined\":\n/******/ \t\t\t\t\t\tif (options.onDeclined) options.onDeclined(result);\n/******/ \t\t\t\t\t\tif (!options.ignoreDeclined)\n/******/ \t\t\t\t\t\t\tabortError = new Error(\n/******/ \t\t\t\t\t\t\t\t\"Aborted because of self decline: \" +\n/******/ \t\t\t\t\t\t\t\t\tresult.moduleId +\n/******/ \t\t\t\t\t\t\t\t\tchainInfo\n/******/ \t\t\t\t\t\t\t);\n/******/ \t\t\t\t\t\tbreak;\n/******/ \t\t\t\t\tcase \"declined\":\n/******/ \t\t\t\t\t\tif (options.onDeclined) options.onDeclined(result);\n/******/ \t\t\t\t\t\tif (!options.ignoreDeclined)\n/******/ \t\t\t\t\t\t\tabortError = new Error(\n/******/ \t\t\t\t\t\t\t\t\"Aborted because of declined dependency: \" +\n/******/ \t\t\t\t\t\t\t\t\tresult.moduleId +\n/******/ \t\t\t\t\t\t\t\t\t\" in \" +\n/******/ \t\t\t\t\t\t\t\t\tresult.parentId +\n/******/ \t\t\t\t\t\t\t\t\tchainInfo\n/******/ \t\t\t\t\t\t\t);\n/******/ \t\t\t\t\t\tbreak;\n/******/ \t\t\t\t\tcase \"unaccepted\":\n/******/ \t\t\t\t\t\tif (options.onUnaccepted) options.onUnaccepted(result);\n/******/ \t\t\t\t\t\tif (!options.ignoreUnaccepted)\n/******/ \t\t\t\t\t\t\tabortError = new Error(\n/******/ \t\t\t\t\t\t\t\t\"Aborted because \" + moduleId + \" is not accepted\" + chainInfo\n/******/ \t\t\t\t\t\t\t);\n/******/ \t\t\t\t\t\tbreak;\n/******/ \t\t\t\t\tcase \"accepted\":\n/******/ \t\t\t\t\t\tif (options.onAccepted) options.onAccepted(result);\n/******/ \t\t\t\t\t\tdoApply = true;\n/******/ \t\t\t\t\t\tbreak;\n/******/ \t\t\t\t\tcase \"disposed\":\n/******/ \t\t\t\t\t\tif (options.onDisposed) options.onDisposed(result);\n/******/ \t\t\t\t\t\tdoDispose = true;\n/******/ \t\t\t\t\t\tbreak;\n/******/ \t\t\t\t\tdefault:\n/******/ \t\t\t\t\t\tthrow new Error(\"Unexception type \" + result.type);\n/******/ \t\t\t\t}\n/******/ \t\t\t\tif (abortError) {\n/******/ \t\t\t\t\thotSetStatus(\"abort\");\n/******/ \t\t\t\t\treturn Promise.reject(abortError);\n/******/ \t\t\t\t}\n/******/ \t\t\t\tif (doApply) {\n/******/ \t\t\t\t\tappliedUpdate[moduleId] = hotUpdate[moduleId];\n/******/ \t\t\t\t\taddAllToSet(outdatedModules, result.outdatedModules);\n/******/ \t\t\t\t\tfor (moduleId in result.outdatedDependencies) {\n/******/ \t\t\t\t\t\tif (\n/******/ \t\t\t\t\t\t\tObject.prototype.hasOwnProperty.call(\n/******/ \t\t\t\t\t\t\t\tresult.outdatedDependencies,\n/******/ \t\t\t\t\t\t\t\tmoduleId\n/******/ \t\t\t\t\t\t\t)\n/******/ \t\t\t\t\t\t) {\n/******/ \t\t\t\t\t\t\tif (!outdatedDependencies[moduleId])\n/******/ \t\t\t\t\t\t\t\toutdatedDependencies[moduleId] = [];\n/******/ \t\t\t\t\t\t\taddAllToSet(\n/******/ \t\t\t\t\t\t\t\toutdatedDependencies[moduleId],\n/******/ \t\t\t\t\t\t\t\tresult.outdatedDependencies[moduleId]\n/******/ \t\t\t\t\t\t\t);\n/******/ \t\t\t\t\t\t}\n/******/ \t\t\t\t\t}\n/******/ \t\t\t\t}\n/******/ \t\t\t\tif (doDispose) {\n/******/ \t\t\t\t\taddAllToSet(outdatedModules, [result.moduleId]);\n/******/ \t\t\t\t\tappliedUpdate[moduleId] = warnUnexpectedRequire;\n/******/ \t\t\t\t}\n/******/ \t\t\t}\n/******/ \t\t}\n/******/\n/******/ \t\t// Store self accepted outdated modules to require them later by the module system\n/******/ \t\tvar outdatedSelfAcceptedModules = [];\n/******/ \t\tfor (i = 0; i < outdatedModules.length; i++) {\n/******/ \t\t\tmoduleId = outdatedModules[i];\n/******/ \t\t\tif (\n/******/ \t\t\t\tinstalledModules[moduleId] &&\n/******/ \t\t\t\tinstalledModules[moduleId].hot._selfAccepted\n/******/ \t\t\t)\n/******/ \t\t\t\toutdatedSelfAcceptedModules.push({\n/******/ \t\t\t\t\tmodule: moduleId,\n/******/ \t\t\t\t\terrorHandler: installedModules[moduleId].hot._selfAccepted\n/******/ \t\t\t\t});\n/******/ \t\t}\n/******/\n/******/ \t\t// Now in \"dispose\" phase\n/******/ \t\thotSetStatus(\"dispose\");\n/******/ \t\tObject.keys(hotAvailableFilesMap).forEach(function(chunkId) {\n/******/ \t\t\tif (hotAvailableFilesMap[chunkId] === false) {\n/******/ \t\t\t\thotDisposeChunk(chunkId);\n/******/ \t\t\t}\n/******/ \t\t});\n/******/\n/******/ \t\tvar idx;\n/******/ \t\tvar queue = outdatedModules.slice();\n/******/ \t\twhile (queue.length > 0) {\n/******/ \t\t\tmoduleId = queue.pop();\n/******/ \t\t\tmodule = installedModules[moduleId];\n/******/ \t\t\tif (!module) continue;\n/******/\n/******/ \t\t\tvar data = {};\n/******/\n/******/ \t\t\t// Call dispose handlers\n/******/ \t\t\tvar disposeHandlers = module.hot._disposeHandlers;\n/******/ \t\t\tfor (j = 0; j < disposeHandlers.length; j++) {\n/******/ \t\t\t\tcb = disposeHandlers[j];\n/******/ \t\t\t\tcb(data);\n/******/ \t\t\t}\n/******/ \t\t\thotCurrentModuleData[moduleId] = data;\n/******/\n/******/ \t\t\t// disable module (this disables requires from this module)\n/******/ \t\t\tmodule.hot.active = false;\n/******/\n/******/ \t\t\t// remove module from cache\n/******/ \t\t\tdelete installedModules[moduleId];\n/******/\n/******/ \t\t\t// when disposing there is no need to call dispose handler\n/******/ \t\t\tdelete outdatedDependencies[moduleId];\n/******/\n/******/ \t\t\t// remove \"parents\" references from all children\n/******/ \t\t\tfor (j = 0; j < module.children.length; j++) {\n/******/ \t\t\t\tvar child = installedModules[module.children[j]];\n/******/ \t\t\t\tif (!child) continue;\n/******/ \t\t\t\tidx = child.parents.indexOf(moduleId);\n/******/ \t\t\t\tif (idx >= 0) {\n/******/ \t\t\t\t\tchild.parents.splice(idx, 1);\n/******/ \t\t\t\t}\n/******/ \t\t\t}\n/******/ \t\t}\n/******/\n/******/ \t\t// remove outdated dependency from module children\n/******/ \t\tvar dependency;\n/******/ \t\tvar moduleOutdatedDependencies;\n/******/ \t\tfor (moduleId in outdatedDependencies) {\n/******/ \t\t\tif (\n/******/ \t\t\t\tObject.prototype.hasOwnProperty.call(outdatedDependencies, moduleId)\n/******/ \t\t\t) {\n/******/ \t\t\t\tmodule = installedModules[moduleId];\n/******/ \t\t\t\tif (module) {\n/******/ \t\t\t\t\tmoduleOutdatedDependencies = outdatedDependencies[moduleId];\n/******/ \t\t\t\t\tfor (j = 0; j < moduleOutdatedDependencies.length; j++) {\n/******/ \t\t\t\t\t\tdependency = moduleOutdatedDependencies[j];\n/******/ \t\t\t\t\t\tidx = module.children.indexOf(dependency);\n/******/ \t\t\t\t\t\tif (idx >= 0) module.children.splice(idx, 1);\n/******/ \t\t\t\t\t}\n/******/ \t\t\t\t}\n/******/ \t\t\t}\n/******/ \t\t}\n/******/\n/******/ \t\t// Not in \"apply\" phase\n/******/ \t\thotSetStatus(\"apply\");\n/******/\n/******/ \t\thotCurrentHash = hotUpdateNewHash;\n/******/\n/******/ \t\t// insert new code\n/******/ \t\tfor (moduleId in appliedUpdate) {\n/******/ \t\t\tif (Object.prototype.hasOwnProperty.call(appliedUpdate, moduleId)) {\n/******/ \t\t\t\tmodules[moduleId] = appliedUpdate[moduleId];\n/******/ \t\t\t}\n/******/ \t\t}\n/******/\n/******/ \t\t// call accept handlers\n/******/ \t\tvar error = null;\n/******/ \t\tfor (moduleId in outdatedDependencies) {\n/******/ \t\t\tif (\n/******/ \t\t\t\tObject.prototype.hasOwnProperty.call(outdatedDependencies, moduleId)\n/******/ \t\t\t) {\n/******/ \t\t\t\tmodule = installedModules[moduleId];\n/******/ \t\t\t\tif (module) {\n/******/ \t\t\t\t\tmoduleOutdatedDependencies = outdatedDependencies[moduleId];\n/******/ \t\t\t\t\tvar callbacks = [];\n/******/ \t\t\t\t\tfor (i = 0; i < moduleOutdatedDependencies.length; i++) {\n/******/ \t\t\t\t\t\tdependency = moduleOutdatedDependencies[i];\n/******/ \t\t\t\t\t\tcb = module.hot._acceptedDependencies[dependency];\n/******/ \t\t\t\t\t\tif (cb) {\n/******/ \t\t\t\t\t\t\tif (callbacks.indexOf(cb) !== -1) continue;\n/******/ \t\t\t\t\t\t\tcallbacks.push(cb);\n/******/ \t\t\t\t\t\t}\n/******/ \t\t\t\t\t}\n/******/ \t\t\t\t\tfor (i = 0; i < callbacks.length; i++) {\n/******/ \t\t\t\t\t\tcb = callbacks[i];\n/******/ \t\t\t\t\t\ttry {\n/******/ \t\t\t\t\t\t\tcb(moduleOutdatedDependencies);\n/******/ \t\t\t\t\t\t} catch (err) {\n/******/ \t\t\t\t\t\t\tif (options.onErrored) {\n/******/ \t\t\t\t\t\t\t\toptions.onErrored({\n/******/ \t\t\t\t\t\t\t\t\ttype: \"accept-errored\",\n/******/ \t\t\t\t\t\t\t\t\tmoduleId: moduleId,\n/******/ \t\t\t\t\t\t\t\t\tdependencyId: moduleOutdatedDependencies[i],\n/******/ \t\t\t\t\t\t\t\t\terror: err\n/******/ \t\t\t\t\t\t\t\t});\n/******/ \t\t\t\t\t\t\t}\n/******/ \t\t\t\t\t\t\tif (!options.ignoreErrored) {\n/******/ \t\t\t\t\t\t\t\tif (!error) error = err;\n/******/ \t\t\t\t\t\t\t}\n/******/ \t\t\t\t\t\t}\n/******/ \t\t\t\t\t}\n/******/ \t\t\t\t}\n/******/ \t\t\t}\n/******/ \t\t}\n/******/\n/******/ \t\t// Load self accepted modules\n/******/ \t\tfor (i = 0; i < outdatedSelfAcceptedModules.length; i++) {\n/******/ \t\t\tvar item = outdatedSelfAcceptedModules[i];\n/******/ \t\t\tmoduleId = item.module;\n/******/ \t\t\thotCurrentParents = [moduleId];\n/******/ \t\t\ttry {\n/******/ \t\t\t\t__webpack_require__(moduleId);\n/******/ \t\t\t} catch (err) {\n/******/ \t\t\t\tif (typeof item.errorHandler === \"function\") {\n/******/ \t\t\t\t\ttry {\n/******/ \t\t\t\t\t\titem.errorHandler(err);\n/******/ \t\t\t\t\t} catch (err2) {\n/******/ \t\t\t\t\t\tif (options.onErrored) {\n/******/ \t\t\t\t\t\t\toptions.onErrored({\n/******/ \t\t\t\t\t\t\t\ttype: \"self-accept-error-handler-errored\",\n/******/ \t\t\t\t\t\t\t\tmoduleId: moduleId,\n/******/ \t\t\t\t\t\t\t\terror: err2,\n/******/ \t\t\t\t\t\t\t\toriginalError: err\n/******/ \t\t\t\t\t\t\t});\n/******/ \t\t\t\t\t\t}\n/******/ \t\t\t\t\t\tif (!options.ignoreErrored) {\n/******/ \t\t\t\t\t\t\tif (!error) error = err2;\n/******/ \t\t\t\t\t\t}\n/******/ \t\t\t\t\t\tif (!error) error = err;\n/******/ \t\t\t\t\t}\n/******/ \t\t\t\t} else {\n/******/ \t\t\t\t\tif (options.onErrored) {\n/******/ \t\t\t\t\t\toptions.onErrored({\n/******/ \t\t\t\t\t\t\ttype: \"self-accept-errored\",\n/******/ \t\t\t\t\t\t\tmoduleId: moduleId,\n/******/ \t\t\t\t\t\t\terror: err\n/******/ \t\t\t\t\t\t});\n/******/ \t\t\t\t\t}\n/******/ \t\t\t\t\tif (!options.ignoreErrored) {\n/******/ \t\t\t\t\t\tif (!error) error = err;\n/******/ \t\t\t\t\t}\n/******/ \t\t\t\t}\n/******/ \t\t\t}\n/******/ \t\t}\n/******/\n/******/ \t\t// handle errors in accept handlers and self accepted module load\n/******/ \t\tif (error) {\n/******/ \t\t\thotSetStatus(\"fail\");\n/******/ \t\t\treturn Promise.reject(error);\n/******/ \t\t}\n/******/\n/******/ \t\thotSetStatus(\"idle\");\n/******/ \t\treturn new Promise(function(resolve) {\n/******/ \t\t\tresolve(outdatedModules);\n/******/ \t\t});\n/******/ \t}\n/******/\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {},\n/******/ \t\t\thot: hotCreateModule(moduleId),\n/******/ \t\t\tparents: (hotCurrentParentsTemp = hotCurrentParents, hotCurrentParents = [], hotCurrentParentsTemp),\n/******/ \t\t\tchildren: []\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, hotCreateRequire(moduleId));\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// define __esModule on exports\n/******/ \t__webpack_require__.r = function(exports) {\n/******/ \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n/******/ \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n/******/ \t\t}\n/******/ \t\tObject.defineProperty(exports, '__esModule', { value: true });\n/******/ \t};\n/******/\n/******/ \t// create a fake namespace object\n/******/ \t// mode & 1: value is a module id, require it\n/******/ \t// mode & 2: merge all properties of value into the ns\n/******/ \t// mode & 4: return value when already ns object\n/******/ \t// mode & 8|1: behave like require\n/******/ \t__webpack_require__.t = function(value, mode) {\n/******/ \t\tif(mode & 1) value = __webpack_require__(value);\n/******/ \t\tif(mode & 8) return value;\n/******/ \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n/******/ \t\tvar ns = Object.create(null);\n/******/ \t\t__webpack_require__.r(ns);\n/******/ \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n/******/ \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n/******/ \t\treturn ns;\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// __webpack_hash__\n/******/ \t__webpack_require__.h = function() { return hotCurrentHash; };\n/******/\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn hotCreateRequire(\"./index.js\")(__webpack_require__.s = \"./index.js\");\n/******/ })\n/************************************************************************/\n/******/ ({\n\n/***/ \"./index.js\":\n/*!******************!*\\\n  !*** ./index.js ***!\n  \\******************/\n/*! exports provided: Spi, Logger, Secrets, SuccessState, TransactionOptions, TransactionType, SpiFlow, SpiStatus, PrintingResponse, RefundResponse, PurchaseResponse, GetLastTransactionResponse, MotoPurchaseResponse, TerminalStatusResponse, TerminalBattery, CashoutOnlyResponse, Settlement, RequestIdHelper, BillStatusResponse, BillRetrievalResult */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _src_Spi__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./src/Spi */ \"./src/Spi.js\");\n/* harmony import */ var _src_Logger__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./src/Logger */ \"./src/Logger.js\");\n/* harmony import */ var _src_Printing__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./src/Printing */ \"./src/Printing.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"Spi\", function() { return _src_Spi__WEBPACK_IMPORTED_MODULE_0__[\"Spi\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"Logger\", function() { return _src_Logger__WEBPACK_IMPORTED_MODULE_1__[\"Logger\"]; });\n\n/* harmony import */ var _src_Secrets__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./src/Secrets */ \"./src/Secrets.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"Secrets\", function() { return _src_Secrets__WEBPACK_IMPORTED_MODULE_3__[\"Secrets\"]; });\n\n/* harmony import */ var _src_Messages__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./src/Messages */ \"./src/Messages.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"SuccessState\", function() { return _src_Messages__WEBPACK_IMPORTED_MODULE_4__[\"SuccessState\"]; });\n\n/* harmony import */ var _src_SpiModels__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./src/SpiModels */ \"./src/SpiModels.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"TransactionOptions\", function() { return _src_SpiModels__WEBPACK_IMPORTED_MODULE_5__[\"TransactionOptions\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"TransactionType\", function() { return _src_SpiModels__WEBPACK_IMPORTED_MODULE_5__[\"TransactionType\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"SpiFlow\", function() { return _src_SpiModels__WEBPACK_IMPORTED_MODULE_5__[\"SpiFlow\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"SpiStatus\", function() { return _src_SpiModels__WEBPACK_IMPORTED_MODULE_5__[\"SpiStatus\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"PrintingResponse\", function() { return _src_Printing__WEBPACK_IMPORTED_MODULE_2__[\"PrintingResponse\"]; });\n\n/* harmony import */ var _src_Purchase__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./src/Purchase */ \"./src/Purchase.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"RefundResponse\", function() { return _src_Purchase__WEBPACK_IMPORTED_MODULE_6__[\"RefundResponse\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"PurchaseResponse\", function() { return _src_Purchase__WEBPACK_IMPORTED_MODULE_6__[\"PurchaseResponse\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"GetLastTransactionResponse\", function() { return _src_Purchase__WEBPACK_IMPORTED_MODULE_6__[\"GetLastTransactionResponse\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"MotoPurchaseResponse\", function() { return _src_Purchase__WEBPACK_IMPORTED_MODULE_6__[\"MotoPurchaseResponse\"]; });\n\n/* harmony import */ var _src_TerminalStatus__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./src/TerminalStatus */ \"./src/TerminalStatus.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"TerminalStatusResponse\", function() { return _src_TerminalStatus__WEBPACK_IMPORTED_MODULE_7__[\"TerminalStatusResponse\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"TerminalBattery\", function() { return _src_TerminalStatus__WEBPACK_IMPORTED_MODULE_7__[\"TerminalBattery\"]; });\n\n/* harmony import */ var _src_Cashout__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./src/Cashout */ \"./src/Cashout.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"CashoutOnlyResponse\", function() { return _src_Cashout__WEBPACK_IMPORTED_MODULE_8__[\"CashoutOnlyResponse\"]; });\n\n/* harmony import */ var _src_Settlement__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./src/Settlement */ \"./src/Settlement.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"Settlement\", function() { return _src_Settlement__WEBPACK_IMPORTED_MODULE_9__[\"Settlement\"]; });\n\n/* harmony import */ var _src_RequestIdHelper__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./src/RequestIdHelper */ \"./src/RequestIdHelper.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"RequestIdHelper\", function() { return _src_RequestIdHelper__WEBPACK_IMPORTED_MODULE_10__[\"RequestIdHelper\"]; });\n\n/* harmony import */ var _src_PayAtTable__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./src/PayAtTable */ \"./src/PayAtTable.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"BillStatusResponse\", function() { return _src_PayAtTable__WEBPACK_IMPORTED_MODULE_11__[\"BillStatusResponse\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"BillRetrievalResult\", function() { return _src_PayAtTable__WEBPACK_IMPORTED_MODULE_11__[\"BillRetrievalResult\"]; });\n\n\n\n // Re-exported modules required for POS vendors\n\n\n\n\n\n\n\n\n\n\n\n\n\nwindow.Spi = _src_Spi__WEBPACK_IMPORTED_MODULE_0__[\"Spi\"];\nwindow.Logger = _src_Logger__WEBPACK_IMPORTED_MODULE_1__[\"Logger\"];\nwindow.Printer = _src_Printing__WEBPACK_IMPORTED_MODULE_2__[\"Printer\"];\n\n/***/ }),\n\n/***/ \"./node_modules/aes-js/index.js\":\n/*!**************************************!*\\\n  !*** ./node_modules/aes-js/index.js ***!\n  \\**************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n/*! MIT License. Copyright 2015-2018 Richard Moore <me@ricmoo.com>. See LICENSE.txt. */\n(function(root) {\n    \"use strict\";\n\n    function checkInt(value) {\n        return (parseInt(value) === value);\n    }\n\n    function checkInts(arrayish) {\n        if (!checkInt(arrayish.length)) { return false; }\n\n        for (var i = 0; i < arrayish.length; i++) {\n            if (!checkInt(arrayish[i]) || arrayish[i] < 0 || arrayish[i] > 255) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    function coerceArray(arg, copy) {\n\n        // ArrayBuffer view\n        if (arg.buffer && arg.name === 'Uint8Array') {\n\n            if (copy) {\n                if (arg.slice) {\n                    arg = arg.slice();\n                } else {\n                    arg = Array.prototype.slice.call(arg);\n                }\n            }\n\n            return arg;\n        }\n\n        // It's an array; check it is a valid representation of a byte\n        if (Array.isArray(arg)) {\n            if (!checkInts(arg)) {\n                throw new Error('Array contains invalid value: ' + arg);\n            }\n\n            return new Uint8Array(arg);\n        }\n\n        // Something else, but behaves like an array (maybe a Buffer? Arguments?)\n        if (checkInt(arg.length) && checkInts(arg)) {\n            return new Uint8Array(arg);\n        }\n\n        throw new Error('unsupported array-like object');\n    }\n\n    function createArray(length) {\n        return new Uint8Array(length);\n    }\n\n    function copyArray(sourceArray, targetArray, targetStart, sourceStart, sourceEnd) {\n        if (sourceStart != null || sourceEnd != null) {\n            if (sourceArray.slice) {\n                sourceArray = sourceArray.slice(sourceStart, sourceEnd);\n            } else {\n                sourceArray = Array.prototype.slice.call(sourceArray, sourceStart, sourceEnd);\n            }\n        }\n        targetArray.set(sourceArray, targetStart);\n    }\n\n\n\n    var convertUtf8 = (function() {\n        function toBytes(text) {\n            var result = [], i = 0;\n            text = encodeURI(text);\n            while (i < text.length) {\n                var c = text.charCodeAt(i++);\n\n                // if it is a % sign, encode the following 2 bytes as a hex value\n                if (c === 37) {\n                    result.push(parseInt(text.substr(i, 2), 16))\n                    i += 2;\n\n                // otherwise, just the actual byte\n                } else {\n                    result.push(c)\n                }\n            }\n\n            return coerceArray(result);\n        }\n\n        function fromBytes(bytes) {\n            var result = [], i = 0;\n\n            while (i < bytes.length) {\n                var c = bytes[i];\n\n                if (c < 128) {\n                    result.push(String.fromCharCode(c));\n                    i++;\n                } else if (c > 191 && c < 224) {\n                    result.push(String.fromCharCode(((c & 0x1f) << 6) | (bytes[i + 1] & 0x3f)));\n                    i += 2;\n                } else {\n                    result.push(String.fromCharCode(((c & 0x0f) << 12) | ((bytes[i + 1] & 0x3f) << 6) | (bytes[i + 2] & 0x3f)));\n                    i += 3;\n                }\n            }\n\n            return result.join('');\n        }\n\n        return {\n            toBytes: toBytes,\n            fromBytes: fromBytes,\n        }\n    })();\n\n    var convertHex = (function() {\n        function toBytes(text) {\n            var result = [];\n            for (var i = 0; i < text.length; i += 2) {\n                result.push(parseInt(text.substr(i, 2), 16));\n            }\n\n            return result;\n        }\n\n        // http://ixti.net/development/javascript/2011/11/11/base64-encodedecode-of-utf8-in-browser-with-js.html\n        var Hex = '0123456789abcdef';\n\n        function fromBytes(bytes) {\n                var result = [];\n                for (var i = 0; i < bytes.length; i++) {\n                    var v = bytes[i];\n                    result.push(Hex[(v & 0xf0) >> 4] + Hex[v & 0x0f]);\n                }\n                return result.join('');\n        }\n\n        return {\n            toBytes: toBytes,\n            fromBytes: fromBytes,\n        }\n    })();\n\n\n    // Number of rounds by keysize\n    var numberOfRounds = {16: 10, 24: 12, 32: 14}\n\n    // Round constant words\n    var rcon = [0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36, 0x6c, 0xd8, 0xab, 0x4d, 0x9a, 0x2f, 0x5e, 0xbc, 0x63, 0xc6, 0x97, 0x35, 0x6a, 0xd4, 0xb3, 0x7d, 0xfa, 0xef, 0xc5, 0x91];\n\n    // S-box and Inverse S-box (S is for Substitution)\n    var S = [0x63, 0x7c, 0x77, 0x7b, 0xf2, 0x6b, 0x6f, 0xc5, 0x30, 0x01, 0x67, 0x2b, 0xfe, 0xd7, 0xab, 0x76, 0xca, 0x82, 0xc9, 0x7d, 0xfa, 0x59, 0x47, 0xf0, 0xad, 0xd4, 0xa2, 0xaf, 0x9c, 0xa4, 0x72, 0xc0, 0xb7, 0xfd, 0x93, 0x26, 0x36, 0x3f, 0xf7, 0xcc, 0x34, 0xa5, 0xe5, 0xf1, 0x71, 0xd8, 0x31, 0x15, 0x04, 0xc7, 0x23, 0xc3, 0x18, 0x96, 0x05, 0x9a, 0x07, 0x12, 0x80, 0xe2, 0xeb, 0x27, 0xb2, 0x75, 0x09, 0x83, 0x2c, 0x1a, 0x1b, 0x6e, 0x5a, 0xa0, 0x52, 0x3b, 0xd6, 0xb3, 0x29, 0xe3, 0x2f, 0x84, 0x53, 0xd1, 0x00, 0xed, 0x20, 0xfc, 0xb1, 0x5b, 0x6a, 0xcb, 0xbe, 0x39, 0x4a, 0x4c, 0x58, 0xcf, 0xd0, 0xef, 0xaa, 0xfb, 0x43, 0x4d, 0x33, 0x85, 0x45, 0xf9, 0x02, 0x7f, 0x50, 0x3c, 0x9f, 0xa8, 0x51, 0xa3, 0x40, 0x8f, 0x92, 0x9d, 0x38, 0xf5, 0xbc, 0xb6, 0xda, 0x21, 0x10, 0xff, 0xf3, 0xd2, 0xcd, 0x0c, 0x13, 0xec, 0x5f, 0x97, 0x44, 0x17, 0xc4, 0xa7, 0x7e, 0x3d, 0x64, 0x5d, 0x19, 0x73, 0x60, 0x81, 0x4f, 0xdc, 0x22, 0x2a, 0x90, 0x88, 0x46, 0xee, 0xb8, 0x14, 0xde, 0x5e, 0x0b, 0xdb, 0xe0, 0x32, 0x3a, 0x0a, 0x49, 0x06, 0x24, 0x5c, 0xc2, 0xd3, 0xac, 0x62, 0x91, 0x95, 0xe4, 0x79, 0xe7, 0xc8, 0x37, 0x6d, 0x8d, 0xd5, 0x4e, 0xa9, 0x6c, 0x56, 0xf4, 0xea, 0x65, 0x7a, 0xae, 0x08, 0xba, 0x78, 0x25, 0x2e, 0x1c, 0xa6, 0xb4, 0xc6, 0xe8, 0xdd, 0x74, 0x1f, 0x4b, 0xbd, 0x8b, 0x8a, 0x70, 0x3e, 0xb5, 0x66, 0x48, 0x03, 0xf6, 0x0e, 0x61, 0x35, 0x57, 0xb9, 0x86, 0xc1, 0x1d, 0x9e, 0xe1, 0xf8, 0x98, 0x11, 0x69, 0xd9, 0x8e, 0x94, 0x9b, 0x1e, 0x87, 0xe9, 0xce, 0x55, 0x28, 0xdf, 0x8c, 0xa1, 0x89, 0x0d, 0xbf, 0xe6, 0x42, 0x68, 0x41, 0x99, 0x2d, 0x0f, 0xb0, 0x54, 0xbb, 0x16];\n    var Si =[0x52, 0x09, 0x6a, 0xd5, 0x30, 0x36, 0xa5, 0x38, 0xbf, 0x40, 0xa3, 0x9e, 0x81, 0xf3, 0xd7, 0xfb, 0x7c, 0xe3, 0x39, 0x82, 0x9b, 0x2f, 0xff, 0x87, 0x34, 0x8e, 0x43, 0x44, 0xc4, 0xde, 0xe9, 0xcb, 0x54, 0x7b, 0x94, 0x32, 0xa6, 0xc2, 0x23, 0x3d, 0xee, 0x4c, 0x95, 0x0b, 0x42, 0xfa, 0xc3, 0x4e, 0x08, 0x2e, 0xa1, 0x66, 0x28, 0xd9, 0x24, 0xb2, 0x76, 0x5b, 0xa2, 0x49, 0x6d, 0x8b, 0xd1, 0x25, 0x72, 0xf8, 0xf6, 0x64, 0x86, 0x68, 0x98, 0x16, 0xd4, 0xa4, 0x5c, 0xcc, 0x5d, 0x65, 0xb6, 0x92, 0x6c, 0x70, 0x48, 0x50, 0xfd, 0xed, 0xb9, 0xda, 0x5e, 0x15, 0x46, 0x57, 0xa7, 0x8d, 0x9d, 0x84, 0x90, 0xd8, 0xab, 0x00, 0x8c, 0xbc, 0xd3, 0x0a, 0xf7, 0xe4, 0x58, 0x05, 0xb8, 0xb3, 0x45, 0x06, 0xd0, 0x2c, 0x1e, 0x8f, 0xca, 0x3f, 0x0f, 0x02, 0xc1, 0xaf, 0xbd, 0x03, 0x01, 0x13, 0x8a, 0x6b, 0x3a, 0x91, 0x11, 0x41, 0x4f, 0x67, 0xdc, 0xea, 0x97, 0xf2, 0xcf, 0xce, 0xf0, 0xb4, 0xe6, 0x73, 0x96, 0xac, 0x74, 0x22, 0xe7, 0xad, 0x35, 0x85, 0xe2, 0xf9, 0x37, 0xe8, 0x1c, 0x75, 0xdf, 0x6e, 0x47, 0xf1, 0x1a, 0x71, 0x1d, 0x29, 0xc5, 0x89, 0x6f, 0xb7, 0x62, 0x0e, 0xaa, 0x18, 0xbe, 0x1b, 0xfc, 0x56, 0x3e, 0x4b, 0xc6, 0xd2, 0x79, 0x20, 0x9a, 0xdb, 0xc0, 0xfe, 0x78, 0xcd, 0x5a, 0xf4, 0x1f, 0xdd, 0xa8, 0x33, 0x88, 0x07, 0xc7, 0x31, 0xb1, 0x12, 0x10, 0x59, 0x27, 0x80, 0xec, 0x5f, 0x60, 0x51, 0x7f, 0xa9, 0x19, 0xb5, 0x4a, 0x0d, 0x2d, 0xe5, 0x7a, 0x9f, 0x93, 0xc9, 0x9c, 0xef, 0xa0, 0xe0, 0x3b, 0x4d, 0xae, 0x2a, 0xf5, 0xb0, 0xc8, 0xeb, 0xbb, 0x3c, 0x83, 0x53, 0x99, 0x61, 0x17, 0x2b, 0x04, 0x7e, 0xba, 0x77, 0xd6, 0x26, 0xe1, 0x69, 0x14, 0x63, 0x55, 0x21, 0x0c, 0x7d];\n\n    // Transformations for encryption\n    var T1 = [0xc66363a5, 0xf87c7c84, 0xee777799, 0xf67b7b8d, 0xfff2f20d, 0xd66b6bbd, 0xde6f6fb1, 0x91c5c554, 0x60303050, 0x02010103, 0xce6767a9, 0x562b2b7d, 0xe7fefe19, 0xb5d7d762, 0x4dababe6, 0xec76769a, 0x8fcaca45, 0x1f82829d, 0x89c9c940, 0xfa7d7d87, 0xeffafa15, 0xb25959eb, 0x8e4747c9, 0xfbf0f00b, 0x41adadec, 0xb3d4d467, 0x5fa2a2fd, 0x45afafea, 0x239c9cbf, 0x53a4a4f7, 0xe4727296, 0x9bc0c05b, 0x75b7b7c2, 0xe1fdfd1c, 0x3d9393ae, 0x4c26266a, 0x6c36365a, 0x7e3f3f41, 0xf5f7f702, 0x83cccc4f, 0x6834345c, 0x51a5a5f4, 0xd1e5e534, 0xf9f1f108, 0xe2717193, 0xabd8d873, 0x62313153, 0x2a15153f, 0x0804040c, 0x95c7c752, 0x46232365, 0x9dc3c35e, 0x30181828, 0x379696a1, 0x0a05050f, 0x2f9a9ab5, 0x0e070709, 0x24121236, 0x1b80809b, 0xdfe2e23d, 0xcdebeb26, 0x4e272769, 0x7fb2b2cd, 0xea75759f, 0x1209091b, 0x1d83839e, 0x582c2c74, 0x341a1a2e, 0x361b1b2d, 0xdc6e6eb2, 0xb45a5aee, 0x5ba0a0fb, 0xa45252f6, 0x763b3b4d, 0xb7d6d661, 0x7db3b3ce, 0x5229297b, 0xdde3e33e, 0x5e2f2f71, 0x13848497, 0xa65353f5, 0xb9d1d168, 0x00000000, 0xc1eded2c, 0x40202060, 0xe3fcfc1f, 0x79b1b1c8, 0xb65b5bed, 0xd46a6abe, 0x8dcbcb46, 0x67bebed9, 0x7239394b, 0x944a4ade, 0x984c4cd4, 0xb05858e8, 0x85cfcf4a, 0xbbd0d06b, 0xc5efef2a, 0x4faaaae5, 0xedfbfb16, 0x864343c5, 0x9a4d4dd7, 0x66333355, 0x11858594, 0x8a4545cf, 0xe9f9f910, 0x04020206, 0xfe7f7f81, 0xa05050f0, 0x783c3c44, 0x259f9fba, 0x4ba8a8e3, 0xa25151f3, 0x5da3a3fe, 0x804040c0, 0x058f8f8a, 0x3f9292ad, 0x219d9dbc, 0x70383848, 0xf1f5f504, 0x63bcbcdf, 0x77b6b6c1, 0xafdada75, 0x42212163, 0x20101030, 0xe5ffff1a, 0xfdf3f30e, 0xbfd2d26d, 0x81cdcd4c, 0x180c0c14, 0x26131335, 0xc3ecec2f, 0xbe5f5fe1, 0x359797a2, 0x884444cc, 0x2e171739, 0x93c4c457, 0x55a7a7f2, 0xfc7e7e82, 0x7a3d3d47, 0xc86464ac, 0xba5d5de7, 0x3219192b, 0xe6737395, 0xc06060a0, 0x19818198, 0x9e4f4fd1, 0xa3dcdc7f, 0x44222266, 0x542a2a7e, 0x3b9090ab, 0x0b888883, 0x8c4646ca, 0xc7eeee29, 0x6bb8b8d3, 0x2814143c, 0xa7dede79, 0xbc5e5ee2, 0x160b0b1d, 0xaddbdb76, 0xdbe0e03b, 0x64323256, 0x743a3a4e, 0x140a0a1e, 0x924949db, 0x0c06060a, 0x4824246c, 0xb85c5ce4, 0x9fc2c25d, 0xbdd3d36e, 0x43acacef, 0xc46262a6, 0x399191a8, 0x319595a4, 0xd3e4e437, 0xf279798b, 0xd5e7e732, 0x8bc8c843, 0x6e373759, 0xda6d6db7, 0x018d8d8c, 0xb1d5d564, 0x9c4e4ed2, 0x49a9a9e0, 0xd86c6cb4, 0xac5656fa, 0xf3f4f407, 0xcfeaea25, 0xca6565af, 0xf47a7a8e, 0x47aeaee9, 0x10080818, 0x6fbabad5, 0xf0787888, 0x4a25256f, 0x5c2e2e72, 0x381c1c24, 0x57a6a6f1, 0x73b4b4c7, 0x97c6c651, 0xcbe8e823, 0xa1dddd7c, 0xe874749c, 0x3e1f1f21, 0x964b4bdd, 0x61bdbddc, 0x0d8b8b86, 0x0f8a8a85, 0xe0707090, 0x7c3e3e42, 0x71b5b5c4, 0xcc6666aa, 0x904848d8, 0x06030305, 0xf7f6f601, 0x1c0e0e12, 0xc26161a3, 0x6a35355f, 0xae5757f9, 0x69b9b9d0, 0x17868691, 0x99c1c158, 0x3a1d1d27, 0x279e9eb9, 0xd9e1e138, 0xebf8f813, 0x2b9898b3, 0x22111133, 0xd26969bb, 0xa9d9d970, 0x078e8e89, 0x339494a7, 0x2d9b9bb6, 0x3c1e1e22, 0x15878792, 0xc9e9e920, 0x87cece49, 0xaa5555ff, 0x50282878, 0xa5dfdf7a, 0x038c8c8f, 0x59a1a1f8, 0x09898980, 0x1a0d0d17, 0x65bfbfda, 0xd7e6e631, 0x844242c6, 0xd06868b8, 0x824141c3, 0x299999b0, 0x5a2d2d77, 0x1e0f0f11, 0x7bb0b0cb, 0xa85454fc, 0x6dbbbbd6, 0x2c16163a];\n    var T2 = [0xa5c66363, 0x84f87c7c, 0x99ee7777, 0x8df67b7b, 0x0dfff2f2, 0xbdd66b6b, 0xb1de6f6f, 0x5491c5c5, 0x50603030, 0x03020101, 0xa9ce6767, 0x7d562b2b, 0x19e7fefe, 0x62b5d7d7, 0xe64dabab, 0x9aec7676, 0x458fcaca, 0x9d1f8282, 0x4089c9c9, 0x87fa7d7d, 0x15effafa, 0xebb25959, 0xc98e4747, 0x0bfbf0f0, 0xec41adad, 0x67b3d4d4, 0xfd5fa2a2, 0xea45afaf, 0xbf239c9c, 0xf753a4a4, 0x96e47272, 0x5b9bc0c0, 0xc275b7b7, 0x1ce1fdfd, 0xae3d9393, 0x6a4c2626, 0x5a6c3636, 0x417e3f3f, 0x02f5f7f7, 0x4f83cccc, 0x5c683434, 0xf451a5a5, 0x34d1e5e5, 0x08f9f1f1, 0x93e27171, 0x73abd8d8, 0x53623131, 0x3f2a1515, 0x0c080404, 0x5295c7c7, 0x65462323, 0x5e9dc3c3, 0x28301818, 0xa1379696, 0x0f0a0505, 0xb52f9a9a, 0x090e0707, 0x36241212, 0x9b1b8080, 0x3ddfe2e2, 0x26cdebeb, 0x694e2727, 0xcd7fb2b2, 0x9fea7575, 0x1b120909, 0x9e1d8383, 0x74582c2c, 0x2e341a1a, 0x2d361b1b, 0xb2dc6e6e, 0xeeb45a5a, 0xfb5ba0a0, 0xf6a45252, 0x4d763b3b, 0x61b7d6d6, 0xce7db3b3, 0x7b522929, 0x3edde3e3, 0x715e2f2f, 0x97138484, 0xf5a65353, 0x68b9d1d1, 0x00000000, 0x2cc1eded, 0x60402020, 0x1fe3fcfc, 0xc879b1b1, 0xedb65b5b, 0xbed46a6a, 0x468dcbcb, 0xd967bebe, 0x4b723939, 0xde944a4a, 0xd4984c4c, 0xe8b05858, 0x4a85cfcf, 0x6bbbd0d0, 0x2ac5efef, 0xe54faaaa, 0x16edfbfb, 0xc5864343, 0xd79a4d4d, 0x55663333, 0x94118585, 0xcf8a4545, 0x10e9f9f9, 0x06040202, 0x81fe7f7f, 0xf0a05050, 0x44783c3c, 0xba259f9f, 0xe34ba8a8, 0xf3a25151, 0xfe5da3a3, 0xc0804040, 0x8a058f8f, 0xad3f9292, 0xbc219d9d, 0x48703838, 0x04f1f5f5, 0xdf63bcbc, 0xc177b6b6, 0x75afdada, 0x63422121, 0x30201010, 0x1ae5ffff, 0x0efdf3f3, 0x6dbfd2d2, 0x4c81cdcd, 0x14180c0c, 0x35261313, 0x2fc3ecec, 0xe1be5f5f, 0xa2359797, 0xcc884444, 0x392e1717, 0x5793c4c4, 0xf255a7a7, 0x82fc7e7e, 0x477a3d3d, 0xacc86464, 0xe7ba5d5d, 0x2b321919, 0x95e67373, 0xa0c06060, 0x98198181, 0xd19e4f4f, 0x7fa3dcdc, 0x66442222, 0x7e542a2a, 0xab3b9090, 0x830b8888, 0xca8c4646, 0x29c7eeee, 0xd36bb8b8, 0x3c281414, 0x79a7dede, 0xe2bc5e5e, 0x1d160b0b, 0x76addbdb, 0x3bdbe0e0, 0x56643232, 0x4e743a3a, 0x1e140a0a, 0xdb924949, 0x0a0c0606, 0x6c482424, 0xe4b85c5c, 0x5d9fc2c2, 0x6ebdd3d3, 0xef43acac, 0xa6c46262, 0xa8399191, 0xa4319595, 0x37d3e4e4, 0x8bf27979, 0x32d5e7e7, 0x438bc8c8, 0x596e3737, 0xb7da6d6d, 0x8c018d8d, 0x64b1d5d5, 0xd29c4e4e, 0xe049a9a9, 0xb4d86c6c, 0xfaac5656, 0x07f3f4f4, 0x25cfeaea, 0xafca6565, 0x8ef47a7a, 0xe947aeae, 0x18100808, 0xd56fbaba, 0x88f07878, 0x6f4a2525, 0x725c2e2e, 0x24381c1c, 0xf157a6a6, 0xc773b4b4, 0x5197c6c6, 0x23cbe8e8, 0x7ca1dddd, 0x9ce87474, 0x213e1f1f, 0xdd964b4b, 0xdc61bdbd, 0x860d8b8b, 0x850f8a8a, 0x90e07070, 0x427c3e3e, 0xc471b5b5, 0xaacc6666, 0xd8904848, 0x05060303, 0x01f7f6f6, 0x121c0e0e, 0xa3c26161, 0x5f6a3535, 0xf9ae5757, 0xd069b9b9, 0x91178686, 0x5899c1c1, 0x273a1d1d, 0xb9279e9e, 0x38d9e1e1, 0x13ebf8f8, 0xb32b9898, 0x33221111, 0xbbd26969, 0x70a9d9d9, 0x89078e8e, 0xa7339494, 0xb62d9b9b, 0x223c1e1e, 0x92158787, 0x20c9e9e9, 0x4987cece, 0xffaa5555, 0x78502828, 0x7aa5dfdf, 0x8f038c8c, 0xf859a1a1, 0x80098989, 0x171a0d0d, 0xda65bfbf, 0x31d7e6e6, 0xc6844242, 0xb8d06868, 0xc3824141, 0xb0299999, 0x775a2d2d, 0x111e0f0f, 0xcb7bb0b0, 0xfca85454, 0xd66dbbbb, 0x3a2c1616];\n    var T3 = [0x63a5c663, 0x7c84f87c, 0x7799ee77, 0x7b8df67b, 0xf20dfff2, 0x6bbdd66b, 0x6fb1de6f, 0xc55491c5, 0x30506030, 0x01030201, 0x67a9ce67, 0x2b7d562b, 0xfe19e7fe, 0xd762b5d7, 0xabe64dab, 0x769aec76, 0xca458fca, 0x829d1f82, 0xc94089c9, 0x7d87fa7d, 0xfa15effa, 0x59ebb259, 0x47c98e47, 0xf00bfbf0, 0xadec41ad, 0xd467b3d4, 0xa2fd5fa2, 0xafea45af, 0x9cbf239c, 0xa4f753a4, 0x7296e472, 0xc05b9bc0, 0xb7c275b7, 0xfd1ce1fd, 0x93ae3d93, 0x266a4c26, 0x365a6c36, 0x3f417e3f, 0xf702f5f7, 0xcc4f83cc, 0x345c6834, 0xa5f451a5, 0xe534d1e5, 0xf108f9f1, 0x7193e271, 0xd873abd8, 0x31536231, 0x153f2a15, 0x040c0804, 0xc75295c7, 0x23654623, 0xc35e9dc3, 0x18283018, 0x96a13796, 0x050f0a05, 0x9ab52f9a, 0x07090e07, 0x12362412, 0x809b1b80, 0xe23ddfe2, 0xeb26cdeb, 0x27694e27, 0xb2cd7fb2, 0x759fea75, 0x091b1209, 0x839e1d83, 0x2c74582c, 0x1a2e341a, 0x1b2d361b, 0x6eb2dc6e, 0x5aeeb45a, 0xa0fb5ba0, 0x52f6a452, 0x3b4d763b, 0xd661b7d6, 0xb3ce7db3, 0x297b5229, 0xe33edde3, 0x2f715e2f, 0x84971384, 0x53f5a653, 0xd168b9d1, 0x00000000, 0xed2cc1ed, 0x20604020, 0xfc1fe3fc, 0xb1c879b1, 0x5bedb65b, 0x6abed46a, 0xcb468dcb, 0xbed967be, 0x394b7239, 0x4ade944a, 0x4cd4984c, 0x58e8b058, 0xcf4a85cf, 0xd06bbbd0, 0xef2ac5ef, 0xaae54faa, 0xfb16edfb, 0x43c58643, 0x4dd79a4d, 0x33556633, 0x85941185, 0x45cf8a45, 0xf910e9f9, 0x02060402, 0x7f81fe7f, 0x50f0a050, 0x3c44783c, 0x9fba259f, 0xa8e34ba8, 0x51f3a251, 0xa3fe5da3, 0x40c08040, 0x8f8a058f, 0x92ad3f92, 0x9dbc219d, 0x38487038, 0xf504f1f5, 0xbcdf63bc, 0xb6c177b6, 0xda75afda, 0x21634221, 0x10302010, 0xff1ae5ff, 0xf30efdf3, 0xd26dbfd2, 0xcd4c81cd, 0x0c14180c, 0x13352613, 0xec2fc3ec, 0x5fe1be5f, 0x97a23597, 0x44cc8844, 0x17392e17, 0xc45793c4, 0xa7f255a7, 0x7e82fc7e, 0x3d477a3d, 0x64acc864, 0x5de7ba5d, 0x192b3219, 0x7395e673, 0x60a0c060, 0x81981981, 0x4fd19e4f, 0xdc7fa3dc, 0x22664422, 0x2a7e542a, 0x90ab3b90, 0x88830b88, 0x46ca8c46, 0xee29c7ee, 0xb8d36bb8, 0x143c2814, 0xde79a7de, 0x5ee2bc5e, 0x0b1d160b, 0xdb76addb, 0xe03bdbe0, 0x32566432, 0x3a4e743a, 0x0a1e140a, 0x49db9249, 0x060a0c06, 0x246c4824, 0x5ce4b85c, 0xc25d9fc2, 0xd36ebdd3, 0xacef43ac, 0x62a6c462, 0x91a83991, 0x95a43195, 0xe437d3e4, 0x798bf279, 0xe732d5e7, 0xc8438bc8, 0x37596e37, 0x6db7da6d, 0x8d8c018d, 0xd564b1d5, 0x4ed29c4e, 0xa9e049a9, 0x6cb4d86c, 0x56faac56, 0xf407f3f4, 0xea25cfea, 0x65afca65, 0x7a8ef47a, 0xaee947ae, 0x08181008, 0xbad56fba, 0x7888f078, 0x256f4a25, 0x2e725c2e, 0x1c24381c, 0xa6f157a6, 0xb4c773b4, 0xc65197c6, 0xe823cbe8, 0xdd7ca1dd, 0x749ce874, 0x1f213e1f, 0x4bdd964b, 0xbddc61bd, 0x8b860d8b, 0x8a850f8a, 0x7090e070, 0x3e427c3e, 0xb5c471b5, 0x66aacc66, 0x48d89048, 0x03050603, 0xf601f7f6, 0x0e121c0e, 0x61a3c261, 0x355f6a35, 0x57f9ae57, 0xb9d069b9, 0x86911786, 0xc15899c1, 0x1d273a1d, 0x9eb9279e, 0xe138d9e1, 0xf813ebf8, 0x98b32b98, 0x11332211, 0x69bbd269, 0xd970a9d9, 0x8e89078e, 0x94a73394, 0x9bb62d9b, 0x1e223c1e, 0x87921587, 0xe920c9e9, 0xce4987ce, 0x55ffaa55, 0x28785028, 0xdf7aa5df, 0x8c8f038c, 0xa1f859a1, 0x89800989, 0x0d171a0d, 0xbfda65bf, 0xe631d7e6, 0x42c68442, 0x68b8d068, 0x41c38241, 0x99b02999, 0x2d775a2d, 0x0f111e0f, 0xb0cb7bb0, 0x54fca854, 0xbbd66dbb, 0x163a2c16];\n    var T4 = [0x6363a5c6, 0x7c7c84f8, 0x777799ee, 0x7b7b8df6, 0xf2f20dff, 0x6b6bbdd6, 0x6f6fb1de, 0xc5c55491, 0x30305060, 0x01010302, 0x6767a9ce, 0x2b2b7d56, 0xfefe19e7, 0xd7d762b5, 0xababe64d, 0x76769aec, 0xcaca458f, 0x82829d1f, 0xc9c94089, 0x7d7d87fa, 0xfafa15ef, 0x5959ebb2, 0x4747c98e, 0xf0f00bfb, 0xadadec41, 0xd4d467b3, 0xa2a2fd5f, 0xafafea45, 0x9c9cbf23, 0xa4a4f753, 0x727296e4, 0xc0c05b9b, 0xb7b7c275, 0xfdfd1ce1, 0x9393ae3d, 0x26266a4c, 0x36365a6c, 0x3f3f417e, 0xf7f702f5, 0xcccc4f83, 0x34345c68, 0xa5a5f451, 0xe5e534d1, 0xf1f108f9, 0x717193e2, 0xd8d873ab, 0x31315362, 0x15153f2a, 0x04040c08, 0xc7c75295, 0x23236546, 0xc3c35e9d, 0x18182830, 0x9696a137, 0x05050f0a, 0x9a9ab52f, 0x0707090e, 0x12123624, 0x80809b1b, 0xe2e23ddf, 0xebeb26cd, 0x2727694e, 0xb2b2cd7f, 0x75759fea, 0x09091b12, 0x83839e1d, 0x2c2c7458, 0x1a1a2e34, 0x1b1b2d36, 0x6e6eb2dc, 0x5a5aeeb4, 0xa0a0fb5b, 0x5252f6a4, 0x3b3b4d76, 0xd6d661b7, 0xb3b3ce7d, 0x29297b52, 0xe3e33edd, 0x2f2f715e, 0x84849713, 0x5353f5a6, 0xd1d168b9, 0x00000000, 0xeded2cc1, 0x20206040, 0xfcfc1fe3, 0xb1b1c879, 0x5b5bedb6, 0x6a6abed4, 0xcbcb468d, 0xbebed967, 0x39394b72, 0x4a4ade94, 0x4c4cd498, 0x5858e8b0, 0xcfcf4a85, 0xd0d06bbb, 0xefef2ac5, 0xaaaae54f, 0xfbfb16ed, 0x4343c586, 0x4d4dd79a, 0x33335566, 0x85859411, 0x4545cf8a, 0xf9f910e9, 0x02020604, 0x7f7f81fe, 0x5050f0a0, 0x3c3c4478, 0x9f9fba25, 0xa8a8e34b, 0x5151f3a2, 0xa3a3fe5d, 0x4040c080, 0x8f8f8a05, 0x9292ad3f, 0x9d9dbc21, 0x38384870, 0xf5f504f1, 0xbcbcdf63, 0xb6b6c177, 0xdada75af, 0x21216342, 0x10103020, 0xffff1ae5, 0xf3f30efd, 0xd2d26dbf, 0xcdcd4c81, 0x0c0c1418, 0x13133526, 0xecec2fc3, 0x5f5fe1be, 0x9797a235, 0x4444cc88, 0x1717392e, 0xc4c45793, 0xa7a7f255, 0x7e7e82fc, 0x3d3d477a, 0x6464acc8, 0x5d5de7ba, 0x19192b32, 0x737395e6, 0x6060a0c0, 0x81819819, 0x4f4fd19e, 0xdcdc7fa3, 0x22226644, 0x2a2a7e54, 0x9090ab3b, 0x8888830b, 0x4646ca8c, 0xeeee29c7, 0xb8b8d36b, 0x14143c28, 0xdede79a7, 0x5e5ee2bc, 0x0b0b1d16, 0xdbdb76ad, 0xe0e03bdb, 0x32325664, 0x3a3a4e74, 0x0a0a1e14, 0x4949db92, 0x06060a0c, 0x24246c48, 0x5c5ce4b8, 0xc2c25d9f, 0xd3d36ebd, 0xacacef43, 0x6262a6c4, 0x9191a839, 0x9595a431, 0xe4e437d3, 0x79798bf2, 0xe7e732d5, 0xc8c8438b, 0x3737596e, 0x6d6db7da, 0x8d8d8c01, 0xd5d564b1, 0x4e4ed29c, 0xa9a9e049, 0x6c6cb4d8, 0x5656faac, 0xf4f407f3, 0xeaea25cf, 0x6565afca, 0x7a7a8ef4, 0xaeaee947, 0x08081810, 0xbabad56f, 0x787888f0, 0x25256f4a, 0x2e2e725c, 0x1c1c2438, 0xa6a6f157, 0xb4b4c773, 0xc6c65197, 0xe8e823cb, 0xdddd7ca1, 0x74749ce8, 0x1f1f213e, 0x4b4bdd96, 0xbdbddc61, 0x8b8b860d, 0x8a8a850f, 0x707090e0, 0x3e3e427c, 0xb5b5c471, 0x6666aacc, 0x4848d890, 0x03030506, 0xf6f601f7, 0x0e0e121c, 0x6161a3c2, 0x35355f6a, 0x5757f9ae, 0xb9b9d069, 0x86869117, 0xc1c15899, 0x1d1d273a, 0x9e9eb927, 0xe1e138d9, 0xf8f813eb, 0x9898b32b, 0x11113322, 0x6969bbd2, 0xd9d970a9, 0x8e8e8907, 0x9494a733, 0x9b9bb62d, 0x1e1e223c, 0x87879215, 0xe9e920c9, 0xcece4987, 0x5555ffaa, 0x28287850, 0xdfdf7aa5, 0x8c8c8f03, 0xa1a1f859, 0x89898009, 0x0d0d171a, 0xbfbfda65, 0xe6e631d7, 0x4242c684, 0x6868b8d0, 0x4141c382, 0x9999b029, 0x2d2d775a, 0x0f0f111e, 0xb0b0cb7b, 0x5454fca8, 0xbbbbd66d, 0x16163a2c];\n\n    // Transformations for decryption\n    var T5 = [0x51f4a750, 0x7e416553, 0x1a17a4c3, 0x3a275e96, 0x3bab6bcb, 0x1f9d45f1, 0xacfa58ab, 0x4be30393, 0x2030fa55, 0xad766df6, 0x88cc7691, 0xf5024c25, 0x4fe5d7fc, 0xc52acbd7, 0x26354480, 0xb562a38f, 0xdeb15a49, 0x25ba1b67, 0x45ea0e98, 0x5dfec0e1, 0xc32f7502, 0x814cf012, 0x8d4697a3, 0x6bd3f9c6, 0x038f5fe7, 0x15929c95, 0xbf6d7aeb, 0x955259da, 0xd4be832d, 0x587421d3, 0x49e06929, 0x8ec9c844, 0x75c2896a, 0xf48e7978, 0x99583e6b, 0x27b971dd, 0xbee14fb6, 0xf088ad17, 0xc920ac66, 0x7dce3ab4, 0x63df4a18, 0xe51a3182, 0x97513360, 0x62537f45, 0xb16477e0, 0xbb6bae84, 0xfe81a01c, 0xf9082b94, 0x70486858, 0x8f45fd19, 0x94de6c87, 0x527bf8b7, 0xab73d323, 0x724b02e2, 0xe31f8f57, 0x6655ab2a, 0xb2eb2807, 0x2fb5c203, 0x86c57b9a, 0xd33708a5, 0x302887f2, 0x23bfa5b2, 0x02036aba, 0xed16825c, 0x8acf1c2b, 0xa779b492, 0xf307f2f0, 0x4e69e2a1, 0x65daf4cd, 0x0605bed5, 0xd134621f, 0xc4a6fe8a, 0x342e539d, 0xa2f355a0, 0x058ae132, 0xa4f6eb75, 0x0b83ec39, 0x4060efaa, 0x5e719f06, 0xbd6e1051, 0x3e218af9, 0x96dd063d, 0xdd3e05ae, 0x4de6bd46, 0x91548db5, 0x71c45d05, 0x0406d46f, 0x605015ff, 0x1998fb24, 0xd6bde997, 0x894043cc, 0x67d99e77, 0xb0e842bd, 0x07898b88, 0xe7195b38, 0x79c8eedb, 0xa17c0a47, 0x7c420fe9, 0xf8841ec9, 0x00000000, 0x09808683, 0x322bed48, 0x1e1170ac, 0x6c5a724e, 0xfd0efffb, 0x0f853856, 0x3daed51e, 0x362d3927, 0x0a0fd964, 0x685ca621, 0x9b5b54d1, 0x24362e3a, 0x0c0a67b1, 0x9357e70f, 0xb4ee96d2, 0x1b9b919e, 0x80c0c54f, 0x61dc20a2, 0x5a774b69, 0x1c121a16, 0xe293ba0a, 0xc0a02ae5, 0x3c22e043, 0x121b171d, 0x0e090d0b, 0xf28bc7ad, 0x2db6a8b9, 0x141ea9c8, 0x57f11985, 0xaf75074c, 0xee99ddbb, 0xa37f60fd, 0xf701269f, 0x5c72f5bc, 0x44663bc5, 0x5bfb7e34, 0x8b432976, 0xcb23c6dc, 0xb6edfc68, 0xb8e4f163, 0xd731dcca, 0x42638510, 0x13972240, 0x84c61120, 0x854a247d, 0xd2bb3df8, 0xaef93211, 0xc729a16d, 0x1d9e2f4b, 0xdcb230f3, 0x0d8652ec, 0x77c1e3d0, 0x2bb3166c, 0xa970b999, 0x119448fa, 0x47e96422, 0xa8fc8cc4, 0xa0f03f1a, 0x567d2cd8, 0x223390ef, 0x87494ec7, 0xd938d1c1, 0x8ccaa2fe, 0x98d40b36, 0xa6f581cf, 0xa57ade28, 0xdab78e26, 0x3fadbfa4, 0x2c3a9de4, 0x5078920d, 0x6a5fcc9b, 0x547e4662, 0xf68d13c2, 0x90d8b8e8, 0x2e39f75e, 0x82c3aff5, 0x9f5d80be, 0x69d0937c, 0x6fd52da9, 0xcf2512b3, 0xc8ac993b, 0x10187da7, 0xe89c636e, 0xdb3bbb7b, 0xcd267809, 0x6e5918f4, 0xec9ab701, 0x834f9aa8, 0xe6956e65, 0xaaffe67e, 0x21bccf08, 0xef15e8e6, 0xbae79bd9, 0x4a6f36ce, 0xea9f09d4, 0x29b07cd6, 0x31a4b2af, 0x2a3f2331, 0xc6a59430, 0x35a266c0, 0x744ebc37, 0xfc82caa6, 0xe090d0b0, 0x33a7d815, 0xf104984a, 0x41ecdaf7, 0x7fcd500e, 0x1791f62f, 0x764dd68d, 0x43efb04d, 0xccaa4d54, 0xe49604df, 0x9ed1b5e3, 0x4c6a881b, 0xc12c1fb8, 0x4665517f, 0x9d5eea04, 0x018c355d, 0xfa877473, 0xfb0b412e, 0xb3671d5a, 0x92dbd252, 0xe9105633, 0x6dd64713, 0x9ad7618c, 0x37a10c7a, 0x59f8148e, 0xeb133c89, 0xcea927ee, 0xb761c935, 0xe11ce5ed, 0x7a47b13c, 0x9cd2df59, 0x55f2733f, 0x1814ce79, 0x73c737bf, 0x53f7cdea, 0x5ffdaa5b, 0xdf3d6f14, 0x7844db86, 0xcaaff381, 0xb968c43e, 0x3824342c, 0xc2a3405f, 0x161dc372, 0xbce2250c, 0x283c498b, 0xff0d9541, 0x39a80171, 0x080cb3de, 0xd8b4e49c, 0x6456c190, 0x7bcb8461, 0xd532b670, 0x486c5c74, 0xd0b85742];\n    var T6 = [0x5051f4a7, 0x537e4165, 0xc31a17a4, 0x963a275e, 0xcb3bab6b, 0xf11f9d45, 0xabacfa58, 0x934be303, 0x552030fa, 0xf6ad766d, 0x9188cc76, 0x25f5024c, 0xfc4fe5d7, 0xd7c52acb, 0x80263544, 0x8fb562a3, 0x49deb15a, 0x6725ba1b, 0x9845ea0e, 0xe15dfec0, 0x02c32f75, 0x12814cf0, 0xa38d4697, 0xc66bd3f9, 0xe7038f5f, 0x9515929c, 0xebbf6d7a, 0xda955259, 0x2dd4be83, 0xd3587421, 0x2949e069, 0x448ec9c8, 0x6a75c289, 0x78f48e79, 0x6b99583e, 0xdd27b971, 0xb6bee14f, 0x17f088ad, 0x66c920ac, 0xb47dce3a, 0x1863df4a, 0x82e51a31, 0x60975133, 0x4562537f, 0xe0b16477, 0x84bb6bae, 0x1cfe81a0, 0x94f9082b, 0x58704868, 0x198f45fd, 0x8794de6c, 0xb7527bf8, 0x23ab73d3, 0xe2724b02, 0x57e31f8f, 0x2a6655ab, 0x07b2eb28, 0x032fb5c2, 0x9a86c57b, 0xa5d33708, 0xf2302887, 0xb223bfa5, 0xba02036a, 0x5ced1682, 0x2b8acf1c, 0x92a779b4, 0xf0f307f2, 0xa14e69e2, 0xcd65daf4, 0xd50605be, 0x1fd13462, 0x8ac4a6fe, 0x9d342e53, 0xa0a2f355, 0x32058ae1, 0x75a4f6eb, 0x390b83ec, 0xaa4060ef, 0x065e719f, 0x51bd6e10, 0xf93e218a, 0x3d96dd06, 0xaedd3e05, 0x464de6bd, 0xb591548d, 0x0571c45d, 0x6f0406d4, 0xff605015, 0x241998fb, 0x97d6bde9, 0xcc894043, 0x7767d99e, 0xbdb0e842, 0x8807898b, 0x38e7195b, 0xdb79c8ee, 0x47a17c0a, 0xe97c420f, 0xc9f8841e, 0x00000000, 0x83098086, 0x48322bed, 0xac1e1170, 0x4e6c5a72, 0xfbfd0eff, 0x560f8538, 0x1e3daed5, 0x27362d39, 0x640a0fd9, 0x21685ca6, 0xd19b5b54, 0x3a24362e, 0xb10c0a67, 0x0f9357e7, 0xd2b4ee96, 0x9e1b9b91, 0x4f80c0c5, 0xa261dc20, 0x695a774b, 0x161c121a, 0x0ae293ba, 0xe5c0a02a, 0x433c22e0, 0x1d121b17, 0x0b0e090d, 0xadf28bc7, 0xb92db6a8, 0xc8141ea9, 0x8557f119, 0x4caf7507, 0xbbee99dd, 0xfda37f60, 0x9ff70126, 0xbc5c72f5, 0xc544663b, 0x345bfb7e, 0x768b4329, 0xdccb23c6, 0x68b6edfc, 0x63b8e4f1, 0xcad731dc, 0x10426385, 0x40139722, 0x2084c611, 0x7d854a24, 0xf8d2bb3d, 0x11aef932, 0x6dc729a1, 0x4b1d9e2f, 0xf3dcb230, 0xec0d8652, 0xd077c1e3, 0x6c2bb316, 0x99a970b9, 0xfa119448, 0x2247e964, 0xc4a8fc8c, 0x1aa0f03f, 0xd8567d2c, 0xef223390, 0xc787494e, 0xc1d938d1, 0xfe8ccaa2, 0x3698d40b, 0xcfa6f581, 0x28a57ade, 0x26dab78e, 0xa43fadbf, 0xe42c3a9d, 0x0d507892, 0x9b6a5fcc, 0x62547e46, 0xc2f68d13, 0xe890d8b8, 0x5e2e39f7, 0xf582c3af, 0xbe9f5d80, 0x7c69d093, 0xa96fd52d, 0xb3cf2512, 0x3bc8ac99, 0xa710187d, 0x6ee89c63, 0x7bdb3bbb, 0x09cd2678, 0xf46e5918, 0x01ec9ab7, 0xa8834f9a, 0x65e6956e, 0x7eaaffe6, 0x0821bccf, 0xe6ef15e8, 0xd9bae79b, 0xce4a6f36, 0xd4ea9f09, 0xd629b07c, 0xaf31a4b2, 0x312a3f23, 0x30c6a594, 0xc035a266, 0x37744ebc, 0xa6fc82ca, 0xb0e090d0, 0x1533a7d8, 0x4af10498, 0xf741ecda, 0x0e7fcd50, 0x2f1791f6, 0x8d764dd6, 0x4d43efb0, 0x54ccaa4d, 0xdfe49604, 0xe39ed1b5, 0x1b4c6a88, 0xb8c12c1f, 0x7f466551, 0x049d5eea, 0x5d018c35, 0x73fa8774, 0x2efb0b41, 0x5ab3671d, 0x5292dbd2, 0x33e91056, 0x136dd647, 0x8c9ad761, 0x7a37a10c, 0x8e59f814, 0x89eb133c, 0xeecea927, 0x35b761c9, 0xede11ce5, 0x3c7a47b1, 0x599cd2df, 0x3f55f273, 0x791814ce, 0xbf73c737, 0xea53f7cd, 0x5b5ffdaa, 0x14df3d6f, 0x867844db, 0x81caaff3, 0x3eb968c4, 0x2c382434, 0x5fc2a340, 0x72161dc3, 0x0cbce225, 0x8b283c49, 0x41ff0d95, 0x7139a801, 0xde080cb3, 0x9cd8b4e4, 0x906456c1, 0x617bcb84, 0x70d532b6, 0x74486c5c, 0x42d0b857];\n    var T7 = [0xa75051f4, 0x65537e41, 0xa4c31a17, 0x5e963a27, 0x6bcb3bab, 0x45f11f9d, 0x58abacfa, 0x03934be3, 0xfa552030, 0x6df6ad76, 0x769188cc, 0x4c25f502, 0xd7fc4fe5, 0xcbd7c52a, 0x44802635, 0xa38fb562, 0x5a49deb1, 0x1b6725ba, 0x0e9845ea, 0xc0e15dfe, 0x7502c32f, 0xf012814c, 0x97a38d46, 0xf9c66bd3, 0x5fe7038f, 0x9c951592, 0x7aebbf6d, 0x59da9552, 0x832dd4be, 0x21d35874, 0x692949e0, 0xc8448ec9, 0x896a75c2, 0x7978f48e, 0x3e6b9958, 0x71dd27b9, 0x4fb6bee1, 0xad17f088, 0xac66c920, 0x3ab47dce, 0x4a1863df, 0x3182e51a, 0x33609751, 0x7f456253, 0x77e0b164, 0xae84bb6b, 0xa01cfe81, 0x2b94f908, 0x68587048, 0xfd198f45, 0x6c8794de, 0xf8b7527b, 0xd323ab73, 0x02e2724b, 0x8f57e31f, 0xab2a6655, 0x2807b2eb, 0xc2032fb5, 0x7b9a86c5, 0x08a5d337, 0x87f23028, 0xa5b223bf, 0x6aba0203, 0x825ced16, 0x1c2b8acf, 0xb492a779, 0xf2f0f307, 0xe2a14e69, 0xf4cd65da, 0xbed50605, 0x621fd134, 0xfe8ac4a6, 0x539d342e, 0x55a0a2f3, 0xe132058a, 0xeb75a4f6, 0xec390b83, 0xefaa4060, 0x9f065e71, 0x1051bd6e, 0x8af93e21, 0x063d96dd, 0x05aedd3e, 0xbd464de6, 0x8db59154, 0x5d0571c4, 0xd46f0406, 0x15ff6050, 0xfb241998, 0xe997d6bd, 0x43cc8940, 0x9e7767d9, 0x42bdb0e8, 0x8b880789, 0x5b38e719, 0xeedb79c8, 0x0a47a17c, 0x0fe97c42, 0x1ec9f884, 0x00000000, 0x86830980, 0xed48322b, 0x70ac1e11, 0x724e6c5a, 0xfffbfd0e, 0x38560f85, 0xd51e3dae, 0x3927362d, 0xd9640a0f, 0xa621685c, 0x54d19b5b, 0x2e3a2436, 0x67b10c0a, 0xe70f9357, 0x96d2b4ee, 0x919e1b9b, 0xc54f80c0, 0x20a261dc, 0x4b695a77, 0x1a161c12, 0xba0ae293, 0x2ae5c0a0, 0xe0433c22, 0x171d121b, 0x0d0b0e09, 0xc7adf28b, 0xa8b92db6, 0xa9c8141e, 0x198557f1, 0x074caf75, 0xddbbee99, 0x60fda37f, 0x269ff701, 0xf5bc5c72, 0x3bc54466, 0x7e345bfb, 0x29768b43, 0xc6dccb23, 0xfc68b6ed, 0xf163b8e4, 0xdccad731, 0x85104263, 0x22401397, 0x112084c6, 0x247d854a, 0x3df8d2bb, 0x3211aef9, 0xa16dc729, 0x2f4b1d9e, 0x30f3dcb2, 0x52ec0d86, 0xe3d077c1, 0x166c2bb3, 0xb999a970, 0x48fa1194, 0x642247e9, 0x8cc4a8fc, 0x3f1aa0f0, 0x2cd8567d, 0x90ef2233, 0x4ec78749, 0xd1c1d938, 0xa2fe8cca, 0x0b3698d4, 0x81cfa6f5, 0xde28a57a, 0x8e26dab7, 0xbfa43fad, 0x9de42c3a, 0x920d5078, 0xcc9b6a5f, 0x4662547e, 0x13c2f68d, 0xb8e890d8, 0xf75e2e39, 0xaff582c3, 0x80be9f5d, 0x937c69d0, 0x2da96fd5, 0x12b3cf25, 0x993bc8ac, 0x7da71018, 0x636ee89c, 0xbb7bdb3b, 0x7809cd26, 0x18f46e59, 0xb701ec9a, 0x9aa8834f, 0x6e65e695, 0xe67eaaff, 0xcf0821bc, 0xe8e6ef15, 0x9bd9bae7, 0x36ce4a6f, 0x09d4ea9f, 0x7cd629b0, 0xb2af31a4, 0x23312a3f, 0x9430c6a5, 0x66c035a2, 0xbc37744e, 0xcaa6fc82, 0xd0b0e090, 0xd81533a7, 0x984af104, 0xdaf741ec, 0x500e7fcd, 0xf62f1791, 0xd68d764d, 0xb04d43ef, 0x4d54ccaa, 0x04dfe496, 0xb5e39ed1, 0x881b4c6a, 0x1fb8c12c, 0x517f4665, 0xea049d5e, 0x355d018c, 0x7473fa87, 0x412efb0b, 0x1d5ab367, 0xd25292db, 0x5633e910, 0x47136dd6, 0x618c9ad7, 0x0c7a37a1, 0x148e59f8, 0x3c89eb13, 0x27eecea9, 0xc935b761, 0xe5ede11c, 0xb13c7a47, 0xdf599cd2, 0x733f55f2, 0xce791814, 0x37bf73c7, 0xcdea53f7, 0xaa5b5ffd, 0x6f14df3d, 0xdb867844, 0xf381caaf, 0xc43eb968, 0x342c3824, 0x405fc2a3, 0xc372161d, 0x250cbce2, 0x498b283c, 0x9541ff0d, 0x017139a8, 0xb3de080c, 0xe49cd8b4, 0xc1906456, 0x84617bcb, 0xb670d532, 0x5c74486c, 0x5742d0b8];\n    var T8 = [0xf4a75051, 0x4165537e, 0x17a4c31a, 0x275e963a, 0xab6bcb3b, 0x9d45f11f, 0xfa58abac, 0xe303934b, 0x30fa5520, 0x766df6ad, 0xcc769188, 0x024c25f5, 0xe5d7fc4f, 0x2acbd7c5, 0x35448026, 0x62a38fb5, 0xb15a49de, 0xba1b6725, 0xea0e9845, 0xfec0e15d, 0x2f7502c3, 0x4cf01281, 0x4697a38d, 0xd3f9c66b, 0x8f5fe703, 0x929c9515, 0x6d7aebbf, 0x5259da95, 0xbe832dd4, 0x7421d358, 0xe0692949, 0xc9c8448e, 0xc2896a75, 0x8e7978f4, 0x583e6b99, 0xb971dd27, 0xe14fb6be, 0x88ad17f0, 0x20ac66c9, 0xce3ab47d, 0xdf4a1863, 0x1a3182e5, 0x51336097, 0x537f4562, 0x6477e0b1, 0x6bae84bb, 0x81a01cfe, 0x082b94f9, 0x48685870, 0x45fd198f, 0xde6c8794, 0x7bf8b752, 0x73d323ab, 0x4b02e272, 0x1f8f57e3, 0x55ab2a66, 0xeb2807b2, 0xb5c2032f, 0xc57b9a86, 0x3708a5d3, 0x2887f230, 0xbfa5b223, 0x036aba02, 0x16825ced, 0xcf1c2b8a, 0x79b492a7, 0x07f2f0f3, 0x69e2a14e, 0xdaf4cd65, 0x05bed506, 0x34621fd1, 0xa6fe8ac4, 0x2e539d34, 0xf355a0a2, 0x8ae13205, 0xf6eb75a4, 0x83ec390b, 0x60efaa40, 0x719f065e, 0x6e1051bd, 0x218af93e, 0xdd063d96, 0x3e05aedd, 0xe6bd464d, 0x548db591, 0xc45d0571, 0x06d46f04, 0x5015ff60, 0x98fb2419, 0xbde997d6, 0x4043cc89, 0xd99e7767, 0xe842bdb0, 0x898b8807, 0x195b38e7, 0xc8eedb79, 0x7c0a47a1, 0x420fe97c, 0x841ec9f8, 0x00000000, 0x80868309, 0x2bed4832, 0x1170ac1e, 0x5a724e6c, 0x0efffbfd, 0x8538560f, 0xaed51e3d, 0x2d392736, 0x0fd9640a, 0x5ca62168, 0x5b54d19b, 0x362e3a24, 0x0a67b10c, 0x57e70f93, 0xee96d2b4, 0x9b919e1b, 0xc0c54f80, 0xdc20a261, 0x774b695a, 0x121a161c, 0x93ba0ae2, 0xa02ae5c0, 0x22e0433c, 0x1b171d12, 0x090d0b0e, 0x8bc7adf2, 0xb6a8b92d, 0x1ea9c814, 0xf1198557, 0x75074caf, 0x99ddbbee, 0x7f60fda3, 0x01269ff7, 0x72f5bc5c, 0x663bc544, 0xfb7e345b, 0x4329768b, 0x23c6dccb, 0xedfc68b6, 0xe4f163b8, 0x31dccad7, 0x63851042, 0x97224013, 0xc6112084, 0x4a247d85, 0xbb3df8d2, 0xf93211ae, 0x29a16dc7, 0x9e2f4b1d, 0xb230f3dc, 0x8652ec0d, 0xc1e3d077, 0xb3166c2b, 0x70b999a9, 0x9448fa11, 0xe9642247, 0xfc8cc4a8, 0xf03f1aa0, 0x7d2cd856, 0x3390ef22, 0x494ec787, 0x38d1c1d9, 0xcaa2fe8c, 0xd40b3698, 0xf581cfa6, 0x7ade28a5, 0xb78e26da, 0xadbfa43f, 0x3a9de42c, 0x78920d50, 0x5fcc9b6a, 0x7e466254, 0x8d13c2f6, 0xd8b8e890, 0x39f75e2e, 0xc3aff582, 0x5d80be9f, 0xd0937c69, 0xd52da96f, 0x2512b3cf, 0xac993bc8, 0x187da710, 0x9c636ee8, 0x3bbb7bdb, 0x267809cd, 0x5918f46e, 0x9ab701ec, 0x4f9aa883, 0x956e65e6, 0xffe67eaa, 0xbccf0821, 0x15e8e6ef, 0xe79bd9ba, 0x6f36ce4a, 0x9f09d4ea, 0xb07cd629, 0xa4b2af31, 0x3f23312a, 0xa59430c6, 0xa266c035, 0x4ebc3774, 0x82caa6fc, 0x90d0b0e0, 0xa7d81533, 0x04984af1, 0xecdaf741, 0xcd500e7f, 0x91f62f17, 0x4dd68d76, 0xefb04d43, 0xaa4d54cc, 0x9604dfe4, 0xd1b5e39e, 0x6a881b4c, 0x2c1fb8c1, 0x65517f46, 0x5eea049d, 0x8c355d01, 0x877473fa, 0x0b412efb, 0x671d5ab3, 0xdbd25292, 0x105633e9, 0xd647136d, 0xd7618c9a, 0xa10c7a37, 0xf8148e59, 0x133c89eb, 0xa927eece, 0x61c935b7, 0x1ce5ede1, 0x47b13c7a, 0xd2df599c, 0xf2733f55, 0x14ce7918, 0xc737bf73, 0xf7cdea53, 0xfdaa5b5f, 0x3d6f14df, 0x44db8678, 0xaff381ca, 0x68c43eb9, 0x24342c38, 0xa3405fc2, 0x1dc37216, 0xe2250cbc, 0x3c498b28, 0x0d9541ff, 0xa8017139, 0x0cb3de08, 0xb4e49cd8, 0x56c19064, 0xcb84617b, 0x32b670d5, 0x6c5c7448, 0xb85742d0];\n\n    // Transformations for decryption key expansion\n    var U1 = [0x00000000, 0x0e090d0b, 0x1c121a16, 0x121b171d, 0x3824342c, 0x362d3927, 0x24362e3a, 0x2a3f2331, 0x70486858, 0x7e416553, 0x6c5a724e, 0x62537f45, 0x486c5c74, 0x4665517f, 0x547e4662, 0x5a774b69, 0xe090d0b0, 0xee99ddbb, 0xfc82caa6, 0xf28bc7ad, 0xd8b4e49c, 0xd6bde997, 0xc4a6fe8a, 0xcaaff381, 0x90d8b8e8, 0x9ed1b5e3, 0x8ccaa2fe, 0x82c3aff5, 0xa8fc8cc4, 0xa6f581cf, 0xb4ee96d2, 0xbae79bd9, 0xdb3bbb7b, 0xd532b670, 0xc729a16d, 0xc920ac66, 0xe31f8f57, 0xed16825c, 0xff0d9541, 0xf104984a, 0xab73d323, 0xa57ade28, 0xb761c935, 0xb968c43e, 0x9357e70f, 0x9d5eea04, 0x8f45fd19, 0x814cf012, 0x3bab6bcb, 0x35a266c0, 0x27b971dd, 0x29b07cd6, 0x038f5fe7, 0x0d8652ec, 0x1f9d45f1, 0x119448fa, 0x4be30393, 0x45ea0e98, 0x57f11985, 0x59f8148e, 0x73c737bf, 0x7dce3ab4, 0x6fd52da9, 0x61dc20a2, 0xad766df6, 0xa37f60fd, 0xb16477e0, 0xbf6d7aeb, 0x955259da, 0x9b5b54d1, 0x894043cc, 0x87494ec7, 0xdd3e05ae, 0xd33708a5, 0xc12c1fb8, 0xcf2512b3, 0xe51a3182, 0xeb133c89, 0xf9082b94, 0xf701269f, 0x4de6bd46, 0x43efb04d, 0x51f4a750, 0x5ffdaa5b, 0x75c2896a, 0x7bcb8461, 0x69d0937c, 0x67d99e77, 0x3daed51e, 0x33a7d815, 0x21bccf08, 0x2fb5c203, 0x058ae132, 0x0b83ec39, 0x1998fb24, 0x1791f62f, 0x764dd68d, 0x7844db86, 0x6a5fcc9b, 0x6456c190, 0x4e69e2a1, 0x4060efaa, 0x527bf8b7, 0x5c72f5bc, 0x0605bed5, 0x080cb3de, 0x1a17a4c3, 0x141ea9c8, 0x3e218af9, 0x302887f2, 0x223390ef, 0x2c3a9de4, 0x96dd063d, 0x98d40b36, 0x8acf1c2b, 0x84c61120, 0xaef93211, 0xa0f03f1a, 0xb2eb2807, 0xbce2250c, 0xe6956e65, 0xe89c636e, 0xfa877473, 0xf48e7978, 0xdeb15a49, 0xd0b85742, 0xc2a3405f, 0xccaa4d54, 0x41ecdaf7, 0x4fe5d7fc, 0x5dfec0e1, 0x53f7cdea, 0x79c8eedb, 0x77c1e3d0, 0x65daf4cd, 0x6bd3f9c6, 0x31a4b2af, 0x3fadbfa4, 0x2db6a8b9, 0x23bfa5b2, 0x09808683, 0x07898b88, 0x15929c95, 0x1b9b919e, 0xa17c0a47, 0xaf75074c, 0xbd6e1051, 0xb3671d5a, 0x99583e6b, 0x97513360, 0x854a247d, 0x8b432976, 0xd134621f, 0xdf3d6f14, 0xcd267809, 0xc32f7502, 0xe9105633, 0xe7195b38, 0xf5024c25, 0xfb0b412e, 0x9ad7618c, 0x94de6c87, 0x86c57b9a, 0x88cc7691, 0xa2f355a0, 0xacfa58ab, 0xbee14fb6, 0xb0e842bd, 0xea9f09d4, 0xe49604df, 0xf68d13c2, 0xf8841ec9, 0xd2bb3df8, 0xdcb230f3, 0xcea927ee, 0xc0a02ae5, 0x7a47b13c, 0x744ebc37, 0x6655ab2a, 0x685ca621, 0x42638510, 0x4c6a881b, 0x5e719f06, 0x5078920d, 0x0a0fd964, 0x0406d46f, 0x161dc372, 0x1814ce79, 0x322bed48, 0x3c22e043, 0x2e39f75e, 0x2030fa55, 0xec9ab701, 0xe293ba0a, 0xf088ad17, 0xfe81a01c, 0xd4be832d, 0xdab78e26, 0xc8ac993b, 0xc6a59430, 0x9cd2df59, 0x92dbd252, 0x80c0c54f, 0x8ec9c844, 0xa4f6eb75, 0xaaffe67e, 0xb8e4f163, 0xb6edfc68, 0x0c0a67b1, 0x02036aba, 0x10187da7, 0x1e1170ac, 0x342e539d, 0x3a275e96, 0x283c498b, 0x26354480, 0x7c420fe9, 0x724b02e2, 0x605015ff, 0x6e5918f4, 0x44663bc5, 0x4a6f36ce, 0x587421d3, 0x567d2cd8, 0x37a10c7a, 0x39a80171, 0x2bb3166c, 0x25ba1b67, 0x0f853856, 0x018c355d, 0x13972240, 0x1d9e2f4b, 0x47e96422, 0x49e06929, 0x5bfb7e34, 0x55f2733f, 0x7fcd500e, 0x71c45d05, 0x63df4a18, 0x6dd64713, 0xd731dcca, 0xd938d1c1, 0xcb23c6dc, 0xc52acbd7, 0xef15e8e6, 0xe11ce5ed, 0xf307f2f0, 0xfd0efffb, 0xa779b492, 0xa970b999, 0xbb6bae84, 0xb562a38f, 0x9f5d80be, 0x91548db5, 0x834f9aa8, 0x8d4697a3];\n    var U2 = [0x00000000, 0x0b0e090d, 0x161c121a, 0x1d121b17, 0x2c382434, 0x27362d39, 0x3a24362e, 0x312a3f23, 0x58704868, 0x537e4165, 0x4e6c5a72, 0x4562537f, 0x74486c5c, 0x7f466551, 0x62547e46, 0x695a774b, 0xb0e090d0, 0xbbee99dd, 0xa6fc82ca, 0xadf28bc7, 0x9cd8b4e4, 0x97d6bde9, 0x8ac4a6fe, 0x81caaff3, 0xe890d8b8, 0xe39ed1b5, 0xfe8ccaa2, 0xf582c3af, 0xc4a8fc8c, 0xcfa6f581, 0xd2b4ee96, 0xd9bae79b, 0x7bdb3bbb, 0x70d532b6, 0x6dc729a1, 0x66c920ac, 0x57e31f8f, 0x5ced1682, 0x41ff0d95, 0x4af10498, 0x23ab73d3, 0x28a57ade, 0x35b761c9, 0x3eb968c4, 0x0f9357e7, 0x049d5eea, 0x198f45fd, 0x12814cf0, 0xcb3bab6b, 0xc035a266, 0xdd27b971, 0xd629b07c, 0xe7038f5f, 0xec0d8652, 0xf11f9d45, 0xfa119448, 0x934be303, 0x9845ea0e, 0x8557f119, 0x8e59f814, 0xbf73c737, 0xb47dce3a, 0xa96fd52d, 0xa261dc20, 0xf6ad766d, 0xfda37f60, 0xe0b16477, 0xebbf6d7a, 0xda955259, 0xd19b5b54, 0xcc894043, 0xc787494e, 0xaedd3e05, 0xa5d33708, 0xb8c12c1f, 0xb3cf2512, 0x82e51a31, 0x89eb133c, 0x94f9082b, 0x9ff70126, 0x464de6bd, 0x4d43efb0, 0x5051f4a7, 0x5b5ffdaa, 0x6a75c289, 0x617bcb84, 0x7c69d093, 0x7767d99e, 0x1e3daed5, 0x1533a7d8, 0x0821bccf, 0x032fb5c2, 0x32058ae1, 0x390b83ec, 0x241998fb, 0x2f1791f6, 0x8d764dd6, 0x867844db, 0x9b6a5fcc, 0x906456c1, 0xa14e69e2, 0xaa4060ef, 0xb7527bf8, 0xbc5c72f5, 0xd50605be, 0xde080cb3, 0xc31a17a4, 0xc8141ea9, 0xf93e218a, 0xf2302887, 0xef223390, 0xe42c3a9d, 0x3d96dd06, 0x3698d40b, 0x2b8acf1c, 0x2084c611, 0x11aef932, 0x1aa0f03f, 0x07b2eb28, 0x0cbce225, 0x65e6956e, 0x6ee89c63, 0x73fa8774, 0x78f48e79, 0x49deb15a, 0x42d0b857, 0x5fc2a340, 0x54ccaa4d, 0xf741ecda, 0xfc4fe5d7, 0xe15dfec0, 0xea53f7cd, 0xdb79c8ee, 0xd077c1e3, 0xcd65daf4, 0xc66bd3f9, 0xaf31a4b2, 0xa43fadbf, 0xb92db6a8, 0xb223bfa5, 0x83098086, 0x8807898b, 0x9515929c, 0x9e1b9b91, 0x47a17c0a, 0x4caf7507, 0x51bd6e10, 0x5ab3671d, 0x6b99583e, 0x60975133, 0x7d854a24, 0x768b4329, 0x1fd13462, 0x14df3d6f, 0x09cd2678, 0x02c32f75, 0x33e91056, 0x38e7195b, 0x25f5024c, 0x2efb0b41, 0x8c9ad761, 0x8794de6c, 0x9a86c57b, 0x9188cc76, 0xa0a2f355, 0xabacfa58, 0xb6bee14f, 0xbdb0e842, 0xd4ea9f09, 0xdfe49604, 0xc2f68d13, 0xc9f8841e, 0xf8d2bb3d, 0xf3dcb230, 0xeecea927, 0xe5c0a02a, 0x3c7a47b1, 0x37744ebc, 0x2a6655ab, 0x21685ca6, 0x10426385, 0x1b4c6a88, 0x065e719f, 0x0d507892, 0x640a0fd9, 0x6f0406d4, 0x72161dc3, 0x791814ce, 0x48322bed, 0x433c22e0, 0x5e2e39f7, 0x552030fa, 0x01ec9ab7, 0x0ae293ba, 0x17f088ad, 0x1cfe81a0, 0x2dd4be83, 0x26dab78e, 0x3bc8ac99, 0x30c6a594, 0x599cd2df, 0x5292dbd2, 0x4f80c0c5, 0x448ec9c8, 0x75a4f6eb, 0x7eaaffe6, 0x63b8e4f1, 0x68b6edfc, 0xb10c0a67, 0xba02036a, 0xa710187d, 0xac1e1170, 0x9d342e53, 0x963a275e, 0x8b283c49, 0x80263544, 0xe97c420f, 0xe2724b02, 0xff605015, 0xf46e5918, 0xc544663b, 0xce4a6f36, 0xd3587421, 0xd8567d2c, 0x7a37a10c, 0x7139a801, 0x6c2bb316, 0x6725ba1b, 0x560f8538, 0x5d018c35, 0x40139722, 0x4b1d9e2f, 0x2247e964, 0x2949e069, 0x345bfb7e, 0x3f55f273, 0x0e7fcd50, 0x0571c45d, 0x1863df4a, 0x136dd647, 0xcad731dc, 0xc1d938d1, 0xdccb23c6, 0xd7c52acb, 0xe6ef15e8, 0xede11ce5, 0xf0f307f2, 0xfbfd0eff, 0x92a779b4, 0x99a970b9, 0x84bb6bae, 0x8fb562a3, 0xbe9f5d80, 0xb591548d, 0xa8834f9a, 0xa38d4697];\n    var U3 = [0x00000000, 0x0d0b0e09, 0x1a161c12, 0x171d121b, 0x342c3824, 0x3927362d, 0x2e3a2436, 0x23312a3f, 0x68587048, 0x65537e41, 0x724e6c5a, 0x7f456253, 0x5c74486c, 0x517f4665, 0x4662547e, 0x4b695a77, 0xd0b0e090, 0xddbbee99, 0xcaa6fc82, 0xc7adf28b, 0xe49cd8b4, 0xe997d6bd, 0xfe8ac4a6, 0xf381caaf, 0xb8e890d8, 0xb5e39ed1, 0xa2fe8cca, 0xaff582c3, 0x8cc4a8fc, 0x81cfa6f5, 0x96d2b4ee, 0x9bd9bae7, 0xbb7bdb3b, 0xb670d532, 0xa16dc729, 0xac66c920, 0x8f57e31f, 0x825ced16, 0x9541ff0d, 0x984af104, 0xd323ab73, 0xde28a57a, 0xc935b761, 0xc43eb968, 0xe70f9357, 0xea049d5e, 0xfd198f45, 0xf012814c, 0x6bcb3bab, 0x66c035a2, 0x71dd27b9, 0x7cd629b0, 0x5fe7038f, 0x52ec0d86, 0x45f11f9d, 0x48fa1194, 0x03934be3, 0x0e9845ea, 0x198557f1, 0x148e59f8, 0x37bf73c7, 0x3ab47dce, 0x2da96fd5, 0x20a261dc, 0x6df6ad76, 0x60fda37f, 0x77e0b164, 0x7aebbf6d, 0x59da9552, 0x54d19b5b, 0x43cc8940, 0x4ec78749, 0x05aedd3e, 0x08a5d337, 0x1fb8c12c, 0x12b3cf25, 0x3182e51a, 0x3c89eb13, 0x2b94f908, 0x269ff701, 0xbd464de6, 0xb04d43ef, 0xa75051f4, 0xaa5b5ffd, 0x896a75c2, 0x84617bcb, 0x937c69d0, 0x9e7767d9, 0xd51e3dae, 0xd81533a7, 0xcf0821bc, 0xc2032fb5, 0xe132058a, 0xec390b83, 0xfb241998, 0xf62f1791, 0xd68d764d, 0xdb867844, 0xcc9b6a5f, 0xc1906456, 0xe2a14e69, 0xefaa4060, 0xf8b7527b, 0xf5bc5c72, 0xbed50605, 0xb3de080c, 0xa4c31a17, 0xa9c8141e, 0x8af93e21, 0x87f23028, 0x90ef2233, 0x9de42c3a, 0x063d96dd, 0x0b3698d4, 0x1c2b8acf, 0x112084c6, 0x3211aef9, 0x3f1aa0f0, 0x2807b2eb, 0x250cbce2, 0x6e65e695, 0x636ee89c, 0x7473fa87, 0x7978f48e, 0x5a49deb1, 0x5742d0b8, 0x405fc2a3, 0x4d54ccaa, 0xdaf741ec, 0xd7fc4fe5, 0xc0e15dfe, 0xcdea53f7, 0xeedb79c8, 0xe3d077c1, 0xf4cd65da, 0xf9c66bd3, 0xb2af31a4, 0xbfa43fad, 0xa8b92db6, 0xa5b223bf, 0x86830980, 0x8b880789, 0x9c951592, 0x919e1b9b, 0x0a47a17c, 0x074caf75, 0x1051bd6e, 0x1d5ab367, 0x3e6b9958, 0x33609751, 0x247d854a, 0x29768b43, 0x621fd134, 0x6f14df3d, 0x7809cd26, 0x7502c32f, 0x5633e910, 0x5b38e719, 0x4c25f502, 0x412efb0b, 0x618c9ad7, 0x6c8794de, 0x7b9a86c5, 0x769188cc, 0x55a0a2f3, 0x58abacfa, 0x4fb6bee1, 0x42bdb0e8, 0x09d4ea9f, 0x04dfe496, 0x13c2f68d, 0x1ec9f884, 0x3df8d2bb, 0x30f3dcb2, 0x27eecea9, 0x2ae5c0a0, 0xb13c7a47, 0xbc37744e, 0xab2a6655, 0xa621685c, 0x85104263, 0x881b4c6a, 0x9f065e71, 0x920d5078, 0xd9640a0f, 0xd46f0406, 0xc372161d, 0xce791814, 0xed48322b, 0xe0433c22, 0xf75e2e39, 0xfa552030, 0xb701ec9a, 0xba0ae293, 0xad17f088, 0xa01cfe81, 0x832dd4be, 0x8e26dab7, 0x993bc8ac, 0x9430c6a5, 0xdf599cd2, 0xd25292db, 0xc54f80c0, 0xc8448ec9, 0xeb75a4f6, 0xe67eaaff, 0xf163b8e4, 0xfc68b6ed, 0x67b10c0a, 0x6aba0203, 0x7da71018, 0x70ac1e11, 0x539d342e, 0x5e963a27, 0x498b283c, 0x44802635, 0x0fe97c42, 0x02e2724b, 0x15ff6050, 0x18f46e59, 0x3bc54466, 0x36ce4a6f, 0x21d35874, 0x2cd8567d, 0x0c7a37a1, 0x017139a8, 0x166c2bb3, 0x1b6725ba, 0x38560f85, 0x355d018c, 0x22401397, 0x2f4b1d9e, 0x642247e9, 0x692949e0, 0x7e345bfb, 0x733f55f2, 0x500e7fcd, 0x5d0571c4, 0x4a1863df, 0x47136dd6, 0xdccad731, 0xd1c1d938, 0xc6dccb23, 0xcbd7c52a, 0xe8e6ef15, 0xe5ede11c, 0xf2f0f307, 0xfffbfd0e, 0xb492a779, 0xb999a970, 0xae84bb6b, 0xa38fb562, 0x80be9f5d, 0x8db59154, 0x9aa8834f, 0x97a38d46];\n    var U4 = [0x00000000, 0x090d0b0e, 0x121a161c, 0x1b171d12, 0x24342c38, 0x2d392736, 0x362e3a24, 0x3f23312a, 0x48685870, 0x4165537e, 0x5a724e6c, 0x537f4562, 0x6c5c7448, 0x65517f46, 0x7e466254, 0x774b695a, 0x90d0b0e0, 0x99ddbbee, 0x82caa6fc, 0x8bc7adf2, 0xb4e49cd8, 0xbde997d6, 0xa6fe8ac4, 0xaff381ca, 0xd8b8e890, 0xd1b5e39e, 0xcaa2fe8c, 0xc3aff582, 0xfc8cc4a8, 0xf581cfa6, 0xee96d2b4, 0xe79bd9ba, 0x3bbb7bdb, 0x32b670d5, 0x29a16dc7, 0x20ac66c9, 0x1f8f57e3, 0x16825ced, 0x0d9541ff, 0x04984af1, 0x73d323ab, 0x7ade28a5, 0x61c935b7, 0x68c43eb9, 0x57e70f93, 0x5eea049d, 0x45fd198f, 0x4cf01281, 0xab6bcb3b, 0xa266c035, 0xb971dd27, 0xb07cd629, 0x8f5fe703, 0x8652ec0d, 0x9d45f11f, 0x9448fa11, 0xe303934b, 0xea0e9845, 0xf1198557, 0xf8148e59, 0xc737bf73, 0xce3ab47d, 0xd52da96f, 0xdc20a261, 0x766df6ad, 0x7f60fda3, 0x6477e0b1, 0x6d7aebbf, 0x5259da95, 0x5b54d19b, 0x4043cc89, 0x494ec787, 0x3e05aedd, 0x3708a5d3, 0x2c1fb8c1, 0x2512b3cf, 0x1a3182e5, 0x133c89eb, 0x082b94f9, 0x01269ff7, 0xe6bd464d, 0xefb04d43, 0xf4a75051, 0xfdaa5b5f, 0xc2896a75, 0xcb84617b, 0xd0937c69, 0xd99e7767, 0xaed51e3d, 0xa7d81533, 0xbccf0821, 0xb5c2032f, 0x8ae13205, 0x83ec390b, 0x98fb2419, 0x91f62f17, 0x4dd68d76, 0x44db8678, 0x5fcc9b6a, 0x56c19064, 0x69e2a14e, 0x60efaa40, 0x7bf8b752, 0x72f5bc5c, 0x05bed506, 0x0cb3de08, 0x17a4c31a, 0x1ea9c814, 0x218af93e, 0x2887f230, 0x3390ef22, 0x3a9de42c, 0xdd063d96, 0xd40b3698, 0xcf1c2b8a, 0xc6112084, 0xf93211ae, 0xf03f1aa0, 0xeb2807b2, 0xe2250cbc, 0x956e65e6, 0x9c636ee8, 0x877473fa, 0x8e7978f4, 0xb15a49de, 0xb85742d0, 0xa3405fc2, 0xaa4d54cc, 0xecdaf741, 0xe5d7fc4f, 0xfec0e15d, 0xf7cdea53, 0xc8eedb79, 0xc1e3d077, 0xdaf4cd65, 0xd3f9c66b, 0xa4b2af31, 0xadbfa43f, 0xb6a8b92d, 0xbfa5b223, 0x80868309, 0x898b8807, 0x929c9515, 0x9b919e1b, 0x7c0a47a1, 0x75074caf, 0x6e1051bd, 0x671d5ab3, 0x583e6b99, 0x51336097, 0x4a247d85, 0x4329768b, 0x34621fd1, 0x3d6f14df, 0x267809cd, 0x2f7502c3, 0x105633e9, 0x195b38e7, 0x024c25f5, 0x0b412efb, 0xd7618c9a, 0xde6c8794, 0xc57b9a86, 0xcc769188, 0xf355a0a2, 0xfa58abac, 0xe14fb6be, 0xe842bdb0, 0x9f09d4ea, 0x9604dfe4, 0x8d13c2f6, 0x841ec9f8, 0xbb3df8d2, 0xb230f3dc, 0xa927eece, 0xa02ae5c0, 0x47b13c7a, 0x4ebc3774, 0x55ab2a66, 0x5ca62168, 0x63851042, 0x6a881b4c, 0x719f065e, 0x78920d50, 0x0fd9640a, 0x06d46f04, 0x1dc37216, 0x14ce7918, 0x2bed4832, 0x22e0433c, 0x39f75e2e, 0x30fa5520, 0x9ab701ec, 0x93ba0ae2, 0x88ad17f0, 0x81a01cfe, 0xbe832dd4, 0xb78e26da, 0xac993bc8, 0xa59430c6, 0xd2df599c, 0xdbd25292, 0xc0c54f80, 0xc9c8448e, 0xf6eb75a4, 0xffe67eaa, 0xe4f163b8, 0xedfc68b6, 0x0a67b10c, 0x036aba02, 0x187da710, 0x1170ac1e, 0x2e539d34, 0x275e963a, 0x3c498b28, 0x35448026, 0x420fe97c, 0x4b02e272, 0x5015ff60, 0x5918f46e, 0x663bc544, 0x6f36ce4a, 0x7421d358, 0x7d2cd856, 0xa10c7a37, 0xa8017139, 0xb3166c2b, 0xba1b6725, 0x8538560f, 0x8c355d01, 0x97224013, 0x9e2f4b1d, 0xe9642247, 0xe0692949, 0xfb7e345b, 0xf2733f55, 0xcd500e7f, 0xc45d0571, 0xdf4a1863, 0xd647136d, 0x31dccad7, 0x38d1c1d9, 0x23c6dccb, 0x2acbd7c5, 0x15e8e6ef, 0x1ce5ede1, 0x07f2f0f3, 0x0efffbfd, 0x79b492a7, 0x70b999a9, 0x6bae84bb, 0x62a38fb5, 0x5d80be9f, 0x548db591, 0x4f9aa883, 0x4697a38d];\n\n    function convertToInt32(bytes) {\n        var result = [];\n        for (var i = 0; i < bytes.length; i += 4) {\n            result.push(\n                (bytes[i    ] << 24) |\n                (bytes[i + 1] << 16) |\n                (bytes[i + 2] <<  8) |\n                 bytes[i + 3]\n            );\n        }\n        return result;\n    }\n\n    var AES = function(key) {\n        if (!(this instanceof AES)) {\n            throw Error('AES must be instanitated with `new`');\n        }\n\n        Object.defineProperty(this, 'key', {\n            value: coerceArray(key, true)\n        });\n\n        this._prepare();\n    }\n\n\n    AES.prototype._prepare = function() {\n\n        var rounds = numberOfRounds[this.key.length];\n        if (rounds == null) {\n            throw new Error('invalid key size (must be 16, 24 or 32 bytes)');\n        }\n\n        // encryption round keys\n        this._Ke = [];\n\n        // decryption round keys\n        this._Kd = [];\n\n        for (var i = 0; i <= rounds; i++) {\n            this._Ke.push([0, 0, 0, 0]);\n            this._Kd.push([0, 0, 0, 0]);\n        }\n\n        var roundKeyCount = (rounds + 1) * 4;\n        var KC = this.key.length / 4;\n\n        // convert the key into ints\n        var tk = convertToInt32(this.key);\n\n        // copy values into round key arrays\n        var index;\n        for (var i = 0; i < KC; i++) {\n            index = i >> 2;\n            this._Ke[index][i % 4] = tk[i];\n            this._Kd[rounds - index][i % 4] = tk[i];\n        }\n\n        // key expansion (fips-197 section 5.2)\n        var rconpointer = 0;\n        var t = KC, tt;\n        while (t < roundKeyCount) {\n            tt = tk[KC - 1];\n            tk[0] ^= ((S[(tt >> 16) & 0xFF] << 24) ^\n                      (S[(tt >>  8) & 0xFF] << 16) ^\n                      (S[ tt        & 0xFF] <<  8) ^\n                       S[(tt >> 24) & 0xFF]        ^\n                      (rcon[rconpointer] << 24));\n            rconpointer += 1;\n\n            // key expansion (for non-256 bit)\n            if (KC != 8) {\n                for (var i = 1; i < KC; i++) {\n                    tk[i] ^= tk[i - 1];\n                }\n\n            // key expansion for 256-bit keys is \"slightly different\" (fips-197)\n            } else {\n                for (var i = 1; i < (KC / 2); i++) {\n                    tk[i] ^= tk[i - 1];\n                }\n                tt = tk[(KC / 2) - 1];\n\n                tk[KC / 2] ^= (S[ tt        & 0xFF]        ^\n                              (S[(tt >>  8) & 0xFF] <<  8) ^\n                              (S[(tt >> 16) & 0xFF] << 16) ^\n                              (S[(tt >> 24) & 0xFF] << 24));\n\n                for (var i = (KC / 2) + 1; i < KC; i++) {\n                    tk[i] ^= tk[i - 1];\n                }\n            }\n\n            // copy values into round key arrays\n            var i = 0, r, c;\n            while (i < KC && t < roundKeyCount) {\n                r = t >> 2;\n                c = t % 4;\n                this._Ke[r][c] = tk[i];\n                this._Kd[rounds - r][c] = tk[i++];\n                t++;\n            }\n        }\n\n        // inverse-cipher-ify the decryption round key (fips-197 section 5.3)\n        for (var r = 1; r < rounds; r++) {\n            for (var c = 0; c < 4; c++) {\n                tt = this._Kd[r][c];\n                this._Kd[r][c] = (U1[(tt >> 24) & 0xFF] ^\n                                  U2[(tt >> 16) & 0xFF] ^\n                                  U3[(tt >>  8) & 0xFF] ^\n                                  U4[ tt        & 0xFF]);\n            }\n        }\n    }\n\n    AES.prototype.encrypt = function(plaintext) {\n        if (plaintext.length != 16) {\n            throw new Error('invalid plaintext size (must be 16 bytes)');\n        }\n\n        var rounds = this._Ke.length - 1;\n        var a = [0, 0, 0, 0];\n\n        // convert plaintext to (ints ^ key)\n        var t = convertToInt32(plaintext);\n        for (var i = 0; i < 4; i++) {\n            t[i] ^= this._Ke[0][i];\n        }\n\n        // apply round transforms\n        for (var r = 1; r < rounds; r++) {\n            for (var i = 0; i < 4; i++) {\n                a[i] = (T1[(t[ i         ] >> 24) & 0xff] ^\n                        T2[(t[(i + 1) % 4] >> 16) & 0xff] ^\n                        T3[(t[(i + 2) % 4] >>  8) & 0xff] ^\n                        T4[ t[(i + 3) % 4]        & 0xff] ^\n                        this._Ke[r][i]);\n            }\n            t = a.slice();\n        }\n\n        // the last round is special\n        var result = createArray(16), tt;\n        for (var i = 0; i < 4; i++) {\n            tt = this._Ke[rounds][i];\n            result[4 * i    ] = (S[(t[ i         ] >> 24) & 0xff] ^ (tt >> 24)) & 0xff;\n            result[4 * i + 1] = (S[(t[(i + 1) % 4] >> 16) & 0xff] ^ (tt >> 16)) & 0xff;\n            result[4 * i + 2] = (S[(t[(i + 2) % 4] >>  8) & 0xff] ^ (tt >>  8)) & 0xff;\n            result[4 * i + 3] = (S[ t[(i + 3) % 4]        & 0xff] ^  tt       ) & 0xff;\n        }\n\n        return result;\n    }\n\n    AES.prototype.decrypt = function(ciphertext) {\n        if (ciphertext.length != 16) {\n            throw new Error('invalid ciphertext size (must be 16 bytes)');\n        }\n\n        var rounds = this._Kd.length - 1;\n        var a = [0, 0, 0, 0];\n\n        // convert plaintext to (ints ^ key)\n        var t = convertToInt32(ciphertext);\n        for (var i = 0; i < 4; i++) {\n            t[i] ^= this._Kd[0][i];\n        }\n\n        // apply round transforms\n        for (var r = 1; r < rounds; r++) {\n            for (var i = 0; i < 4; i++) {\n                a[i] = (T5[(t[ i          ] >> 24) & 0xff] ^\n                        T6[(t[(i + 3) % 4] >> 16) & 0xff] ^\n                        T7[(t[(i + 2) % 4] >>  8) & 0xff] ^\n                        T8[ t[(i + 1) % 4]        & 0xff] ^\n                        this._Kd[r][i]);\n            }\n            t = a.slice();\n        }\n\n        // the last round is special\n        var result = createArray(16), tt;\n        for (var i = 0; i < 4; i++) {\n            tt = this._Kd[rounds][i];\n            result[4 * i    ] = (Si[(t[ i         ] >> 24) & 0xff] ^ (tt >> 24)) & 0xff;\n            result[4 * i + 1] = (Si[(t[(i + 3) % 4] >> 16) & 0xff] ^ (tt >> 16)) & 0xff;\n            result[4 * i + 2] = (Si[(t[(i + 2) % 4] >>  8) & 0xff] ^ (tt >>  8)) & 0xff;\n            result[4 * i + 3] = (Si[ t[(i + 1) % 4]        & 0xff] ^  tt       ) & 0xff;\n        }\n\n        return result;\n    }\n\n\n    /**\n     *  Mode Of Operation - Electonic Codebook (ECB)\n     */\n    var ModeOfOperationECB = function(key) {\n        if (!(this instanceof ModeOfOperationECB)) {\n            throw Error('AES must be instanitated with `new`');\n        }\n\n        this.description = \"Electronic Code Block\";\n        this.name = \"ecb\";\n\n        this._aes = new AES(key);\n    }\n\n    ModeOfOperationECB.prototype.encrypt = function(plaintext) {\n        plaintext = coerceArray(plaintext);\n\n        if ((plaintext.length % 16) !== 0) {\n            throw new Error('invalid plaintext size (must be multiple of 16 bytes)');\n        }\n\n        var ciphertext = createArray(plaintext.length);\n        var block = createArray(16);\n\n        for (var i = 0; i < plaintext.length; i += 16) {\n            copyArray(plaintext, block, 0, i, i + 16);\n            block = this._aes.encrypt(block);\n            copyArray(block, ciphertext, i);\n        }\n\n        return ciphertext;\n    }\n\n    ModeOfOperationECB.prototype.decrypt = function(ciphertext) {\n        ciphertext = coerceArray(ciphertext);\n\n        if ((ciphertext.length % 16) !== 0) {\n            throw new Error('invalid ciphertext size (must be multiple of 16 bytes)');\n        }\n\n        var plaintext = createArray(ciphertext.length);\n        var block = createArray(16);\n\n        for (var i = 0; i < ciphertext.length; i += 16) {\n            copyArray(ciphertext, block, 0, i, i + 16);\n            block = this._aes.decrypt(block);\n            copyArray(block, plaintext, i);\n        }\n\n        return plaintext;\n    }\n\n\n    /**\n     *  Mode Of Operation - Cipher Block Chaining (CBC)\n     */\n    var ModeOfOperationCBC = function(key, iv) {\n        if (!(this instanceof ModeOfOperationCBC)) {\n            throw Error('AES must be instanitated with `new`');\n        }\n\n        this.description = \"Cipher Block Chaining\";\n        this.name = \"cbc\";\n\n        if (!iv) {\n            iv = createArray(16);\n\n        } else if (iv.length != 16) {\n            throw new Error('invalid initialation vector size (must be 16 bytes)');\n        }\n\n        this._lastCipherblock = coerceArray(iv, true);\n\n        this._aes = new AES(key);\n    }\n\n    ModeOfOperationCBC.prototype.encrypt = function(plaintext) {\n        plaintext = coerceArray(plaintext);\n\n        if ((plaintext.length % 16) !== 0) {\n            throw new Error('invalid plaintext size (must be multiple of 16 bytes)');\n        }\n\n        var ciphertext = createArray(plaintext.length);\n        var block = createArray(16);\n\n        for (var i = 0; i < plaintext.length; i += 16) {\n            copyArray(plaintext, block, 0, i, i + 16);\n\n            for (var j = 0; j < 16; j++) {\n                block[j] ^= this._lastCipherblock[j];\n            }\n\n            this._lastCipherblock = this._aes.encrypt(block);\n            copyArray(this._lastCipherblock, ciphertext, i);\n        }\n\n        return ciphertext;\n    }\n\n    ModeOfOperationCBC.prototype.decrypt = function(ciphertext) {\n        ciphertext = coerceArray(ciphertext);\n\n        if ((ciphertext.length % 16) !== 0) {\n            throw new Error('invalid ciphertext size (must be multiple of 16 bytes)');\n        }\n\n        var plaintext = createArray(ciphertext.length);\n        var block = createArray(16);\n\n        for (var i = 0; i < ciphertext.length; i += 16) {\n            copyArray(ciphertext, block, 0, i, i + 16);\n            block = this._aes.decrypt(block);\n\n            for (var j = 0; j < 16; j++) {\n                plaintext[i + j] = block[j] ^ this._lastCipherblock[j];\n            }\n\n            copyArray(ciphertext, this._lastCipherblock, 0, i, i + 16);\n        }\n\n        return plaintext;\n    }\n\n\n    /**\n     *  Mode Of Operation - Cipher Feedback (CFB)\n     */\n    var ModeOfOperationCFB = function(key, iv, segmentSize) {\n        if (!(this instanceof ModeOfOperationCFB)) {\n            throw Error('AES must be instanitated with `new`');\n        }\n\n        this.description = \"Cipher Feedback\";\n        this.name = \"cfb\";\n\n        if (!iv) {\n            iv = createArray(16);\n\n        } else if (iv.length != 16) {\n            throw new Error('invalid initialation vector size (must be 16 size)');\n        }\n\n        if (!segmentSize) { segmentSize = 1; }\n\n        this.segmentSize = segmentSize;\n\n        this._shiftRegister = coerceArray(iv, true);\n\n        this._aes = new AES(key);\n    }\n\n    ModeOfOperationCFB.prototype.encrypt = function(plaintext) {\n        if ((plaintext.length % this.segmentSize) != 0) {\n            throw new Error('invalid plaintext size (must be segmentSize bytes)');\n        }\n\n        var encrypted = coerceArray(plaintext, true);\n\n        var xorSegment;\n        for (var i = 0; i < encrypted.length; i += this.segmentSize) {\n            xorSegment = this._aes.encrypt(this._shiftRegister);\n            for (var j = 0; j < this.segmentSize; j++) {\n                encrypted[i + j] ^= xorSegment[j];\n            }\n\n            // Shift the register\n            copyArray(this._shiftRegister, this._shiftRegister, 0, this.segmentSize);\n            copyArray(encrypted, this._shiftRegister, 16 - this.segmentSize, i, i + this.segmentSize);\n        }\n\n        return encrypted;\n    }\n\n    ModeOfOperationCFB.prototype.decrypt = function(ciphertext) {\n        if ((ciphertext.length % this.segmentSize) != 0) {\n            throw new Error('invalid ciphertext size (must be segmentSize bytes)');\n        }\n\n        var plaintext = coerceArray(ciphertext, true);\n\n        var xorSegment;\n        for (var i = 0; i < plaintext.length; i += this.segmentSize) {\n            xorSegment = this._aes.encrypt(this._shiftRegister);\n\n            for (var j = 0; j < this.segmentSize; j++) {\n                plaintext[i + j] ^= xorSegment[j];\n            }\n\n            // Shift the register\n            copyArray(this._shiftRegister, this._shiftRegister, 0, this.segmentSize);\n            copyArray(ciphertext, this._shiftRegister, 16 - this.segmentSize, i, i + this.segmentSize);\n        }\n\n        return plaintext;\n    }\n\n    /**\n     *  Mode Of Operation - Output Feedback (OFB)\n     */\n    var ModeOfOperationOFB = function(key, iv) {\n        if (!(this instanceof ModeOfOperationOFB)) {\n            throw Error('AES must be instanitated with `new`');\n        }\n\n        this.description = \"Output Feedback\";\n        this.name = \"ofb\";\n\n        if (!iv) {\n            iv = createArray(16);\n\n        } else if (iv.length != 16) {\n            throw new Error('invalid initialation vector size (must be 16 bytes)');\n        }\n\n        this._lastPrecipher = coerceArray(iv, true);\n        this._lastPrecipherIndex = 16;\n\n        this._aes = new AES(key);\n    }\n\n    ModeOfOperationOFB.prototype.encrypt = function(plaintext) {\n        var encrypted = coerceArray(plaintext, true);\n\n        for (var i = 0; i < encrypted.length; i++) {\n            if (this._lastPrecipherIndex === 16) {\n                this._lastPrecipher = this._aes.encrypt(this._lastPrecipher);\n                this._lastPrecipherIndex = 0;\n            }\n            encrypted[i] ^= this._lastPrecipher[this._lastPrecipherIndex++];\n        }\n\n        return encrypted;\n    }\n\n    // Decryption is symetric\n    ModeOfOperationOFB.prototype.decrypt = ModeOfOperationOFB.prototype.encrypt;\n\n\n    /**\n     *  Counter object for CTR common mode of operation\n     */\n    var Counter = function(initialValue) {\n        if (!(this instanceof Counter)) {\n            throw Error('Counter must be instanitated with `new`');\n        }\n\n        // We allow 0, but anything false-ish uses the default 1\n        if (initialValue !== 0 && !initialValue) { initialValue = 1; }\n\n        if (typeof(initialValue) === 'number') {\n            this._counter = createArray(16);\n            this.setValue(initialValue);\n\n        } else {\n            this.setBytes(initialValue);\n        }\n    }\n\n    Counter.prototype.setValue = function(value) {\n        if (typeof(value) !== 'number' || parseInt(value) != value) {\n            throw new Error('invalid counter value (must be an integer)');\n        }\n\n        // We cannot safely handle numbers beyond the safe range for integers\n        if (value > Number.MAX_SAFE_INTEGER) {\n            throw new Error('integer value out of safe range');\n        }\n\n        for (var index = 15; index >= 0; --index) {\n            this._counter[index] = value % 256;\n            value = parseInt(value / 256);\n        }\n    }\n\n    Counter.prototype.setBytes = function(bytes) {\n        bytes = coerceArray(bytes, true);\n\n        if (bytes.length != 16) {\n            throw new Error('invalid counter bytes size (must be 16 bytes)');\n        }\n\n        this._counter = bytes;\n    };\n\n    Counter.prototype.increment = function() {\n        for (var i = 15; i >= 0; i--) {\n            if (this._counter[i] === 255) {\n                this._counter[i] = 0;\n            } else {\n                this._counter[i]++;\n                break;\n            }\n        }\n    }\n\n\n    /**\n     *  Mode Of Operation - Counter (CTR)\n     */\n    var ModeOfOperationCTR = function(key, counter) {\n        if (!(this instanceof ModeOfOperationCTR)) {\n            throw Error('AES must be instanitated with `new`');\n        }\n\n        this.description = \"Counter\";\n        this.name = \"ctr\";\n\n        if (!(counter instanceof Counter)) {\n            counter = new Counter(counter)\n        }\n\n        this._counter = counter;\n\n        this._remainingCounter = null;\n        this._remainingCounterIndex = 16;\n\n        this._aes = new AES(key);\n    }\n\n    ModeOfOperationCTR.prototype.encrypt = function(plaintext) {\n        var encrypted = coerceArray(plaintext, true);\n\n        for (var i = 0; i < encrypted.length; i++) {\n            if (this._remainingCounterIndex === 16) {\n                this._remainingCounter = this._aes.encrypt(this._counter._counter);\n                this._remainingCounterIndex = 0;\n                this._counter.increment();\n            }\n            encrypted[i] ^= this._remainingCounter[this._remainingCounterIndex++];\n        }\n\n        return encrypted;\n    }\n\n    // Decryption is symetric\n    ModeOfOperationCTR.prototype.decrypt = ModeOfOperationCTR.prototype.encrypt;\n\n\n    ///////////////////////\n    // Padding\n\n    // See:https://tools.ietf.org/html/rfc2315\n    function pkcs7pad(data) {\n        data = coerceArray(data, true);\n        var padder = 16 - (data.length % 16);\n        var result = createArray(data.length + padder);\n        copyArray(data, result);\n        for (var i = data.length; i < result.length; i++) {\n            result[i] = padder;\n        }\n        return result;\n    }\n\n    function pkcs7strip(data) {\n        data = coerceArray(data, true);\n        if (data.length < 16) { throw new Error('PKCS#7 invalid length'); }\n\n        var padder = data[data.length - 1];\n        if (padder > 16) { throw new Error('PKCS#7 padding byte out of range'); }\n\n        var length = data.length - padder;\n        for (var i = 0; i < padder; i++) {\n            if (data[length + i] !== padder) {\n                throw new Error('PKCS#7 invalid padding byte');\n            }\n        }\n\n        var result = createArray(length);\n        copyArray(data, result, 0, 0, length);\n        return result;\n    }\n\n    ///////////////////////\n    // Exporting\n\n\n    // The block cipher\n    var aesjs = {\n        AES: AES,\n        Counter: Counter,\n\n        ModeOfOperation: {\n            ecb: ModeOfOperationECB,\n            cbc: ModeOfOperationCBC,\n            cfb: ModeOfOperationCFB,\n            ofb: ModeOfOperationOFB,\n            ctr: ModeOfOperationCTR\n        },\n\n        utils: {\n            hex: convertHex,\n            utf8: convertUtf8\n        },\n\n        padding: {\n            pkcs7: {\n                pad: pkcs7pad,\n                strip: pkcs7strip\n            }\n        },\n\n        _arrayTest: {\n            coerceArray: coerceArray,\n            createArray: createArray,\n            copyArray: copyArray,\n        }\n    };\n\n\n    // node.js\n    if (true) {\n        module.exports = aesjs\n\n    // RequireJS/AMD\n    // http://www.requirejs.org/docs/api.html\n    // https://github.com/amdjs/amdjs-api/wiki/AMD\n    } else {}\n\n\n})(this);\n\n\n/***/ }),\n\n/***/ \"./node_modules/bn.js/lib/bn.js\":\n/*!**************************************!*\\\n  !*** ./node_modules/bn.js/lib/bn.js ***!\n  \\**************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(module) {(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    Buffer = __webpack_require__(/*! buffer */ 0).Buffer;\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n    }\n\n    if (base === 16) {\n      this._parseHex(number, start);\n    } else {\n      this._parseBase(number, base, start);\n    }\n\n    if (number[0] === '-') {\n      this.negative = 1;\n    }\n\n    this.strip();\n\n    if (endian !== 'le') return;\n\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [ number & 0x3ffffff ];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [ 0 ];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this.strip();\n  };\n\n  function parseHex (str, start, end) {\n    var r = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r <<= 4;\n\n      // 'a' - 'f'\n      if (c >= 49 && c <= 54) {\n        r |= c - 49 + 0xa;\n\n      // 'A' - 'F'\n      } else if (c >= 17 && c <= 22) {\n        r |= c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        r |= c & 0xf;\n      }\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    // Scan 24-bit chunks and add them to the number\n    var off = 0;\n    for (i = number.length - 6, j = 0; i >= start; i -= 6) {\n      w = parseHex(number, i, i + 6);\n      this.words[j] |= (w << off) & 0x3ffffff;\n      // NOTE: `0x3fffff` is intentional here, 26bits max shift + 24bit hex limb\n      this.words[j + 1] |= w >>> (26 - off) & 0x3fffff;\n      off += 24;\n      if (off >= 26) {\n        off -= 26;\n        j++;\n      }\n    }\n    if (i + 6 !== start) {\n      w = parseHex(number, start, i + 6);\n      this.words[j] |= (w << off) & 0x3ffffff;\n      this.words[j + 1] |= w >>> (26 - off) & 0x3fffff;\n    }\n    this.strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        r += c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        r += c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        r += c;\n      }\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [ 0 ];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype.strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  BN.prototype.inspect = function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  };\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16);\n  };\n\n  BN.prototype.toBuffer = function toBuffer (endian, length) {\n    assert(typeof Buffer !== 'undefined');\n    return this.toArrayLike(Buffer, endian, length);\n  };\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    this.strip();\n    var littleEndian = endian === 'le';\n    var res = new ArrayType(reqLength);\n\n    var b, i;\n    var q = this.clone();\n    if (!littleEndian) {\n      // Assume big-endian\n      for (i = 0; i < reqLength - byteLength; i++) {\n        res[i] = 0;\n      }\n\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[reqLength - i - 1] = b;\n      }\n    } else {\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[i] = b;\n      }\n\n      for (; i < reqLength; i++) {\n        res[i] = 0;\n      }\n    }\n\n    return res;\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] & (1 << wbit)) >>> wbit;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this.strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this.strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this.strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    var fftm = new FFTM();\n    return fftm.mulp(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out.strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this.strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) < num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this.strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this.strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q.strip();\n    }\n    a.strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || r2 === 1 && cmp === 0) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modn = function modn (num) {\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return acc;\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this.strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      r.strip();\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n    return a.umod(this.m)._forceRed(this);\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})( false || module, this);\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../webpack/buildin/module.js */ \"./node_modules/webpack/buildin/module.js\")(module)))\n\n/***/ }),\n\n/***/ \"./node_modules/jssha/src/sha.js\":\n/*!***************************************!*\\\n  !*** ./node_modules/jssha/src/sha.js ***!\n  \\***************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\nvar __WEBPACK_AMD_DEFINE_RESULT__;/*\n A JavaScript implementation of the SHA family of hashes, as\n defined in FIPS PUB 180-4 and FIPS PUB 202, as well as the corresponding\n HMAC implementation as defined in FIPS PUB 198a\n\n Copyright Brian Turek 2008-2017\n Distributed under the BSD License\n See http://caligatio.github.com/jsSHA/ for more information\n\n Several functions taken from Paul Johnston\n*/\n(function(Y){function C(c,a,b){var e=0,h=[],n=0,g,l,d,f,m,q,u,r,I=!1,v=[],w=[],t,y=!1,z=!1,x=-1;b=b||{};g=b.encoding||\"UTF8\";t=b.numRounds||1;if(t!==parseInt(t,10)||1>t)throw Error(\"numRounds must a integer >= 1\");if(\"SHA-1\"===c)m=512,q=K,u=Z,f=160,r=function(a){return a.slice()};else if(0===c.lastIndexOf(\"SHA-\",0))if(q=function(a,b){return L(a,b,c)},u=function(a,b,h,e){var k,f;if(\"SHA-224\"===c||\"SHA-256\"===c)k=(b+65>>>9<<4)+15,f=16;else if(\"SHA-384\"===c||\"SHA-512\"===c)k=(b+129>>>10<<\n5)+31,f=32;else throw Error(\"Unexpected error in SHA-2 implementation\");for(;a.length<=k;)a.push(0);a[b>>>5]|=128<<24-b%32;b=b+h;a[k]=b&4294967295;a[k-1]=b/4294967296|0;h=a.length;for(b=0;b<h;b+=f)e=L(a.slice(b,b+f),e,c);if(\"SHA-224\"===c)a=[e[0],e[1],e[2],e[3],e[4],e[5],e[6]];else if(\"SHA-256\"===c)a=e;else if(\"SHA-384\"===c)a=[e[0].a,e[0].b,e[1].a,e[1].b,e[2].a,e[2].b,e[3].a,e[3].b,e[4].a,e[4].b,e[5].a,e[5].b];else if(\"SHA-512\"===c)a=[e[0].a,e[0].b,e[1].a,e[1].b,e[2].a,e[2].b,e[3].a,e[3].b,e[4].a,\ne[4].b,e[5].a,e[5].b,e[6].a,e[6].b,e[7].a,e[7].b];else throw Error(\"Unexpected error in SHA-2 implementation\");return a},r=function(a){return a.slice()},\"SHA-224\"===c)m=512,f=224;else if(\"SHA-256\"===c)m=512,f=256;else if(\"SHA-384\"===c)m=1024,f=384;else if(\"SHA-512\"===c)m=1024,f=512;else throw Error(\"Chosen SHA variant is not supported\");else if(0===c.lastIndexOf(\"SHA3-\",0)||0===c.lastIndexOf(\"SHAKE\",0)){var F=6;q=D;r=function(a){var c=[],e;for(e=0;5>e;e+=1)c[e]=a[e].slice();return c};x=1;if(\"SHA3-224\"===\nc)m=1152,f=224;else if(\"SHA3-256\"===c)m=1088,f=256;else if(\"SHA3-384\"===c)m=832,f=384;else if(\"SHA3-512\"===c)m=576,f=512;else if(\"SHAKE128\"===c)m=1344,f=-1,F=31,z=!0;else if(\"SHAKE256\"===c)m=1088,f=-1,F=31,z=!0;else throw Error(\"Chosen SHA variant is not supported\");u=function(a,c,e,b,h){e=m;var k=F,f,g=[],n=e>>>5,l=0,d=c>>>5;for(f=0;f<d&&c>=e;f+=n)b=D(a.slice(f,f+n),b),c-=e;a=a.slice(f);for(c%=e;a.length<n;)a.push(0);f=c>>>3;a[f>>2]^=k<<f%4*8;a[n-1]^=2147483648;for(b=D(a,b);32*g.length<h;){a=b[l%\n5][l/5|0];g.push(a.b);if(32*g.length>=h)break;g.push(a.a);l+=1;0===64*l%e&&D(null,b)}return g}}else throw Error(\"Chosen SHA variant is not supported\");d=M(a,g,x);l=A(c);this.setHMACKey=function(a,b,h){var k;if(!0===I)throw Error(\"HMAC key already set\");if(!0===y)throw Error(\"Cannot set HMAC key after calling update\");if(!0===z)throw Error(\"SHAKE is not supported for HMAC\");g=(h||{}).encoding||\"UTF8\";b=M(b,g,x)(a);a=b.binLen;b=b.value;k=m>>>3;h=k/4-1;if(k<a/8){for(b=u(b,a,0,A(c),f);b.length<=h;)b.push(0);\nb[h]&=4294967040}else if(k>a/8){for(;b.length<=h;)b.push(0);b[h]&=4294967040}for(a=0;a<=h;a+=1)v[a]=b[a]^909522486,w[a]=b[a]^1549556828;l=q(v,l);e=m;I=!0};this.update=function(a){var c,b,k,f=0,g=m>>>5;c=d(a,h,n);a=c.binLen;b=c.value;c=a>>>5;for(k=0;k<c;k+=g)f+m<=a&&(l=q(b.slice(k,k+g),l),f+=m);e+=f;h=b.slice(f>>>5);n=a%m;y=!0};this.getHash=function(a,b){var k,g,d,m;if(!0===I)throw Error(\"Cannot call getHash after setting HMAC key\");d=N(b);if(!0===z){if(-1===d.shakeLen)throw Error(\"shakeLen must be specified in options\");\nf=d.shakeLen}switch(a){case \"HEX\":k=function(a){return O(a,f,x,d)};break;case \"B64\":k=function(a){return P(a,f,x,d)};break;case \"BYTES\":k=function(a){return Q(a,f,x)};break;case \"ARRAYBUFFER\":try{g=new ArrayBuffer(0)}catch(p){throw Error(\"ARRAYBUFFER not supported by this environment\");}k=function(a){return R(a,f,x)};break;default:throw Error(\"format must be HEX, B64, BYTES, or ARRAYBUFFER\");}m=u(h.slice(),n,e,r(l),f);for(g=1;g<t;g+=1)!0===z&&0!==f%32&&(m[m.length-1]&=16777215>>>24-f%32),m=u(m,f,\n0,A(c),f);return k(m)};this.getHMAC=function(a,b){var k,g,d,p;if(!1===I)throw Error(\"Cannot call getHMAC without first setting HMAC key\");d=N(b);switch(a){case \"HEX\":k=function(a){return O(a,f,x,d)};break;case \"B64\":k=function(a){return P(a,f,x,d)};break;case \"BYTES\":k=function(a){return Q(a,f,x)};break;case \"ARRAYBUFFER\":try{k=new ArrayBuffer(0)}catch(v){throw Error(\"ARRAYBUFFER not supported by this environment\");}k=function(a){return R(a,f,x)};break;default:throw Error(\"outputFormat must be HEX, B64, BYTES, or ARRAYBUFFER\");\n}g=u(h.slice(),n,e,r(l),f);p=q(w,A(c));p=u(g,f,m,p,f);return k(p)}}function b(c,a){this.a=c;this.b=a}function O(c,a,b,e){var h=\"\";a/=8;var n,g,d;d=-1===b?3:0;for(n=0;n<a;n+=1)g=c[n>>>2]>>>8*(d+n%4*b),h+=\"0123456789abcdef\".charAt(g>>>4&15)+\"0123456789abcdef\".charAt(g&15);return e.outputUpper?h.toUpperCase():h}function P(c,a,b,e){var h=\"\",n=a/8,g,d,p,f;f=-1===b?3:0;for(g=0;g<n;g+=3)for(d=g+1<n?c[g+1>>>2]:0,p=g+2<n?c[g+2>>>2]:0,p=(c[g>>>2]>>>8*(f+g%4*b)&255)<<16|(d>>>8*(f+(g+1)%4*b)&255)<<8|p>>>8*(f+\n(g+2)%4*b)&255,d=0;4>d;d+=1)8*g+6*d<=a?h+=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\".charAt(p>>>6*(3-d)&63):h+=e.b64Pad;return h}function Q(c,a,b){var e=\"\";a/=8;var h,d,g;g=-1===b?3:0;for(h=0;h<a;h+=1)d=c[h>>>2]>>>8*(g+h%4*b)&255,e+=String.fromCharCode(d);return e}function R(c,a,b){a/=8;var e,h=new ArrayBuffer(a),d,g;g=new Uint8Array(h);d=-1===b?3:0;for(e=0;e<a;e+=1)g[e]=c[e>>>2]>>>8*(d+e%4*b)&255;return h}function N(c){var a={outputUpper:!1,b64Pad:\"=\",shakeLen:-1};c=c||{};\na.outputUpper=c.outputUpper||!1;!0===c.hasOwnProperty(\"b64Pad\")&&(a.b64Pad=c.b64Pad);if(!0===c.hasOwnProperty(\"shakeLen\")){if(0!==c.shakeLen%8)throw Error(\"shakeLen must be a multiple of 8\");a.shakeLen=c.shakeLen}if(\"boolean\"!==typeof a.outputUpper)throw Error(\"Invalid outputUpper formatting option\");if(\"string\"!==typeof a.b64Pad)throw Error(\"Invalid b64Pad formatting option\");return a}function M(c,a,b){switch(a){case \"UTF8\":case \"UTF16BE\":case \"UTF16LE\":break;default:throw Error(\"encoding must be UTF8, UTF16BE, or UTF16LE\");\n}switch(c){case \"HEX\":c=function(a,c,d){var g=a.length,l,p,f,m,q,u;if(0!==g%2)throw Error(\"String of HEX type must be in byte increments\");c=c||[0];d=d||0;q=d>>>3;u=-1===b?3:0;for(l=0;l<g;l+=2){p=parseInt(a.substr(l,2),16);if(isNaN(p))throw Error(\"String of HEX type contains invalid characters\");m=(l>>>1)+q;for(f=m>>>2;c.length<=f;)c.push(0);c[f]|=p<<8*(u+m%4*b)}return{value:c,binLen:4*g+d}};break;case \"TEXT\":c=function(c,h,d){var g,l,p=0,f,m,q,u,r,t;h=h||[0];d=d||0;q=d>>>3;if(\"UTF8\"===a)for(t=-1===\nb?3:0,f=0;f<c.length;f+=1)for(g=c.charCodeAt(f),l=[],128>g?l.push(g):2048>g?(l.push(192|g>>>6),l.push(128|g&63)):55296>g||57344<=g?l.push(224|g>>>12,128|g>>>6&63,128|g&63):(f+=1,g=65536+((g&1023)<<10|c.charCodeAt(f)&1023),l.push(240|g>>>18,128|g>>>12&63,128|g>>>6&63,128|g&63)),m=0;m<l.length;m+=1){r=p+q;for(u=r>>>2;h.length<=u;)h.push(0);h[u]|=l[m]<<8*(t+r%4*b);p+=1}else if(\"UTF16BE\"===a||\"UTF16LE\"===a)for(t=-1===b?2:0,l=\"UTF16LE\"===a&&1!==b||\"UTF16LE\"!==a&&1===b,f=0;f<c.length;f+=1){g=c.charCodeAt(f);\n!0===l&&(m=g&255,g=m<<8|g>>>8);r=p+q;for(u=r>>>2;h.length<=u;)h.push(0);h[u]|=g<<8*(t+r%4*b);p+=2}return{value:h,binLen:8*p+d}};break;case \"B64\":c=function(a,c,d){var g=0,l,p,f,m,q,u,r,t;if(-1===a.search(/^[a-zA-Z0-9=+\\/]+$/))throw Error(\"Invalid character in base-64 string\");p=a.indexOf(\"=\");a=a.replace(/\\=/g,\"\");if(-1!==p&&p<a.length)throw Error(\"Invalid '=' found in base-64 string\");c=c||[0];d=d||0;u=d>>>3;t=-1===b?3:0;for(p=0;p<a.length;p+=4){q=a.substr(p,4);for(f=m=0;f<q.length;f+=1)l=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\".indexOf(q[f]),\nm|=l<<18-6*f;for(f=0;f<q.length-1;f+=1){r=g+u;for(l=r>>>2;c.length<=l;)c.push(0);c[l]|=(m>>>16-8*f&255)<<8*(t+r%4*b);g+=1}}return{value:c,binLen:8*g+d}};break;case \"BYTES\":c=function(a,c,d){var g,l,p,f,m,q;c=c||[0];d=d||0;p=d>>>3;q=-1===b?3:0;for(l=0;l<a.length;l+=1)g=a.charCodeAt(l),m=l+p,f=m>>>2,c.length<=f&&c.push(0),c[f]|=g<<8*(q+m%4*b);return{value:c,binLen:8*a.length+d}};break;case \"ARRAYBUFFER\":try{c=new ArrayBuffer(0)}catch(e){throw Error(\"ARRAYBUFFER not supported by this environment\");}c=\nfunction(a,c,d){var g,l,p,f,m,q;c=c||[0];d=d||0;l=d>>>3;m=-1===b?3:0;q=new Uint8Array(a);for(g=0;g<a.byteLength;g+=1)f=g+l,p=f>>>2,c.length<=p&&c.push(0),c[p]|=q[g]<<8*(m+f%4*b);return{value:c,binLen:8*a.byteLength+d}};break;default:throw Error(\"format must be HEX, TEXT, B64, BYTES, or ARRAYBUFFER\");}return c}function y(c,a){return c<<a|c>>>32-a}function S(c,a){return 32<a?(a-=32,new b(c.b<<a|c.a>>>32-a,c.a<<a|c.b>>>32-a)):0!==a?new b(c.a<<a|c.b>>>32-a,c.b<<a|c.a>>>32-a):c}function w(c,a){return c>>>\na|c<<32-a}function t(c,a){var k=null,k=new b(c.a,c.b);return k=32>=a?new b(k.a>>>a|k.b<<32-a&4294967295,k.b>>>a|k.a<<32-a&4294967295):new b(k.b>>>a-32|k.a<<64-a&4294967295,k.a>>>a-32|k.b<<64-a&4294967295)}function T(c,a){var k=null;return k=32>=a?new b(c.a>>>a,c.b>>>a|c.a<<32-a&4294967295):new b(0,c.a>>>a-32)}function aa(c,a,b){return c&a^~c&b}function ba(c,a,k){return new b(c.a&a.a^~c.a&k.a,c.b&a.b^~c.b&k.b)}function U(c,a,b){return c&a^c&b^a&b}function ca(c,a,k){return new b(c.a&a.a^c.a&k.a^a.a&\nk.a,c.b&a.b^c.b&k.b^a.b&k.b)}function da(c){return w(c,2)^w(c,13)^w(c,22)}function ea(c){var a=t(c,28),k=t(c,34);c=t(c,39);return new b(a.a^k.a^c.a,a.b^k.b^c.b)}function fa(c){return w(c,6)^w(c,11)^w(c,25)}function ga(c){var a=t(c,14),k=t(c,18);c=t(c,41);return new b(a.a^k.a^c.a,a.b^k.b^c.b)}function ha(c){return w(c,7)^w(c,18)^c>>>3}function ia(c){var a=t(c,1),k=t(c,8);c=T(c,7);return new b(a.a^k.a^c.a,a.b^k.b^c.b)}function ja(c){return w(c,17)^w(c,19)^c>>>10}function ka(c){var a=t(c,19),k=t(c,61);\nc=T(c,6);return new b(a.a^k.a^c.a,a.b^k.b^c.b)}function G(c,a){var b=(c&65535)+(a&65535);return((c>>>16)+(a>>>16)+(b>>>16)&65535)<<16|b&65535}function la(c,a,b,e){var h=(c&65535)+(a&65535)+(b&65535)+(e&65535);return((c>>>16)+(a>>>16)+(b>>>16)+(e>>>16)+(h>>>16)&65535)<<16|h&65535}function H(c,a,b,e,h){var d=(c&65535)+(a&65535)+(b&65535)+(e&65535)+(h&65535);return((c>>>16)+(a>>>16)+(b>>>16)+(e>>>16)+(h>>>16)+(d>>>16)&65535)<<16|d&65535}function ma(c,a){var d,e,h;d=(c.b&65535)+(a.b&65535);e=(c.b>>>16)+\n(a.b>>>16)+(d>>>16);h=(e&65535)<<16|d&65535;d=(c.a&65535)+(a.a&65535)+(e>>>16);e=(c.a>>>16)+(a.a>>>16)+(d>>>16);return new b((e&65535)<<16|d&65535,h)}function na(c,a,d,e){var h,n,g;h=(c.b&65535)+(a.b&65535)+(d.b&65535)+(e.b&65535);n=(c.b>>>16)+(a.b>>>16)+(d.b>>>16)+(e.b>>>16)+(h>>>16);g=(n&65535)<<16|h&65535;h=(c.a&65535)+(a.a&65535)+(d.a&65535)+(e.a&65535)+(n>>>16);n=(c.a>>>16)+(a.a>>>16)+(d.a>>>16)+(e.a>>>16)+(h>>>16);return new b((n&65535)<<16|h&65535,g)}function oa(c,a,d,e,h){var n,g,l;n=(c.b&\n65535)+(a.b&65535)+(d.b&65535)+(e.b&65535)+(h.b&65535);g=(c.b>>>16)+(a.b>>>16)+(d.b>>>16)+(e.b>>>16)+(h.b>>>16)+(n>>>16);l=(g&65535)<<16|n&65535;n=(c.a&65535)+(a.a&65535)+(d.a&65535)+(e.a&65535)+(h.a&65535)+(g>>>16);g=(c.a>>>16)+(a.a>>>16)+(d.a>>>16)+(e.a>>>16)+(h.a>>>16)+(n>>>16);return new b((g&65535)<<16|n&65535,l)}function B(c,a){return new b(c.a^a.a,c.b^a.b)}function A(c){var a=[],d;if(\"SHA-1\"===c)a=[1732584193,4023233417,2562383102,271733878,3285377520];else if(0===c.lastIndexOf(\"SHA-\",0))switch(a=\n[3238371032,914150663,812702999,4144912697,4290775857,1750603025,1694076839,3204075428],d=[1779033703,3144134277,1013904242,2773480762,1359893119,2600822924,528734635,1541459225],c){case \"SHA-224\":break;case \"SHA-256\":a=d;break;case \"SHA-384\":a=[new b(3418070365,a[0]),new b(1654270250,a[1]),new b(2438529370,a[2]),new b(355462360,a[3]),new b(1731405415,a[4]),new b(41048885895,a[5]),new b(3675008525,a[6]),new b(1203062813,a[7])];break;case \"SHA-512\":a=[new b(d[0],4089235720),new b(d[1],2227873595),\nnew b(d[2],4271175723),new b(d[3],1595750129),new b(d[4],2917565137),new b(d[5],725511199),new b(d[6],4215389547),new b(d[7],327033209)];break;default:throw Error(\"Unknown SHA variant\");}else if(0===c.lastIndexOf(\"SHA3-\",0)||0===c.lastIndexOf(\"SHAKE\",0))for(c=0;5>c;c+=1)a[c]=[new b(0,0),new b(0,0),new b(0,0),new b(0,0),new b(0,0)];else throw Error(\"No SHA variants supported\");return a}function K(c,a){var b=[],e,d,n,g,l,p,f;e=a[0];d=a[1];n=a[2];g=a[3];l=a[4];for(f=0;80>f;f+=1)b[f]=16>f?c[f]:y(b[f-\n3]^b[f-8]^b[f-14]^b[f-16],1),p=20>f?H(y(e,5),d&n^~d&g,l,1518500249,b[f]):40>f?H(y(e,5),d^n^g,l,1859775393,b[f]):60>f?H(y(e,5),U(d,n,g),l,2400959708,b[f]):H(y(e,5),d^n^g,l,3395469782,b[f]),l=g,g=n,n=y(d,30),d=e,e=p;a[0]=G(e,a[0]);a[1]=G(d,a[1]);a[2]=G(n,a[2]);a[3]=G(g,a[3]);a[4]=G(l,a[4]);return a}function Z(c,a,b,e){var d;for(d=(a+65>>>9<<4)+15;c.length<=d;)c.push(0);c[a>>>5]|=128<<24-a%32;a+=b;c[d]=a&4294967295;c[d-1]=a/4294967296|0;a=c.length;for(d=0;d<a;d+=16)e=K(c.slice(d,d+16),e);return e}function L(c,\na,k){var e,h,n,g,l,p,f,m,q,u,r,t,v,w,y,A,z,x,F,B,C,D,E=[],J;if(\"SHA-224\"===k||\"SHA-256\"===k)u=64,t=1,D=Number,v=G,w=la,y=H,A=ha,z=ja,x=da,F=fa,C=U,B=aa,J=d;else if(\"SHA-384\"===k||\"SHA-512\"===k)u=80,t=2,D=b,v=ma,w=na,y=oa,A=ia,z=ka,x=ea,F=ga,C=ca,B=ba,J=V;else throw Error(\"Unexpected error in SHA-2 implementation\");k=a[0];e=a[1];h=a[2];n=a[3];g=a[4];l=a[5];p=a[6];f=a[7];for(r=0;r<u;r+=1)16>r?(q=r*t,m=c.length<=q?0:c[q],q=c.length<=q+1?0:c[q+1],E[r]=new D(m,q)):E[r]=w(z(E[r-2]),E[r-7],A(E[r-15]),E[r-\n16]),m=y(f,F(g),B(g,l,p),J[r],E[r]),q=v(x(k),C(k,e,h)),f=p,p=l,l=g,g=v(n,m),n=h,h=e,e=k,k=v(m,q);a[0]=v(k,a[0]);a[1]=v(e,a[1]);a[2]=v(h,a[2]);a[3]=v(n,a[3]);a[4]=v(g,a[4]);a[5]=v(l,a[5]);a[6]=v(p,a[6]);a[7]=v(f,a[7]);return a}function D(c,a){var d,e,h,n,g=[],l=[];if(null!==c)for(e=0;e<c.length;e+=2)a[(e>>>1)%5][(e>>>1)/5|0]=B(a[(e>>>1)%5][(e>>>1)/5|0],new b(c[e+1],c[e]));for(d=0;24>d;d+=1){n=A(\"SHA3-\");for(e=0;5>e;e+=1){h=a[e][0];var p=a[e][1],f=a[e][2],m=a[e][3],q=a[e][4];g[e]=new b(h.a^p.a^f.a^\nm.a^q.a,h.b^p.b^f.b^m.b^q.b)}for(e=0;5>e;e+=1)l[e]=B(g[(e+4)%5],S(g[(e+1)%5],1));for(e=0;5>e;e+=1)for(h=0;5>h;h+=1)a[e][h]=B(a[e][h],l[e]);for(e=0;5>e;e+=1)for(h=0;5>h;h+=1)n[h][(2*e+3*h)%5]=S(a[e][h],W[e][h]);for(e=0;5>e;e+=1)for(h=0;5>h;h+=1)a[e][h]=B(n[e][h],new b(~n[(e+1)%5][h].a&n[(e+2)%5][h].a,~n[(e+1)%5][h].b&n[(e+2)%5][h].b));a[0][0]=B(a[0][0],X[d])}return a}var d,V,W,X;d=[1116352408,1899447441,3049323471,3921009573,961987163,1508970993,2453635748,2870763221,3624381080,310598401,607225278,\n1426881987,1925078388,2162078206,2614888103,3248222580,3835390401,4022224774,264347078,604807628,770255983,1249150122,1555081692,1996064986,2554220882,2821834349,2952996808,3210313671,3336571891,3584528711,113926993,338241895,666307205,773529912,1294757372,1396182291,1695183700,1986661051,2177026350,2456956037,2730485921,2820302411,3259730800,3345764771,3516065817,3600352804,4094571909,275423344,430227734,506948616,659060556,883997877,958139571,1322822218,1537002063,1747873779,1955562222,2024104815,\n2227730452,2361852424,2428436474,2756734187,3204031479,3329325298];V=[new b(d[0],3609767458),new b(d[1],602891725),new b(d[2],3964484399),new b(d[3],2173295548),new b(d[4],4081628472),new b(d[5],3053834265),new b(d[6],2937671579),new b(d[7],3664609560),new b(d[8],2734883394),new b(d[9],1164996542),new b(d[10],1323610764),new b(d[11],3590304994),new b(d[12],4068182383),new b(d[13],991336113),new b(d[14],633803317),new b(d[15],3479774868),new b(d[16],2666613458),new b(d[17],944711139),new b(d[18],2341262773),\nnew b(d[19],2007800933),new b(d[20],1495990901),new b(d[21],1856431235),new b(d[22],3175218132),new b(d[23],2198950837),new b(d[24],3999719339),new b(d[25],766784016),new b(d[26],2566594879),new b(d[27],3203337956),new b(d[28],1034457026),new b(d[29],2466948901),new b(d[30],3758326383),new b(d[31],168717936),new b(d[32],1188179964),new b(d[33],1546045734),new b(d[34],1522805485),new b(d[35],2643833823),new b(d[36],2343527390),new b(d[37],1014477480),new b(d[38],1206759142),new b(d[39],344077627),\nnew b(d[40],1290863460),new b(d[41],3158454273),new b(d[42],3505952657),new b(d[43],106217008),new b(d[44],3606008344),new b(d[45],1432725776),new b(d[46],1467031594),new b(d[47],851169720),new b(d[48],3100823752),new b(d[49],1363258195),new b(d[50],3750685593),new b(d[51],3785050280),new b(d[52],3318307427),new b(d[53],3812723403),new b(d[54],2003034995),new b(d[55],3602036899),new b(d[56],1575990012),new b(d[57],1125592928),new b(d[58],2716904306),new b(d[59],442776044),new b(d[60],593698344),new b(d[61],\n3733110249),new b(d[62],2999351573),new b(d[63],3815920427),new b(3391569614,3928383900),new b(3515267271,566280711),new b(3940187606,3454069534),new b(4118630271,4000239992),new b(116418474,1914138554),new b(174292421,2731055270),new b(289380356,3203993006),new b(460393269,320620315),new b(685471733,587496836),new b(852142971,1086792851),new b(1017036298,365543100),new b(1126000580,2618297676),new b(1288033470,3409855158),new b(1501505948,4234509866),new b(1607167915,987167468),new b(1816402316,\n1246189591)];X=[new b(0,1),new b(0,32898),new b(2147483648,32906),new b(2147483648,2147516416),new b(0,32907),new b(0,2147483649),new b(2147483648,2147516545),new b(2147483648,32777),new b(0,138),new b(0,136),new b(0,2147516425),new b(0,2147483658),new b(0,2147516555),new b(2147483648,139),new b(2147483648,32905),new b(2147483648,32771),new b(2147483648,32770),new b(2147483648,128),new b(0,32778),new b(2147483648,2147483658),new b(2147483648,2147516545),new b(2147483648,32896),new b(0,2147483649),\nnew b(2147483648,2147516424)];W=[[0,36,3,41,18],[1,44,10,45,2],[62,6,43,15,61],[28,55,25,21,56],[27,20,39,8,14]]; true?!(__WEBPACK_AMD_DEFINE_RESULT__ = (function(){return C}).call(exports, __webpack_require__, exports, module),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)):undefined})(this);\n\n\n/***/ }),\n\n/***/ \"./node_modules/webpack/buildin/module.js\":\n/*!************************************************!*\\\n  !*** ./node_modules/webpack/buildin/module.js ***!\n  \\************************************************/\n/*! no static exports found */\n/***/ (function(module, exports) {\n\nmodule.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n\n\n/***/ }),\n\n/***/ \"./src/Cashout.js\":\n/*!************************!*\\\n  !*** ./src/Cashout.js ***!\n  \\************************/\n/*! exports provided: CashoutOnlyRequest, CashoutOnlyResponse */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CashoutOnlyRequest\", function() { return CashoutOnlyRequest; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CashoutOnlyResponse\", function() { return CashoutOnlyResponse; });\n/* harmony import */ var _Messages__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Messages */ \"./src/Messages.js\");\n/* harmony import */ var _SpiModels__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./SpiModels */ \"./src/SpiModels.js\");\n/* harmony import */ var _RequestIdHelper__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./RequestIdHelper */ \"./src/RequestIdHelper.js\");\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n\n\n\nvar CashoutOnlyRequest =\n/*#__PURE__*/\nfunction () {\n  function CashoutOnlyRequest(amountCents, posRefId, surchargeAmount) {\n    _classCallCheck(this, CashoutOnlyRequest);\n\n    this.PosRefId = posRefId;\n    this.CashoutAmount = amountCents;\n    this.SurchargeAmount = surchargeAmount;\n    this.Config = new _SpiModels__WEBPACK_IMPORTED_MODULE_1__[\"SpiConfig\"]();\n    this.Options = new _SpiModels__WEBPACK_IMPORTED_MODULE_1__[\"TransactionOptions\"]();\n  }\n\n  _createClass(CashoutOnlyRequest, [{\n    key: \"ToMessage\",\n    value: function ToMessage() {\n      var data = {\n        \"pos_ref_id\": this.PosRefId,\n        \"cash_amount\": this.CashoutAmount,\n        \"surcharge_amount\": this.SurchargeAmount\n      };\n      this.Config.addReceiptConfig(data);\n      return new _Messages__WEBPACK_IMPORTED_MODULE_0__[\"Message\"](_RequestIdHelper__WEBPACK_IMPORTED_MODULE_2__[\"RequestIdHelper\"].Id(\"cshout\"), _Messages__WEBPACK_IMPORTED_MODULE_0__[\"Events\"].CashoutOnlyRequest, data, true);\n    }\n  }]);\n\n  return CashoutOnlyRequest;\n}();\nvar CashoutOnlyResponse =\n/*#__PURE__*/\nfunction () {\n  function CashoutOnlyResponse(m) {\n    _classCallCheck(this, CashoutOnlyResponse);\n\n    this._m = m;\n    this.RequestId = m.Id;\n    this.PosRefId = m.Data.pos_ref_id;\n    this.SchemeName = m.Data.scheme_name;\n    this.Success = m.GetSuccessState() == _Messages__WEBPACK_IMPORTED_MODULE_0__[\"SuccessState\"].Success;\n  }\n\n  _createClass(CashoutOnlyResponse, [{\n    key: \"GetRRN\",\n    value: function GetRRN() {\n      return this._m.Data[\"rrn\"];\n    }\n  }, {\n    key: \"GetCashoutAmount\",\n    value: function GetCashoutAmount() {\n      return this._m.Data[\"cash_amount\"];\n    }\n  }, {\n    key: \"GetBankNonCashAmount\",\n    value: function GetBankNonCashAmount() {\n      return this._m.Data[\"bank_noncash_amount\"];\n    }\n  }, {\n    key: \"GetBankCashAmount\",\n    value: function GetBankCashAmount() {\n      return this._m.Data[\"bank_cash_amount\"];\n    }\n  }, {\n    key: \"GetCustomerReceipt\",\n    value: function GetCustomerReceipt() {\n      return this._m.Data[\"customer_receipt\"];\n    }\n  }, {\n    key: \"GetMerchantReceipt\",\n    value: function GetMerchantReceipt() {\n      return this._m.Data[\"merchant_receipt\"];\n    }\n  }, {\n    key: \"GetResponseText\",\n    value: function GetResponseText() {\n      return this._m.Data[\"host_response_text\"];\n    }\n  }, {\n    key: \"GetResponseCode\",\n    value: function GetResponseCode() {\n      return this._m.Data[\"host_response_code\"];\n    }\n  }, {\n    key: \"GetTerminalReferenceId\",\n    value: function GetTerminalReferenceId() {\n      return this._m.Data[\"terminal_ref_id\"];\n    }\n  }, {\n    key: \"GetAccountType\",\n    value: function GetAccountType() {\n      return this._m.Data[\"account_type\"];\n    }\n  }, {\n    key: \"GetAuthCode\",\n    value: function GetAuthCode() {\n      return this._m.Data[\"auth_code\"];\n    }\n  }, {\n    key: \"GetBankDate\",\n    value: function GetBankDate() {\n      return this._m.Data[\"bank_date\"];\n    }\n  }, {\n    key: \"GetBankTime\",\n    value: function GetBankTime() {\n      return this._m.Data[\"bank_time\"];\n    }\n  }, {\n    key: \"GetMaskedPan\",\n    value: function GetMaskedPan() {\n      return this._m.Data[\"masked_pan\"];\n    }\n  }, {\n    key: \"GetTerminalId\",\n    value: function GetTerminalId() {\n      return this._m.Data[\"terminal_id\"];\n    }\n  }, {\n    key: \"WasMerchantReceiptPrinted\",\n    value: function WasMerchantReceiptPrinted() {\n      return this._m.Data[\"merchant_receipt_printed\"];\n    }\n  }, {\n    key: \"WasCustomerReceiptPrinted\",\n    value: function WasCustomerReceiptPrinted() {\n      return this._m.Data[\"customer_receipt_printed\"];\n    }\n  }, {\n    key: \"GetSurchargeAmount\",\n    value: function GetSurchargeAmount() {\n      return this._m.Data[\"surcharge_amount\"];\n    }\n  }, {\n    key: \"GetResponseValue\",\n    value: function GetResponseValue(attribute) {\n      return this._m.Data[attribute];\n    }\n  }]);\n\n  return CashoutOnlyResponse;\n}();\n\n/***/ }),\n\n/***/ \"./src/Connection.js\":\n/*!***************************!*\\\n  !*** ./src/Connection.js ***!\n  \\***************************/\n/*! exports provided: ConnectionState, SPI_PROTOCOL, ConnectionStateEventArgs, MessageEventArgs, Connection */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ConnectionState\", function() { return ConnectionState; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SPI_PROTOCOL\", function() { return SPI_PROTOCOL; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ConnectionStateEventArgs\", function() { return ConnectionStateEventArgs; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MessageEventArgs\", function() { return MessageEventArgs; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Connection\", function() { return Connection; });\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar ConnectionState = {\n  Disconnected: 'Disconnected',\n  Connecting: 'Connecting',\n  Connected: 'Connected'\n};\nvar SPI_PROTOCOL = 'spi.2.4.0';\nvar ConnectionStateEventArgs = function ConnectionStateEventArgs(connectionState) {\n  _classCallCheck(this, ConnectionStateEventArgs);\n\n  this.ConnectionState = connectionState;\n};\nvar MessageEventArgs = function MessageEventArgs(message) {\n  _classCallCheck(this, MessageEventArgs);\n\n  this.Message = message;\n};\nvar Connection =\n/*#__PURE__*/\nfunction () {\n  function Connection() {\n    _classCallCheck(this, Connection);\n\n    this.Address = null;\n    this.Connected = false;\n    this.State = ConnectionState.Disconnected;\n    this.SpiProtocol = SPI_PROTOCOL;\n    this._ws = null;\n\n    if (typeof WebSocket === 'undefined') {\n      throw new Error('Environment does not support WebSockets');\n    }\n  }\n\n  _createClass(Connection, [{\n    key: \"Connect\",\n    value: function Connect(UseSecureWebSockets) {\n      var _this = this;\n\n      if (this.State === ConnectionState.Connected || this.State === ConnectionState.Connecting) {\n        // already connected or connecting. disconnect first.\n        return;\n      }\n\n      this.State = ConnectionState.Connecting; //Create a new socket instance specifying the url, SPI protocol and Websocket to use.\n      //The will create a TCP/IP socket connection to the provided URL and perform HTTP websocket negotiation\n\n      this._ws = new WebSocket(this.Address, this.SpiProtocol);\n\n      this._ws.onopen = function () {\n        return _this.pollWebSocketConnection();\n      };\n\n      this._ws.onmessage = function (payload) {\n        return _this.onMessageReceived(payload);\n      };\n\n      this._ws.onclose = function () {\n        return _this.onClosed();\n      };\n\n      this._ws.onerror = function (err) {\n        return _this.onError(err);\n      };\n\n      document.dispatchEvent(new CustomEvent('ConnectionStatusChanged', {\n        detail: new ConnectionStateEventArgs(ConnectionState.Connecting)\n      }));\n    }\n  }, {\n    key: \"Disconnect\",\n    value: function Disconnect() {\n      if (this.State == ConnectionState.Disconnected) return;\n\n      if (this._ws && this._ws.readyState != this._ws.CLOSED) {\n        this._ws.close();\n      }\n\n      if (this._ws) {\n        this._ws.onopen = null;\n        this._ws.onmessage = null;\n        this._ws.onclose = null;\n        this._ws.onerror = null;\n      }\n\n      this.onClosed();\n    }\n  }, {\n    key: \"Send\",\n    value: function Send(message) {\n      this._ws.send(message);\n    }\n  }, {\n    key: \"onOpened\",\n    value: function onOpened() {\n      this.State = ConnectionState.Connected;\n      this.Connected = true;\n      document.dispatchEvent(new CustomEvent('ConnectionStatusChanged', {\n        detail: new ConnectionStateEventArgs(ConnectionState.Connected)\n      }));\n    }\n  }, {\n    key: \"onClosed\",\n    value: function onClosed() {\n      this.Connected = false;\n      this.State = ConnectionState.Disconnected;\n      this._ws = null;\n      document.dispatchEvent(new CustomEvent('ConnectionStatusChanged', {\n        detail: new ConnectionStateEventArgs(ConnectionState.Disconnected)\n      }));\n    }\n  }, {\n    key: \"pollWebSocketConnection\",\n    value: function pollWebSocketConnection() {\n      var _this2 = this;\n\n      var count = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      if (this._ws.readyState === this._ws.OPEN) {\n        this.onOpened();\n        return true;\n      } else if (count < 25) {\n        count++;\n        setTimeout(function () {\n          return _this2.pollWebSocketConnection(count);\n        }, 200);\n      } else {\n        this.Disconnect();\n        return false;\n      }\n    }\n  }, {\n    key: \"onMessageReceived\",\n    value: function onMessageReceived(message) {\n      document.dispatchEvent(new CustomEvent('MessageReceived', {\n        detail: new MessageEventArgs(message.data)\n      }));\n    }\n  }, {\n    key: \"onError\",\n    value: function onError(err) {\n      document.dispatchEvent(new CustomEvent('ErrorReceived', {\n        detail: new MessageEventArgs(err)\n      }));\n    }\n  }]);\n\n  return Connection;\n}();\n\n/***/ }),\n\n/***/ \"./src/Crypto.js\":\n/*!***********************!*\\\n  !*** ./src/Crypto.js ***!\n  \\***********************/\n/*! exports provided: Crypto */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Crypto\", function() { return Crypto; });\n/* harmony import */ var jssha__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jssha */ \"./node_modules/jssha/src/sha.js\");\n/* harmony import */ var jssha__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(jssha__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var aes_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! aes-js */ \"./node_modules/aes-js/index.js\");\n/* harmony import */ var aes_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(aes_js__WEBPACK_IMPORTED_MODULE_1__);\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n\n\nvar Crypto =\n/*#__PURE__*/\nfunction () {\n  function Crypto() {\n    _classCallCheck(this, Crypto);\n  } // <summary>\n  // Encrypt a block using CBC and PKCS7.\n  // </summary>\n  // <param name=\"key\">The key value</param>\n  // <param name=\"data\">The message to encrypt</param>\n  // <returns>Returns the resulting encrypted string data as HEX.</returns>\n\n\n  _createClass(Crypto, null, [{\n    key: \"AesEncrypt\",\n    value: function AesEncrypt(key, data) {\n      var bytes = aes_js__WEBPACK_IMPORTED_MODULE_1___default.a.utils.hex.toBytes(key);\n      var iv = [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00];\n      var textBytes = aes_js__WEBPACK_IMPORTED_MODULE_1___default.a.padding.pkcs7.pad(aes_js__WEBPACK_IMPORTED_MODULE_1___default.a.utils.utf8.toBytes(data));\n      var aesCbc = new aes_js__WEBPACK_IMPORTED_MODULE_1___default.a.ModeOfOperation.cbc(bytes, iv);\n      var encryptedBytes = aesCbc.encrypt(textBytes);\n      var encryptedString = aes_js__WEBPACK_IMPORTED_MODULE_1___default.a.utils.hex.fromBytes(encryptedBytes);\n      return encryptedString;\n    } // <summary>\n    // Decrypt a block using a CBC and PKCS7.\n    // </summary>\n    // <param name=\"key\">The key value</param>\n    // <param name=\"data\">the data to decrypt</param>\n    // <returns>Returns the resulting data decrypted in plaintext.</returns>\n\n  }, {\n    key: \"AesDecrypt\",\n    value: function AesDecrypt(key, data) {\n      var bytes = aes_js__WEBPACK_IMPORTED_MODULE_1___default.a.utils.hex.toBytes(key);\n      var iv = [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00];\n      var encryptedBytes = aes_js__WEBPACK_IMPORTED_MODULE_1___default.a.utils.hex.toBytes(data);\n      var aesCbc = new aes_js__WEBPACK_IMPORTED_MODULE_1___default.a.ModeOfOperation.cbc(bytes, iv);\n      var decryptedBytes = aesCbc.decrypt(encryptedBytes);\n      var decrypted = aes_js__WEBPACK_IMPORTED_MODULE_1___default.a.utils.utf8.fromBytes(aes_js__WEBPACK_IMPORTED_MODULE_1___default.a.padding.pkcs7.strip(decryptedBytes));\n      return decrypted;\n    } // <summary>\n    // Calculates the HMACSHA256 signature of a message.\n    // </summary>\n    // <param name=\"key\">The Hmac Key as HEX</param>\n    // <param name=\"messageToSign\">The message to sign</param>\n    // <returns>The HMACSHA256 signature as a hex string</returns>\n\n  }, {\n    key: \"HmacSignature\",\n    value: function HmacSignature(key, messageToSign) {\n      var shaObj = new jssha__WEBPACK_IMPORTED_MODULE_0___default.a(\"SHA-256\", \"TEXT\");\n      shaObj.setHMACKey(key, 'HEX');\n      shaObj.update(messageToSign);\n      return shaObj.getHMAC(\"HEX\");\n    }\n    /**\r\n     * This utility function calculates the SHA-256 value in hexadecimal format\r\n     * @param {String} value the value to be hashed\r\n     */\n\n  }, {\n    key: \"GenerateHash\",\n    value: function GenerateHash(value) {\n      var shaObj = new jssha__WEBPACK_IMPORTED_MODULE_0___default.a('SHA-256', 'HEX');\n      shaObj.update(value);\n      var shaHash = shaObj.getHash('HEX');\n      return shaHash;\n    }\n  }]);\n\n  return Crypto;\n}();\n\n/***/ }),\n\n/***/ \"./src/DiffieHellman.js\":\n/*!******************************!*\\\n  !*** ./src/DiffieHellman.js ***!\n  \\******************************/\n/*! exports provided: DiffieHellman */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"DiffieHellman\", function() { return DiffieHellman; });\n/* harmony import */ var bn_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! bn.js */ \"./node_modules/bn.js/lib/bn.js\");\n/* harmony import */ var bn_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(bn_js__WEBPACK_IMPORTED_MODULE_0__);\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n // This creates the private and public keys for diffie-hellman (https://en.wikipedia.org/wiki/Diffie%E2%80%93Hellman_key_exchange#Cryptographic_explanation)\n// REQUIREMENTS: bn.js\n// ASSUMPTIONS: Inputs to the functions are hexadecimal strings\n// <summary>\n// This class implements the Diffie-Hellman algorithm using BigIntegers.\n// It can do the 3 main things:\n// 1. Generate a random Private Key for you.\n// 2. Generate your Public Key based on your Private Key.\n// 3. Generate the Secret given their Public Key and your Private Key\n// p and g are the shared constants for the algorithm, aka primeP and primeG.\n// </summary>\n\nvar DiffieHellman =\n/*#__PURE__*/\nfunction () {\n  function DiffieHellman() {\n    _classCallCheck(this, DiffieHellman);\n  } // <summary>\n  // Generates a random Private Key that you can use.\n  // </summary>\n  // <param name=\"p\"></param>\n  // <returns>Random Private Key</returns>\n\n\n  _createClass(DiffieHellman, [{\n    key: \"RandomPrivateKey\",\n    value: function RandomPrivateKey(maxValue) {\n      var maxValueBN = new bn_js__WEBPACK_IMPORTED_MODULE_0___default.a(maxValue);\n      var shiftDistance = Math.floor(Math.random() * 1000 + 1);\n      var randBitInt = maxValueBN.shrn(shiftDistance); // Right shift divides by a power of 2\n\n      var min = new bn_js__WEBPACK_IMPORTED_MODULE_0___default.a(2);\n\n      if (randBitInt.cmp(min) == -1) {\n        return min;\n      }\n\n      return randBitInt;\n    } // <summary>\n    // Calculates the Public Key from a Private Key.\n    // </summary>\n    // <param name=\"p\"></param>\n    // <param name=\"g\"></param>\n    // <param name=\"privateKey\"></param>\n    // <returns>Public Key (Hex)</returns>\n\n  }, {\n    key: \"PublicKey\",\n    value: function PublicKey(p, g, privateKey) {\n      var aHex = new bn_js__WEBPACK_IMPORTED_MODULE_0___default.a(privateKey, 16);\n      var gHex = new bn_js__WEBPACK_IMPORTED_MODULE_0___default.a(g, 16);\n      var montPrime = bn_js__WEBPACK_IMPORTED_MODULE_0___default.a.mont(new bn_js__WEBPACK_IMPORTED_MODULE_0___default.a(p, 16));\n      var gRed = gHex.toRed(montPrime);\n      var secret = gRed.redPow(aHex).fromRed().toString(16);\n      return secret;\n    } // <summary>\n    // Calculates the shared secret given their Public Key (A) and your Private Key (b)\n    // </summary>\n    // <param name=\"p\"></param>\n    // <param name=\"theirPublicKey\"></param>\n    // <param name=\"yourPrivateKey\"></param>\n    // <returns></returns>\n\n  }, {\n    key: \"Secret\",\n    value: function Secret(p, theirPublicKey, yourPrivateKey) {\n      var bHex = new bn_js__WEBPACK_IMPORTED_MODULE_0___default.a(theirPublicKey, 16);\n      var AHex = new bn_js__WEBPACK_IMPORTED_MODULE_0___default.a(yourPrivateKey, 16);\n      var montPrime = bn_js__WEBPACK_IMPORTED_MODULE_0___default.a.mont(new bn_js__WEBPACK_IMPORTED_MODULE_0___default.a(p, 16));\n      var BRed = bHex.toRed(montPrime);\n      return BRed.redPow(AHex).fromRed().toString(16).toUpperCase();\n    }\n  }]);\n\n  return DiffieHellman;\n}();\n\n/***/ }),\n\n/***/ \"./src/KeyRollingHelper.js\":\n/*!*********************************!*\\\n  !*** ./src/KeyRollingHelper.js ***!\n  \\*********************************/\n/*! exports provided: KeyRollingHelper, KeyRollingResult */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"KeyRollingHelper\", function() { return KeyRollingHelper; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"KeyRollingResult\", function() { return KeyRollingResult; });\n/* harmony import */ var _Messages__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Messages */ \"./src/Messages.js\");\n/* harmony import */ var _Crypto__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Crypto */ \"./src/Crypto.js\");\n/* harmony import */ var _Secrets__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Secrets */ \"./src/Secrets.js\");\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n\n\n\nvar KeyRollingHelper =\n/*#__PURE__*/\nfunction () {\n  function KeyRollingHelper() {\n    _classCallCheck(this, KeyRollingHelper);\n  }\n\n  _createClass(KeyRollingHelper, null, [{\n    key: \"PerformKeyRolling\",\n    value: function PerformKeyRolling(krRequest, currentSecrets) {\n      var m = new _Messages__WEBPACK_IMPORTED_MODULE_0__[\"Message\"](krRequest.Id, _Messages__WEBPACK_IMPORTED_MODULE_0__[\"Events\"].KeyRollResponse, {\n        \"status\": \"confirmed\"\n      }, true);\n      var newSecrets = new _Secrets__WEBPACK_IMPORTED_MODULE_2__[\"Secrets\"](_Crypto__WEBPACK_IMPORTED_MODULE_1__[\"Crypto\"].GenerateHash(currentSecrets.EncKey).toUpperCase(), _Crypto__WEBPACK_IMPORTED_MODULE_1__[\"Crypto\"].GenerateHash(currentSecrets.HmacKey).toUpperCase());\n      return new KeyRollingResult(m, newSecrets);\n    }\n  }]);\n\n  return KeyRollingHelper;\n}();\nvar KeyRollingResult = function KeyRollingResult(keyRollingConfirmation, newSecrets) {\n  _classCallCheck(this, KeyRollingResult);\n\n  this.KeyRollingConfirmation = keyRollingConfirmation;\n  this.NewSecrets = newSecrets;\n};\n\n/***/ }),\n\n/***/ \"./src/Logger.js\":\n/*!***********************!*\\\n  !*** ./src/Logger.js ***!\n  \\***********************/\n/*! exports provided: default, Logger */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return Logger; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Logger\", function() { return Logger; });\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar Logger =\n/*#__PURE__*/\nfunction () {\n  function Logger(element) {\n    var lineSeperator = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '\\n';\n\n    _classCallCheck(this, Logger);\n\n    this.buffer = [];\n    this.element = element;\n    this.lineSeperator = lineSeperator;\n  }\n\n  _createClass(Logger, [{\n    key: \"Info\",\n    value: function Info() {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      this.buffer.push(args.join(' '));\n\n      this._render();\n    }\n  }, {\n    key: \"Debug\",\n    value: function Debug() {\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n\n      this.buffer.push(args.join(' '));\n\n      this._render();\n    }\n  }, {\n    key: \"Warn\",\n    value: function Warn() {\n      for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n        args[_key3] = arguments[_key3];\n      }\n\n      this.buffer.push(args.join(' '));\n\n      this._render();\n    }\n  }, {\n    key: \"Error\",\n    value: function Error() {\n      for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n        args[_key4] = arguments[_key4];\n      }\n\n      this.buffer.push(args.join(' '));\n\n      this._render();\n    }\n  }, {\n    key: \"Console\",\n    value: function Console() {\n      for (var _len5 = arguments.length, args = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {\n        args[_key5] = arguments[_key5];\n      }\n\n      console.log(args.join(' '));\n    }\n  }, {\n    key: \"_render\",\n    value: function _render() {\n      this.element.innerText = this.buffer.join(this.lineSeperator);\n      this.element.scrollTop = this.element.scrollHeight;\n    }\n  }, {\n    key: \"Clear\",\n    value: function Clear() {\n      this.buffer = [];\n\n      this._render();\n    }\n  }]);\n\n  return Logger;\n}();\n\n\n\n\n/***/ }),\n\n/***/ \"./src/Messages.js\":\n/*!*************************!*\\\n  !*** ./src/Messages.js ***!\n  \\*************************/\n/*! exports provided: Events, SuccessState, MessageStamp, MessageEnvelope, Message */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Events\", function() { return Events; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SuccessState\", function() { return SuccessState; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MessageStamp\", function() { return MessageStamp; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MessageEnvelope\", function() { return MessageEnvelope; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Message\", function() { return Message; });\n/* harmony import */ var _Crypto__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Crypto */ \"./src/Crypto.js\");\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n // <summary>\n// Events statically declares the various event names in messages.\n// </summary>\n\nvar Events = {\n  PairRequest: \"pair_request\",\n  KeyRequest: \"key_request\",\n  KeyResponse: \"key_response\",\n  KeyCheck: \"key_check\",\n  PairResponse: \"pair_response\",\n  DropKeysAdvice: \"drop_keys\",\n  LoginRequest: \"login_request\",\n  LoginResponse: \"login_response\",\n  Ping: \"ping\",\n  Pong: \"pong\",\n  PurchaseRequest: \"purchase\",\n  PurchaseResponse: \"purchase_response\",\n  CancelTransactionRequest: \"cancel_transaction\",\n  CancelTransactionResponse: \"cancel_response\",\n  GetLastTransactionRequest: \"get_last_transaction\",\n  GetLastTransactionResponse: \"last_transaction\",\n  RefundRequest: \"refund\",\n  RefundResponse: \"refund_response\",\n  SignatureRequired: \"signature_required\",\n  SignatureDeclined: \"signature_decline\",\n  SignatureAccepted: \"signature_accept\",\n  AuthCodeRequired: \"authorisation_code_required\",\n  AuthCodeAdvice: \"authorisation_code_advice\",\n  CashoutOnlyRequest: \"cash\",\n  CashoutOnlyResponse: \"cash_response\",\n  MotoPurchaseRequest: \"moto_purchase\",\n  MotoPurchaseResponse: \"moto_purchase_response\",\n  SettleRequest: \"settle\",\n  SettleResponse: \"settle_response\",\n  SettlementEnquiryRequest: \"settlement_enquiry\",\n  SettlementEnquiryResponse: \"settlement_enquiry_response\",\n  SetPosInfoRequest: \"set_pos_info\",\n  SetPosInfoResponse: \"set_pos_info_response\",\n  KeyRollRequest: \"request_use_next_keys\",\n  KeyRollResponse: \"response_use_next_keys\",\n  Error: \"error\",\n  InvalidHmacSignature: \"_INVALID_SIGNATURE_\",\n  // Pay At Table Related Messages\n  PayAtTableGetTableConfig: \"get_table_config\",\n  // incoming. When eftpos wants to ask us for P@T configuration.\n  PayAtTableSetTableConfig: \"set_table_config\",\n  // outgoing. When we want to instruct eftpos with the P@T configuration.\n  PayAtTableGetBillDetails: \"get_bill_details\",\n  // incoming. When eftpos wants to aretrieve the bill for a table.\n  PayAtTableBillDetails: \"bill_details\",\n  // outgoing. We reply with this when eftpos requests to us get_bill_details.\n  PayAtTableBillPayment: \"bill_payment\",\n  // incoming. When the eftpos advices \n  PrintingRequest: \"print\",\n  PrintingResponse: \"print_response\",\n  TerminalStatusRequest: \"get_terminal_status\",\n  TerminalStatusResponse: \"terminal_status\",\n  BatteryLevelChanged: \"battery_level_changed\"\n};\nvar SuccessState = {\n  Unknown: 'Unknown',\n  Success: 'Success',\n  Failed: 'Failed'\n}; // <summary>\n// MessageStamp represents what is required to turn an outgoing Message into Json\n// including encryption and date setting.\n// </summary>\n\nvar MessageStamp = function MessageStamp(posId, secrets, serverTimeDelta) {\n  _classCallCheck(this, MessageStamp);\n\n  this.PosId = posId;\n  this.Secrets = secrets;\n  this.ServerTimeDelta = serverTimeDelta;\n}; // <summary>\n// MessageEnvelope represents the outer structure of any message that is exchanged\n// between the Pos and the PinPad and vice-versa.\n// See http://www.simplepaymentapi.com/#/api/message-encryption\n// </summary>\n\nvar MessageEnvelope =\n/*#__PURE__*/\nfunction () {\n  function MessageEnvelope(message, enc, hmac, posId) {\n    _classCallCheck(this, MessageEnvelope);\n\n    // <summary>\n    // The Message field is set only when in Un-encrypted form.\n    // In fact it is the only field in an envelope in the Un-Encrypted form.\n    // </summary>\n    this.Message = message; // <summary>\n    // The enc field is set only when in Encrypted form.\n    // It contains the encrypted Json of another MessageEnvelope \n    // </summary>\n\n    this.Enc = enc; // <summary>\n    // The hmac field is set only when in Encrypted form.\n    // It is the signature of the \"enc\" field.\n    // </summary>\n\n    this.Hmac = hmac; // <summary>\n    // The pos_id field is only filled for outgoing Encrypted messages.\n    // </summary>\n\n    this.PosId = posId;\n  }\n\n  _createClass(MessageEnvelope, [{\n    key: \"toJSON\",\n    value: function toJSON() {\n      return {\n        message: this.Message,\n        enc: this.Enc,\n        hmac: this.Hmac,\n        pos_id: this.PosId\n      };\n    }\n  }]);\n\n  return MessageEnvelope;\n}(); // <summary>\n// Message represents the contents of a Message.\n// See http://www.simplepaymentapi.com/#/api/message-encryption\n// </summary>\n\nvar Message =\n/*#__PURE__*/\nfunction () {\n  function Message(id, eventName, data, needsEncryption) {\n    _classCallCheck(this, Message);\n\n    this.Id = id;\n    this.EventName = eventName;\n    this.Data = data;\n    this.DateTimeStamp = '';\n    this.PosId = ''; // Pos_id is set here only for outgoing Un-encrypted messages. \n\n    this.IncommingHmac = ''; // Sometimes the logic around the incoming message might need access to the sugnature, for example in the key_check.\n\n    this._needsEncryption = needsEncryption; // Denotes whether an outgoing message needs to be encrypted in ToJson()\n\n    this.DecryptedJson = ''; // Set on an incoming message just so you can have a look at what it looked like in its json form.\n  }\n\n  _createClass(Message, [{\n    key: \"GetSuccessState\",\n    value: function GetSuccessState() {\n      if (!this.Data || typeof this.Data.success === \"undefined\") {\n        return SuccessState.Unknown;\n      }\n\n      return this.Data.success ? SuccessState.Success : SuccessState.Failed;\n    }\n  }, {\n    key: \"GetError\",\n    value: function GetError() {\n      return this.Data.error_reason ? this.Data.error_reason : \"\";\n    }\n  }, {\n    key: \"GetErrorDetail\",\n    value: function GetErrorDetail() {\n      return this.Data.error_detail;\n    }\n  }, {\n    key: \"GetServerTimeDelta\",\n    value: function GetServerTimeDelta() {\n      var now = Date.now(); // Stamp format: 2018-04-19T01:42:38.279\n\n      var dts = this.DateTimeStamp.split(/[\\-\\+\\. :T]/);\n      var msgTime = new Date( // year, month, date\n      dts[0], dts[1] - 1, dts[2], // hour, minute, second, millis\n      dts[3], dts[4], dts[5], dts[6]).getTime(); // Local time zone\n\n      return msgTime - now;\n    } // Helper method to parse bank date format 20042018 (ddMMyyyy)\n\n  }, {\n    key: \"ToJson\",\n    value: function ToJson(stamp) {\n      var now = Date.now();\n      var tzoffset = new Date().getTimezoneOffset() * 60 * 1000;\n      var adjustedTime = new Date(now - tzoffset + stamp.ServerTimeDelta); // Format date: \"yyyy-MM-ddTHH:mm:ss.fff\"\n\n      this.DateTimeStamp = adjustedTime.toISOString().slice(0, -1);\n      this.PosId = stamp.PosId;\n      var envelope = {\n        message: {\n          id: this.Id,\n          event: this.EventName,\n          data: this.Data,\n          datetime: this.DateTimeStamp\n        }\n      };\n\n      if (!this._needsEncryption) {\n        // Unencrypted Messages need PosID inside the message\n        envelope.message.pos_id = this.PosId;\n      }\n\n      this.DecryptedJson = JSON.stringify(envelope);\n\n      if (!this._needsEncryption) {\n        return this.DecryptedJson;\n      }\n\n      var encMsg = _Crypto__WEBPACK_IMPORTED_MODULE_0__[\"Crypto\"].AesEncrypt(stamp.Secrets.EncKey, this.DecryptedJson);\n      var hmacSig = _Crypto__WEBPACK_IMPORTED_MODULE_0__[\"Crypto\"].HmacSignature(stamp.Secrets.HmacKey, encMsg);\n      var encrMessageEnvelope = {\n        enc: encMsg,\n        hmac: hmacSig.toUpperCase(),\n        pos_id: stamp.PosId\n      };\n      return JSON.stringify(encrMessageEnvelope);\n    }\n  }], [{\n    key: \"ParseBankDate\",\n    value: function ParseBankDate(bankDate) {\n      if (bankDate.length !== 8) return null;\n      return new Date(\"\".concat(bankDate.substr(4, 4), \"-\").concat(bankDate.substr(2, 2), \"-\").concat(bankDate.substr(0, 2)));\n    } // Parses a bank date & time str from \"05Oct17\" / \"05:00\" (\"ddMMMyy/HH:mm\") into date obj\n\n  }, {\n    key: \"ParseBankDateTimeStr\",\n    value: function ParseBankDateTimeStr(date, time) {\n      return new Date(\"\".concat(date.substr(0, 2), \" \").concat(date.substr(2, 3), \" \").concat(date.substr(5, 2), \" \").concat(time));\n    }\n  }, {\n    key: \"FromJson\",\n    value: function FromJson(msgJson, secrets) {\n      var env = JSON.parse(msgJson);\n\n      if (env.message != null) {\n        var message = new Message(env.message.id, env.message.event, env.message.data, false);\n        message.DecryptedJson = msgJson;\n        return message;\n      }\n\n      if (secrets == null) {\n        // This may happen if we somehow received an encrypted message from eftpos but we're not configered with secrets.\n        // For example, if we cancel the pairing process a little late in the game and we get an encrypted key_check message after we've dropped the keys.\n        return new Message(\"UNKNOWN\", \"NOSECRETS\", null, false);\n      } // Its encrypted, verify sig\n\n\n      var sig = _Crypto__WEBPACK_IMPORTED_MODULE_0__[\"Crypto\"].HmacSignature(secrets.HmacKey, env.enc);\n\n      if (sig.toUpperCase() != env.hmac) {\n        return new Message(\"_\", Events.InvalidHmacSignature, null, false);\n      }\n\n      var decryptedJson = _Crypto__WEBPACK_IMPORTED_MODULE_0__[\"Crypto\"].AesDecrypt(secrets.EncKey, env.enc);\n\n      try {\n        var decryptedMsg = JSON.parse(decryptedJson);\n\n        var _message = new Message(decryptedMsg.message.id, decryptedMsg.message.event, decryptedMsg.message.data, true);\n\n        _message.DateTimeStamp = decryptedMsg.message.datetime;\n        _message.PosId = decryptedMsg.message.pos_id;\n        _message.IncomingHmac = env.hmac;\n        _message.DecryptedJson = decryptedJson;\n        return _message;\n      } catch (e) {\n        return new Message(\"UNKNOWN\", \"UNPARSEABLE\", {\n          \"msg\": decryptedJson\n        }, false);\n      }\n    }\n  }]);\n\n  return Message;\n}();\n\n/***/ }),\n\n/***/ \"./src/Pairing.js\":\n/*!************************!*\\\n  !*** ./src/Pairing.js ***!\n  \\************************/\n/*! exports provided: PairRequest, KeyRequest, KeyResponse, KeyCheck, PairResponse, SecretsAndKeyResponse, DropKeysRequest */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"PairRequest\", function() { return PairRequest; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"KeyRequest\", function() { return KeyRequest; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"KeyResponse\", function() { return KeyResponse; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"KeyCheck\", function() { return KeyCheck; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"PairResponse\", function() { return PairResponse; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SecretsAndKeyResponse\", function() { return SecretsAndKeyResponse; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"DropKeysRequest\", function() { return DropKeysRequest; });\n/* harmony import */ var _Messages__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Messages */ \"./src/Messages.js\");\n/* harmony import */ var _RequestIdHelper__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./RequestIdHelper */ \"./src/RequestIdHelper.js\");\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n\n // <summary>\n// Pairing Interaction 1: Outgoing\n// </summary>\n\nvar PairRequest =\n/*#__PURE__*/\nfunction () {\n  function PairRequest() {\n    _classCallCheck(this, PairRequest);\n  }\n\n  _createClass(PairRequest, [{\n    key: \"ToMessage\",\n    value: function ToMessage() {\n      var data = {\n        padding: true\n      };\n      return new _Messages__WEBPACK_IMPORTED_MODULE_0__[\"Message\"](_RequestIdHelper__WEBPACK_IMPORTED_MODULE_1__[\"RequestIdHelper\"].Id(\"pr\"), _Messages__WEBPACK_IMPORTED_MODULE_0__[\"Events\"].PairRequest, data, false);\n    }\n  }]);\n\n  return PairRequest;\n}(); // Pairing Interaction 2: Incoming\n\nvar KeyRequest = function KeyRequest(m) {\n  _classCallCheck(this, KeyRequest);\n\n  this.RequestId = m.Id;\n  this.Aenc = m.Data.enc.A;\n  this.Ahmac = m.Data.hmac.A;\n}; // Pairing Interaction 3: Outgoing\n\nvar KeyResponse =\n/*#__PURE__*/\nfunction () {\n  function KeyResponse(requestId, Benc, Bhmac) {\n    _classCallCheck(this, KeyResponse);\n\n    this.RequestId = requestId;\n    this.Benc = Benc;\n    this.Bhmac = Bhmac;\n  }\n\n  _createClass(KeyResponse, [{\n    key: \"ToMessage\",\n    value: function ToMessage() {\n      var data = {\n        enc: {\n          B: this.Benc\n        },\n        hmac: {\n          B: this.Bhmac\n        }\n      };\n      return new _Messages__WEBPACK_IMPORTED_MODULE_0__[\"Message\"](this.RequestId, _Messages__WEBPACK_IMPORTED_MODULE_0__[\"Events\"].KeyResponse, data, false);\n    }\n  }]);\n\n  return KeyResponse;\n}(); // Pairing Interaction 4: Incoming\n\nvar KeyCheck = function KeyCheck(m) {\n  _classCallCheck(this, KeyCheck);\n\n  this.ConfirmationCode = m.IncomingHmac.substring(0, 6);\n}; // Pairing Interaction 5: Incoming\n\nvar PairResponse = function PairResponse(m) {\n  _classCallCheck(this, PairResponse);\n\n  this.Success = m.Data.success;\n}; // Holder class for Secrets and KeyResponse, so that we can use them together in method signatures.\n\nvar SecretsAndKeyResponse = function SecretsAndKeyResponse(secrets, keyResponse) {\n  _classCallCheck(this, SecretsAndKeyResponse);\n\n  this.Secrets = secrets;\n  this.KeyResponse = keyResponse;\n};\nvar DropKeysRequest =\n/*#__PURE__*/\nfunction () {\n  function DropKeysRequest() {\n    _classCallCheck(this, DropKeysRequest);\n  }\n\n  _createClass(DropKeysRequest, [{\n    key: \"ToMessage\",\n    value: function ToMessage() {\n      return new _Messages__WEBPACK_IMPORTED_MODULE_0__[\"Message\"](_RequestIdHelper__WEBPACK_IMPORTED_MODULE_1__[\"RequestIdHelper\"].Id(\"drpkys\"), _Messages__WEBPACK_IMPORTED_MODULE_0__[\"Events\"].DropKeysAdvice, null, true);\n    }\n  }]);\n\n  return DropKeysRequest;\n}();\n\n/***/ }),\n\n/***/ \"./src/PairingHelper.js\":\n/*!******************************!*\\\n  !*** ./src/PairingHelper.js ***!\n  \\******************************/\n/*! exports provided: GENERATOR, GROUP14_2048_BIT_MODP, PairingHelper, PublicKeyAndSecret */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"GENERATOR\", function() { return GENERATOR; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"GROUP14_2048_BIT_MODP\", function() { return GROUP14_2048_BIT_MODP; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"PairingHelper\", function() { return PairingHelper; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"PublicKeyAndSecret\", function() { return PublicKeyAndSecret; });\n/* harmony import */ var _Pairing__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Pairing */ \"./src/Pairing.js\");\n/* harmony import */ var _Secrets__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Secrets */ \"./src/Secrets.js\");\n/* harmony import */ var _Crypto__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Crypto */ \"./src/Crypto.js\");\n/* harmony import */ var _DiffieHellman__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./DiffieHellman */ \"./src/DiffieHellman.js\");\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n\n\n\n // This is the generator used for diffie-hellman in 2048-bit MODP Group 14 as per (https://tools.ietf.org/html/rfc3526#section-3)\n\nvar GENERATOR = 2; // This is the prime used for diffie-hellman using 2048-bit MODP Group 14 as per (https://tools.ietf.org/html/rfc3526#section-3)\n\nvar GROUP14_2048_BIT_MODP = 'FFFFFFFFFFFFFFFFC90FDAA22168C234C4C6628B80DC1CD129024E088A67CC74020BBEA63B139B22514A08798E3404DDEF9519B3CD3A431B302B0A6DF25F14374FE1356D6D51C245E485B576625E7EC6F44C42E9A637ED6B0BFF5CB6F406B7EDEE386BFB5A899FA5AE9F24117C4B1FE649286651ECE45B3DC2007CB8A163BF0598DA48361C55D39A69163FA8FD24CF5F83655D23DCA3AD961C62F356208552BB9ED529077096966D670C354E4ABC9804F1746C08CA18217C32905E462E36CE3BE39E772C180E86039B2783A2EC07A28FB5C55DF06F4C52C9DE2BCBF6955817183995497CEA956AE515D2261898FA051015728E5A8AACAA68FFFFFFFFFFFFFFFF'; // <summary>\n// This static class helps you with the pairing process as documented here:\n// http://www.simplepaymentapi.com/#/api/pairing-process\n// </summary>\n\nvar PairingHelper =\n/*#__PURE__*/\nfunction () {\n  function PairingHelper() {\n    _classCallCheck(this, PairingHelper);\n  }\n\n  _createClass(PairingHelper, [{\n    key: \"GenerateSecretsAndKeyResponse\",\n    // <summary>\n    // Calculates/Generates Secrets and KeyResponse given an incoming KeyRequest.\n    // </summary>\n    // <param name=\"keyRequest\"></param>\n    // <returns>Secrets and KeyResponse to send back.</returns>\n    value: function GenerateSecretsAndKeyResponse(keyRequest) {\n      var encPubAndSec = this._calculateMyPublicKeyAndSecret(keyRequest.Aenc);\n\n      var Benc = encPubAndSec.MyPublicKey;\n      var Senc = encPubAndSec.SharedSecretKey;\n\n      var hmacPubAndSec = this._calculateMyPublicKeyAndSecret(keyRequest.Ahmac);\n\n      var Bhmac = hmacPubAndSec.MyPublicKey;\n      var Shmac = hmacPubAndSec.SharedSecretKey;\n      var secrets = new _Secrets__WEBPACK_IMPORTED_MODULE_1__[\"Secrets\"](Senc, Shmac);\n      var keyResponse = new _Pairing__WEBPACK_IMPORTED_MODULE_0__[\"KeyResponse\"](keyRequest.RequestId, Benc, Bhmac);\n      return new _Pairing__WEBPACK_IMPORTED_MODULE_0__[\"SecretsAndKeyResponse\"](secrets, keyResponse);\n    } // <summary>\n    // Turns an incoming \"A\" value from the PinPad into the outgoing \"B\" value \n    // and the secret value using DiffieHelmman helper.\n    // </summary>\n    // <param name=\"theirPublicKey\">The incoming A value</param>\n    // <returns>Your B value and the Secret</returns>\n\n  }, {\n    key: \"_calculateMyPublicKeyAndSecret\",\n    value: function _calculateMyPublicKeyAndSecret(theirPublicKey) {\n      var diffieHellman = new _DiffieHellman__WEBPACK_IMPORTED_MODULE_3__[\"DiffieHellman\"]();\n      var myPrivateBI = diffieHellman.RandomPrivateKey(GROUP14_2048_BIT_MODP);\n      var myPublicBI = diffieHellman.PublicKey(GROUP14_2048_BIT_MODP, GENERATOR, myPrivateBI);\n      var secretBI = diffieHellman.Secret(GROUP14_2048_BIT_MODP, theirPublicKey, myPrivateBI);\n      var secret = this.DHSecretToSPISecret(secretBI);\n      return new PublicKeyAndSecret(myPublicBI, secret);\n    } // <summary>\n    // Converts the DH secret BigInteger into the hex-string to be used as the secret.\n    // There are some \"gotchyas\" here which is why this piece of work is abstracted so it can be tested separately.\n    // See: http://www.simplepaymentapi.com/#/api/pairing-process\n    // </summary>\n    // <param name=\"secretBI\">Secret as BigInteger</param>\n    // <returns>Secret as Hex-String</returns>\n\n  }, {\n    key: \"DHSecretToSPISecret\",\n    value: function DHSecretToSPISecret(secret) {\n      // If the calculated hexadecimal secret doesn't have an even number of characters, we add an extra 0 to the start. This allows SHA-256 to operate on the hexadecimal secret as if it were a hexadecimal representation of a string.\n      if (secret.length % 2 === 1) {\n        secret = '0' + secret;\n      }\n\n      secret = secret.padStart(512, '0'); // We sha256 that byte array and return the hex string result\n\n      return _Crypto__WEBPACK_IMPORTED_MODULE_2__[\"Crypto\"].GenerateHash(secret);\n    }\n  }], [{\n    key: \"NewPairRequest\",\n    // <summary>\n    // Generates a pairing Request.\n    // </summary>\n    // <returns>New PairRequest</returns>\n    value: function NewPairRequest() {\n      return new _Pairing__WEBPACK_IMPORTED_MODULE_0__[\"PairRequest\"]();\n    }\n  }]);\n\n  return PairingHelper;\n}(); // <summary>\n// Internal Holder class for Public and Secret, so that we can use them together in method signatures. \n// </summary>\n\nvar PublicKeyAndSecret = function PublicKeyAndSecret(myPublicKey, sharedSecretKey) {\n  _classCallCheck(this, PublicKeyAndSecret);\n\n  this.MyPublicKey = myPublicKey;\n  this.SharedSecretKey = sharedSecretKey;\n};\n\n/***/ }),\n\n/***/ \"./src/PayAtTable.js\":\n/*!***************************!*\\\n  !*** ./src/PayAtTable.js ***!\n  \\***************************/\n/*! exports provided: BillStatusResponse, BillRetrievalResult, PaymentType, BillPayment, PaymentHistoryEntry, PayAtTableConfig */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"BillStatusResponse\", function() { return BillStatusResponse; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"BillRetrievalResult\", function() { return BillRetrievalResult; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"PaymentType\", function() { return PaymentType; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"BillPayment\", function() { return BillPayment; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"PaymentHistoryEntry\", function() { return PaymentHistoryEntry; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"PayAtTableConfig\", function() { return PayAtTableConfig; });\n/* harmony import */ var _Messages__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Messages */ \"./src/Messages.js\");\n/* harmony import */ var _Purchase__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Purchase */ \"./src/Purchase.js\");\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n\n // <summary>\n// This class represents the BillDetails that the POS will be asked for throughout a PayAtTable flow.\n// </summary>\n\nvar BillStatusResponse =\n/*#__PURE__*/\nfunction () {\n  function BillStatusResponse() {\n    _classCallCheck(this, BillStatusResponse);\n\n    // <summary>\n    // Set this Error accordingly if you are not able to return the BillDetails that were asked from you.\n    // </summary>\n    this.Result = null; // <summary>\n    // This is a unique identifier that you assign to each bill.\n    // It migt be for example, the timestamp of when the cover was opened.\n    // </summary>\n\n    this.BillId = null; // <summary>\n    // This is the table id that this bill was for.\n    // The waiter will enter it on the Eftpos at the start of the PayAtTable flow and the Eftpos will \n    // retrieve the bill using the table id. \n    // </summary>\n\n    this.TableId = null; // <summary>\n    // The Total Amount on this bill, in cents.\n    // </summary>\n\n    this.TotalAmount = 0; // <summary>\n    // The currently outsanding amount on this bill, in cents.\n    // </summary>\n\n    this.OutstandingAmount = 0; // <summary>\n    // Your POS is required to persist some state on behalf of the Eftpos so the Eftpos can recover state.\n    // It is just a piece of string that you save against your billId.\n    // WHenever you're asked for BillDetails, make sure you return this piece of data if you have it.\n    // </summary>\n\n    this.BillData = \"\";\n  }\n\n  _createClass(BillStatusResponse, [{\n    key: \"getBillPaymentHistory\",\n    value: function getBillPaymentHistory() {\n      if (!this.BillData) {\n        return [];\n      }\n\n      var billPaymentHistory = [];\n      var savedBillData = JSON.parse(this.BillData);\n      return savedBillData.map(function (bill) {\n        return new PaymentHistoryEntry(bill.payment_type, bill.payment_summary);\n      });\n    }\n  }, {\n    key: \"ToMessage\",\n    value: function ToMessage(messageId) {\n      var data = {\n        \"success\": this.Result == BillRetrievalResult.SUCCESS\n      };\n      if (this.BillId) data.bill_id = this.BillId;\n      if (this.TableId) data.table_id = this.TableId;\n\n      if (this.Result == BillRetrievalResult.SUCCESS) {\n        data.bill_total_amount = this.TotalAmount;\n        data.bill_outstanding_amount = this.OutstandingAmount;\n        data.bill_payment_history = this.getBillPaymentHistory();\n      } else {\n        data.error_reason = this.Result.toString();\n        data.error_detail = this.Result.toString();\n      }\n\n      return new _Messages__WEBPACK_IMPORTED_MODULE_0__[\"Message\"](messageId, _Messages__WEBPACK_IMPORTED_MODULE_0__[\"Events\"].PayAtTableBillDetails, data, true);\n    }\n  }], [{\n    key: \"ToBillData\",\n    value: function ToBillData(ph) {\n      if (ph.length < 1) {\n        return \"\";\n      }\n\n      return JSON.stringify(ph);\n    }\n  }]);\n\n  return BillStatusResponse;\n}();\nvar BillRetrievalResult = {\n  SUCCESS: 'SUCCESS',\n  INVALID_TABLE_ID: 'INVALID_TABLE_ID',\n  INVALID_BILL_ID: 'INVALID_BILL_ID',\n  INVALID_OPERATOR_ID: 'INVALID_OPERATOR_ID'\n};\nvar PaymentType = {\n  CARD: 'CARD',\n  CASH: 'CASH'\n};\nvar BillPayment = function BillPayment(m) {\n  _classCallCheck(this, BillPayment);\n\n  this._incomingAdvice = m;\n  this.BillId = this._incomingAdvice.Data[\"bill_id\"];\n  this.TableId = this._incomingAdvice.Data[\"table_id\"];\n  this.OperatorId = this._incomingAdvice.Data[\"operator_id\"];\n  var pt = this._incomingAdvice.Data[\"payment_type\"];\n  this.PaymentType = pt; // this is when we ply the sub object \"payment_details\" into a purchase response for convenience.\n\n  var purchaseMsg = new _Messages__WEBPACK_IMPORTED_MODULE_0__[\"Message\"](m.Id, \"payment_details\", m.Data[\"payment_details\"], false);\n  this.PurchaseResponse = new _Purchase__WEBPACK_IMPORTED_MODULE_1__[\"PurchaseResponse\"](purchaseMsg);\n  this.PurchaseAmount = this.PurchaseResponse.GetPurchaseAmount();\n  this.TipAmount = this.PurchaseResponse.GetTipAmount();\n};\nvar PaymentHistoryEntry =\n/*#__PURE__*/\nfunction () {\n  function PaymentHistoryEntry(paymentType, paymentSummary) {\n    _classCallCheck(this, PaymentHistoryEntry);\n\n    this.PaymentType = paymentType;\n    this.PaymentSummary = paymentSummary;\n  }\n\n  _createClass(PaymentHistoryEntry, [{\n    key: \"toJSON\",\n    value: function toJSON() {\n      return {\n        payment_type: this.PaymentType,\n        payment_summary: this.PaymentSummary\n      };\n    }\n  }, {\n    key: \"GetTerminalRefId\",\n    value: function GetTerminalRefId() {\n      return this.PaymentSummary[\"terminal_ref_id\"];\n    }\n  }]);\n\n  return PaymentHistoryEntry;\n}();\nvar PayAtTableConfig =\n/*#__PURE__*/\nfunction () {\n  function PayAtTableConfig() {\n    _classCallCheck(this, PayAtTableConfig);\n\n    this.PayAtTabledEnabled = false;\n    this.OperatorIdEnabled = false;\n    this.SplitByAmountEnabled = false;\n    this.EqualSplitEnabled = false;\n    this.TableRetrievalEnabled = false;\n    this.TippingEnabled = false;\n    this.SummaryReportEnabled = false;\n    this.LabelPayButton = '';\n    this.LabelOperatorId = '';\n    this.LabelTableId = ''; // \n    // <summary>\n    // Fill in with operator ids that the eftpos terminal will validate against. \n    // Leave Empty to allow any operator_id through. \n    // </summary>\n\n    this.AllowedOperatorIds = [];\n  }\n\n  _createClass(PayAtTableConfig, [{\n    key: \"ToMessage\",\n    value: function ToMessage(messageId) {\n      var data = {\n        \"pay_at_table_enabled\": this.PayAtTabledEnabled,\n        \"operator_id_enabled\": this.OperatorIdEnabled,\n        \"split_by_amount_enabled\": this.SplitByAmountEnabled,\n        \"equal_split_enabled\": this.EqualSplitEnabled,\n        \"tipping_enabled\": this.TippingEnabled,\n        \"summary_report_enabled\": this.SummaryReportEnabled,\n        \"pay_button_label\": this.LabelPayButton,\n        \"operator_id_label\": this.LabelOperatorId,\n        \"table_id_label\": this.LabelTableId,\n        \"operator_id_list\": this.AllowedOperatorIds,\n        \"table_retrieval_enabled\": this.TableRetrievalEnabled\n      };\n      return new _Messages__WEBPACK_IMPORTED_MODULE_0__[\"Message\"](messageId, _Messages__WEBPACK_IMPORTED_MODULE_0__[\"Events\"].PayAtTableSetTableConfig, data, true);\n    }\n  }], [{\n    key: \"FeatureDisableMessage\",\n    value: function FeatureDisableMessage(messageId) {\n      var data = {\n        \"pay_at_table_enabled\": false\n      };\n      return new _Messages__WEBPACK_IMPORTED_MODULE_0__[\"Message\"](messageId, _Messages__WEBPACK_IMPORTED_MODULE_0__[\"Events\"].PayAtTableSetTableConfig, data, true);\n    }\n  }]);\n\n  return PayAtTableConfig;\n}();\n\n/***/ }),\n\n/***/ \"./src/PingHelper.js\":\n/*!***************************!*\\\n  !*** ./src/PingHelper.js ***!\n  \\***************************/\n/*! exports provided: PongHelper, PingHelper */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"PongHelper\", function() { return PongHelper; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"PingHelper\", function() { return PingHelper; });\n/* harmony import */ var _RequestIdHelper__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./RequestIdHelper */ \"./src/RequestIdHelper.js\");\n/* harmony import */ var _Messages__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Messages */ \"./src/Messages.js\");\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n\n\nvar PongHelper =\n/*#__PURE__*/\nfunction () {\n  function PongHelper() {\n    _classCallCheck(this, PongHelper);\n  }\n\n  _createClass(PongHelper, null, [{\n    key: \"GeneratePongRessponse\",\n    value: function GeneratePongRessponse(ping) {\n      return new _Messages__WEBPACK_IMPORTED_MODULE_1__[\"Message\"](ping.Id, _Messages__WEBPACK_IMPORTED_MODULE_1__[\"Events\"].Pong, null, true);\n    }\n  }]);\n\n  return PongHelper;\n}();\nvar PingHelper =\n/*#__PURE__*/\nfunction () {\n  function PingHelper() {\n    _classCallCheck(this, PingHelper);\n  }\n\n  _createClass(PingHelper, null, [{\n    key: \"GeneratePingRequest\",\n    value: function GeneratePingRequest() {\n      return new _Messages__WEBPACK_IMPORTED_MODULE_1__[\"Message\"](_RequestIdHelper__WEBPACK_IMPORTED_MODULE_0__[\"RequestIdHelper\"].Id(\"ping\"), _Messages__WEBPACK_IMPORTED_MODULE_1__[\"Events\"].Ping, null, true);\n    }\n  }]);\n\n  return PingHelper;\n}();\n\n/***/ }),\n\n/***/ \"./src/PosInfo.js\":\n/*!************************!*\\\n  !*** ./src/PosInfo.js ***!\n  \\************************/\n/*! exports provided: SetPosInfoRequest, SetPosInfoResponse, DeviceInfo */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SetPosInfoRequest\", function() { return SetPosInfoRequest; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SetPosInfoResponse\", function() { return SetPosInfoResponse; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"DeviceInfo\", function() { return DeviceInfo; });\n/* harmony import */ var _Messages__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Messages */ \"./src/Messages.js\");\n/* harmony import */ var _RequestIdHelper__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./RequestIdHelper */ \"./src/RequestIdHelper.js\");\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n\n\nvar SetPosInfoRequest =\n/*#__PURE__*/\nfunction () {\n  function SetPosInfoRequest(version, vendorId, libraryLanguage, libraryVersion, otherInfo) {\n    _classCallCheck(this, SetPosInfoRequest);\n\n    this._version = version;\n    this._vendorId = vendorId;\n    this._libraryLanguage = libraryLanguage;\n    this._libraryVersion = libraryVersion;\n    this._otherInfo = otherInfo;\n  }\n\n  _createClass(SetPosInfoRequest, [{\n    key: \"toMessage\",\n    value: function toMessage() {\n      var data = {\n        pos_version: this._version,\n        pos_vendor_id: this._vendorId,\n        library_language: this._libraryLanguage,\n        library_version: this._libraryVersion,\n        other_info: this._otherInfo\n      };\n      return new _Messages__WEBPACK_IMPORTED_MODULE_0__[\"Message\"](_RequestIdHelper__WEBPACK_IMPORTED_MODULE_1__[\"RequestIdHelper\"].Id(\"prav\"), _Messages__WEBPACK_IMPORTED_MODULE_0__[\"Events\"].SetPosInfoRequest, data, true);\n    }\n  }]);\n\n  return SetPosInfoRequest;\n}();\nvar SetPosInfoResponse =\n/*#__PURE__*/\nfunction () {\n  function SetPosInfoResponse(m) {\n    _classCallCheck(this, SetPosInfoResponse);\n\n    this._success = m.GetSuccessState() == _Messages__WEBPACK_IMPORTED_MODULE_0__[\"SuccessState\"].Success;\n    this._m = m;\n  }\n\n  _createClass(SetPosInfoResponse, [{\n    key: \"isSuccess\",\n    value: function isSuccess() {\n      return this._success;\n    }\n  }, {\n    key: \"getErrorReason\",\n    value: function getErrorReason() {\n      return this._m.Data.error_reason;\n    }\n  }, {\n    key: \"getErrorDetail\",\n    value: function getErrorDetail() {\n      return this._m.Data.error_detail;\n    }\n  }, {\n    key: \"getResponseValueWithAttribute\",\n    value: function getResponseValueWithAttribute(attribute) {\n      return this._m.Data[attribute];\n    }\n  }]);\n\n  return SetPosInfoResponse;\n}();\nvar DeviceInfo =\n/*#__PURE__*/\nfunction () {\n  function DeviceInfo() {\n    _classCallCheck(this, DeviceInfo);\n  }\n\n  _createClass(DeviceInfo, null, [{\n    key: \"GetAppDeviceInfo\",\n    value: function GetAppDeviceInfo() {\n      var deviceInfo = {};\n      deviceInfo['device_system'] = navigator.userAgent; // deviceInfo.Add(\"device_system\", Environment.OSVersion.Platform.ToString() + \" \" + Environment.OSVersion.Version.ToString());\n\n      return deviceInfo;\n    }\n  }]);\n\n  return DeviceInfo;\n}();\n\n/***/ }),\n\n/***/ \"./src/Preauth.js\":\n/*!************************!*\\\n  !*** ./src/Preauth.js ***!\n  \\************************/\n/*! exports provided: PreauthEvents, AccountVerifyRequest, AccountVerifyResponse, PreauthOpenRequest, PreauthTopupRequest, PreauthPartialCancellationRequest, PreauthExtendRequest, PreauthCancelRequest, PreauthCompletionRequest, PreauthResponse */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"PreauthEvents\", function() { return PreauthEvents; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"AccountVerifyRequest\", function() { return AccountVerifyRequest; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"AccountVerifyResponse\", function() { return AccountVerifyResponse; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"PreauthOpenRequest\", function() { return PreauthOpenRequest; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"PreauthTopupRequest\", function() { return PreauthTopupRequest; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"PreauthPartialCancellationRequest\", function() { return PreauthPartialCancellationRequest; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"PreauthExtendRequest\", function() { return PreauthExtendRequest; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"PreauthCancelRequest\", function() { return PreauthCancelRequest; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"PreauthCompletionRequest\", function() { return PreauthCompletionRequest; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"PreauthResponse\", function() { return PreauthResponse; });\n/* harmony import */ var _RequestIdHelper__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./RequestIdHelper */ \"./src/RequestIdHelper.js\");\n/* harmony import */ var _Messages__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Messages */ \"./src/Messages.js\");\n/* harmony import */ var _Purchase__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Purchase */ \"./src/Purchase.js\");\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n\n\n\nvar PreauthEvents = {\n  AccountVerifyRequest: \"account_verify\",\n  AccountVerifyResponse: \"account_verify_response\",\n  PreauthOpenRequest: \"preauth\",\n  PreauthOpenResponse: \"preauth_response\",\n  PreauthTopupRequest: \"preauth_topup\",\n  PreauthTopupResponse: \"preauth_topup_response\",\n  PreauthExtendRequest: \"preauth_extend\",\n  PreauthExtendResponse: \"preauth_extend_response\",\n  PreauthPartialCancellationRequest: \"preauth_partial_cancellation\",\n  PreauthPartialCancellationResponse: \"preauth_partial_cancellation_response\",\n  PreauthCancellationRequest: \"preauth_cancellation\",\n  PreauthCancellationResponse: \"preauth_cancellation_response\",\n  PreauthCompleteRequest: \"completion\",\n  PreauthCompleteResponse: \"completion_response\"\n};\nvar AccountVerifyRequest =\n/*#__PURE__*/\nfunction () {\n  function AccountVerifyRequest(posRefId) {\n    _classCallCheck(this, AccountVerifyRequest);\n\n    this.PosRefId = posRefId;\n  }\n\n  _createClass(AccountVerifyRequest, [{\n    key: \"ToMessage\",\n    value: function ToMessage() {\n      var data = {\n        \"pos_ref_id\": this.PosRefId\n      };\n      return new _Messages__WEBPACK_IMPORTED_MODULE_1__[\"Message\"](_RequestIdHelper__WEBPACK_IMPORTED_MODULE_0__[\"RequestIdHelper\"].Id(\"prav\"), PreauthEvents.AccountVerifyRequest, data, true);\n    }\n  }]);\n\n  return AccountVerifyRequest;\n}();\nvar AccountVerifyResponse = function AccountVerifyResponse(m) {\n  _classCallCheck(this, AccountVerifyResponse);\n\n  this.Details = new _Purchase__WEBPACK_IMPORTED_MODULE_2__[\"PurchaseResponse\"](m);\n  this.PosRefId = this.Details.PosRefId;\n  this._m = m;\n};\nvar PreauthOpenRequest =\n/*#__PURE__*/\nfunction () {\n  function PreauthOpenRequest(amountCents, posRefId) {\n    _classCallCheck(this, PreauthOpenRequest);\n\n    this.PosRefId = posRefId;\n    this.PreauthAmount = amountCents;\n  }\n\n  _createClass(PreauthOpenRequest, [{\n    key: \"ToMessage\",\n    value: function ToMessage() {\n      var data = {\n        \"pos_ref_id\": this.PosRefId,\n        \"preauth_amount\": this.PreauthAmount\n      };\n      return new _Messages__WEBPACK_IMPORTED_MODULE_1__[\"Message\"](_RequestIdHelper__WEBPACK_IMPORTED_MODULE_0__[\"RequestIdHelper\"].Id(\"prac\"), PreauthEvents.PreauthOpenRequest, data, true);\n    }\n  }]);\n\n  return PreauthOpenRequest;\n}();\nvar PreauthTopupRequest =\n/*#__PURE__*/\nfunction () {\n  function PreauthTopupRequest(preauthId, topupAmountCents, posRefId) {\n    _classCallCheck(this, PreauthTopupRequest);\n\n    this.PreauthId = preauthId;\n    this.TopupAmount = topupAmountCents;\n    this.PosRefId = posRefId;\n  }\n\n  _createClass(PreauthTopupRequest, [{\n    key: \"ToMessage\",\n    value: function ToMessage() {\n      var data = {\n        \"pos_ref_id\": this.PosRefId,\n        \"preauth_id\": this.PreauthId,\n        \"topup_amount\": this.TopupAmount\n      };\n      return new _Messages__WEBPACK_IMPORTED_MODULE_1__[\"Message\"](_RequestIdHelper__WEBPACK_IMPORTED_MODULE_0__[\"RequestIdHelper\"].Id(\"prtu\"), PreauthEvents.PreauthTopupRequest, data, true);\n    }\n  }]);\n\n  return PreauthTopupRequest;\n}();\nvar PreauthPartialCancellationRequest =\n/*#__PURE__*/\nfunction () {\n  function PreauthPartialCancellationRequest(preauthId, partialCancellationAmountCents, posRefId) {\n    _classCallCheck(this, PreauthPartialCancellationRequest);\n\n    this.PreauthId = preauthId;\n    this.PartialCancellationAmount = partialCancellationAmountCents;\n    this.PosRefId = posRefId;\n  }\n\n  _createClass(PreauthPartialCancellationRequest, [{\n    key: \"ToMessage\",\n    value: function ToMessage() {\n      var data = {\n        \"pos_ref_id\": this.PosRefId,\n        \"preauth_id\": this.PreauthId,\n        \"preauth_cancel_amount\": this.PartialCancellationAmount\n      };\n      return new _Messages__WEBPACK_IMPORTED_MODULE_1__[\"Message\"](_RequestIdHelper__WEBPACK_IMPORTED_MODULE_0__[\"RequestIdHelper\"].Id(\"prpc\"), PreauthEvents.PreauthPartialCancellationRequest, data, true);\n    }\n  }]);\n\n  return PreauthPartialCancellationRequest;\n}();\nvar PreauthExtendRequest =\n/*#__PURE__*/\nfunction () {\n  function PreauthExtendRequest(preauthId, posRefId) {\n    _classCallCheck(this, PreauthExtendRequest);\n\n    this.PreauthId = preauthId;\n    this.PosRefId = posRefId;\n  }\n\n  _createClass(PreauthExtendRequest, [{\n    key: \"ToMessage\",\n    value: function ToMessage() {\n      var data = {\n        \"pos_ref_id\": this.PosRefId,\n        \"preauth_id\": this.PreauthId\n      };\n      return new _Messages__WEBPACK_IMPORTED_MODULE_1__[\"Message\"](_RequestIdHelper__WEBPACK_IMPORTED_MODULE_0__[\"RequestIdHelper\"].Id(\"prext\"), PreauthEvents.PreauthExtendRequest, data, true);\n    }\n  }]);\n\n  return PreauthExtendRequest;\n}();\nvar PreauthCancelRequest =\n/*#__PURE__*/\nfunction () {\n  function PreauthCancelRequest(preauthId, posRefId) {\n    _classCallCheck(this, PreauthCancelRequest);\n\n    this.PreauthId = preauthId;\n    this.PosRefId = posRefId;\n  }\n\n  _createClass(PreauthCancelRequest, [{\n    key: \"ToMessage\",\n    value: function ToMessage() {\n      var data = {\n        \"pos_ref_id\": this.PosRefId,\n        \"preauth_id\": this.PreauthId\n      };\n      return new _Messages__WEBPACK_IMPORTED_MODULE_1__[\"Message\"](_RequestIdHelper__WEBPACK_IMPORTED_MODULE_0__[\"RequestIdHelper\"].Id(\"prac\"), PreauthEvents.PreauthCancellationRequest, data, true);\n    }\n  }]);\n\n  return PreauthCancelRequest;\n}();\nvar PreauthCompletionRequest =\n/*#__PURE__*/\nfunction () {\n  function PreauthCompletionRequest(preauthId, completionAmountCents, posRefId, surchargeAmount) {\n    _classCallCheck(this, PreauthCompletionRequest);\n\n    this.PreauthId = preauthId;\n    this.CompletionAmount = completionAmountCents;\n    this.PosRefId = posRefId;\n    this.SurchargeAmount = surchargeAmount;\n  }\n\n  _createClass(PreauthCompletionRequest, [{\n    key: \"ToMessage\",\n    value: function ToMessage() {\n      var data = {\n        \"pos_ref_id\": this.PosRefId,\n        \"preauth_id\": this.PreauthId,\n        \"completion_amount\": this.CompletionAmount,\n        \"surcharge_amount\": this.SurchargeAmount\n      };\n      return new _Messages__WEBPACK_IMPORTED_MODULE_1__[\"Message\"](_RequestIdHelper__WEBPACK_IMPORTED_MODULE_0__[\"RequestIdHelper\"].Id(\"prac\"), PreauthEvents.PreauthCompleteRequest, data, true);\n    }\n  }]);\n\n  return PreauthCompletionRequest;\n}();\nvar PreauthResponse =\n/*#__PURE__*/\nfunction () {\n  function PreauthResponse(m) {\n    _classCallCheck(this, PreauthResponse);\n\n    this.PreauthId = m.Data[\"preauth_id\"];\n    this.Details = new _Purchase__WEBPACK_IMPORTED_MODULE_2__[\"PurchaseResponse\"](m);\n    this.PosRefId = this.Details.PosRefId;\n    this._m = m;\n  }\n\n  _createClass(PreauthResponse, [{\n    key: \"GetBalanceAmount\",\n    value: function GetBalanceAmount() {\n      var txType = this._m.Data[\"transaction_type\"];\n\n      switch (txType) {\n        case \"PRE-AUTH\":\n          return this._m.Data[\"preauth_amount\"];\n\n        case \"TOPUP\":\n          return this._m.Data[\"balance_amount\"];\n\n        case \"CANCEL\":\n          // PARTIAL CANCELLATION\n          return this._m.Data[\"balance_amount\"];\n\n        case \"PRE-AUTH EXT\":\n          return this._m.Data[\"balance_amount\"];\n\n        case \"PCOMP\":\n          return 0;\n        // Balance is 0 after completion\n\n        case \"PRE-AUTH CANCEL\":\n          return 0;\n        // Balance is 0 after cancellation\n\n        default:\n          return 0;\n      }\n    }\n  }, {\n    key: \"GetPreviousBalanceAmount\",\n    value: function GetPreviousBalanceAmount() {\n      var txType = this._m.Data[\"transaction_type\"];\n\n      switch (txType) {\n        case \"PRE-AUTH\":\n          return 0;\n\n        case \"TOPUP\":\n          return this._m.Data[\"existing_preauth_amount\"];\n\n        case \"CANCEL\":\n          // PARTIAL CANCELLATION\n          return this._m.Data[\"existing_preauth_amount\"];\n\n        case \"PRE-AUTH EXT\":\n          return this._m.Data[\"existing_preauth_amount\"];\n\n        case \"PCOMP\":\n          // THIS IS TECHNICALLY NOT CORRECT WHEN COMPLETION HAPPENS FOR A PARTIAL AMOUNT.\n          // BUT UNFORTUNATELY, THIS RESPONSE DOES NOT CONTAIN \"existing_preauth_amount\".\n          // SO \"completion_amount\" IS THE CLOSEST WE HAVE.\n          return this._m.Data[\"completion_amount\"];\n\n        case \"PRE-AUTH CANCEL\":\n          return this._m.Data[\"preauth_amount\"];\n\n        default:\n          return 0;\n      }\n    }\n  }, {\n    key: \"GetCompletionAmount\",\n    value: function GetCompletionAmount() {\n      var txType = this._m.Data[\"transaction_type\"];\n\n      switch (txType) {\n        case \"PCOMP\":\n          return this._m.Data[\"completion_amount\"];\n\n        default:\n          return 0;\n      }\n    }\n  }, {\n    key: \"GetSurchargeAmount\",\n    value: function GetSurchargeAmount() {\n      var txType = this._m.Data[\"transaction_type\"];\n\n      switch (txType) {\n        case \"PCOMP\":\n          return this._m.Data[\"surcharge_amount\"];\n\n        default:\n          return 0;\n      }\n    }\n  }]);\n\n  return PreauthResponse;\n}();\n\n/***/ }),\n\n/***/ \"./src/Printing.js\":\n/*!*************************!*\\\n  !*** ./src/Printing.js ***!\n  \\*************************/\n/*! exports provided: PrintingRequest, PrintingResponse, Printer */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"PrintingRequest\", function() { return PrintingRequest; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"PrintingResponse\", function() { return PrintingResponse; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Printer\", function() { return Printer; });\n/* harmony import */ var _Messages__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Messages */ \"./src/Messages.js\");\n/* harmony import */ var _RequestIdHelper__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./RequestIdHelper */ \"./src/RequestIdHelper.js\");\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n\n\nvar PrintingRequest =\n/*#__PURE__*/\nfunction () {\n  function PrintingRequest(key, payload) {\n    _classCallCheck(this, PrintingRequest);\n\n    this._key = key;\n    this._payload = payload;\n  }\n\n  _createClass(PrintingRequest, [{\n    key: \"toMessage\",\n    value: function toMessage() {\n      var data = {\n        \"key\": this._key,\n        \"payload\": this._payload\n      };\n      return new _Messages__WEBPACK_IMPORTED_MODULE_0__[\"Message\"](_RequestIdHelper__WEBPACK_IMPORTED_MODULE_1__[\"RequestIdHelper\"].Id(\"print\"), _Messages__WEBPACK_IMPORTED_MODULE_0__[\"Events\"].PrintingRequest, data, true);\n    }\n  }]);\n\n  return PrintingRequest;\n}();\nvar PrintingResponse =\n/*#__PURE__*/\nfunction () {\n  function PrintingResponse(m) {\n    _classCallCheck(this, PrintingResponse);\n\n    this._success = m.GetSuccessState() == _Messages__WEBPACK_IMPORTED_MODULE_0__[\"SuccessState\"].Success;\n    this._m = m;\n  }\n\n  _createClass(PrintingResponse, [{\n    key: \"isSuccess\",\n    value: function isSuccess() {\n      return this._success;\n    }\n  }, {\n    key: \"getErrorReason\",\n    value: function getErrorReason() {\n      return this._m.Data.error_reason;\n    }\n  }, {\n    key: \"getErrorDetail\",\n    value: function getErrorDetail() {\n      return this._m.Data.error_detail;\n    }\n  }, {\n    key: \"getResponseValueWithAttribute\",\n    value: function getResponseValueWithAttribute(attribute) {\n      return this._m.Data[attribute];\n    }\n  }]);\n\n  return PrintingResponse;\n}();\n/**\r\n * This class is a mock printer for the terminal to print Receipts\r\n */\n\nvar Printer =\n/*#__PURE__*/\nfunction () {\n  function Printer(element) {\n    _classCallCheck(this, Printer);\n\n    this.buffer = [];\n    this.element = element;\n  }\n\n  _createClass(Printer, [{\n    key: \"print\",\n    value: function print() {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      this.buffer.push(args.join(' '));\n\n      this._render();\n    }\n  }, {\n    key: \"_render\",\n    value: function _render() {\n      this.element.innerText = this.buffer.join(\"\\n\\n \\\\/\\\\/\\\\/\\\\/\\\\/\\\\/\\\\/\\\\/\\\\/\\\\/\\\\/\\\\/\\\\/\\\\/\\\\/ \\n\\n\");\n      this.element.scrollTop = this.element.scrollHeight;\n    }\n  }, {\n    key: \"Clear\",\n    value: function Clear() {\n      this.buffer = [];\n\n      this._render();\n    }\n  }]);\n\n  return Printer;\n}();\n\n/***/ }),\n\n/***/ \"./src/Purchase.js\":\n/*!*************************!*\\\n  !*** ./src/Purchase.js ***!\n  \\*************************/\n/*! exports provided: PurchaseRequest, PurchaseResponse, CancelTransactionRequest, CancelTransactionResponse, GetLastTransactionRequest, GetLastTransactionResponse, RefundRequest, RefundResponse, SignatureRequired, SignatureDecline, SignatureAccept, MotoPurchaseRequest, MotoPurchaseResponse, PhoneForAuthRequired, AuthCodeAdvice */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"PurchaseRequest\", function() { return PurchaseRequest; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"PurchaseResponse\", function() { return PurchaseResponse; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CancelTransactionRequest\", function() { return CancelTransactionRequest; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CancelTransactionResponse\", function() { return CancelTransactionResponse; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"GetLastTransactionRequest\", function() { return GetLastTransactionRequest; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"GetLastTransactionResponse\", function() { return GetLastTransactionResponse; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"RefundRequest\", function() { return RefundRequest; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"RefundResponse\", function() { return RefundResponse; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SignatureRequired\", function() { return SignatureRequired; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SignatureDecline\", function() { return SignatureDecline; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SignatureAccept\", function() { return SignatureAccept; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MotoPurchaseRequest\", function() { return MotoPurchaseRequest; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MotoPurchaseResponse\", function() { return MotoPurchaseResponse; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"PhoneForAuthRequired\", function() { return PhoneForAuthRequired; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"AuthCodeAdvice\", function() { return AuthCodeAdvice; });\n/* harmony import */ var _Messages__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Messages */ \"./src/Messages.js\");\n/* harmony import */ var _RequestIdHelper__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./RequestIdHelper */ \"./src/RequestIdHelper.js\");\n/* harmony import */ var _SpiModels__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./SpiModels */ \"./src/SpiModels.js\");\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n\n\n\nvar PurchaseRequest =\n/*#__PURE__*/\nfunction () {\n  function PurchaseRequest(amountCents, posRefId) {\n    _classCallCheck(this, PurchaseRequest);\n\n    this.PosRefId = posRefId;\n    this.PurchaseAmount = amountCents;\n    this.TipAmount = 0;\n    this.CashoutAmount = 0;\n    this.PromptForCashout = false;\n    this.SurchargeAmount = 0;\n    this.Config = new _SpiModels__WEBPACK_IMPORTED_MODULE_2__[\"SpiConfig\"]();\n    this.Options = new _SpiModels__WEBPACK_IMPORTED_MODULE_2__[\"TransactionOptions\"](); // Library Backwards Compatibility\n\n    this.Id = posRefId;\n    this.AmountCents = amountCents;\n  }\n\n  _createClass(PurchaseRequest, [{\n    key: \"AmountSummary\",\n    value: function AmountSummary() {\n      return \"Purchase: \".concat((this.PurchaseAmount / 100.0).toFixed(2), \"; \\n            Tip: \").concat((this.TipAmount / 100.0).toFixed(2), \"; \\n            Cashout: \").concat((this.CashoutAmount / 100.0).toFixed(2), \";\");\n    }\n  }, {\n    key: \"ToMessage\",\n    value: function ToMessage() {\n      var data = {\n        pos_ref_id: this.PosRefId,\n        purchase_amount: this.PurchaseAmount,\n        tip_amount: this.TipAmount,\n        cash_amount: this.CashoutAmount,\n        prompt_for_cashout: this.PromptForCashout,\n        surcharge_amount: this.SurchargeAmount\n      };\n      this.Config.addReceiptConfig(data);\n      this.Options.AddOptions(data);\n      return new _Messages__WEBPACK_IMPORTED_MODULE_0__[\"Message\"](_RequestIdHelper__WEBPACK_IMPORTED_MODULE_1__[\"RequestIdHelper\"].Id(\"prchs\"), _Messages__WEBPACK_IMPORTED_MODULE_0__[\"Events\"].PurchaseRequest, data, true);\n    }\n  }]);\n\n  return PurchaseRequest;\n}();\nvar PurchaseResponse =\n/*#__PURE__*/\nfunction () {\n  function PurchaseResponse(m) {\n    _classCallCheck(this, PurchaseResponse);\n\n    this._m = m;\n    this.RequestId = m.Id;\n    this.PosRefId = m.Data.pos_ref_id;\n    this.SchemeName = m.Data.scheme_name;\n    this.SchemeAppName = m.Data.scheme_name;\n    this.Success = m.GetSuccessState() == _Messages__WEBPACK_IMPORTED_MODULE_0__[\"SuccessState\"].Success;\n  }\n\n  _createClass(PurchaseResponse, [{\n    key: \"GetRRN\",\n    value: function GetRRN() {\n      return this._m.Data.rrn;\n    }\n  }, {\n    key: \"GetPurchaseAmount\",\n    value: function GetPurchaseAmount() {\n      return this._m.Data.purchase_amount;\n    }\n  }, {\n    key: \"GetTipAmount\",\n    value: function GetTipAmount() {\n      return this._m.Data.tip_amount;\n    }\n  }, {\n    key: \"GetSurchargeAmount\",\n    value: function GetSurchargeAmount() {\n      return this._m.Data.surcharge_amount;\n    }\n  }, {\n    key: \"GetCashoutAmount\",\n    value: function GetCashoutAmount() {\n      return this._m.Data.cash_amount;\n    }\n  }, {\n    key: \"GetBankNonCashAmount\",\n    value: function GetBankNonCashAmount() {\n      return this._m.Data.bank_noncash_amount;\n    }\n  }, {\n    key: \"GetBankCashAmount\",\n    value: function GetBankCashAmount() {\n      return this._m.Data.bank_cash_amount;\n    }\n  }, {\n    key: \"GetCustomerReceipt\",\n    value: function GetCustomerReceipt() {\n      return this._m.Data.customer_receipt || \"\";\n    }\n  }, {\n    key: \"GetMerchantReceipt\",\n    value: function GetMerchantReceipt() {\n      return this._m.Data.merchant_receipt || \"\";\n    }\n  }, {\n    key: \"GetResponseText\",\n    value: function GetResponseText() {\n      return this._m.Data.host_response_text || \"\";\n    }\n  }, {\n    key: \"GetResponseCode\",\n    value: function GetResponseCode() {\n      return this._m.Data.host_response_code;\n    }\n  }, {\n    key: \"GetTerminalReferenceId\",\n    value: function GetTerminalReferenceId() {\n      return this._m.Data.terminal_ref_id;\n    }\n  }, {\n    key: \"GetCardEntry\",\n    value: function GetCardEntry() {\n      return this._m.Data.card_entry;\n    }\n  }, {\n    key: \"GetAccountType\",\n    value: function GetAccountType() {\n      return this._m.Data.account_type;\n    }\n  }, {\n    key: \"GetAuthCode\",\n    value: function GetAuthCode() {\n      return this._m.Data.auth_code;\n    }\n  }, {\n    key: \"GetBankDate\",\n    value: function GetBankDate() {\n      return this._m.Data.bank_date;\n    }\n  }, {\n    key: \"GetBankTime\",\n    value: function GetBankTime() {\n      return this._m.Data.bank_time;\n    }\n  }, {\n    key: \"GetMaskedPan\",\n    value: function GetMaskedPan() {\n      return this._m.Data.masked_pan;\n    }\n  }, {\n    key: \"GetTerminalId\",\n    value: function GetTerminalId() {\n      return this._m.Data.terminal_id;\n    }\n  }, {\n    key: \"WasMerchantReceiptPrinted\",\n    value: function WasMerchantReceiptPrinted() {\n      return this._m.Data.merchant_receipt_printed;\n    }\n  }, {\n    key: \"WasCustomerReceiptPrinted\",\n    value: function WasCustomerReceiptPrinted() {\n      return this._m.Data.customer_receipt_printed;\n    }\n  }, {\n    key: \"GetSettlementDate\",\n    value: function GetSettlementDate() {\n      //\"bank_settlement_date\":\"20042018\"\n      var dateStr = this._m.Data.bank_settlement_date;\n      if (!dateStr) return null;\n      return _Messages__WEBPACK_IMPORTED_MODULE_0__[\"Message\"].ParseBankDate(dateStr);\n    }\n  }, {\n    key: \"GetResponseValue\",\n    value: function GetResponseValue(attribute) {\n      return this._m.Data[attribute];\n    }\n  }, {\n    key: \"ToPaymentSummary\",\n    value: function ToPaymentSummary() {\n      return {\n        account_type: this.GetAccountType(),\n        auth_code: this.GetAuthCode(),\n        bank_date: this.GetBankDate(),\n        bank_time: this.GetBankTime(),\n        host_response_code: this.GetResponseCode(),\n        host_response_text: this.GetResponseText(),\n        masked_pan: this.GetMaskedPan(),\n        purchase_amount: this.GetPurchaseAmount(),\n        rrn: this.GetRRN(),\n        scheme_name: this.SchemeName,\n        terminal_id: this.GetTerminalId(),\n        terminal_ref_id: this.GetTerminalReferenceId(),\n        tip_amount: this.GetTipAmount(),\n        surcharge_amount: this.GetSurchargeAmount()\n      };\n    }\n  }]);\n\n  return PurchaseResponse;\n}();\nvar CancelTransactionRequest =\n/*#__PURE__*/\nfunction () {\n  function CancelTransactionRequest() {\n    _classCallCheck(this, CancelTransactionRequest);\n  }\n\n  _createClass(CancelTransactionRequest, [{\n    key: \"ToMessage\",\n    value: function ToMessage() {\n      return new _Messages__WEBPACK_IMPORTED_MODULE_0__[\"Message\"](_RequestIdHelper__WEBPACK_IMPORTED_MODULE_1__[\"RequestIdHelper\"].Id(\"ctx\"), _Messages__WEBPACK_IMPORTED_MODULE_0__[\"Events\"].CancelTransactionRequest, null, true);\n    }\n  }]);\n\n  return CancelTransactionRequest;\n}();\nvar CancelTransactionResponse =\n/*#__PURE__*/\nfunction () {\n  function CancelTransactionResponse(m) {\n    _classCallCheck(this, CancelTransactionResponse);\n\n    this._m = m;\n    this.PosRefId = this._m.Data.pos_ref_id;\n    this.Success = this._m.GetSuccessState() == _Messages__WEBPACK_IMPORTED_MODULE_0__[\"SuccessState\"].Success;\n  }\n\n  _createClass(CancelTransactionResponse, [{\n    key: \"GetErrorReason\",\n    value: function GetErrorReason() {\n      return this._m.Data.error_reason;\n    }\n  }, {\n    key: \"GetErrorDetail\",\n    value: function GetErrorDetail() {\n      return this._m.Data.error_detail;\n    }\n  }, {\n    key: \"GetResponseValueWithAttribute\",\n    value: function GetResponseValueWithAttribute(attribute) {\n      return this._m.Data[attribute];\n    }\n  }]);\n\n  return CancelTransactionResponse;\n}();\nvar GetLastTransactionRequest =\n/*#__PURE__*/\nfunction () {\n  function GetLastTransactionRequest() {\n    _classCallCheck(this, GetLastTransactionRequest);\n  }\n\n  _createClass(GetLastTransactionRequest, [{\n    key: \"ToMessage\",\n    value: function ToMessage() {\n      return new _Messages__WEBPACK_IMPORTED_MODULE_0__[\"Message\"](_RequestIdHelper__WEBPACK_IMPORTED_MODULE_1__[\"RequestIdHelper\"].Id(\"glt\"), _Messages__WEBPACK_IMPORTED_MODULE_0__[\"Events\"].GetLastTransactionRequest, null, true);\n    }\n  }]);\n\n  return GetLastTransactionRequest;\n}();\nvar GetLastTransactionResponse =\n/*#__PURE__*/\nfunction () {\n  function GetLastTransactionResponse(m) {\n    _classCallCheck(this, GetLastTransactionResponse);\n\n    this._m = m;\n  }\n\n  _createClass(GetLastTransactionResponse, [{\n    key: \"WasRetrievedSuccessfully\",\n    value: function WasRetrievedSuccessfully() {\n      // We can't rely on checking \"success\" flag or \"error\" fields here,\n      // as retrieval may be successful, but the retrieved transaction was a fail.\n      // So we check if we got back an ResponseCode.\n      // (as opposed to say an operation_in_progress_error)\n      return !!this.GetResponseCode();\n    }\n  }, {\n    key: \"WasTimeOutOfSyncError\",\n    value: function WasTimeOutOfSyncError() {\n      return this._m.GetError().startsWith(\"TIME_OUT_OF_SYNC\");\n    }\n  }, {\n    key: \"WasOperationInProgressError\",\n    value: function WasOperationInProgressError() {\n      return this._m.GetError().startsWith(\"OPERATION_IN_PROGRESS\");\n    }\n  }, {\n    key: \"IsWaitingForSignatureResponse\",\n    value: function IsWaitingForSignatureResponse() {\n      return this._m.GetError().startsWith(\"OPERATION_IN_PROGRESS_AWAITING_SIGNATURE\");\n    }\n  }, {\n    key: \"IsWaitingForAuthCode\",\n    value: function IsWaitingForAuthCode() {\n      return this._m.GetError().startsWith(\"OPERATION_IN_PROGRESS_AWAITING_PHONE_AUTH_CODE\");\n    }\n  }, {\n    key: \"IsStillInProgress\",\n    value: function IsStillInProgress(posRefId) {\n      return this.WasOperationInProgressError() && this.GetPosRefId() == posRefId;\n    }\n  }, {\n    key: \"GetSuccessState\",\n    value: function GetSuccessState() {\n      return this._m.GetSuccessState();\n    }\n  }, {\n    key: \"WasSuccessfulTx\",\n    value: function WasSuccessfulTx() {\n      return this._m.GetSuccessState() == _Messages__WEBPACK_IMPORTED_MODULE_0__[\"SuccessState\"].Success;\n    }\n  }, {\n    key: \"GetTxType\",\n    value: function GetTxType() {\n      return this._m.Data.transaction_type;\n    }\n  }, {\n    key: \"GetPosRefId\",\n    value: function GetPosRefId() {\n      return this._m.Data.pos_ref_id;\n    }\n  }, {\n    key: \"GetSchemeApp\",\n    value: function GetSchemeApp() {\n      return this._m.Data.scheme_name;\n    }\n  }, {\n    key: \"GetSchemeName\",\n    value: function GetSchemeName() {\n      return this._m.Data.scheme_name;\n    }\n  }, {\n    key: \"GetAmount\",\n    value: function GetAmount() {\n      return this._m.Data.amount_purchase;\n    }\n  }, {\n    key: \"GetTransactionAmount\",\n    value: function GetTransactionAmount() {\n      return this._m.Data.amount_transaction_type;\n    }\n  }, {\n    key: \"GetBankDateTimeString\",\n    value: function GetBankDateTimeString() {\n      var ds = this._m.Data.bank_date + this._m.Data.bank_time;\n      return ds;\n    }\n  }, {\n    key: \"GetRRN\",\n    value: function GetRRN() {\n      return this._m.Data.rrn;\n    }\n  }, {\n    key: \"GetResponseText\",\n    value: function GetResponseText() {\n      return this._m.Data.host_response_text | \"\";\n    }\n  }, {\n    key: \"GetResponseCode\",\n    value: function GetResponseCode() {\n      return this._m.Data.host_response_code;\n    } // <summary>\n    // There is a bug, VSV-920, whereby the customer_receipt is missing from a glt response.\n    // The current recommendation is to use the merchant receipt in place of it if required.\n    // This method modifies the underlying incoming message data by copying\n    // the merchant receipt into the customer receipt only if there \n    // is a merchant_receipt and there is not a customer_receipt.   \n    // </summary>\n\n  }, {\n    key: \"CopyMerchantReceiptToCustomerReceipt\",\n    value: function CopyMerchantReceiptToCustomerReceipt() {\n      var cr = this._m.Data.customer_receipt;\n      var mr = this._m.Data.merchant_receipt;\n\n      if (mr != \"\" && !cr) {\n        this._m.Data.customer_receipt = mr;\n      }\n    }\n  }]);\n\n  return GetLastTransactionResponse;\n}();\nvar RefundRequest =\n/*#__PURE__*/\nfunction () {\n  function RefundRequest(amountCents, posRefId, isSuppressMerchantPassword) {\n    _classCallCheck(this, RefundRequest);\n\n    this.AmountCents = amountCents;\n    this.Id = _RequestIdHelper__WEBPACK_IMPORTED_MODULE_1__[\"RequestIdHelper\"].Id(\"refund\");\n    this.PosRefId = posRefId;\n    this.IsSuppressMerchantPassword = isSuppressMerchantPassword;\n    this.Config = new _SpiModels__WEBPACK_IMPORTED_MODULE_2__[\"SpiConfig\"]();\n    this.Options = new _SpiModels__WEBPACK_IMPORTED_MODULE_2__[\"TransactionOptions\"]();\n  }\n\n  _createClass(RefundRequest, [{\n    key: \"ToMessage\",\n    value: function ToMessage() {\n      var data = {\n        refund_amount: this.AmountCents,\n        pos_ref_id: this.PosRefId,\n        suppress_merchant_password: this.IsSuppressMerchantPassword\n      };\n      this.Config.addReceiptConfig(data); // this.Options.AddOptions(data);\n\n      return new _Messages__WEBPACK_IMPORTED_MODULE_0__[\"Message\"](_RequestIdHelper__WEBPACK_IMPORTED_MODULE_1__[\"RequestIdHelper\"].Id(\"refund\"), _Messages__WEBPACK_IMPORTED_MODULE_0__[\"Events\"].RefundRequest, data, true);\n    }\n  }]);\n\n  return RefundRequest;\n}();\nvar RefundResponse =\n/*#__PURE__*/\nfunction () {\n  function RefundResponse(m) {\n    _classCallCheck(this, RefundResponse);\n\n    this._m = m;\n    this.RequestId = m.Id;\n    this.PosRefId = m.Data.pos_ref_id;\n    this.SchemeName = m.Data.scheme_name;\n    this.SchemeAppName = m.Data.scheme_name;\n    this.Success = m.GetSuccessState() == _Messages__WEBPACK_IMPORTED_MODULE_0__[\"SuccessState\"].Success;\n  }\n\n  _createClass(RefundResponse, [{\n    key: \"GetRefundAmount\",\n    value: function GetRefundAmount() {\n      return this._m.Data.refund_amount;\n    }\n  }, {\n    key: \"GetRRN\",\n    value: function GetRRN() {\n      return this._m.Data.rrn;\n    }\n  }, {\n    key: \"GetCustomerReceipt\",\n    value: function GetCustomerReceipt() {\n      return this._m.Data.customer_receipt || \"\";\n    }\n  }, {\n    key: \"GetMerchantReceipt\",\n    value: function GetMerchantReceipt() {\n      return this._m.Data.merchant_receipt;\n    }\n  }, {\n    key: \"GetResponseText\",\n    value: function GetResponseText() {\n      return this._m.Data.host_response_text || \"\";\n    }\n  }, {\n    key: \"GetResponseCode\",\n    value: function GetResponseCode() {\n      return this._m.Data.host_response_code || \"\";\n    }\n  }, {\n    key: \"GetTerminalReferenceId\",\n    value: function GetTerminalReferenceId() {\n      return this._m.Data.terminal_ref_id || \"\";\n    }\n  }, {\n    key: \"GetCardEntry\",\n    value: function GetCardEntry() {\n      return this._m.Data.card_entry || \"\";\n    }\n  }, {\n    key: \"GetAccountType\",\n    value: function GetAccountType() {\n      return this._m.Data.account_type || \"\";\n    }\n  }, {\n    key: \"GetAuthCode\",\n    value: function GetAuthCode() {\n      return this._m.Data.auth_code || \"\";\n    }\n  }, {\n    key: \"GetBankDate\",\n    value: function GetBankDate() {\n      return this._m.Data.bank_date || \"\";\n    }\n  }, {\n    key: \"GetBankTime\",\n    value: function GetBankTime() {\n      return this._m.Data.bank_time || \"\";\n    }\n  }, {\n    key: \"GetMaskedPan\",\n    value: function GetMaskedPan() {\n      return this._m.Data.masked_pan || \"\";\n    }\n  }, {\n    key: \"GetTerminalId\",\n    value: function GetTerminalId() {\n      return this._m.Data.terminal_id || \"\";\n    }\n  }, {\n    key: \"WasMerchantReceiptPrinted\",\n    value: function WasMerchantReceiptPrinted() {\n      return this._m.Data.merchant_receipt_printed;\n    }\n  }, {\n    key: \"WasCustomerReceiptPrinted\",\n    value: function WasCustomerReceiptPrinted() {\n      return this._m.Data.customer_receipt_printed;\n    }\n  }, {\n    key: \"GetSettlementDate\",\n    value: function GetSettlementDate() {\n      //\"bank_settlement_date\":\"20042018\"\n      var dateStr = this._m.Data.bank_settlement_date;\n      if (!dateStr) return null;\n      return _Messages__WEBPACK_IMPORTED_MODULE_0__[\"Message\"].ParseBankDate(dateStr);\n    }\n  }, {\n    key: \"GetResponseValue\",\n    value: function GetResponseValue(attribute) {\n      return this._m.Data[attribute];\n    }\n  }]);\n\n  return RefundResponse;\n}();\nvar SignatureRequired =\n/*#__PURE__*/\nfunction () {\n  function SignatureRequired(m) {\n    _classCallCheck(this, SignatureRequired);\n\n    this.RequestId = m.Id;\n    this.PosRefId = m.Data.pos_ref_id;\n    this._receiptToSign = m.Data.merchant_receipt;\n  }\n\n  _createClass(SignatureRequired, [{\n    key: \"SignatureRequired\",\n    value: function SignatureRequired(posRefId, requestId, receiptToSign) {\n      this.RequestId = requestId;\n      this.PosRefId = posRefId;\n      this._receiptToSign = receiptToSign;\n    }\n  }, {\n    key: \"GetMerchantReceipt\",\n    value: function GetMerchantReceipt() {\n      return this._receiptToSign;\n    }\n  }]);\n\n  return SignatureRequired;\n}();\nvar SignatureDecline =\n/*#__PURE__*/\nfunction () {\n  function SignatureDecline(posRefId) {\n    _classCallCheck(this, SignatureDecline);\n\n    this.PosRefId = posRefId;\n  }\n\n  _createClass(SignatureDecline, [{\n    key: \"ToMessage\",\n    value: function ToMessage() {\n      var data = {\n        pos_ref_id: this.PosRefId\n      };\n      return new _Messages__WEBPACK_IMPORTED_MODULE_0__[\"Message\"](_RequestIdHelper__WEBPACK_IMPORTED_MODULE_1__[\"RequestIdHelper\"].Id(\"sigdec\"), _Messages__WEBPACK_IMPORTED_MODULE_0__[\"Events\"].SignatureDeclined, data, true);\n    }\n  }]);\n\n  return SignatureDecline;\n}();\nvar SignatureAccept =\n/*#__PURE__*/\nfunction () {\n  function SignatureAccept(posRefId) {\n    _classCallCheck(this, SignatureAccept);\n\n    this.PosRefId = posRefId;\n  }\n\n  _createClass(SignatureAccept, [{\n    key: \"ToMessage\",\n    value: function ToMessage() {\n      var data = {\n        pos_ref_id: this.PosRefId\n      };\n      return new _Messages__WEBPACK_IMPORTED_MODULE_0__[\"Message\"](_RequestIdHelper__WEBPACK_IMPORTED_MODULE_1__[\"RequestIdHelper\"].Id(\"sigacc\"), _Messages__WEBPACK_IMPORTED_MODULE_0__[\"Events\"].SignatureAccepted, data, true);\n    }\n  }]);\n\n  return SignatureAccept;\n}();\nvar MotoPurchaseRequest =\n/*#__PURE__*/\nfunction () {\n  function MotoPurchaseRequest(amountCents, posRefId, surchargeAmount) {\n    _classCallCheck(this, MotoPurchaseRequest);\n\n    this.PosRefId = posRefId;\n    this.PurchaseAmount = amountCents;\n    this.SurchargeAmount = surchargeAmount;\n    this.Config = new _SpiModels__WEBPACK_IMPORTED_MODULE_2__[\"SpiConfig\"]();\n    this.Options = new _SpiModels__WEBPACK_IMPORTED_MODULE_2__[\"TransactionOptions\"]();\n  }\n\n  _createClass(MotoPurchaseRequest, [{\n    key: \"ToMessage\",\n    value: function ToMessage() {\n      var data = {\n        pos_ref_id: this.PosRefId,\n        purchase_amount: this.PurchaseAmount,\n        surcharge_amount: this.SurchargeAmount\n      };\n      this.Config.addReceiptConfig(data);\n      return new _Messages__WEBPACK_IMPORTED_MODULE_0__[\"Message\"](_RequestIdHelper__WEBPACK_IMPORTED_MODULE_1__[\"RequestIdHelper\"].Id(\"moto\"), _Messages__WEBPACK_IMPORTED_MODULE_0__[\"Events\"].MotoPurchaseRequest, data, true);\n    }\n  }]);\n\n  return MotoPurchaseRequest;\n}();\nvar MotoPurchaseResponse = function MotoPurchaseResponse(m) {\n  _classCallCheck(this, MotoPurchaseResponse);\n\n  this.PurchaseResponse = new PurchaseResponse(m);\n  this.PosRefId = PurchaseResponse.PosRefId;\n};\nvar PhoneForAuthRequired =\n/*#__PURE__*/\nfunction () {\n  function PhoneForAuthRequired() {\n    _classCallCheck(this, PhoneForAuthRequired);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    if (args.length === 4) {\n      this.PosRefId = args[0];\n      this.RequestId = args[1];\n      this._phoneNumber = args[2];\n      this._merchantId = args[3];\n    } else if (args.length === 1) {\n      this.RequestId = args[0].Id;\n      this.PosRefId = args[0].Data.pos_ref_id;\n      this._phoneNumber = args[0].Data.auth_centre_phone_number;\n      this._merchantId = args[0].Data.merchant_id;\n    } else {\n      throw new Error('Invalid call sig for Phone auth required class');\n    }\n  }\n\n  _createClass(PhoneForAuthRequired, [{\n    key: \"GetPhoneNumber\",\n    value: function GetPhoneNumber() {\n      return this._phoneNumber;\n    }\n  }, {\n    key: \"GetMerchantId\",\n    value: function GetMerchantId() {\n      return this._merchantId;\n    }\n  }]);\n\n  return PhoneForAuthRequired;\n}();\nvar AuthCodeAdvice =\n/*#__PURE__*/\nfunction () {\n  function AuthCodeAdvice(posRefId, authCode) {\n    _classCallCheck(this, AuthCodeAdvice);\n\n    this.PosRefId = posRefId;\n    this.AuthCode = authCode;\n  }\n\n  _createClass(AuthCodeAdvice, [{\n    key: \"ToMessage\",\n    value: function ToMessage() {\n      var data = {\n        pos_ref_id: this.PosRefId,\n        auth_code: this.AuthCode\n      };\n      return new _Messages__WEBPACK_IMPORTED_MODULE_0__[\"Message\"](_RequestIdHelper__WEBPACK_IMPORTED_MODULE_1__[\"RequestIdHelper\"].Id(\"authad\"), _Messages__WEBPACK_IMPORTED_MODULE_0__[\"Events\"].AuthCodeAdvice, data, true);\n    }\n  }]);\n\n  return AuthCodeAdvice;\n}();\n\n/***/ }),\n\n/***/ \"./src/PurchaseHelper.js\":\n/*!*******************************!*\\\n  !*** ./src/PurchaseHelper.js ***!\n  \\*******************************/\n/*! exports provided: PurchaseHelper */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"PurchaseHelper\", function() { return PurchaseHelper; });\n/* harmony import */ var _Purchase__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Purchase */ \"./src/Purchase.js\");\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n\nvar PurchaseHelper =\n/*#__PURE__*/\nfunction () {\n  function PurchaseHelper() {\n    _classCallCheck(this, PurchaseHelper);\n  }\n\n  _createClass(PurchaseHelper, null, [{\n    key: \"CreatePurchaseRequest\",\n    value: function CreatePurchaseRequest(amountCents, purchaseId) {\n      return new _Purchase__WEBPACK_IMPORTED_MODULE_0__[\"PurchaseRequest\"](amountCents, purchaseId);\n    }\n  }, {\n    key: \"CreatePurchaseRequestV2\",\n    value: function CreatePurchaseRequestV2(posRefId, purchaseAmount, tipAmount, cashoutAmount, promptForCashout, surchargeAmount) {\n      var pr = Object.assign(new _Purchase__WEBPACK_IMPORTED_MODULE_0__[\"PurchaseRequest\"](purchaseAmount, posRefId), {\n        CashoutAmount: cashoutAmount,\n        TipAmount: tipAmount,\n        PromptForCashout: promptForCashout,\n        SurchargeAmount: surchargeAmount\n      });\n      return pr;\n    }\n  }, {\n    key: \"CreateRefundRequest\",\n    value: function CreateRefundRequest(amountCents, purchaseId, isSuppressMerchantPassword) {\n      return new _Purchase__WEBPACK_IMPORTED_MODULE_0__[\"RefundRequest\"](amountCents, purchaseId, isSuppressMerchantPassword);\n    }\n  }]);\n\n  return PurchaseHelper;\n}();\n\n/***/ }),\n\n/***/ \"./src/RequestIdHelper.js\":\n/*!********************************!*\\\n  !*** ./src/RequestIdHelper.js ***!\n  \\********************************/\n/*! exports provided: RequestIdHelper */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"RequestIdHelper\", function() { return RequestIdHelper; });\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar __RequestIdHelperCounter = 1;\nvar RequestIdHelper =\n/*#__PURE__*/\nfunction () {\n  function RequestIdHelper() {\n    _classCallCheck(this, RequestIdHelper);\n  }\n\n  _createClass(RequestIdHelper, null, [{\n    key: \"Id\",\n    value: function Id(prefix) {\n      return prefix + __RequestIdHelperCounter++;\n    }\n  }]);\n\n  return RequestIdHelper;\n}();\n\n/***/ }),\n\n/***/ \"./src/Secrets.js\":\n/*!************************!*\\\n  !*** ./src/Secrets.js ***!\n  \\************************/\n/*! exports provided: Secrets */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Secrets\", function() { return Secrets; });\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar Secrets =\n/*#__PURE__*/\nfunction () {\n  function Secrets(encKey, hmacKey) {\n    _classCallCheck(this, Secrets);\n\n    this.EncKey = encKey;\n    this.HmacKey = hmacKey;\n  }\n\n  _createClass(Secrets, null, [{\n    key: \"save\",\n    value: function save(EncKey, HmacKey) {\n      localStorage.setItem('EncKey', EncKey);\n      localStorage.setItem('HmacKey', HmacKey);\n    }\n  }, {\n    key: \"restore\",\n    value: function restore() {\n      return new Secrets(localStorage.getItem('EncKey'), localStorage.getItem('HmacKey'));\n    }\n  }, {\n    key: \"isSaved\",\n    value: function isSaved() {\n      return localStorage.getItem('EncKey') && localStorage.getItem('HmacKey');\n    }\n  }, {\n    key: \"Reset\",\n    value: function Reset() {\n      localStorage.removeItem('EncKey');\n      localStorage.removeItem('HmacKey');\n    }\n  }]);\n\n  return Secrets;\n}();\n\n/***/ }),\n\n/***/ \"./src/Service/DeviceService.js\":\n/*!**************************************!*\\\n  !*** ./src/Service/DeviceService.js ***!\n  \\**************************************/\n/*! exports provided: DeviceAddressStatus, DeviceAddressService */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"DeviceAddressStatus\", function() { return DeviceAddressStatus; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"DeviceAddressService\", function() { return DeviceAddressService; });\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar DeviceAddressStatus =\n/*#__PURE__*/\nfunction () {\n  _createClass(DeviceAddressStatus, [{\n    key: \"Address\",\n    get: function get() {\n      if (this.UseSecureWebSockets) {\n        return this.fqdn;\n      } else {\n        return this.ip;\n      }\n    },\n    set: function set(address) {\n      if (this.UseSecureWebSockets) {\n        this.fqdn = addreses;\n      } else {\n        this.ip = address;\n      }\n    }\n  }]);\n\n  function DeviceAddressStatus(useSecureWebSockets) {\n    _classCallCheck(this, DeviceAddressStatus);\n\n    this.UseSecureWebSockets = useSecureWebSockets;\n    this.ip = null;\n    this.fqdn = null;\n    this.last_updated = null;\n  }\n\n  return DeviceAddressStatus;\n}();\nvar DeviceAddressService =\n/*#__PURE__*/\nfunction () {\n  function DeviceAddressService() {\n    _classCallCheck(this, DeviceAddressService);\n  }\n\n  _createClass(DeviceAddressService, [{\n    key: \"RetrieveService\",\n    // RetrieveService(serialNumber, apiKey = 'spi-sample-pos1', acquirerCode, useSecureWebSockets, isTestMode)\n    value: function RetrieveService(serialNumber) {\n      var apiKey = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'spi-sample-pos1';\n      var acquirerCode = arguments.length > 2 ? arguments[2] : undefined;\n      var isSecureConnection = arguments.length > 3 ? arguments[3] : undefined;\n      var isTestMode = arguments.length > 4 ? arguments[4] : undefined;\n      var log = arguments.length > 5 ? arguments[5] : undefined;\n      var path = isSecureConnection ? 'fqdn' : 'ip';\n      var deviceAddressUri = isTestMode ? \"https://device-address-api-sb.\".concat(acquirerCode, \".msp.assemblypayments.com/v1/\").concat(serialNumber, \"/\").concat(path) : \"https://device-address-api.\".concat(acquirerCode, \".msp.assemblypayments.com/v1/\").concat(serialNumber, \"/\").concat(path);\n      log.info('device address uri', deviceAddressUri);\n      return fetch(deviceAddressUri, {\n        method: 'GET',\n        headers: {\n          \"ASM-MSP-DEVICE-ADDRESS-API-KEY\": apiKey\n        }\n      }).then(function (response) {\n        return response.json();\n      }).catch(function (response) {\n        log.error(\"Status code \".concat(response.StatusCode, \" received from \").concat(deviceAddressUri, \" - Exception \").concat(response.error));\n      });\n    }\n  }]);\n\n  return DeviceAddressService;\n}();\n\n/***/ }),\n\n/***/ \"./src/Settlement.js\":\n/*!***************************!*\\\n  !*** ./src/Settlement.js ***!\n  \\***************************/\n/*! exports provided: SettleRequest, Settlement, SchemeSettlementEntry, SettlementEnquiryRequest */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SettleRequest\", function() { return SettleRequest; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Settlement\", function() { return Settlement; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SchemeSettlementEntry\", function() { return SchemeSettlementEntry; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SettlementEnquiryRequest\", function() { return SettlementEnquiryRequest; });\n/* harmony import */ var _Messages__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Messages */ \"./src/Messages.js\");\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n\nvar SettleRequest =\n/*#__PURE__*/\nfunction () {\n  function SettleRequest(id) {\n    _classCallCheck(this, SettleRequest);\n\n    this.Id = id;\n  }\n\n  _createClass(SettleRequest, [{\n    key: \"ToMessage\",\n    value: function ToMessage() {\n      return new _Messages__WEBPACK_IMPORTED_MODULE_0__[\"Message\"](this.Id, _Messages__WEBPACK_IMPORTED_MODULE_0__[\"Events\"].SettleRequest, null, true);\n    }\n  }]);\n\n  return SettleRequest;\n}();\nvar Settlement =\n/*#__PURE__*/\nfunction () {\n  function Settlement(m) {\n    _classCallCheck(this, Settlement);\n\n    this.RequestId = m.Id;\n    this._m = m;\n    this.Success = m.GetSuccessState() == _Messages__WEBPACK_IMPORTED_MODULE_0__[\"SuccessState\"].Success;\n  }\n\n  _createClass(Settlement, [{\n    key: \"GetSettleByAcquirerCount\",\n    value: function GetSettleByAcquirerCount() {\n      return this._m.Data.accumulated_settle_by_acquirer_count;\n    }\n  }, {\n    key: \"GetSettleByAcquirerValue\",\n    value: function GetSettleByAcquirerValue() {\n      return this._m.Data.accumulated_settle_by_acquirer_value;\n    }\n  }, {\n    key: \"GetTotalCount\",\n    value: function GetTotalCount() {\n      return this._m.Data.accumulated_total_count;\n    }\n  }, {\n    key: \"GetTotalValue\",\n    value: function GetTotalValue() {\n      return this._m.Data.accumulated_total_value;\n    }\n  }, {\n    key: \"GetPeriodStartTime\",\n    value: function GetPeriodStartTime() {\n      var timeStr = this._m.Data.settlement_period_start_time; // \"05:00\"\n\n      var dateStr = this._m.Data.settlement_period_start_date; // \"05Oct17\"\n\n      return _Messages__WEBPACK_IMPORTED_MODULE_0__[\"Message\"].ParseBankDateTimeStr(dateStr, timeStr);\n    }\n  }, {\n    key: \"GetPeriodEndTime\",\n    value: function GetPeriodEndTime() {\n      var timeStr = this._m.Data.settlement_period_end_time; // \"05:00\"\n\n      var dateStr = this._m.Data.settlement_period_end_date; // \"05Oct17\"\n\n      return _Messages__WEBPACK_IMPORTED_MODULE_0__[\"Message\"].ParseBankDateTimeStr(dateStr, timeStr);\n    }\n  }, {\n    key: \"GetTriggeredTime\",\n    value: function GetTriggeredTime() {\n      var timeStr = this._m.Data.settlement_triggered_time; // \"05:00:45\"\n\n      var dateStr = this._m.Data.settlement_triggered_date; // \"05Oct17\"\n\n      return _Messages__WEBPACK_IMPORTED_MODULE_0__[\"Message\"].ParseBankDateTimeStr(dateStr, timeStr);\n    }\n  }, {\n    key: \"GetResponseText\",\n    value: function GetResponseText() {\n      return this._m.Data.host_response_text;\n    }\n  }, {\n    key: \"GetReceipt\",\n    value: function GetReceipt() {\n      return this._m.Data.merchant_receipt;\n    }\n  }, {\n    key: \"GetTransactionRange\",\n    value: function GetTransactionRange() {\n      return this._m.Data.transaction_range;\n    }\n  }, {\n    key: \"GetTerminalId\",\n    value: function GetTerminalId() {\n      return this._m.Data.terminal_id;\n    }\n  }, {\n    key: \"GetSchemeSettlementEntries\",\n    value: function GetSchemeSettlementEntries() {\n      var schemes = this._m.Data.schemes;\n      if (!schemes) return [];\n      return schemes.map(function (scheme) {\n        return new SchemeSettlementEntry(scheme);\n      });\n    }\n  }]);\n\n  return Settlement;\n}();\nvar SchemeSettlementEntry =\n/*#__PURE__*/\nfunction () {\n  // SchemeSettlementEntry(string schemeName, bool settleByAcquirer, int totalCount, int totalValue)\n  // SchemeSettlementEntry(Object schemeObj)\n  function SchemeSettlementEntry() {\n    _classCallCheck(this, SchemeSettlementEntry);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    if (args.length === 1) {\n      this.SchemeName = args[0].scheme_name;\n      this.SettleByAcquirer = args[0].settle_by_acquirer.toLowerCase() == \"yes\";\n      this.TotalValue = parseInt(args[0].total_value, 10);\n      this.TotalCount = parseInt(args[0].total_count, 10);\n    } else if (args.length === 4) {\n      this.SchemeName = args[0];\n      this.SettleByAcquirer = args[1];\n      this.TotalCount = args[2];\n      this.TotalValue = args[3];\n    }\n  }\n\n  _createClass(SchemeSettlementEntry, [{\n    key: \"ToString\",\n    value: function ToString() {\n      return \"SchemeName: \".concat(this.SchemeName, \", SettleByAcquirer: \").concat(this.SettleByAcquirer, \", TotalCount: \").concat(this.TotalCount, \", TotalValue: \").concat(this.TotalValue);\n    }\n  }]);\n\n  return SchemeSettlementEntry;\n}();\nvar SettlementEnquiryRequest =\n/*#__PURE__*/\nfunction () {\n  function SettlementEnquiryRequest(id) {\n    _classCallCheck(this, SettlementEnquiryRequest);\n\n    this.Id = id;\n  }\n\n  _createClass(SettlementEnquiryRequest, [{\n    key: \"ToMessage\",\n    value: function ToMessage() {\n      return new _Messages__WEBPACK_IMPORTED_MODULE_0__[\"Message\"](this.Id, _Messages__WEBPACK_IMPORTED_MODULE_0__[\"Events\"].SettlementEnquiryRequest, null, true);\n    }\n  }]);\n\n  return SettlementEnquiryRequest;\n}();\n\n/***/ }),\n\n/***/ \"./src/Spi.js\":\n/*!********************!*\\\n  !*** ./src/Spi.js ***!\n  \\********************/\n/*! exports provided: SPI_VERSION, default, Spi */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SPI_VERSION\", function() { return SPI_VERSION; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return Spi; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Spi\", function() { return Spi; });\n/* harmony import */ var _Messages__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Messages */ \"./src/Messages.js\");\n/* harmony import */ var _SpiModels__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./SpiModels */ \"./src/SpiModels.js\");\n/* harmony import */ var _RequestIdHelper__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./RequestIdHelper */ \"./src/RequestIdHelper.js\");\n/* harmony import */ var _PairingHelper__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./PairingHelper */ \"./src/PairingHelper.js\");\n/* harmony import */ var _Connection__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./Connection */ \"./src/Connection.js\");\n/* harmony import */ var _SpiPayAtTable__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./SpiPayAtTable */ \"./src/SpiPayAtTable.js\");\n/* harmony import */ var _PayAtTable__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./PayAtTable */ \"./src/PayAtTable.js\");\n/* harmony import */ var _SpiPreauth__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./SpiPreauth */ \"./src/SpiPreauth.js\");\n/* harmony import */ var _Cashout__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./Cashout */ \"./src/Cashout.js\");\n/* harmony import */ var _Settlement__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./Settlement */ \"./src/Settlement.js\");\n/* harmony import */ var _Pairing__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./Pairing */ \"./src/Pairing.js\");\n/* harmony import */ var _PosInfo__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./PosInfo */ \"./src/PosInfo.js\");\n/* harmony import */ var _PurchaseHelper__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./PurchaseHelper */ \"./src/PurchaseHelper.js\");\n/* harmony import */ var _KeyRollingHelper__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./KeyRollingHelper */ \"./src/KeyRollingHelper.js\");\n/* harmony import */ var _PingHelper__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./PingHelper */ \"./src/PingHelper.js\");\n/* harmony import */ var _Purchase__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./Purchase */ \"./src/Purchase.js\");\n/* harmony import */ var _Service_DeviceService__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./Service/DeviceService */ \"./src/Service/DeviceService.js\");\n/* harmony import */ var _Printing__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./Printing */ \"./src/Printing.js\");\n/* harmony import */ var _TerminalStatus__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./TerminalStatus */ \"./src/TerminalStatus.js\");\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar SPI_VERSION = '2.4.0';\n\nvar Spi =\n/*#__PURE__*/\nfunction () {\n  _createClass(Spi, [{\n    key: \"CurrentStatus\",\n    get: function get() {\n      return this._currentStatus;\n    },\n    set: function set(value) {\n      if (this._currentStatus === value) {\n        return;\n      }\n\n      this._currentStatus = value;\n      document.dispatchEvent(new CustomEvent('StatusChanged', {\n        detail: value\n      }));\n    }\n  }]);\n\n  function Spi(posId, serialNumber, eftposAddress, secrets) {\n    _classCallCheck(this, Spi);\n\n    this._posId = posId;\n    this._serialNumber = serialNumber;\n    this._secrets = secrets;\n    this._forceSecureWebSockets = false;\n    this._eftposAddress = \"ws://\" + eftposAddress;\n    this._log = console;\n    this.Config = new _SpiModels__WEBPACK_IMPORTED_MODULE_1__[\"SpiConfig\"]();\n    this._conn = new _Connection__WEBPACK_IMPORTED_MODULE_4__[\"Connection\"]();\n    this.CurrentDeviceStatus = null;\n    this._deviceApiKey = null;\n    this._acquirerCode = null;\n    this._inTestMode = false;\n    this._autoAddressResolutionEnabled = false; // Our stamp for signing outgoing messages\n\n    this._spiMessageStamp = new _Messages__WEBPACK_IMPORTED_MODULE_0__[\"MessageStamp\"](this._posId, this._secrets, 0);\n    this._posVendorId = null;\n    this._posVersion = null;\n    this._hasSetInfo = null; // We will maintain some state\n\n    this._mostRecentPingSent = null;\n    this._mostRecentPongReceived = null;\n    this._missedPongsCount = 0;\n    this._retriesSinceLastDeviceAddressResolution = 0;\n    this._mostRecentLoginResponse = null;\n    this._pongTimeout = 5000;\n    this._pingFrequency = 18000;\n    this._readyToTransact = null;\n    this._periodicPingThread = null;\n    this._txMonitorCheckFrequency = 1000;\n    this._checkOnTxFrequency = 20000;\n    this._maxWaitForCancelTx = 10000;\n    this._sleepBeforeReconnectMs = 5000;\n    this._missedPongsToDisconnect = 2;\n    this._retriesBeforeResolvingDeviceAddress = 5;\n    this.CurrentFlow = null;\n    this.CurrentPairingFlowState = null;\n    this.CurrentTxFlowState = null;\n  }\n\n  _createClass(Spi, [{\n    key: \"EnablePayAtTable\",\n    value: function EnablePayAtTable() {\n      this._spiPat = new _SpiPayAtTable__WEBPACK_IMPORTED_MODULE_5__[\"SpiPayAtTable\"](this);\n      return this._spiPat;\n    }\n  }, {\n    key: \"DisablePayAtTable\",\n    value: function DisablePayAtTable() {\n      this._spiPat = new _SpiPayAtTable__WEBPACK_IMPORTED_MODULE_5__[\"SpiPayAtTable\"](this);\n      this._spiPat.Config.PayAtTabledEnabled = false;\n      return this._spiPat;\n    }\n  }, {\n    key: \"EnablePreauth\",\n    value: function EnablePreauth() {\n      this._spiPreauth = new _SpiPreauth__WEBPACK_IMPORTED_MODULE_7__[\"SpiPreauth\"](this);\n      return this._spiPreauth;\n    }\n  }, {\n    key: \"Start\",\n    value: function Start() {\n      if (!this._posVendorId || !this._posVersion) {\n        // POS information is now required to be set\n        this._log.warn(\"Missing POS vendor ID and version. posVendorId and posVersion are required before starting\");\n\n        throw new Error(\"Missing POS vendor ID and version. posVendorId and posVersion are required before starting\");\n      }\n\n      this._resetConn();\n\n      this._startTransactionMonitoringThread();\n\n      this.CurrentFlow = _SpiModels__WEBPACK_IMPORTED_MODULE_1__[\"SpiFlow\"].Idle;\n\n      if (this._secrets != null) {\n        this._log.info(\"Starting in Paired State\");\n\n        this._currentStatus = _SpiModels__WEBPACK_IMPORTED_MODULE_1__[\"SpiStatus\"].PairedConnecting;\n\n        this._conn.Connect(); // This is non-blocking\n\n      } else {\n        this._log.info(\"Starting in Unpaired State\");\n\n        this._currentStatus = _SpiModels__WEBPACK_IMPORTED_MODULE_1__[\"SpiStatus\"].Unpaired;\n      }\n    } /// <summary>\n    /// Set the acquirer code of your bank, please contact Assembly's Integration Engineers for acquirer code.\n    /// </summary>\n\n  }, {\n    key: \"SetAcquirerCode\",\n    value: function SetAcquirerCode(acquirerCode) {\n      this._acquirerCode = acquirerCode;\n      return true;\n    } /// <summary>\n    /// Set the api key used for auto address discovery feature\n    /// </summary>\n    /// <returns></returns>\n\n  }, {\n    key: \"SetDeviceApiKey\",\n    value: function SetDeviceApiKey(deviceApiKey) {\n      this._deviceApiKey = deviceApiKey;\n      return true;\n    } /// <summary>\n    /// Allows you to set the serial number of the Eftpos\n    /// </summary>\n\n  }, {\n    key: \"SetSerialNumber\",\n    value: function SetSerialNumber(serialNumber) {\n      if (this.CurrentStatus != _SpiModels__WEBPACK_IMPORTED_MODULE_1__[\"SpiStatus\"].Unpaired) return false;\n      var was = this._serialNumber;\n      this._serialNumber = serialNumber;\n\n      if (this._autoAddressResolutionEnabled && this.HasSerialNumberChanged(was)) {\n        this._autoResolveEftposAddress();\n      }\n\n      return true;\n    } /// <summary>\n    /// Allows you to set the auto address discovery feature. \n    /// </summary>\n    /// <returns></returns>\n\n  }, {\n    key: \"SetAutoAddressResolution\",\n    value: function SetAutoAddressResolution(autoAddressResolutionEnable) {\n      if (this.CurrentStatus == _SpiModels__WEBPACK_IMPORTED_MODULE_1__[\"SpiStatus\"].PairedConnected) return false;\n      var was = this._autoAddressResolutionEnabled;\n      this._autoAddressResolutionEnabled = autoAddressResolutionEnable;\n\n      if (autoAddressResolutionEnable && !was) {\n        // we're turning it on\n        this._autoResolveEftposAddress();\n      }\n\n      return true;\n    } /// <summary>\n    /// Call this method to set the client library test mode.\n    /// Set it to true only while you are developing the integration. \n    /// It defaults to false. For a real merchant, always leave it set to false. \n    /// </summary>\n    /// <param name=\"testMode\"></param>\n    /// <returns></returns>\n\n  }, {\n    key: \"SetTestMode\",\n    value: function SetTestMode(testMode) {\n      if (this.CurrentStatus != _SpiModels__WEBPACK_IMPORTED_MODULE_1__[\"SpiStatus\"].Unpaired) return false;\n      if (testMode == this._inTestMode) return true; // we're changing mode\n\n      this._inTestMode = testMode;\n\n      this._autoResolveEftposAddress();\n\n      return true;\n    } /// <summary>\n    /// Set the client library to use secure web sockets TLS (wss protocol)\n    /// </summary>\n    /// <param name=\"isSecure\"></param>\n    /// <returns></returns>\n\n  }, {\n    key: \"SetSecureWebSockets\",\n    value: function SetSecureWebSockets(useSecureWebSockets) {\n      this._forceSecureWebSockets = useSecureWebSockets;\n    } // <summary>\n    // Allows you to set the PosId which identifies this instance of your POS.\n    // Can only be called in thge Unpaired state. \n    // </summary>\n\n  }, {\n    key: \"SetPosId\",\n    value: function SetPosId(posId) {\n      if (this.CurrentStatus != _SpiModels__WEBPACK_IMPORTED_MODULE_1__[\"SpiStatus\"].Unpaired) return false;\n      this._posId = posId;\n      this._spiMessageStamp.PosId = posId;\n      return true;\n    } // <summary>\n    // Allows you to set the PinPad address. Sometimes the PinPad might change IP address \n    // (we recommend reserving static IPs if possible).\n    // Either way you need to allow your User to enter the IP address of the PinPad.\n    // </summary>\n\n  }, {\n    key: \"SetEftposAddress\",\n    value: function SetEftposAddress(address) {\n      if (this.CurrentStatus == _SpiModels__WEBPACK_IMPORTED_MODULE_1__[\"SpiStatus\"].PairedConnected || this._autoAddressResolutionEnabled) {\n        return false;\n      }\n\n      this._eftposAddress = \"ws://\" + address;\n      this._conn.Address = this._eftposAddress;\n      return true;\n    }\n  }, {\n    key: \"SetPosInfo\",\n\n    /**\r\n     * Sets values used to identify the POS software to the EFTPOS terminal.\r\n     * Must be set before starting!\r\n     *\r\n     * @param posVendorId Vendor identifier of the POS itself.\r\n     * @param posVersion  Version string of the POS itself.\r\n     */\n    value: function SetPosInfo(posVendorId, posVersion) {\n      this._posVendorId = posVendorId;\n      this._posVersion = posVersion;\n    } // <summary>\n    // Call this one when a flow is finished and you want to go back to idle state.\n    // Typically when your user clicks the \"OK\" bubtton to acknowldge that pairing is\n    // finished, or that transaction is finished.\n    // When true, you can dismiss the flow screen and show back the idle screen.\n    // </summary>\n    // <returns>true means we have moved back to the Idle state. false means current flow was not finished yet.</returns>\n\n  }, {\n    key: \"AckFlowEndedAndBackToIdle\",\n    value: function AckFlowEndedAndBackToIdle() {\n      if (this.CurrentFlow == _SpiModels__WEBPACK_IMPORTED_MODULE_1__[\"SpiFlow\"].Idle) return true; // already idle\n\n      if (this.CurrentFlow == _SpiModels__WEBPACK_IMPORTED_MODULE_1__[\"SpiFlow\"].Pairing && this.CurrentPairingFlowState.Finished) {\n        this.CurrentFlow = _SpiModels__WEBPACK_IMPORTED_MODULE_1__[\"SpiFlow\"].Idle;\n        return true;\n      }\n\n      if (this.CurrentFlow == _SpiModels__WEBPACK_IMPORTED_MODULE_1__[\"SpiFlow\"].Transaction && this.CurrentTxFlowState.Finished) {\n        this.CurrentFlow = _SpiModels__WEBPACK_IMPORTED_MODULE_1__[\"SpiFlow\"].Idle;\n        return true;\n      }\n\n      return false;\n    } // endregion\n    // <summary>\n    // This will connect to the Eftpos and start the pairing process.\n    // Only call this if you are in the Unpaired state.\n    // Subscribe to the PairingFlowStateChanged event to get updates on the pairing process.\n    // </summary>\n    // <returns>Whether pairing has initiated or not</returns>\n\n  }, {\n    key: \"Pair\",\n    value: function Pair() {\n      if (this.CurrentStatus != _SpiModels__WEBPACK_IMPORTED_MODULE_1__[\"SpiStatus\"].Unpaired) {\n        this._log.warn(\"Tried to Pair but we're already so.\");\n\n        return false;\n      }\n\n      if (!this._posId || !this._eftposAddress) {\n        this._log.warn(\"Tried to Pair but missing posId or updatedEftposAddress\");\n\n        return false;\n      }\n\n      this.CurrentFlow = _SpiModels__WEBPACK_IMPORTED_MODULE_1__[\"SpiFlow\"].Pairing;\n      this.CurrentPairingFlowState = new _SpiModels__WEBPACK_IMPORTED_MODULE_1__[\"PairingFlowState\"]({\n        Successful: false,\n        Finished: false,\n        Message: \"Connecting...\",\n        AwaitingCheckFromEftpos: false,\n        AwaitingCheckFromPos: false,\n        ConfirmationCode: \"\"\n      });\n      document.dispatchEvent(new CustomEvent('PairingFlowStateChanged', {\n        detail: this.CurrentPairingFlowState\n      }));\n\n      this._conn.Connect(); // Non-Blocking\n\n\n      return true;\n    } // <summary>\n    // Call this when your user clicks yes to confirm the pairing code on your \n    // screen matches the one on the Eftpos.\n    // </summary>\n\n  }, {\n    key: \"PairingConfirmCode\",\n    value: function PairingConfirmCode() {\n      if (!this.CurrentPairingFlowState.AwaitingCheckFromPos) {\n        // We weren't expecting this\n        return;\n      }\n\n      this.CurrentPairingFlowState.AwaitingCheckFromPos = false;\n\n      if (this.CurrentPairingFlowState.AwaitingCheckFromEftpos) {\n        // But we are still waiting for confirmation from Eftpos side.\n        this._log.info(\"Pair Code Confirmed from POS side, but am still waiting for confirmation from Eftpos.\");\n\n        this.CurrentPairingFlowState.Message = \"Click YES on EFTPOS if code is: \" + this.CurrentPairingFlowState.ConfirmationCode;\n        document.dispatchEvent(new CustomEvent('PairingFlowStateChanged', {\n          detail: this.CurrentPairingFlowState\n        }));\n      } else {\n        // Already confirmed from Eftpos - So all good now. We're Paired also from the POS perspective.\n        this._log.info(\"Pair Code Confirmed from POS side, and was already confirmed from Eftpos side. Pairing finalised.\");\n\n        this._onPairingSuccess();\n\n        this._onReadyToTransact();\n      }\n    } // <summary>\n    // Call this if your user clicks CANCEL or NO during the pairing process.\n    // </summary>\n\n  }, {\n    key: \"PairingCancel\",\n    value: function PairingCancel() {\n      if (this.CurrentFlow != _SpiModels__WEBPACK_IMPORTED_MODULE_1__[\"SpiFlow\"].Pairing || this.CurrentPairingFlowState.Finished) {\n        return;\n      }\n\n      if (this.CurrentPairingFlowState.AwaitingCheckFromPos && !this.CurrentPairingFlowState.AwaitingCheckFromEftpos) {\n        // This means that the Eftpos already thinks it's paired.\n        // Let's tell it to drop keys\n        this._send(new _Pairing__WEBPACK_IMPORTED_MODULE_10__[\"DropKeysRequest\"]().ToMessage());\n      }\n\n      this._onPairingFailed();\n    } // <summary>\n    // Call this when your uses clicks the Unpair button.\n    // This will disconnect from the Eftpos and forget the secrets.\n    // The CurrentState is then changed to Unpaired.\n    // Call this only if you are not yet in the Unpaired state.\n    // </summary>\n\n  }, {\n    key: \"Unpair\",\n    value: function Unpair() {\n      if (this.CurrentStatus == _SpiModels__WEBPACK_IMPORTED_MODULE_1__[\"SpiStatus\"].Unpaired) {\n        return false;\n      }\n\n      if (this.CurrentFlow != _SpiModels__WEBPACK_IMPORTED_MODULE_1__[\"SpiFlow\"].Idle) {\n        return false;\n      } // Best effort letting the eftpos know that we're dropping the keys, so it can drop them as well.\n\n\n      this._send(new _Pairing__WEBPACK_IMPORTED_MODULE_10__[\"DropKeysRequest\"]().ToMessage());\n\n      this._doUnpair();\n\n      return true;\n    } // endregion\n    // region Transaction Methods\n    // <summary>\n    // Initiates a purchase transaction. Be subscribed to TxFlowStateChanged event to get updates on the process.\n    // </summary>\n    // <param name=\"posRefId\">Alphanumeric Identifier for your purchase.</param>\n    // <param name=\"amountCents\">Amount in Cents to charge</param>\n    // <returns>InitiateTxResult</returns>\n\n  }, {\n    key: \"InitiatePurchaseTx\",\n    value: function InitiatePurchaseTx(posRefId, amountCents) {\n      if (this.CurrentStatus == _SpiModels__WEBPACK_IMPORTED_MODULE_1__[\"SpiStatus\"].Unpaired) {\n        return new _SpiModels__WEBPACK_IMPORTED_MODULE_1__[\"InitiateTxResult\"](false, \"Not Paired\");\n      }\n\n      if (this.CurrentFlow != _SpiModels__WEBPACK_IMPORTED_MODULE_1__[\"SpiFlow\"].Idle) {\n        return new _SpiModels__WEBPACK_IMPORTED_MODULE_1__[\"InitiateTxResult\"](false, \"Not Idle\");\n      }\n\n      var purchaseRequest = _PurchaseHelper__WEBPACK_IMPORTED_MODULE_12__[\"PurchaseHelper\"].CreatePurchaseRequest(amountCents, posRefId);\n      purchaseRequest.Config = this.Config;\n      var purchaseMsg = purchaseRequest.ToMessage();\n      this.CurrentFlow = _SpiModels__WEBPACK_IMPORTED_MODULE_1__[\"SpiFlow\"].Transaction;\n      this.CurrentTxFlowState = new _SpiModels__WEBPACK_IMPORTED_MODULE_1__[\"TransactionFlowState\"](posRefId, _SpiModels__WEBPACK_IMPORTED_MODULE_1__[\"TransactionType\"].Purchase, amountCents, purchaseMsg, \"Waiting for EFTPOS connection to make payment request for \".concat(amountCents / 100.0));\n\n      if (this._send(purchaseMsg)) {\n        this.CurrentTxFlowState.Sent(\"Asked EFTPOS to accept payment for \".concat(amountCents / 100.0));\n      }\n\n      document.dispatchEvent(new CustomEvent('TxFlowStateChanged', {\n        detail: this.CurrentTxFlowState\n      }));\n      return new _SpiModels__WEBPACK_IMPORTED_MODULE_1__[\"InitiateTxResult\"](true, \"Purchase Initiated\");\n    } // <summary>\n    // Initiates a purchase transaction. Be subscribed to TxFlowStateChanged event to get updates on the process.\n    // <para>Tip and cashout are not allowed simultaneously.</para>\n    // </summary>\n    // <param name=\"posRefId\">An Unique Identifier for your Order/Purchase</param>\n    // <param name=\"purchaseAmount\">The Purchase Amount in Cents.</param>\n    // <param name=\"tipAmount\">The Tip Amount in Cents</param>\n    // <param name=\"cashoutAmount\">The Cashout Amount in Cents</param>\n    // <param name=\"promptForCashout\">Whether to prompt your customer for cashout on the Eftpos</param>\n    // <param name=\"options\">The Setting to set Header and Footer for the Receipt</param>\n    // <param name=\"surchargeAmount\">The Surcharge Amount in Cents</param>\n    // <returns>InitiateTxResult</returns>\n\n  }, {\n    key: \"InitiatePurchaseTxV2\",\n    value: function InitiatePurchaseTxV2(posRefId, purchaseAmount, tipAmount, cashoutAmount, promptForCashout) {\n      var options = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : {};\n      var surchargeAmount = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : 0;\n      if (this.CurrentStatus == _SpiModels__WEBPACK_IMPORTED_MODULE_1__[\"SpiStatus\"].Unpaired) return new _SpiModels__WEBPACK_IMPORTED_MODULE_1__[\"InitiateTxResult\"](false, \"Not Paired\");\n      if (tipAmount > 0 && (cashoutAmount > 0 || promptForCashout)) return new _SpiModels__WEBPACK_IMPORTED_MODULE_1__[\"InitiateTxResult\"](false, \"Cannot Accept Tips and Cashout at the same time.\");\n      if (this.CurrentFlow != _SpiModels__WEBPACK_IMPORTED_MODULE_1__[\"SpiFlow\"].Idle) return new _SpiModels__WEBPACK_IMPORTED_MODULE_1__[\"InitiateTxResult\"](false, \"Not Idle\");\n      this.CurrentFlow = _SpiModels__WEBPACK_IMPORTED_MODULE_1__[\"SpiFlow\"].Transaction;\n      var purchase = _PurchaseHelper__WEBPACK_IMPORTED_MODULE_12__[\"PurchaseHelper\"].CreatePurchaseRequestV2(posRefId, purchaseAmount, tipAmount, cashoutAmount, promptForCashout, surchargeAmount);\n      purchase.Config = this.Config;\n      purchase.Options = options;\n      var purchaseMsg = purchase.ToMessage();\n      this.CurrentTxFlowState = new _SpiModels__WEBPACK_IMPORTED_MODULE_1__[\"TransactionFlowState\"](posRefId, _SpiModels__WEBPACK_IMPORTED_MODULE_1__[\"TransactionType\"].Purchase, purchaseAmount, purchaseMsg, \"Waiting for EFTPOS connection to make payment request. \".concat(purchase.AmountSummary()));\n\n      if (this._send(purchaseMsg)) {\n        this.CurrentTxFlowState.Sent(\"Asked EFTPOS to accept payment for \".concat(purchase.AmountSummary()));\n      }\n\n      document.dispatchEvent(new CustomEvent('TxFlowStateChanged', {\n        detail: this.CurrentTxFlowState\n      }));\n      return new _SpiModels__WEBPACK_IMPORTED_MODULE_1__[\"InitiateTxResult\"](true, \"Purchase Initiated\");\n    } // <summary>\n    // Initiates a refund transaction. Be subscribed to TxFlowStateChanged event to get updates on the process.\n    // </summary>\n    // <param name=\"posRefId\">Alphanumeric Identifier for your refund.</param>\n    // <param name=\"amountCents\">Amount in Cents to charge</param>\n    // <param name=\"isSuppressMerchantPassword\">Merchant Password control in VAA</param>\n    // <returns>InitiateTxResult</returns>\n\n  }, {\n    key: \"InitiateRefundTx\",\n    value: function InitiateRefundTx(posRefId, amountCents) {\n      var isSuppressMerchantPassword = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n      if (this.CurrentStatus == _SpiModels__WEBPACK_IMPORTED_MODULE_1__[\"SpiStatus\"].Unpaired) {\n        return new _SpiModels__WEBPACK_IMPORTED_MODULE_1__[\"InitiateTxResult\"](false, \"Not Paired\");\n      }\n\n      if (this.CurrentFlow != _SpiModels__WEBPACK_IMPORTED_MODULE_1__[\"SpiFlow\"].Idle) {\n        return new _SpiModels__WEBPACK_IMPORTED_MODULE_1__[\"InitiateTxResult\"](false, \"Not Idle\");\n      }\n\n      var refundRequest = _PurchaseHelper__WEBPACK_IMPORTED_MODULE_12__[\"PurchaseHelper\"].CreateRefundRequest(amountCents, posRefId, isSuppressMerchantPassword);\n      refundRequest.Config = this.Config;\n      var refundMsg = refundRequest.ToMessage();\n      this.CurrentFlow = _SpiModels__WEBPACK_IMPORTED_MODULE_1__[\"SpiFlow\"].Transaction;\n      this.CurrentTxFlowState = new _SpiModels__WEBPACK_IMPORTED_MODULE_1__[\"TransactionFlowState\"](posRefId, _SpiModels__WEBPACK_IMPORTED_MODULE_1__[\"TransactionType\"].Refund, amountCents, refundMsg, \"Waiting for EFTPOS connection to make refund request for \".concat((amountCents / 100.0).toFixed(2)));\n\n      if (this._send(refundMsg)) {\n        this.CurrentTxFlowState.Sent(\"Asked EFTPOS to refund \".concat((amountCents / 100.0).toFixed(2)));\n      }\n\n      document.dispatchEvent(new CustomEvent('TxFlowStateChanged', {\n        detail: this.CurrentTxFlowState\n      }));\n      return new _SpiModels__WEBPACK_IMPORTED_MODULE_1__[\"InitiateTxResult\"](true, \"Refund Initiated\");\n    } // <summary>\n    // Let the EFTPOS know whether merchant accepted or declined the signature\n    // </summary>\n    // <param name=\"accepted\">whether merchant accepted the signature from customer or not</param>\n\n  }, {\n    key: \"AcceptSignature\",\n    value: function AcceptSignature(accepted) {\n      if (this.CurrentFlow != _SpiModels__WEBPACK_IMPORTED_MODULE_1__[\"SpiFlow\"].Transaction || this.CurrentTxFlowState.Finished || !this.CurrentTxFlowState.AwaitingSignatureCheck) {\n        this._log.info(\"Asked to accept signature but I was not waiting for one.\");\n\n        return new _SpiModels__WEBPACK_IMPORTED_MODULE_1__[\"MidTxResult\"](false, \"Asked to accept signature but I was not waiting for one.\");\n      }\n\n      this.CurrentTxFlowState.SignatureResponded(accepted ? \"Accepting Signature...\" : \"Declining Signature...\");\n      var sigReqMsg = this.CurrentTxFlowState.SignatureRequiredMessage;\n\n      this._send(accepted ? new _Purchase__WEBPACK_IMPORTED_MODULE_15__[\"SignatureAccept\"](this.CurrentTxFlowState.PosRefId).ToMessage() : new _Purchase__WEBPACK_IMPORTED_MODULE_15__[\"SignatureDecline\"](this.CurrentTxFlowState.PosRefId).ToMessage());\n\n      document.dispatchEvent(new CustomEvent('TxFlowStateChanged', {\n        detail: this.CurrentTxFlowState\n      }));\n      return new _SpiModels__WEBPACK_IMPORTED_MODULE_1__[\"MidTxResult\"](true, \"\");\n    } // <summary>\n    // Submit the Code obtained by your user when phoning for auth. \n    // It will return immediately to tell you whether the code has a valid format or not. \n    // If valid==true is returned, no need to do anything else. Expect updates via standard callback.\n    // If valid==false is returned, you can show your user the accompanying message, and invite them to enter another code. \n    // </summary>\n    // <param name=\"authCode\">The code obtained by your user from the merchant call centre. It should be a 6-character alpha-numeric value.</param>\n    // <returns>Whether code has a valid format or not.</returns>\n\n  }, {\n    key: \"SubmitAuthCode\",\n    value: function SubmitAuthCode(authCode) {\n      if (authCode.length != 6) {\n        return new _SpiModels__WEBPACK_IMPORTED_MODULE_1__[\"SubmitAuthCodeResult\"](false, \"Not a 6-digit code.\");\n      }\n\n      if (this.CurrentFlow != _SpiModels__WEBPACK_IMPORTED_MODULE_1__[\"SpiFlow\"].Transaction || this.CurrentTxFlowState.Finished || !this.CurrentTxFlowState.AwaitingPhoneForAuth) {\n        this._log.info(\"Asked to send auth code but I was not waiting for one.\");\n\n        return new _SpiModels__WEBPACK_IMPORTED_MODULE_1__[\"SubmitAuthCodeResult\"](false, \"Was not waiting for one.\");\n      }\n\n      this.CurrentTxFlowState.AuthCodeSent(\"Submitting Auth Code \".concat(authCode));\n\n      this._send(new _Purchase__WEBPACK_IMPORTED_MODULE_15__[\"AuthCodeAdvice\"](this.CurrentTxFlowState.PosRefId, authCode).ToMessage());\n\n      document.dispatchEvent(new CustomEvent('TxFlowStateChanged', {\n        detail: this.CurrentTxFlowState\n      }));\n      return new _SpiModels__WEBPACK_IMPORTED_MODULE_1__[\"SubmitAuthCodeResult\"](true, \"Valid Code.\");\n    } // <summary>\n    // Attempts to cancel a Transaction. \n    // Be subscribed to TxFlowStateChanged event to see how it goes.\n    // Wait for the transaction to be finished and then see whether cancellation was successful or not.\n    // </summary>\n    // <returns>MidTxResult - false only if you called it in the wrong state</returns>\n\n  }, {\n    key: \"CancelTransaction\",\n    value: function CancelTransaction() {\n      if (this.CurrentFlow != _SpiModels__WEBPACK_IMPORTED_MODULE_1__[\"SpiFlow\"].Transaction || this.CurrentTxFlowState.Finished) {\n        this._log.info(\"Asked to cancel transaction but I was not in the middle of one.\");\n\n        return new _SpiModels__WEBPACK_IMPORTED_MODULE_1__[\"MidTxResult\"](false, \"Asked to cancel transaction but I was not in the middle of one.\");\n      } // TH-1C, TH-3C - Merchant pressed cancel\n\n\n      if (this.CurrentTxFlowState.RequestSent) {\n        var cancelReq = new _Purchase__WEBPACK_IMPORTED_MODULE_15__[\"CancelTransactionRequest\"]();\n        this.CurrentTxFlowState.Cancelling(\"Attempting to Cancel Transaction...\");\n\n        this._send(cancelReq.ToMessage());\n      } else {\n        // We Had Not Even Sent Request Yet. Consider as known failed.\n        this.CurrentTxFlowState.Failed(null, \"Transaction Cancelled. Request Had not even been sent yet.\");\n      }\n\n      document.dispatchEvent(new CustomEvent('TxFlowStateChanged', {\n        detail: this.CurrentTxFlowState\n      }));\n      return new _SpiModels__WEBPACK_IMPORTED_MODULE_1__[\"MidTxResult\"](true, \"\");\n    } // <summary>\n    // Initiates a cashout only transaction. Be subscribed to TxFlowStateChanged event to get updates on the process.\n    // </summary>\n    // <param name=\"posRefId\">Alphanumeric Identifier for your transaction.</param>\n    // <param name=\"amountCents\">Amount in Cents to cash out</param>\n    // <param name=\"surchargeAmount\">The Surcharge Amount in Cents</param>\n    // <returns>InitiateTxResult</returns>\n\n  }, {\n    key: \"InitiateCashoutOnlyTx\",\n    value: function InitiateCashoutOnlyTx(posRefId, amountCents) {\n      var surchargeAmount = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n      if (this.CurrentStatus == _SpiModels__WEBPACK_IMPORTED_MODULE_1__[\"SpiStatus\"].Unpaired) return new _SpiModels__WEBPACK_IMPORTED_MODULE_1__[\"InitiateTxResult\"](false, \"Not Paired\");\n      if (this.CurrentFlow != _SpiModels__WEBPACK_IMPORTED_MODULE_1__[\"SpiFlow\"].Idle) return new _SpiModels__WEBPACK_IMPORTED_MODULE_1__[\"InitiateTxResult\"](false, \"Not Idle\");\n      var cashoutOnlyRequest = new _Cashout__WEBPACK_IMPORTED_MODULE_8__[\"CashoutOnlyRequest\"](amountCents, posRefId, surchargeAmount);\n      cashoutOnlyRequest.Config = this.Config;\n      var cashoutMsg = cashoutOnlyRequest.ToMessage();\n      this.CurrentFlow = _SpiModels__WEBPACK_IMPORTED_MODULE_1__[\"SpiFlow\"].Transaction;\n      this.CurrentTxFlowState = new _SpiModels__WEBPACK_IMPORTED_MODULE_1__[\"TransactionFlowState\"](posRefId, _SpiModels__WEBPACK_IMPORTED_MODULE_1__[\"TransactionType\"].CashoutOnly, amountCents, cashoutMsg, \"Waiting for EFTPOS connection to send cashout request for \".concat((amountCents / 100).toFixed(2)));\n\n      if (this._send(cashoutMsg)) {\n        this.CurrentTxFlowState.Sent(\"Asked EFTPOS to do cashout for \".concat((amountCents / 100).toFixed(2)));\n      }\n\n      document.dispatchEvent(new CustomEvent('TxFlowStateChanged', {\n        detail: this.CurrentTxFlowState\n      }));\n      return new _SpiModels__WEBPACK_IMPORTED_MODULE_1__[\"InitiateTxResult\"](true, \"Cashout Initiated\");\n    } // <summary>\n    // Initiates a Mail Order / Telephone Order Purchase Transaction\n    // </summary>\n    // <param name=\"posRefId\">Alphanumeric Identifier for your transaction.</param>\n    // <param name=\"amountCents\">Amount in Cents</param>\n    // <param name=\"surchargeAmount\">The Surcharge Amount in Cents</param>\n    // <returns>InitiateTxResult</returns>\n\n  }, {\n    key: \"InitiateMotoPurchaseTx\",\n    value: function InitiateMotoPurchaseTx(posRefId, amountCents) {\n      var surchargeAmount = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n      if (this.CurrentStatus == _SpiModels__WEBPACK_IMPORTED_MODULE_1__[\"SpiStatus\"].Unpaired) return new _SpiModels__WEBPACK_IMPORTED_MODULE_1__[\"InitiateTxResult\"](false, \"Not Paired\");\n      if (this.CurrentFlow != _SpiModels__WEBPACK_IMPORTED_MODULE_1__[\"SpiFlow\"].Idle) return new _SpiModels__WEBPACK_IMPORTED_MODULE_1__[\"InitiateTxResult\"](false, \"Not Idle\");\n      var motoPurchaseRequest = new _Purchase__WEBPACK_IMPORTED_MODULE_15__[\"MotoPurchaseRequest\"](amountCents, posRefId, surchargeAmount);\n      motoPurchaseRequest.Config = this.Config;\n      var cashoutMsg = motoPurchaseRequest.ToMessage();\n      this.CurrentFlow = _SpiModels__WEBPACK_IMPORTED_MODULE_1__[\"SpiFlow\"].Transaction;\n      this.CurrentTxFlowState = new _SpiModels__WEBPACK_IMPORTED_MODULE_1__[\"TransactionFlowState\"](posRefId, _SpiModels__WEBPACK_IMPORTED_MODULE_1__[\"TransactionType\"].MOTO, amountCents, cashoutMsg, \"Waiting for EFTPOS connection to send MOTO request for \".concat((amountCents / 100).toFixed(2)));\n\n      if (this._send(cashoutMsg)) {\n        this.CurrentTxFlowState.Sent(\"Asked EFTPOS do MOTO for \".concat((amountCents / 100).toFixed(2)));\n      }\n\n      document.dispatchEvent(new CustomEvent('TxFlowStateChanged', {\n        detail: this.CurrentTxFlowState\n      }));\n      return new _SpiModels__WEBPACK_IMPORTED_MODULE_1__[\"InitiateTxResult\"](true, \"MOTO Initiated\");\n    } // <summary>\n    // Initiates a settlement transaction.\n    // Be subscribed to TxFlowStateChanged event to get updates on the process.\n    // </summary>\n\n  }, {\n    key: \"InitiateSettleTx\",\n    value: function InitiateSettleTx(posRefId) {\n      if (this.CurrentStatus == _SpiModels__WEBPACK_IMPORTED_MODULE_1__[\"SpiStatus\"].Unpaired) {\n        return new _SpiModels__WEBPACK_IMPORTED_MODULE_1__[\"InitiateTxResult\"](false, \"Not Paired\");\n      }\n\n      if (this.CurrentFlow != _SpiModels__WEBPACK_IMPORTED_MODULE_1__[\"SpiFlow\"].Idle) {\n        return new _SpiModels__WEBPACK_IMPORTED_MODULE_1__[\"InitiateTxResult\"](false, \"Not Idle\");\n      }\n\n      var settleRequestMsg = new _Settlement__WEBPACK_IMPORTED_MODULE_9__[\"SettleRequest\"](_RequestIdHelper__WEBPACK_IMPORTED_MODULE_2__[\"RequestIdHelper\"].Id(\"settle\")).ToMessage();\n      this.CurrentFlow = _SpiModels__WEBPACK_IMPORTED_MODULE_1__[\"SpiFlow\"].Transaction;\n      this.CurrentTxFlowState = new _SpiModels__WEBPACK_IMPORTED_MODULE_1__[\"TransactionFlowState\"](posRefId, _SpiModels__WEBPACK_IMPORTED_MODULE_1__[\"TransactionType\"].Settle, 0, settleRequestMsg, \"Waiting for EFTPOS connection to make a settle request\");\n\n      if (this._send(settleRequestMsg)) {\n        this.CurrentTxFlowState.Sent(\"Asked EFTPOS to settle.\");\n      }\n\n      document.dispatchEvent(new CustomEvent('TxFlowStateChanged', {\n        detail: this.CurrentTxFlowState\n      }));\n      return new _SpiModels__WEBPACK_IMPORTED_MODULE_1__[\"InitiateTxResult\"](true, \"Settle Initiated\");\n    } // <summary>\n    // </summary>\n\n  }, {\n    key: \"InitiateSettlementEnquiry\",\n    value: function InitiateSettlementEnquiry(posRefId) {\n      if (this.CurrentStatus == _SpiModels__WEBPACK_IMPORTED_MODULE_1__[\"SpiStatus\"].Unpaired) return new _SpiModels__WEBPACK_IMPORTED_MODULE_1__[\"InitiateTxResult\"](false, \"Not Paired\");\n      if (this.CurrentFlow != _SpiModels__WEBPACK_IMPORTED_MODULE_1__[\"SpiFlow\"].Idle) return new _SpiModels__WEBPACK_IMPORTED_MODULE_1__[\"InitiateTxResult\"](false, \"Not Idle\");\n      var stlEnqMsg = new _Settlement__WEBPACK_IMPORTED_MODULE_9__[\"SettlementEnquiryRequest\"](_RequestIdHelper__WEBPACK_IMPORTED_MODULE_2__[\"RequestIdHelper\"].Id(\"stlenq\")).ToMessage();\n      this.CurrentFlow = _SpiModels__WEBPACK_IMPORTED_MODULE_1__[\"SpiFlow\"].Transaction;\n      this.CurrentTxFlowState = new _SpiModels__WEBPACK_IMPORTED_MODULE_1__[\"TransactionFlowState\"](posRefId, _SpiModels__WEBPACK_IMPORTED_MODULE_1__[\"TransactionType\"].SettlementEnquiry, 0, stlEnqMsg, \"Waiting for EFTPOS connection to make a settlement enquiry\");\n\n      if (this._send(stlEnqMsg)) {\n        this.CurrentTxFlowState.Sent(\"Asked EFTPOS to make a settlement enquiry.\");\n      }\n\n      document.dispatchEvent(new CustomEvent('TxFlowStateChanged', {\n        detail: this.CurrentTxFlowState\n      }));\n      return new _SpiModels__WEBPACK_IMPORTED_MODULE_1__[\"InitiateTxResult\"](true, \"Settle Initiated\");\n    } // <summary>\n    // Initiates a Get Last Transaction. Use this when you want to retrieve the most recent transaction\n    // that was processed by the Eftpos.\n    // Be subscribed to TxFlowStateChanged event to get updates on the process.\n    // </summary>\n\n  }, {\n    key: \"InitiateGetLastTx\",\n    value: function InitiateGetLastTx() {\n      if (this.CurrentStatus == _SpiModels__WEBPACK_IMPORTED_MODULE_1__[\"SpiStatus\"].Unpaired) {\n        return new _SpiModels__WEBPACK_IMPORTED_MODULE_1__[\"InitiateTxResult\"](false, \"Not Paired\");\n      }\n\n      if (this.CurrentFlow != _SpiModels__WEBPACK_IMPORTED_MODULE_1__[\"SpiFlow\"].Idle) {\n        return new _SpiModels__WEBPACK_IMPORTED_MODULE_1__[\"InitiateTxResult\"](false, \"Not Idle\");\n      }\n\n      var gltRequestMsg = new _Purchase__WEBPACK_IMPORTED_MODULE_15__[\"GetLastTransactionRequest\"]().ToMessage();\n      this.CurrentFlow = _SpiModels__WEBPACK_IMPORTED_MODULE_1__[\"SpiFlow\"].Transaction;\n      var posRefId = gltRequestMsg.Id; // GetLastTx is not trying to get anything specific back. So we just use the message id.\n\n      this.CurrentTxFlowState = new _SpiModels__WEBPACK_IMPORTED_MODULE_1__[\"TransactionFlowState\"](posRefId, _SpiModels__WEBPACK_IMPORTED_MODULE_1__[\"TransactionType\"].GetLastTransaction, 0, gltRequestMsg, \"Waiting for EFTPOS connection to make a Get-Last-Transaction request.\");\n\n      if (this._send(gltRequestMsg)) {\n        this.CurrentTxFlowState.Sent(\"Asked EFTPOS for last transaction.\");\n      }\n\n      document.dispatchEvent(new CustomEvent('TxFlowStateChanged', {\n        detail: this.CurrentTxFlowState\n      }));\n      return new _SpiModels__WEBPACK_IMPORTED_MODULE_1__[\"InitiateTxResult\"](true, \"GLT Initiated\");\n    } // <summary>\n    // This is useful to recover from your POS crashing in the middle of a transaction.\n    // When you restart your POS, if you had saved enough state, you can call this method to recover the client library state.\n    // You need to have the posRefId that you passed in with the original transaction, and the transaction type.\n    // This method will return immediately whether recovery has started or not.\n    // If recovery has started, you need to bring up the transaction modal to your user a be listening to TxFlowStateChanged.\n    // </summary>\n    // <param name=\"posRefId\">The is that you had assigned to the transaction that you are trying to recover.</param>\n    // <param name=\"txType\">The transaction type.</param>\n    // <returns></returns>\n\n  }, {\n    key: \"InitiateRecovery\",\n    value: function InitiateRecovery(posRefId, txType) {\n      if (this.CurrentStatus == _SpiModels__WEBPACK_IMPORTED_MODULE_1__[\"SpiStatus\"].Unpaired) return new _SpiModels__WEBPACK_IMPORTED_MODULE_1__[\"InitiateTxResult\"](false, \"Not Paired\");\n      if (this.CurrentFlow != _SpiModels__WEBPACK_IMPORTED_MODULE_1__[\"SpiFlow\"].Idle) return new _SpiModels__WEBPACK_IMPORTED_MODULE_1__[\"InitiateTxResult\"](false, \"Not Idle\");\n      this.CurrentFlow = _SpiModels__WEBPACK_IMPORTED_MODULE_1__[\"SpiFlow\"].Transaction;\n      var gltRequestMsg = new _Purchase__WEBPACK_IMPORTED_MODULE_15__[\"GetLastTransactionRequest\"]().ToMessage();\n      this.CurrentTxFlowState = new _SpiModels__WEBPACK_IMPORTED_MODULE_1__[\"TransactionFlowState\"](posRefId, txType, 0, gltRequestMsg, \"Waiting for EFTPOS connection to attempt recovery.\");\n\n      if (this._send(gltRequestMsg)) {\n        this.CurrentTxFlowState.Sent(\"Asked EFTPOS to recover state.\");\n      }\n\n      document.dispatchEvent(new CustomEvent('TxFlowStateChanged', {\n        detail: this.CurrentTxFlowState\n      }));\n      return new _SpiModels__WEBPACK_IMPORTED_MODULE_1__[\"InitiateTxResult\"](true, \"Recovery Initiated\");\n    } // <summary>\n    // GltMatch attempts to conclude whether a gltResponse matches an expected transaction and returns\n    // the outcome. \n    // If Success/Failed is returned, it means that the gtlResponse did match, and that transaction was succesful/failed.\n    // If Unknown is returned, it means that the gltResponse does not match the expected transaction. \n    // </summary>\n    // <param name=\"gltResponse\">The GetLastTransactionResponse message to check</param>\n    // <param name=\"posRefId\">The Reference Id that you passed in with the original request.</param>\n    // <returns></returns>\n\n  }, {\n    key: \"GltMatch\",\n    value: function GltMatch(gltResponse, posRefId) {\n      // Obsolete method call check\n      // Old interface: GltMatch(GetLastTransactionResponse gltResponse, TransactionType expectedType, int expectedAmount, DateTime requestTime, string posRefId)\n      if (arguments.length <= 2 ? 0 : arguments.length - 2) {\n        if ((arguments.length <= 2 ? 0 : arguments.length - 2) == 2) {\n          this._log.info(\"Obsolete method call detected: Use GltMatch(gltResponse, posRefId)\");\n\n          return this.GltMatch(gltResponse, arguments.length <= 4 ? undefined : arguments[4]);\n        } else {\n          throw new Error(\"Obsolete method call with unknown args: Use GltMatch(GetLastTransactionResponse gltResponse, string posRefId)\");\n        }\n      }\n\n      this._log.info(\"GLT CHECK: PosRefId: \".concat(posRefId, \"->\").concat(gltResponse.GetPosRefId()));\n\n      if (!posRefId == gltResponse.GetPosRefId()) {\n        return _Messages__WEBPACK_IMPORTED_MODULE_0__[\"SuccessState\"].Unknown;\n      }\n\n      return gltResponse.GetSuccessState();\n    }\n  }, {\n    key: \"PrintReceipt\",\n    value: function PrintReceipt(key, payload) {\n      this._send(new _Printing__WEBPACK_IMPORTED_MODULE_17__[\"PrintingRequest\"](key, payload).toMessage());\n    }\n  }, {\n    key: \"GetTerminalStatus\",\n    value: function GetTerminalStatus() {\n      this._send(new _TerminalStatus__WEBPACK_IMPORTED_MODULE_18__[\"TerminalStatusRequest\"]().ToMessage());\n    } // endregion\n    // region Internals for Pairing Flow\n    // <summary>\n    // Handling the 2nd interaction of the pairing process, i.e. an incoming KeyRequest.\n    // </summary>\n    // <param name=\"m\">incoming message</param>\n\n  }, {\n    key: \"_handleKeyRequest\",\n    value: function _handleKeyRequest(m) {\n      this.CurrentPairingFlowState.Message = \"Negotiating Pairing...\";\n      document.dispatchEvent(new CustomEvent('PairingFlowStateChanged', {\n        detail: this.CurrentPairingFlowState\n      })); // Use the helper. It takes the incoming request, and generates the secrets and the response.\n\n      var ph = new _PairingHelper__WEBPACK_IMPORTED_MODULE_3__[\"PairingHelper\"]();\n      var result = ph.GenerateSecretsAndKeyResponse(new _Pairing__WEBPACK_IMPORTED_MODULE_10__[\"KeyRequest\"](m));\n      this._secrets = result.Secrets; // we now have secrets, although pairing is not fully finished yet.\n\n      this._spiMessageStamp.Secrets = this._secrets; // updating our stamp with the secrets so can encrypt messages later.\n\n      this._send(result.KeyResponse.ToMessage()); // send the key_response, i.e. interaction 3 of pairing.\n\n    } // <summary>\n    // Handling the 4th interaction of the pairing process i.e. an incoming KeyCheck.\n    // </summary>\n    // <param name=\"m\"></param>\n\n  }, {\n    key: \"_handleKeyCheck\",\n    value: function _handleKeyCheck(m) {\n      var keyCheck = new _Pairing__WEBPACK_IMPORTED_MODULE_10__[\"KeyCheck\"](m);\n      this.CurrentPairingFlowState.ConfirmationCode = keyCheck.ConfirmationCode;\n      this.CurrentPairingFlowState.AwaitingCheckFromEftpos = true;\n      this.CurrentPairingFlowState.AwaitingCheckFromPos = true;\n      this.CurrentPairingFlowState.Message = \"Confirm that the following Code is showing on the Terminal\";\n      document.dispatchEvent(new CustomEvent('PairingFlowStateChanged', {\n        detail: this.CurrentPairingFlowState\n      }));\n    } // <summary>\n    // Handling the 5th and final interaction of the pairing process, i.e. an incoming PairResponse\n    // </summary>\n    // <param name=\"m\"></param>\n\n  }, {\n    key: \"_handlePairResponse\",\n    value: function _handlePairResponse(m) {\n      var pairResp = new _Pairing__WEBPACK_IMPORTED_MODULE_10__[\"PairResponse\"](m);\n      this.CurrentPairingFlowState.AwaitingCheckFromEftpos = false;\n\n      if (pairResp.Success) {\n        if (this.CurrentPairingFlowState.AwaitingCheckFromPos) {\n          // Still Waiting for User to say yes on POS\n          this._log.info(\"Got Pair Confirm from Eftpos, but still waiting for use to confirm from POS.\");\n\n          this.CurrentPairingFlowState.Message = \"Confirm that the following Code is what the EFTPOS showed\";\n          document.dispatchEvent(new CustomEvent('PairingFlowStateChanged', {\n            detail: this.CurrentPairingFlowState\n          }));\n        } else {\n          this._log.info(\"Got Pair Confirm from Eftpos, and already had confirm from POS. Now just waiting for first pong.\");\n\n          this._onPairingSuccess();\n        } // I need to ping/login even if the pos user has not said yes yet, \n        // because otherwise within 5 seconds connectiong will be dropped by eftpos.\n\n\n        this._startPeriodicPing();\n      } else {\n        this._onPairingFailed();\n      }\n    }\n  }, {\n    key: \"_handleDropKeysAdvice\",\n    value: function _handleDropKeysAdvice(m) {\n      this._log.info(\"Eftpos was Unpaired. I shall unpair from my end as well.\");\n\n      this._doUnpair();\n    }\n  }, {\n    key: \"_onPairingSuccess\",\n    value: function _onPairingSuccess() {\n      this.CurrentPairingFlowState.Successful = true;\n      this.CurrentPairingFlowState.Finished = true;\n      this.CurrentPairingFlowState.Message = \"Pairing Successful!\";\n      this.CurrentStatus = _SpiModels__WEBPACK_IMPORTED_MODULE_1__[\"SpiStatus\"].PairedConnected;\n      document.dispatchEvent(new CustomEvent('SecretsChanged', {\n        detail: this._secrets\n      }));\n      document.dispatchEvent(new CustomEvent('PairingFlowStateChanged', {\n        detail: this.CurrentPairingFlowState\n      }));\n    }\n  }, {\n    key: \"_onPairingFailed\",\n    value: function _onPairingFailed() {\n      this._secrets = null;\n      this._spiMessageStamp.Secrets = null;\n\n      this._conn.Disconnect();\n\n      this.CurrentStatus = _SpiModels__WEBPACK_IMPORTED_MODULE_1__[\"SpiStatus\"].Unpaired;\n      this.CurrentPairingFlowState.Message = \"Pairing Failed\";\n      this.CurrentPairingFlowState.Finished = true;\n      this.CurrentPairingFlowState.Successful = false;\n      this.CurrentPairingFlowState.AwaitingCheckFromPos = false;\n      document.dispatchEvent(new CustomEvent('PairingFlowStateChanged', {\n        detail: this.CurrentPairingFlowState\n      }));\n    }\n  }, {\n    key: \"_doUnpair\",\n    value: function _doUnpair() {\n      this.CurrentStatus = _SpiModels__WEBPACK_IMPORTED_MODULE_1__[\"SpiStatus\"].Unpaired;\n\n      this._conn.Disconnect();\n\n      this._secrets = null;\n      this._spiMessageStamp.Secrets = null;\n      document.dispatchEvent(new CustomEvent('SecretsChanged', {\n        detail: this._secrets\n      }));\n    } // <summary>\n    // Sometimes the server asks us to roll our secrets.\n    // </summary>\n    // <param name=\"m\"></param>\n\n  }, {\n    key: \"_handleKeyRollingRequest\",\n    value: function _handleKeyRollingRequest(m) {\n      // we calculate the new ones...\n      var krRes = _KeyRollingHelper__WEBPACK_IMPORTED_MODULE_13__[\"KeyRollingHelper\"].PerformKeyRolling(m, this._secrets);\n      this._secrets = krRes.NewSecrets; // and update our secrets with them\n\n      this._spiMessageStamp.Secrets = this._secrets; // and our stamp\n\n      this._send(krRes.KeyRollingConfirmation); // and we tell the server that all is well.\n\n\n      document.dispatchEvent(new CustomEvent('SecretsChanged', {\n        detail: this._secrets\n      }));\n    } // <summary>\n    // The PinPad server will send us this message when a customer signature is reqired.\n    // We need to ask the customer to sign the incoming receipt.\n    // And then tell the pinpad whether the signature is ok or not.\n    // </summary>\n    // <param name=\"m\"></param>\n\n  }, {\n    key: \"_handleSignatureRequired\",\n    value: function _handleSignatureRequired(m) {\n      var incomingPosRefId = m.Data.pos_ref_id;\n\n      if (this.CurrentFlow != _SpiModels__WEBPACK_IMPORTED_MODULE_1__[\"SpiFlow\"].Transaction || this.CurrentTxFlowState.Finished || !this.CurrentTxFlowState.PosRefId == incomingPosRefId) {\n        this._log.info(\"Received Signature Required but I was not waiting for one. Incoming Pos Ref ID: \".concat(incomingPosRefId));\n\n        return;\n      }\n\n      this.CurrentTxFlowState.SignatureRequired(new _Purchase__WEBPACK_IMPORTED_MODULE_15__[\"SignatureRequired\"](m), \"Ask Customer to Sign the Receipt\");\n      document.dispatchEvent(new CustomEvent('TxFlowStateChanged', {\n        detail: this.CurrentTxFlowState\n      }));\n    } // <summary>\n    // The PinPad server will send us this message when an auth code is required.\n    // </summary>\n    // <param name=\"m\"></param>\n\n  }, {\n    key: \"_handleAuthCodeRequired\",\n    value: function _handleAuthCodeRequired(m) {\n      var incomingPosRefId = m.Data.pos_ref_id;\n\n      if (this.CurrentFlow != _SpiModels__WEBPACK_IMPORTED_MODULE_1__[\"SpiFlow\"].Transaction || this.CurrentTxFlowState.Finished || !this.CurrentTxFlowState.PosRefId == incomingPosRefId) {\n        _log.info(\"Received Auth Code Required but I was not waiting for one. Incoming Pos Ref ID: \".concat(incomingPosRefId));\n\n        return;\n      }\n\n      var phoneForAuthRequired = new _Purchase__WEBPACK_IMPORTED_MODULE_15__[\"PhoneForAuthRequired\"](m);\n      var msg = \"Auth Code Required. Call \".concat(phoneForAuthRequired.GetPhoneNumber(), \" and quote merchant id \").concat(phoneForAuthRequired.GetMerchantId());\n      this.CurrentTxFlowState.PhoneForAuthRequired(phoneForAuthRequired, msg);\n      document.dispatchEvent(new CustomEvent('TxFlowStateChanged', {\n        detail: this.CurrentTxFlowState\n      }));\n    } // <summary>\n    // The PinPad server will reply to our PurchaseRequest with a PurchaseResponse.\n    // </summary>\n    // <param name=\"m\"></param>\n\n  }, {\n    key: \"_handlePurchaseResponse\",\n    value: function _handlePurchaseResponse(m) {\n      var incomingPosRefId = m.Data.pos_ref_id;\n\n      if (this.CurrentFlow != _SpiModels__WEBPACK_IMPORTED_MODULE_1__[\"SpiFlow\"].Transaction || this.CurrentTxFlowState.Finished || !this.CurrentTxFlowState.PosRefId == incomingPosRefId) {\n        this._log.info(\"Received Purchase response but I was not waiting for one. Incoming Pos Ref ID: \".concat(incomingPosRefId, \"\\\"\"));\n\n        return;\n      } // TH-1A, TH-2A\n\n\n      this.CurrentTxFlowState.Completed(m.GetSuccessState(), m, \"Purchase Transaction Ended.\"); // TH-6A, TH-6E\n\n      document.dispatchEvent(new CustomEvent('TxFlowStateChanged', {\n        detail: this.CurrentTxFlowState\n      }));\n    } // <summary>\n    // The PinPad server will reply to our CashoutOnlyRequest with a CashoutOnlyResponse.\n    // </summary>\n    // <param name=\"m\"></param>\n\n  }, {\n    key: \"_handleCashoutOnlyResponse\",\n    value: function _handleCashoutOnlyResponse(m) {\n      var incomingPosRefId = m.Data.pos_ref_id;\n\n      if (this.CurrentFlow != _SpiModels__WEBPACK_IMPORTED_MODULE_1__[\"SpiFlow\"].Transaction || this.CurrentTxFlowState.Finished || !this.CurrentTxFlowState.PosRefId == incomingPosRefId) {\n        this._log.info(\"Received Cashout Response but I was not waiting for one. Incoming Pos Ref ID: \".concat(incomingPosRefId));\n\n        return;\n      } // TH-1A, TH-2A\n\n\n      this.CurrentTxFlowState.Completed(m.GetSuccessState(), m, \"Cashout Transaction Ended.\"); // TH-6A, TH-6E\n\n      document.dispatchEvent(new CustomEvent('TxFlowStateChanged', {\n        detail: this.CurrentTxFlowState\n      }));\n    } // <summary>\n    // The PinPad server will reply to our MotoPurchaseRequest with a MotoPurchaseResponse.\n    // </summary>\n    // <param name=\"m\"></param>\n\n  }, {\n    key: \"_handleMotoPurchaseResponse\",\n    value: function _handleMotoPurchaseResponse(m) {\n      var incomingPosRefId = m.Data.pos_ref_id;\n\n      if (this.CurrentFlow != _SpiModels__WEBPACK_IMPORTED_MODULE_1__[\"SpiFlow\"].Transaction || this.CurrentTxFlowState.Finished || !this.CurrentTxFlowState.PosRefId == incomingPosRefId) {\n        this._log.info(\"Received Moto Response but I was not waiting for one. Incoming Pos Ref ID: \".concat(incomingPosRefId));\n\n        return;\n      } // TH-1A, TH-2A\n\n\n      this.CurrentTxFlowState.Completed(m.GetSuccessState(), m, \"Moto Transaction Ended.\"); // TH-6A, TH-6E\n\n      document.dispatchEvent(new CustomEvent('TxFlowStateChanged', {\n        detail: this.CurrentTxFlowState\n      }));\n    } // <summary>\n    // The PinPad server will reply to our RefundRequest with a RefundResponse.\n    // </summary>\n    // <param name=\"m\"></param>\n\n  }, {\n    key: \"_handleRefundResponse\",\n    value: function _handleRefundResponse(m) {\n      var incomingPosRefId = m.Data.pos_ref_id;\n\n      if (this.CurrentFlow != _SpiModels__WEBPACK_IMPORTED_MODULE_1__[\"SpiFlow\"].Transaction || this.CurrentTxFlowState.Finished | !this.CurrentTxFlowState.PosRefId == incomingPosRefId) {\n        this._log.info(\"Received Refund response but I was not waiting for this one. Incoming Pos Ref ID: \".concat(incomingPosRefId));\n\n        return;\n      } // TH-1A, TH-2A\n\n\n      this.CurrentTxFlowState.Completed(m.GetSuccessState(), m, \"Refund Transaction Ended.\"); // TH-6A, TH-6E\n\n      document.dispatchEvent(new CustomEvent('TxFlowStateChanged', {\n        detail: this.CurrentTxFlowState\n      }));\n    } // <summary>\n    // TODO: Handle the Settlement Response received from the PinPad\n    // </summary>\n    // <param name=\"m\"></param>\n\n  }, {\n    key: \"HandleSettleResponse\",\n    value: function HandleSettleResponse(m) {\n      if (this.CurrentFlow != _SpiModels__WEBPACK_IMPORTED_MODULE_1__[\"SpiFlow\"].Transaction || this.CurrentTxFlowState.Finished) {\n        this._log.info(\"Received Settle response but I was not waiting for one. \".concat(m.DecryptedJson));\n\n        return;\n      } // TH-1A, TH-2A\n\n\n      this.CurrentTxFlowState.Completed(m.GetSuccessState(), m, \"Settle Transaction Ended.\"); // TH-6A, TH-6E\n\n      document.dispatchEvent(new CustomEvent('TxFlowStateChanged', {\n        detail: this.CurrentTxFlowState\n      }));\n    } // <summary>\n    // Handle the Settlement Enquiry Response received from the PinPad\n    // </summary>\n    // <param name=\"m\"></param>\n\n  }, {\n    key: \"_handleSettlementEnquiryResponse\",\n    value: function _handleSettlementEnquiryResponse(m) {\n      if (this.CurrentFlow != _SpiModels__WEBPACK_IMPORTED_MODULE_1__[\"SpiFlow\"].Transaction || this.CurrentTxFlowState.Finished) {\n        this._log.info(\"Received Settlement Enquiry response but I was not waiting for one. \".concat(m.DecryptedJson));\n\n        return;\n      } // TH-1A, TH-2A\n\n\n      this.CurrentTxFlowState.Completed(m.GetSuccessState(), m, \"Settlement Enquiry Ended.\"); // TH-6A, TH-6E\n\n      document.dispatchEvent(new CustomEvent('TxFlowStateChanged', {\n        detail: this.CurrentTxFlowState\n      }));\n    } // <summary>\n    // Sometimes we receive event type \"error\" from the server, such as when calling cancel_transaction and there is no transaction in progress.\n    // </summary>\n    // <param name=\"m\"></param>\n\n  }, {\n    key: \"_handleErrorEvent\",\n    value: function _handleErrorEvent(m) {\n      if (this.CurrentFlow == _SpiModels__WEBPACK_IMPORTED_MODULE_1__[\"SpiFlow\"].Transaction && !this.CurrentTxFlowState.Finished && this.CurrentTxFlowState.AttemptingToCancel && m.GetError() == \"NO_TRANSACTION\") {\n        // TH-2E\n        this._log.info(\"Was trying to cancel a transaction but there is nothing to cancel. Calling GLT to see what's up\");\n\n        this._callGetLastTransaction();\n      } else {\n        this._log.info(\"Received Error Event But Don't know what to do with it. \".concat(m.DecryptedJson));\n      }\n    } // <summary>\n    // When the PinPad returns to us what the Last Transaction was.\n    // </summary>\n    // <param name=\"m\"></param>\n\n  }, {\n    key: \"_handleGetLastTransactionResponse\",\n    value: function _handleGetLastTransactionResponse(m) {\n      var txState = this.CurrentTxFlowState;\n\n      if (this.CurrentFlow != _SpiModels__WEBPACK_IMPORTED_MODULE_1__[\"SpiFlow\"].Transaction || txState.Finished) {\n        // We were not in the middle of a transaction, who cares?\n        return;\n      } // TH-4 We were in the middle of a transaction.\n      // Let's attempt recovery. This is step 4 of Transaction Processing Handling\n\n\n      this._log.info(\"Got Last Transaction..\");\n\n      txState.GotGltResponse();\n      var gtlResponse = new _Purchase__WEBPACK_IMPORTED_MODULE_15__[\"GetLastTransactionResponse\"](m);\n      txState.GLTResponsePosRefId = gtlResponse.GetPosRefId();\n\n      if (!gtlResponse.WasRetrievedSuccessfully()) {\n        if (gtlResponse.IsStillInProgress(txState.PosRefId)) {\n          // TH-4E - Operation In Progress\n          if (gtlResponse.IsWaitingForSignatureResponse() && !txState.AwaitingSignatureCheck) {\n            this._log.info(\"Eftpos is waiting for us to send it signature accept/decline, but we were not aware of this. \" + \"The user can only really decline at this stage as there is no receipt to print for signing.\");\n\n            this.CurrentTxFlowState.SignatureRequired(new _Purchase__WEBPACK_IMPORTED_MODULE_15__[\"SignatureRequired\"](txState.PosRefId, m.Id, \"MISSING RECEIPT\\n DECLINE AND TRY AGAIN.\"), \"Recovered in Signature Required but we don't have receipt. You may Decline then Retry.\");\n          } else if (gtlResponse.IsWaitingForAuthCode() && !txState.AwaitingPhoneForAuth) {\n            this._log.info(\"Eftpos is waiting for us to send it auth code, but we were not aware of this. \" + \"We can only cancel the transaction at this stage as we don't have enough information to recover from this.\");\n\n            this.CurrentTxFlowState.PhoneForAuthRequired(new _Purchase__WEBPACK_IMPORTED_MODULE_15__[\"PhoneForAuthRequired\"](txState.PosRefId, m.Id, \"UNKNOWN\", \"UNKNOWN\"), \"Recovered mid Phone-For-Auth but don't have details. You may Cancel then Retry.\");\n          } else {\n            this._log.info(\"Operation still in progress... stay waiting.\"); // No need to publish txFlowStateChanged. Can return;\n\n\n            return;\n          }\n        } else if (gtlResponse.WasTimeOutOfSyncError()) {\n          // Let's not give up based on a TOOS error.\n          // Let's log it, and ignore it. \n          this._log.info(\"Time-Out-Of-Sync error in Get Last Transaction response. Let's ignore it and we'll try again.\"); // No need to publish txFlowStateChanged. Can return;\n\n\n          return;\n        } else {\n          // TH-4X - Unexpected Response when recovering\n          this._log.info(\"Unexpected Response in Get Last Transaction during - Received posRefId:\".concat(gtlResponse.GetPosRefId(), \" Error:\").concat(m.GetError()));\n\n          txState.UnknownCompleted(\"Unexpected Error when recovering Transaction Status. Check EFTPOS. \");\n        }\n      } else {\n        if (txState.Type == _SpiModels__WEBPACK_IMPORTED_MODULE_1__[\"TransactionType\"].GetLastTransaction) {\n          // THIS WAS A PLAIN GET LAST TRANSACTION REQUEST, NOT FOR RECOVERY PURPOSES.\n          this._log.info(\"Retrieved Last Transaction as asked directly by the user.\");\n\n          gtlResponse.CopyMerchantReceiptToCustomerReceipt();\n          txState.Completed(m.GetSuccessState(), m, \"Last Transaction Retrieved\");\n        } else {\n          // TH-4A - Let's try to match the received last transaction against the current transaction\n          var successState = this.GltMatch(gtlResponse, txState.PosRefId);\n\n          if (successState == _Messages__WEBPACK_IMPORTED_MODULE_0__[\"SuccessState\"].Unknown) {\n            // TH-4N: Didn't Match our transaction. Consider Unknown State.\n            this._log.info(\"Did not match transaction.\");\n\n            txState.UnknownCompleted(\"Failed to recover Transaction Status. Check EFTPOS. \");\n          } else {\n            // TH-4Y: We Matched, transaction finished, let's update ourselves\n            gtlResponse.CopyMerchantReceiptToCustomerReceipt();\n            txState.Completed(successState, m, \"Transaction Ended.\");\n          }\n        }\n      }\n\n      document.dispatchEvent(new CustomEvent('TxFlowStateChanged', {\n        detail: txState\n      }));\n    } //When the transaction cancel response is returned.\n\n  }, {\n    key: \"_handleCancelTransactionResponse\",\n    value: function _handleCancelTransactionResponse(m) {\n      var incomingPosRefId = m.Data.pos_ref_id;\n\n      if (this.CurrentFlow != _SpiModels__WEBPACK_IMPORTED_MODULE_1__[\"SpiFlow\"].Transaction || this.CurrentTxFlowState.Finished || !this.CurrentTxFlowState.PosRefId == incomingPosRefId) {\n        this._log.info(\"Received Cancel Required but I was not waiting for one. Incoming Pos Ref ID: \".concat(incomingPosRefId));\n\n        return;\n      }\n\n      var txState = this.CurrentTxFlowState;\n      var cancelResponse = new _Purchase__WEBPACK_IMPORTED_MODULE_15__[\"CancelTransactionResponse\"](m);\n      if (cancelResponse.Success) return;\n\n      this._log.warn(\"Failed to cancel transaction: reason=\" + cancelResponse.GetErrorReason() + \", detail=\" + cancelResponse.GetErrorDetail());\n\n      txState.CancelFailed(\"Failed to cancel transaction: \" + cancelResponse.GetErrorDetail() + \". Check EFTPOS.\");\n      document.dispatchEvent(new CustomEvent('TxFlowStateChanged', {\n        detail: txState\n      }));\n    }\n  }, {\n    key: \"_handleSetPosInfoResponse\",\n    value: function _handleSetPosInfoResponse(m) {\n      var response = new _PosInfo__WEBPACK_IMPORTED_MODULE_11__[\"SetPosInfoResponse\"](m);\n\n      if (response.isSuccess()) {\n        this._hasSetInfo = true;\n\n        this._log.info(\"Setting POS info successful\");\n      } else {\n        this._log.warn(\"Setting POS info failed: reason=\" + response.getErrorReason() + \", detail=\" + response.getErrorDetail());\n      }\n    }\n  }, {\n    key: \"_startTransactionMonitoringThread\",\n    value: function _startTransactionMonitoringThread() {\n      var _this = this;\n\n      var needsPublishing = false;\n      var txState = this.CurrentTxFlowState;\n\n      if (this.CurrentFlow == _SpiModels__WEBPACK_IMPORTED_MODULE_1__[\"SpiFlow\"].Transaction && !txState.Finished) {\n        var state = txState;\n\n        if (state.AttemptingToCancel && Date.now() > state.CancelAttemptTime + this._maxWaitForCancelTx) {\n          // TH-2T - too long since cancel attempt - Consider unknown\n          this._log.info(\"Been too long waiting for transaction to cancel.\");\n\n          txState.UnknownCompleted(\"Waited long enough for Cancel Transaction result. Check EFTPOS. \");\n          needsPublishing = true;\n        } else if (state.RequestSent && Date.now() > state.LastStateRequestTime + this._checkOnTxFrequency) {\n          // TH-1T, TH-4T - It's been a while since we received an update, let's call a GLT\n          this._log.info(\"Checking on our transaction. Last we asked was at \".concat(state.LastStateRequestTime, \"...\"));\n\n          txState.CallingGlt();\n\n          this._callGetLastTransaction();\n        }\n      }\n\n      if (needsPublishing) {\n        document.dispatchEvent(new CustomEvent('TxFlowStateChanged', {\n          detail: this.CurrentTxFlowState\n        }));\n      }\n\n      setTimeout(function () {\n        return _this._startTransactionMonitoringThread();\n      }, this._txMonitorCheckFrequency);\n    }\n  }, {\n    key: \"PrintingResponse\",\n    value: function PrintingResponse(m) {\n      throw new Error('Method not implemented. Please overwrite this method in your POS');\n    }\n  }, {\n    key: \"TerminalStatusResponse\",\n    value: function TerminalStatusResponse(m) {\n      throw new Error('Method not implemented. Please overwrite this method in your POS');\n    }\n  }, {\n    key: \"BatteryLevelChanged\",\n    value: function BatteryLevelChanged(m) {\n      throw new Error('Method not implemented. Please overwrite this method in your POS');\n    }\n  }, {\n    key: \"_handlePrintingResponse\",\n    value: function _handlePrintingResponse(m) {\n      this.PrintingResponse(m);\n    }\n  }, {\n    key: \"_handleTerminalStatusResponse\",\n    value: function _handleTerminalStatusResponse(m) {\n      this.TerminalStatusResponse(m);\n    }\n  }, {\n    key: \"_handleBatteryLevelChanged\",\n    value: function _handleBatteryLevelChanged(m) {\n      this.BatteryLevelChanged(m);\n    } // endregion\n    // region Internals for Connection Management\n\n  }, {\n    key: \"_resetConn\",\n    value: function _resetConn() {\n      var _this2 = this;\n\n      // Setup the Connection\n      this._conn = new _Connection__WEBPACK_IMPORTED_MODULE_4__[\"Connection\"]();\n\n      if (this._isUsingHttps() || this._forceSecureWebSockets) {\n        this._log.info(\"Secure connection detected.\");\n\n        this._eftposAddress = this._eftposAddress.replace(\"ws://\", \"wss://\");\n      }\n\n      this._conn.Address = this._eftposAddress; // Register our Event Handlers\n\n      document.addEventListener('ConnectionStatusChanged', function (e) {\n        return _this2._onSpiConnectionStatusChanged(e.detail);\n      });\n      document.addEventListener('MessageReceived', function (e) {\n        return _this2._onSpiMessageReceived(e.detail);\n      });\n      document.addEventListener('ErrorReceived', function (e) {\n        return _this2._onWsErrorReceived(e.detail);\n      });\n    } // <summary>\n    // This method will be called when the connection status changes.\n    // You are encouraged to display a PinPad Connection Indicator on the POS screen.\n    // </summary>\n    // <param name=\"state\"></param>\n\n  }, {\n    key: \"_onSpiConnectionStatusChanged\",\n    value: function _onSpiConnectionStatusChanged(state) {\n      var _this3 = this;\n\n      switch (state.ConnectionState) {\n        case _Connection__WEBPACK_IMPORTED_MODULE_4__[\"ConnectionState\"].Connecting:\n          this._log.info(\"I'm Connecting to the Eftpos at \".concat(this._eftposAddress, \"...\"));\n\n          break;\n\n        case _Connection__WEBPACK_IMPORTED_MODULE_4__[\"ConnectionState\"].Connected:\n          this._retriesSinceLastDeviceAddressResolution = 0;\n\n          if (this.CurrentFlow == _SpiModels__WEBPACK_IMPORTED_MODULE_1__[\"SpiFlow\"].Pairing && this.CurrentStatus == _SpiModels__WEBPACK_IMPORTED_MODULE_1__[\"SpiStatus\"].Unpaired) {\n            this.CurrentPairingFlowState.Message = \"Requesting to Pair...\";\n            document.dispatchEvent(new CustomEvent('PairingFlowStateChanged', {\n              detail: this.CurrentPairingFlowState\n            }));\n            var pr = _PairingHelper__WEBPACK_IMPORTED_MODULE_3__[\"PairingHelper\"].NewPairRequest();\n\n            this._send(pr.ToMessage());\n          } else {\n            this._log.info(\"I'm Connected to \".concat(this._eftposAddress, \"...\"));\n\n            this._spiMessageStamp.Secrets = this._secrets;\n\n            this._startPeriodicPing();\n          }\n\n          break;\n\n        case _Connection__WEBPACK_IMPORTED_MODULE_4__[\"ConnectionState\"].Disconnected:\n          // Let's reset some lifecycle related to connection state, ready for next connection\n          this._log.info(\"I'm disconnected from \".concat(this._eftposAddress, \"...\"));\n\n          this._mostRecentPingSent = null;\n          this._mostRecentPongReceived = null;\n          this._missedPongsCount = 0;\n\n          this._stopPeriodicPing();\n\n          if (this.CurrentStatus != _SpiModels__WEBPACK_IMPORTED_MODULE_1__[\"SpiStatus\"].Unpaired) {\n            this.CurrentStatus = _SpiModels__WEBPACK_IMPORTED_MODULE_1__[\"SpiStatus\"].PairedConnecting;\n\n            if (this.CurrentFlow == _SpiModels__WEBPACK_IMPORTED_MODULE_1__[\"SpiFlow\"].Transaction && !this.CurrentTxFlowState.Finished) {\n              // we're in the middle of a transaction, just so you know!\n              // TH-1D\n              this._log.info(\"Lost connection in the middle of a transaction...\");\n            }\n\n            if (this._conn == null) return; // This means the instance has been disposed. Aborting.\n\n            if (this._autoAddressResolutionEnabled) {\n              if (this._retriesSinceLastDeviceAddressResolution >= this._retriesBeforeResolvingDeviceAddress) {\n                this._autoResolveEftposAddress();\n\n                this._retriesSinceLastDeviceAddressResolution = 0;\n              } else {\n                this._retriesSinceLastDeviceAddressResolution += 1;\n              }\n            }\n\n            this._log.info(\"Will try to reconnect in \".concat(this._sleepBeforeReconnectMs, \"ms...\"));\n\n            setTimeout(function () {\n              if (_this3.CurrentStatus != _SpiModels__WEBPACK_IMPORTED_MODULE_1__[\"SpiStatus\"].Unpaired) {\n                // This is non-blocking\n                if (_this3._conn) {\n                  _this3._conn.Connect();\n                }\n              }\n            }, this._sleepBeforeReconnectMs);\n          } else if (this.CurrentFlow == _SpiModels__WEBPACK_IMPORTED_MODULE_1__[\"SpiFlow\"].Pairing) {\n            this._log.info(\"Lost Connection during pairing.\");\n\n            this.CurrentPairingFlowState.Message = \"Could not Connect to Pair. Check Network and Try Again...\";\n\n            this._onPairingFailed();\n\n            document.dispatchEvent(new CustomEvent('PairingFlowStateChanged', {\n              detail: this.CurrentPairingFlowState\n            }));\n          }\n\n          break;\n\n        default:\n          throw new Error('Unknown state: ' + state);\n      }\n    } // <summary>\n    // This is an important piece of the puzzle. It's a background thread that periodically\n    // sends Pings to the server. If it doesn't receive Pongs, it considers the connection as broken\n    // so it disconnects. \n    // </summary>\n\n  }, {\n    key: \"_startPeriodicPing\",\n    value: function _startPeriodicPing() {\n      var _this4 = this;\n\n      this._stopPeriodicPing();\n\n      this._periodicPingThread = setInterval(function () {\n        return _this4._periodicPing();\n      }, this._pingFrequency);\n\n      this._periodicPing();\n    }\n  }, {\n    key: \"_periodicPing\",\n    value: function _periodicPing() {\n      var _this5 = this;\n\n      // while i'm still connected AND paired...\n      if (this._conn.Connected && this._secrets != null) {\n        this._doPing();\n\n        setTimeout(function () {\n          if (_this5._mostRecentPingSent != null && (_this5._mostRecentPongReceived == null || _this5._mostRecentPongReceived.Id != _this5._mostRecentPingSent.Id)) {\n            _this5._missedPongsCount += 1;\n\n            _this5._log.info(\"Eftpos didn't reply to my Ping. Missed Count: \".concat(_this5._missedPongsCount, \"/\").concat(_this5._missedPongsToDisconnect, \".\"));\n\n            if (_this5._missedPongsCount < _this5._missedPongsToDisconnect) {\n              _this5._log.info(\"Trying another ping...\");\n\n              _this5._startPeriodicPing();\n\n              return;\n            } // This means that we have not received a pong for our most recent ping.\n            // We consider this connection as broken.\n            // Let's Disconnect.\n\n\n            _this5._log.info(\"Disconnecting...\");\n\n            _this5._conn.Disconnect();\n\n            _this5._stopPeriodicPing();\n          }\n\n          _this5._missedPongsCount = 0;\n        }, this._pongTimeout);\n      } else {\n        this._stopPeriodicPing();\n\n        this._log.info(\"Cancelling periodic ping as were disconnected or not paired\");\n      }\n    } // <summary>\n    // We call this ourselves as soon as we're ready to transact with the PinPad after a connection is established.\n    // This function is effectively called after we received the first Login Response from the PinPad.\n    // </summary>\n\n  }, {\n    key: \"_onReadyToTransact\",\n    value: function _onReadyToTransact() {\n      this._log.info(\"On Ready To Transact!\"); // So, we have just made a connection, pinged and logged in successfully.\n\n\n      this.CurrentStatus = _SpiModels__WEBPACK_IMPORTED_MODULE_1__[\"SpiStatus\"].PairedConnected;\n\n      if (this.CurrentFlow == _SpiModels__WEBPACK_IMPORTED_MODULE_1__[\"SpiFlow\"].Transaction && !this.CurrentTxFlowState.Finished) {\n        if (this.CurrentTxFlowState.RequestSent) {\n          // TH-3A - We've just reconnected and were in the middle of Tx.\n          // Let's get the last transaction to check what we might have missed out on.\n          this.CurrentTxFlowState.CallingGlt();\n\n          this._callGetLastTransaction();\n        } else {\n          // TH-3AR - We had not even sent the request yet. Let's do that now\n          this._send(this.CurrentTxFlowState.Request);\n\n          this.CurrentTxFlowState.Sent(\"Sending Request Now...\");\n          document.dispatchEvent(new CustomEvent('TxFlowStateChanged', {\n            detail: this.CurrentTxFlowState\n          }));\n        }\n      } else {\n        if (!this._hasSetInfo) {\n          this._callSetPosInfo();\n        } // let's also tell the eftpos our latest table configuration.\n\n\n        if (this._spiPat) {\n          this._spiPat.PushPayAtTableConfig();\n        }\n      }\n    }\n  }, {\n    key: \"_callSetPosInfo\",\n    value: function _callSetPosInfo() {\n      var setPosInfoRequest = new _PosInfo__WEBPACK_IMPORTED_MODULE_11__[\"SetPosInfoRequest\"](this._posVersion, this._posVendorId, \"js\", SPI_VERSION, _PosInfo__WEBPACK_IMPORTED_MODULE_11__[\"DeviceInfo\"].GetAppDeviceInfo());\n\n      this._send(setPosInfoRequest.toMessage());\n    } // <summary>\n    // When we disconnect, we should also stop the periodic ping.\n    // </summary>\n\n  }, {\n    key: \"_stopPeriodicPing\",\n    value: function _stopPeriodicPing() {\n      if (this._periodicPingThread) {\n        // If we were already set up, clean up before restarting.\n        clearInterval(this._periodicPingThread);\n        this._periodicPingThread = null;\n      }\n    } // Send a Ping to the Server\n\n  }, {\n    key: \"_doPing\",\n    value: function _doPing() {\n      var ping = _PingHelper__WEBPACK_IMPORTED_MODULE_14__[\"PingHelper\"].GeneratePingRequest();\n      this._mostRecentPingSent = ping;\n\n      this._send(ping);\n\n      this._mostRecentPingSentTime = Date.now();\n    } // <summary>\n    // Received a Pong from the server\n    // </summary>\n    // <param name=\"m\"></param>\n\n  }, {\n    key: \"_handleIncomingPong\",\n    value: function _handleIncomingPong(m) {\n      // We need to maintain this time delta otherwise the server will not accept our messages.\n      this._spiMessageStamp.ServerTimeDelta = m.GetServerTimeDelta();\n\n      if (this._mostRecentPongReceived == null) {\n        // First pong received after a connection, and after the pairing process is fully finalised.\n        if (this.CurrentStatus != _SpiModels__WEBPACK_IMPORTED_MODULE_1__[\"SpiStatus\"].Unpaired) {\n          this._log.info(\"First pong of connection and in paired state.\");\n\n          this._onReadyToTransact();\n        } else {\n          this._log.info(\"First pong of connection but pairing process not finalised yet.\");\n        }\n      }\n\n      this._mostRecentPongReceived = m;\n\n      this._log.debug(\"PongLatency:\".concat(Date.now() - this._mostRecentPingSentTime));\n    } // <summary>\n    // The server will also send us pings. We need to reply with a pong so it doesn't disconnect us.\n    // </summary>\n    // <param name=\"m\"></param>\n\n  }, {\n    key: \"_handleIncomingPing\",\n    value: function _handleIncomingPing(m) {\n      var pong = _PingHelper__WEBPACK_IMPORTED_MODULE_14__[\"PongHelper\"].GeneratePongRessponse(m);\n\n      this._send(pong);\n    } // <summary>\n    // Ask the PinPad to tell us what the Most Recent Transaction was\n    // </summary>\n\n  }, {\n    key: \"_callGetLastTransaction\",\n    value: function _callGetLastTransaction() {\n      var gltRequest = new _Purchase__WEBPACK_IMPORTED_MODULE_15__[\"GetLastTransactionRequest\"]();\n\n      this._send(gltRequest.ToMessage());\n    } // <summary>\n    // This method will be called whenever we receive a message from the Connection\n    // </summary>\n    // <param name=\"messageJson\"></param>\n\n  }, {\n    key: \"_onSpiMessageReceived\",\n    value: function _onSpiMessageReceived(messageJson) {\n      // First we parse the incoming message\n      var m = _Messages__WEBPACK_IMPORTED_MODULE_0__[\"Message\"].FromJson(messageJson.Message, this._secrets);\n\n      this._log.info(\"Received:\" + m.DecryptedJson);\n\n      if (_SpiPreauth__WEBPACK_IMPORTED_MODULE_7__[\"SpiPreauth\"].IsPreauthEvent(m.EventName)) {\n        this._spiPreauth._handlePreauthMessage(m);\n\n        return;\n      } // And then we switch on the event type.\n\n\n      switch (m.EventName) {\n        case _Messages__WEBPACK_IMPORTED_MODULE_0__[\"Events\"].KeyRequest:\n          this._handleKeyRequest(m);\n\n          break;\n\n        case _Messages__WEBPACK_IMPORTED_MODULE_0__[\"Events\"].KeyCheck:\n          this._handleKeyCheck(m);\n\n          break;\n\n        case _Messages__WEBPACK_IMPORTED_MODULE_0__[\"Events\"].PairResponse:\n          this._handlePairResponse(m);\n\n          break;\n\n        case _Messages__WEBPACK_IMPORTED_MODULE_0__[\"Events\"].DropKeysAdvice:\n          this._handleDropKeysAdvice(m);\n\n          break;\n\n        case _Messages__WEBPACK_IMPORTED_MODULE_0__[\"Events\"].PurchaseResponse:\n          this._handlePurchaseResponse(m);\n\n          break;\n\n        case _Messages__WEBPACK_IMPORTED_MODULE_0__[\"Events\"].RefundResponse:\n          this._handleRefundResponse(m);\n\n          break;\n\n        case _Messages__WEBPACK_IMPORTED_MODULE_0__[\"Events\"].CashoutOnlyResponse:\n          this._handleCashoutOnlyResponse(m);\n\n          break;\n\n        case _Messages__WEBPACK_IMPORTED_MODULE_0__[\"Events\"].MotoPurchaseResponse:\n          this._handleMotoPurchaseResponse(m);\n\n          break;\n\n        case _Messages__WEBPACK_IMPORTED_MODULE_0__[\"Events\"].SignatureRequired:\n          this._handleSignatureRequired(m);\n\n          break;\n\n        case _Messages__WEBPACK_IMPORTED_MODULE_0__[\"Events\"].AuthCodeRequired:\n          this._handleAuthCodeRequired(m);\n\n          break;\n\n        case _Messages__WEBPACK_IMPORTED_MODULE_0__[\"Events\"].GetLastTransactionResponse:\n          this._handleGetLastTransactionResponse(m);\n\n          break;\n\n        case _Messages__WEBPACK_IMPORTED_MODULE_0__[\"Events\"].SettleResponse:\n          this.HandleSettleResponse(m);\n          break;\n\n        case _Messages__WEBPACK_IMPORTED_MODULE_0__[\"Events\"].SettlementEnquiryResponse:\n          this._handleSettlementEnquiryResponse(m);\n\n          break;\n\n        case _Messages__WEBPACK_IMPORTED_MODULE_0__[\"Events\"].Ping:\n          this._handleIncomingPing(m);\n\n          break;\n\n        case _Messages__WEBPACK_IMPORTED_MODULE_0__[\"Events\"].Pong:\n          this._handleIncomingPong(m);\n\n          break;\n\n        case _Messages__WEBPACK_IMPORTED_MODULE_0__[\"Events\"].KeyRollRequest:\n          this._handleKeyRollingRequest(m);\n\n          break;\n\n        case _Messages__WEBPACK_IMPORTED_MODULE_0__[\"Events\"].CancelTransactionResponse:\n          this._handleCancelTransactionResponse(m);\n\n          break;\n\n        case _Messages__WEBPACK_IMPORTED_MODULE_0__[\"Events\"].SetPosInfoResponse:\n          this._handleSetPosInfoResponse(m);\n\n          break;\n\n        case _Messages__WEBPACK_IMPORTED_MODULE_0__[\"Events\"].PayAtTableGetTableConfig:\n          if (this._spiPat == null) {\n            this._send(_PayAtTable__WEBPACK_IMPORTED_MODULE_6__[\"PayAtTableConfig\"].FeatureDisableMessage(_RequestIdHelper__WEBPACK_IMPORTED_MODULE_2__[\"RequestIdHelper\"].Id(\"patconf\")));\n\n            break;\n          }\n\n          this._spiPat._handleGetTableConfig(m);\n\n          break;\n\n        case _Messages__WEBPACK_IMPORTED_MODULE_0__[\"Events\"].PayAtTableGetBillDetails:\n          this._spiPat._handleGetBillDetailsRequest(m);\n\n          break;\n\n        case _Messages__WEBPACK_IMPORTED_MODULE_0__[\"Events\"].PayAtTableBillPayment:\n          this._spiPat._handleBillPaymentAdvice(m);\n\n          break;\n\n        case _Messages__WEBPACK_IMPORTED_MODULE_0__[\"Events\"].PrintingResponse:\n          this._handlePrintingResponse(m);\n\n          break;\n\n        case _Messages__WEBPACK_IMPORTED_MODULE_0__[\"Events\"].TerminalStatusResponse:\n          this._handleTerminalStatusResponse(m);\n\n          break;\n\n        case _Messages__WEBPACK_IMPORTED_MODULE_0__[\"Events\"].BatteryLevelChanged:\n          this._handleBatteryLevelChanged(m);\n\n          break;\n\n        case _Messages__WEBPACK_IMPORTED_MODULE_0__[\"Events\"].Error:\n          this._handleErrorEvent(m);\n\n          break;\n\n        case _Messages__WEBPACK_IMPORTED_MODULE_0__[\"Events\"].InvalidHmacSignature:\n          this._log.info(\"I could not verify message from Eftpos. You might have to Un-pair Eftpos and then reconnect.\");\n\n          break;\n\n        default:\n          this._log.info(\"I don't Understand Event: \".concat(m.EventName, \", \").concat(m.Data, \". Perhaps I have not implemented it yet.\"));\n\n          break;\n      }\n    }\n  }, {\n    key: \"_onWsErrorReceived\",\n    value: function _onWsErrorReceived(error) {\n      this._log.warn(\"Received WS Error\", error.Message);\n    }\n  }, {\n    key: \"_send\",\n    value: function _send(message) {\n      var json = message.ToJson(this._spiMessageStamp);\n\n      if (this._conn.Connected) {\n        this._log.info(\"Sending: \" + message.DecryptedJson);\n\n        this._conn.Send(json);\n\n        return true;\n      } else {\n        this._log.info(\"Asked to send, but not connected: \" + message.DecryptedJson);\n\n        return false;\n      }\n    }\n  }, {\n    key: \"HasSerialNumberChanged\",\n    value: function HasSerialNumberChanged(updatedSerialNumber) {\n      return this._serialNumber != updatedSerialNumber;\n    }\n  }, {\n    key: \"HasEftposAddressChanged\",\n    value: function HasEftposAddressChanged(updatedEftposAddress) {\n      return this._eftposAddress != updatedEftposAddress;\n    }\n  }, {\n    key: \"_autoResolveEftposAddress\",\n    value: function _autoResolveEftposAddress() {\n      var _this6 = this;\n\n      if (!this._autoAddressResolutionEnabled) return;\n      if (!this._serialNumber) return;\n      var service = new _Service_DeviceService__WEBPACK_IMPORTED_MODULE_16__[\"DeviceAddressService\"]();\n      var isSecureConnection = false; // determine whether to use wss or not\n\n      if (this._isUsingHttps() || this._forceSecureWebSockets) {\n        this._log.info(\"Secure connection detected.\");\n\n        isSecureConnection = true;\n      }\n\n      this._log.info(\"Resolving address for device \".concat(this._serialNumber, \".\"));\n\n      return service.RetrieveService(this._serialNumber, this._deviceApiKey, this._acquirerCode, isSecureConnection, this._inTestMode, this._log).then(function (response) {\n        var deviceAddressStatus = Object.assign(new _Service_DeviceService__WEBPACK_IMPORTED_MODULE_16__[\"DeviceAddressStatus\"](isSecureConnection), response);\n\n        if (!deviceAddressStatus || !deviceAddressStatus.Address) {\n          _this6._log.info(\"Could not resolve device address.\", response);\n\n          return;\n        }\n\n        _this6._log.info(\"Address for device resolved to \".concat(deviceAddressStatus.Address));\n\n        if (!_this6.HasEftposAddressChanged(deviceAddressStatus.Address)) return; // update device and connection address\n\n        var protocol = isSecureConnection ? \"wss\" : \"ws\";\n        _this6._eftposAddress = protocol + \"://\" + deviceAddressStatus.Address;\n        _this6._conn.Address = _this6._eftposAddress;\n        _this6.CurrentDeviceStatus = deviceAddressStatus;\n        document.dispatchEvent(new CustomEvent('DeviceAddressChanged', {\n          detail: _this6.CurrentDeviceStatus\n        }));\n        return _this6.CurrentDeviceStatus;\n      });\n    }\n  }, {\n    key: \"_isUsingHttps\",\n    value: function _isUsingHttps() {\n      return 'https:' == document.location.protocol ? true : false;\n    }\n  }], [{\n    key: \"GetVersion\",\n    value: function GetVersion() {\n      return SPI_VERSION;\n    }\n  }]);\n\n  return Spi;\n}();\n\n\n\n\n/***/ }),\n\n/***/ \"./src/SpiModels.js\":\n/*!**************************!*\\\n  !*** ./src/SpiModels.js ***!\n  \\**************************/\n/*! exports provided: SpiStatus, SpiFlow, PairingFlowState, TransactionType, InitiateTxResult, MidTxResult, TransactionFlowState, SubmitAuthCodeResult, SpiConfig, TransactionOptions */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SpiStatus\", function() { return SpiStatus; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SpiFlow\", function() { return SpiFlow; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"PairingFlowState\", function() { return PairingFlowState; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"TransactionType\", function() { return TransactionType; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"InitiateTxResult\", function() { return InitiateTxResult; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MidTxResult\", function() { return MidTxResult; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"TransactionFlowState\", function() { return TransactionFlowState; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SubmitAuthCodeResult\", function() { return SubmitAuthCodeResult; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SpiConfig\", function() { return SpiConfig; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"TransactionOptions\", function() { return TransactionOptions; });\n/* harmony import */ var _Messages__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Messages */ \"./src/Messages.js\");\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n // <summary>\n// Represents the 3 Pairing statuses that the Spi instanxce can be in.\n// </summary>\n\nvar SpiStatus = {\n  // <summary>\n  // Paired and Connected\n  // </summary>\n  PairedConnected: 'PairedConnected',\n  // <summary>\n  // Paired but trying to establish a connection \n  // </summary>\n  PairedConnecting: 'PairedConnecting',\n  // <summary>\n  // Unpaired\n  // </summary>\n  Unpaired: 'Unpaired'\n}; // <summary>\n// The Spi instance can be in one of these flows at any point in time.\n// </summary>\n\nvar SpiFlow = {\n  // <summary>\n  // Currently going through the Pairing Process Flow.\n  // Happens during the Unpaired SpiStatus.\n  // </summary>\n  Pairing: 'Pairing',\n  // <summary>\n  // Currently going through the transaction Process Flow.\n  // Cannot happen in the Unpaired SpiStatus.\n  // </summary>\n  Transaction: 'Transaction',\n  // <summary>\n  // Not in any of the other states.\n  // </summary>\n  Idle: 'Idle'\n}; // <summary>\n// Represents the Pairing Flow State during the pairing process \n// </summary>\n\nvar PairingFlowState = function PairingFlowState(state) {\n  _classCallCheck(this, PairingFlowState);\n\n  // <summary>\n  // Some text that can be displayed in the Pairing Process Screen\n  // that indicates what the pairing process is up to.\n  // </summary>\n  this.Message = null; // <summary>\n  // When true, it means that the EFTPOS is shoing the confirmation code,\n  // and your user needs to press YES or NO on the EFTPOS.\n  // </summary>\n\n  this.AwaitingCheckFromEftpos = null; // <summary>\n  // When true, you need to display the YES/NO buttons on you pairing screen\n  // for your user to confirm the code.\n  // </summary>\n\n  this.AwaitingCheckFromPos = null; // <summary>\n  // This is the confirmation code for the pairing process.\n  // </summary>\n\n  this.ConfirmationCode = null; // <summary>\n  // Indicates whether the Pairing Flow has finished its job.\n  // </summary>\n\n  this.Finished = null; // <summary>\n  // Indicates whether pairing was successful or not.\n  // </summary>\n\n  this.Successful = null;\n\n  if (state) {\n    Object.assign(this, state);\n  }\n};\nvar TransactionType = {\n  Purchase: 'Purchase',\n  Refund: 'Refund',\n  CashoutOnly: 'CashoutOnly',\n  MOTO: 'MOTO',\n  Settle: 'Settle',\n  SettlementEnquiry: 'SettlementEnquiry',\n  GetLastTransaction: 'GetLastTransaction',\n  Preauth: 'Preauth',\n  AccountVerify: 'AccountVerify'\n}; // <summary>\n// Used as a return in the InitiateTx methods to signify whether \n// the transaction was initiated or not, and a reason to go with it.\n// </summary>\n\nvar InitiateTxResult = function InitiateTxResult(initiated, message) {\n  _classCallCheck(this, InitiateTxResult);\n\n  // <summary>\n  // Whether the tx was initiated.\n  // When true, you can expect updated to your registered callback.\n  // When false, you can retry calling the InitiateX method.\n  // </summary>\n  this.Initiated = initiated; // <summary>\n  // Text that gives reason for the Initiated flag, especially in case of false. \n  // </summary>\n\n  this.Message = message;\n}; // <summary>\n// Used as a return in calls mid transaction to let you know\n// whether the call was valid or not.\n// These attributes work for COM interop.\n// </summary>\n\nvar MidTxResult = // <summary>\n// This default stucture works for COM interop.\n// </summary>\nfunction MidTxResult(valid, message) {\n  _classCallCheck(this, MidTxResult);\n\n  this.Valid = valid;\n  this.Message = message;\n}; // <summary>\n// Represents the State during a TransactionFlow\n// </summary>\n\nvar TransactionFlowState =\n/*#__PURE__*/\nfunction () {\n  function TransactionFlowState(posRefId, type, amountCents, message, msg) {\n    _classCallCheck(this, TransactionFlowState);\n\n    // <summary>\n    //  The id given to this transaction\n    // </summary>\n    this.PosRefId = posRefId;\n    this.Id = posRefId; // obsolete, but let's maintain it for now, to mean same as PosRefId.\n    // <summary>\n    // Purchase/Refund/Settle/...\n    // </summary>\n\n    this.Type = type; // <summary>\n    // A text message to display on your Transaction Flow Screen\n    // </summary>\n\n    this.DisplayMessage = msg; // <summary>\n    // Amount in cents for this transaction\n    // </summary>\n\n    this.AmountCents = amountCents; // <summary>\n    // Whther the request has been sent to the EFTPOS yet or not.\n    // In the PairedConnecting state, the transaction is initiated\n    // but the request is only sent once the connection is recovered.\n    // </summary>\n\n    this.RequestSent = false; // <summary>\n    // The time when the request was sent to the EFTPOS.\n    // </summary>\n\n    this.RequestTime = null; // <summary>\n    // The time when we last asked for an update, including the original request at first\n    // </summary>\n\n    this.LastStateRequestTime = null; // <summary>\n    // Whether we're currently attempting to Cancel the transaction.\n    // </summary>\n\n    this.AttemptingToCancel = null; // <summary>\n    // When this flag is on, you need to display the dignature accept/decline buttons in your \n    // transaction flow screen.\n    // </summary>\n\n    this.AwaitingSignatureCheck = false; // <summary>\n    // When this flag is on, you need to show your user the phone number to call to get the authorisation code.\n    // Then you need to provide your user means to enter that given code and submit it via SubmitAuthCode().\n    // </summary>\n\n    this.AwaitingPhoneForAuth = null; // <summary>\n    // Whether this transaction flow is over or not.\n    // </summary>\n\n    this.Finished = false; // <summary>\n    // The success state of this transaction. Starts off as Unknown.\n    // When finished, can be Success, Failed OR Unknown.\n    // </summary>\n\n    this.Success = _Messages__WEBPACK_IMPORTED_MODULE_0__[\"SuccessState\"].Unknown; // <summary>\n    // The response at the end of the transaction. \n    // Might not be present in all edge cases.\n    // You can then turn this Message into the appropriate structure,\n    // such as PurchaseResponse, RefundResponse, etc\n    // </summary>\n\n    this.Response = null; // <summary>\n    // The message the we received from EFTPOS that told us that signature is required.\n    // </summary>\n\n    this.SignatureRequiredMessage = null; // <summary>\n    // The message the we received from EFTPOS that told us that Phone For Auth is required.\n    // </summary>\n\n    this.PhoneForAuthRequiredMessage = null; // <summary>\n    // The time when the cancel attempt was made.\n    // </summary>\n\n    this.CancelAttemptTime = null; // <summary>\n    // The request message that we are sending/sent to the server.\n    // </summary>\n\n    this.Request = message; // <summary>\n    // Whether we're currently waiting for a Get Last Transaction Response to get an update. \n    // </summary>\n\n    this.AwaitingGltResponse = null;\n    this.GLTResponsePosRefId = null;\n  }\n\n  _createClass(TransactionFlowState, [{\n    key: \"Sent\",\n    value: function Sent(msg) {\n      this.RequestSent = true;\n      this.RequestTime = Date.now();\n      this.LastStateRequestTime = Date.now();\n      this.DisplayMessage = msg;\n    }\n  }, {\n    key: \"Cancelling\",\n    value: function Cancelling(msg) {\n      this.AttemptingToCancel = true;\n      this.CancelAttemptTime = Date.now();\n      this.DisplayMessage = msg;\n    }\n  }, {\n    key: \"CancelFailed\",\n    value: function CancelFailed(msg) {\n      this.AttemptingToCancel = false;\n      this.DisplayMessage = msg;\n    }\n  }, {\n    key: \"CallingGlt\",\n    value: function CallingGlt() {\n      this.AwaitingGltResponse = true;\n      this.LastStateRequestTime = Date.now();\n    }\n  }, {\n    key: \"GotGltResponse\",\n    value: function GotGltResponse() {\n      this.AwaitingGltResponse = false;\n    }\n  }, {\n    key: \"Failed\",\n    value: function Failed(response, msg) {\n      this.Success = _Messages__WEBPACK_IMPORTED_MODULE_0__[\"SuccessState\"].Failed;\n      this.Finished = true;\n      this.Response = response;\n      this.DisplayMessage = msg;\n    }\n  }, {\n    key: \"SignatureRequired\",\n    value: function SignatureRequired(spiMessage, msg) {\n      this.SignatureRequiredMessage = spiMessage;\n      this.AwaitingSignatureCheck = true;\n      this.DisplayMessage = msg;\n    }\n  }, {\n    key: \"SignatureResponded\",\n    value: function SignatureResponded(msg) {\n      this.AwaitingSignatureCheck = false;\n      this.DisplayMessage = msg;\n    }\n  }, {\n    key: \"PhoneForAuthRequired\",\n    value: function PhoneForAuthRequired(spiMessage, msg) {\n      this.PhoneForAuthRequiredMessage = spiMessage;\n      this.AwaitingPhoneForAuth = true;\n      this.DisplayMessage = msg;\n    }\n  }, {\n    key: \"AuthCodeSent\",\n    value: function AuthCodeSent(msg) {\n      this.AwaitingPhoneForAuth = false;\n      this.DisplayMessage = msg;\n    }\n  }, {\n    key: \"Completed\",\n    value: function Completed(state, response, msg) {\n      this.Success = state;\n      this.Response = response;\n      this.Finished = true;\n      this.AttemptingToCancel = false;\n      this.AwaitingGltResponse = false;\n      this.AwaitingSignatureCheck = false;\n      this.AwaitingPhoneForAuth = false;\n      this.DisplayMessage = msg;\n    }\n  }, {\n    key: \"UnknownCompleted\",\n    value: function UnknownCompleted(msg) {\n      this.Success = _Messages__WEBPACK_IMPORTED_MODULE_0__[\"SuccessState\"].Unknown;\n      this.Response = null;\n      this.Finished = true;\n      this.AttemptingToCancel = false;\n      this.AwaitingGltResponse = false;\n      this.AwaitingSignatureCheck = false;\n      this.AwaitingPhoneForAuth = false;\n      this.DisplayMessage = msg;\n    }\n  }]);\n\n  return TransactionFlowState;\n}(); // <summary>\n// Used as a return in the SubmitAuthCode method to signify whether Code is valid\n// </summary>\n\nvar SubmitAuthCodeResult = function SubmitAuthCodeResult(validFormat, message) {\n  _classCallCheck(this, SubmitAuthCodeResult);\n\n  this.ValidFormat = validFormat; // <summary>\n  // Text that gives reason for Invalidity\n  // </summary>\n\n  this.Message = message;\n};\nvar SpiConfig =\n/*#__PURE__*/\nfunction () {\n  function SpiConfig() {\n    _classCallCheck(this, SpiConfig);\n\n    this.PromptForCustomerCopyOnEftpos = false;\n    this.SignatureFlowOnEftpos = false;\n    this.PrintMerchantCopy = false;\n  }\n\n  _createClass(SpiConfig, [{\n    key: \"addReceiptConfig\",\n    value: function addReceiptConfig(messageData) {\n      if (this.PromptForCustomerCopyOnEftpos) {\n        messageData.prompt_for_customer_copy = this.PromptForCustomerCopyOnEftpos;\n      }\n\n      if (this.SignatureFlowOnEftpos) {\n        messageData.print_for_signature_required_transactions = this.SignatureFlowOnEftpos;\n      }\n\n      if (this.PrintMerchantCopy) {\n        messageData.print_merchant_copy = this.PrintMerchantCopy;\n      }\n\n      return messageData;\n    }\n  }, {\n    key: \"ToString\",\n    value: function ToString() {\n      return \"PromptForCustomerCopyOnEftpos:\".concat(this.PromptForCustomerCopyOnEftpos, \" SignatureFlowOnEftpos:\").concat(this.SignatureFlowOnEftpos, \" PrintMerchantCopy: \").concat(this.PrintMerchantCopy);\n    }\n  }]);\n\n  return SpiConfig;\n}();\nvar TransactionOptions =\n/*#__PURE__*/\nfunction () {\n  function TransactionOptions() {\n    _classCallCheck(this, TransactionOptions);\n\n    this._customerReceiptHeader = null;\n    this._customerReceiptFooter = null;\n    this._merchantReceiptHeader = null;\n    this._merchantReceiptFooter = null;\n  }\n\n  _createClass(TransactionOptions, [{\n    key: \"SetCustomerReceiptHeader\",\n    value: function SetCustomerReceiptHeader(customerReceiptHeader) {\n      this._customerReceiptHeader = customerReceiptHeader;\n    }\n  }, {\n    key: \"SetCustomerReceiptFooter\",\n    value: function SetCustomerReceiptFooter(customerReceiptFooter) {\n      this._customerReceiptFooter = customerReceiptFooter;\n    }\n  }, {\n    key: \"SetMerchantReceiptHeader\",\n    value: function SetMerchantReceiptHeader(merchantReceiptHeader) {\n      this._merchantReceiptHeader = merchantReceiptHeader;\n    }\n  }, {\n    key: \"SetMerchantReceiptFooter\",\n    value: function SetMerchantReceiptFooter(merchantReceiptFooter) {\n      this._merchantReceiptFooter = merchantReceiptFooter;\n    }\n  }, {\n    key: \"AddOptions\",\n    value: function AddOptions(messageData) {\n      messageData.customer_receipt_header = this._customerReceiptHeader;\n      messageData.customer_receipt_footer = this._customerReceiptFooter;\n      messageData.merchant_receipt_header = this._merchantReceiptHeader;\n      messageData.merchant_receipt_footer = this._merchantReceiptFooter;\n      return messageData;\n    }\n  }]);\n\n  return TransactionOptions;\n}();\n\n/***/ }),\n\n/***/ \"./src/SpiPayAtTable.js\":\n/*!******************************!*\\\n  !*** ./src/SpiPayAtTable.js ***!\n  \\******************************/\n/*! exports provided: SpiPayAtTable */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SpiPayAtTable\", function() { return SpiPayAtTable; });\n/* harmony import */ var _RequestIdHelper__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./RequestIdHelper */ \"./src/RequestIdHelper.js\");\n/* harmony import */ var _PayAtTable__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./PayAtTable */ \"./src/PayAtTable.js\");\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n\n\nvar SpiPayAtTable =\n/*#__PURE__*/\nfunction () {\n  function SpiPayAtTable(spi) {\n    _classCallCheck(this, SpiPayAtTable);\n\n    this._spi = spi;\n    this._log = console;\n    this.Config = Object.assign(new _PayAtTable__WEBPACK_IMPORTED_MODULE_1__[\"PayAtTableConfig\"](), {\n      PayAtTabledEnabled: true,\n      OperatorIdEnabled: true,\n      AllowedOperatorIds: [],\n      EqualSplitEnabled: true,\n      SplitByAmountEnabled: true,\n      SummaryReportEnabled: true,\n      TippingEnabled: true,\n      LabelOperatorId: \"Operator ID\",\n      LabelPayButton: \"Pay at Table\",\n      LabelTableId: \"Table Number\"\n    });\n  } // <summary>\n  // This delegate will be called when the Eftpos needs to know the current state of a bill for a table. \n  // <para />\n  // Parameters:<para />\n  // billId - The unique identifier of the bill. If empty, it means that the PayAtTable flow on the Eftpos is just starting, and the lookup is by tableId.<para />\n  // tableId - The identifier of the table that the bill is for. <para />\n  // operatorId - The id of the operator entered on the eftpos. <para />\n  // <para />\n  // Return:<para />\n  // You need to return the current state of the bill.\n  // </summary>\n\n\n  _createClass(SpiPayAtTable, [{\n    key: \"GetBillStatus\",\n    value: function GetBillStatus(billId, tableId, operatorId) {\n      throw new Error('Method not implemented. Please overwrite this method in your POS');\n    } // Abstract method, must implement in POS system\n\n  }, {\n    key: \"BillPaymentReceived\",\n    value: function BillPaymentReceived(billPayment, updatedBillData) {\n      throw new Error('Method not implemented. Please overwrite this method in your POS');\n    }\n  }, {\n    key: \"PushPayAtTableConfig\",\n    value: function PushPayAtTableConfig() {\n      this._spi._send(this.Config.ToMessage(_RequestIdHelper__WEBPACK_IMPORTED_MODULE_0__[\"RequestIdHelper\"].Id(\"patconf\")));\n    }\n  }, {\n    key: \"_handleGetBillDetailsRequest\",\n    value: function _handleGetBillDetailsRequest(m) {\n      var _this = this;\n\n      var operatorId = m.Data[\"operator_id\"];\n      var tableId = m.Data[\"table_id\"]; // Ask POS for Bill Details for this tableId, inluding encoded PaymentData\n\n      return Promise.resolve(this.GetBillStatus(null, tableId, operatorId)).then(function (billStatus) {\n        billStatus.TableId = tableId;\n\n        if (billStatus.TotalAmount <= 0) {\n          _this._log.info(\"Table has 0 total amount. not sending it to eftpos.\");\n\n          billStatus.Result = _PayAtTable__WEBPACK_IMPORTED_MODULE_1__[\"BillRetrievalResult\"].INVALID_TABLE_ID;\n        }\n\n        _this._spi._send(billStatus.ToMessage(m.Id));\n      });\n    }\n  }, {\n    key: \"_handleBillPaymentAdvice\",\n    value: function _handleBillPaymentAdvice(m) {\n      var _this2 = this;\n\n      var billPayment = new _PayAtTable__WEBPACK_IMPORTED_MODULE_1__[\"BillPayment\"](m); // Ask POS for Bill Details, inluding encoded PaymentData\n\n      return Promise.resolve(this.GetBillStatus(billPayment.BillId, billPayment.TableId, billPayment.OperatorId)).then(function (existingBillStatus) {\n        if (existingBillStatus.Result != _PayAtTable__WEBPACK_IMPORTED_MODULE_1__[\"BillRetrievalResult\"].SUCCESS) {\n          _this2._log.warn(\"Could not retrieve Bill Status for Payment Advice. Sending Error to Eftpos.\");\n\n          _this2._spi._send(existingBillStatus.ToMessage(m.Id));\n        }\n\n        var existingPaymentHistory = existingBillStatus.getBillPaymentHistory();\n        var foundExistingEntry = existingPaymentHistory.find(function (phe) {\n          return phe.GetTerminalRefId() == billPayment.PurchaseResponse.GetTerminalReferenceId();\n        });\n\n        if (foundExistingEntry) {\n          // We have already processed this payment.\n          // perhaps Eftpos did get our acknowledgement.\n          // Let's update Eftpos.\n          _this2._log.warn(\"Had already received this bill_paymemnt advice from eftpos. Ignoring.\");\n\n          _this2._spi._send(existingBillStatus.ToMessage(m.Id));\n\n          return;\n        } // Let's add the new entry to the history\n\n\n        var updatedHistoryEntries = existingPaymentHistory;\n        updatedHistoryEntries.push(new _PayAtTable__WEBPACK_IMPORTED_MODULE_1__[\"PaymentHistoryEntry\"](billPayment.PaymentType.toLowerCase(), billPayment.PurchaseResponse.ToPaymentSummary()));\n        var updatedBillData = _PayAtTable__WEBPACK_IMPORTED_MODULE_1__[\"BillStatusResponse\"].ToBillData(updatedHistoryEntries); // Advise POS of new payment against this bill, and the updated BillData to Save.\n\n        Promise.resolve(_this2.BillPaymentReceived(billPayment, updatedBillData)).then(function (updatedBillStatus) {\n          // Just in case client forgot to set these:\n          updatedBillStatus.BillId = billPayment.BillId;\n          updatedBillStatus.TableId = billPayment.TableId;\n\n          if (updatedBillStatus.Result != _PayAtTable__WEBPACK_IMPORTED_MODULE_1__[\"BillRetrievalResult\"].SUCCESS) {\n            _this2._log.warn(\"POS Errored when being Advised of Payment. Letting EFTPOS know, and sending existing bill data.\");\n\n            updatedBillStatus.BillData = existingBillStatus.BillData;\n          } else {\n            updatedBillStatus.BillData = updatedBillData;\n          }\n\n          _this2._spi._send(updatedBillStatus.ToMessage(m.Id));\n        });\n      });\n    }\n  }, {\n    key: \"_handleGetTableConfig\",\n    value: function _handleGetTableConfig(m) {\n      this._spi._send(this.Config.ToMessage(m.Id));\n    }\n  }]);\n\n  return SpiPayAtTable;\n}();\n\n/***/ }),\n\n/***/ \"./src/SpiPreauth.js\":\n/*!***************************!*\\\n  !*** ./src/SpiPreauth.js ***!\n  \\***************************/\n/*! exports provided: SpiPreauth */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SpiPreauth\", function() { return SpiPreauth; });\n/* harmony import */ var _Preauth__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Preauth */ \"./src/Preauth.js\");\n/* harmony import */ var _SpiModels__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./SpiModels */ \"./src/SpiModels.js\");\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n\n\nvar SpiPreauth =\n/*#__PURE__*/\nfunction () {\n  function SpiPreauth(spi) {\n    _classCallCheck(this, SpiPreauth);\n\n    this._spi = spi;\n    this._log = console;\n  }\n\n  _createClass(SpiPreauth, [{\n    key: \"InitiateAccountVerifyTx\",\n    value: function InitiateAccountVerifyTx(posRefId) {\n      var verifyMsg = new _Preauth__WEBPACK_IMPORTED_MODULE_0__[\"AccountVerifyRequest\"](posRefId).ToMessage();\n      var tfs = new _SpiModels__WEBPACK_IMPORTED_MODULE_1__[\"TransactionFlowState\"](posRefId, _SpiModels__WEBPACK_IMPORTED_MODULE_1__[\"TransactionType\"].AccountVerify, 0, verifyMsg, \"Waiting for EFTPOS connection to make account verify request\");\n      var sentMsg = \"Asked EFTPOS to verify account\";\n      return this._initiatePreauthTx(tfs, sentMsg);\n    }\n  }, {\n    key: \"InitiateOpenTx\",\n    value: function InitiateOpenTx(posRefId, amountCents) {\n      var msg = new _Preauth__WEBPACK_IMPORTED_MODULE_0__[\"PreauthOpenRequest\"](amountCents, posRefId).ToMessage();\n      var tfs = new _SpiModels__WEBPACK_IMPORTED_MODULE_1__[\"TransactionFlowState\"](posRefId, _SpiModels__WEBPACK_IMPORTED_MODULE_1__[\"TransactionType\"].Preauth, amountCents, msg, \"Waiting for EFTPOS connection to make preauth request for \".concat((amountCents / 100.0).toFixed(2)));\n      var sentMsg = \"Asked EFTPOS to create preauth for \".concat((amountCents / 100.0).toFixed(2));\n      return this._initiatePreauthTx(tfs, sentMsg);\n    }\n  }, {\n    key: \"InitiateTopupTx\",\n    value: function InitiateTopupTx(posRefId, preauthId, amountCents) {\n      var msg = new _Preauth__WEBPACK_IMPORTED_MODULE_0__[\"PreauthTopupRequest\"](preauthId, amountCents, posRefId).ToMessage();\n      var tfs = new _SpiModels__WEBPACK_IMPORTED_MODULE_1__[\"TransactionFlowState\"](posRefId, _SpiModels__WEBPACK_IMPORTED_MODULE_1__[\"TransactionType\"].Preauth, amountCents, msg, \"Waiting for EFTPOS connection to make preauth topup request for \".concat((amountCents / 100.0).toFixed(2)));\n      var sentMsg = \"Asked EFTPOS to make preauth topup for \".concat((amountCents / 100.0).toFixed(2));\n      return this._initiatePreauthTx(tfs, sentMsg);\n    }\n  }, {\n    key: \"InitiatePartialCancellationTx\",\n    value: function InitiatePartialCancellationTx(posRefId, preauthId, amountCents) {\n      var msg = new _Preauth__WEBPACK_IMPORTED_MODULE_0__[\"PreauthPartialCancellationRequest\"](preauthId, amountCents, posRefId).ToMessage();\n      var tfs = new _SpiModels__WEBPACK_IMPORTED_MODULE_1__[\"TransactionFlowState\"](posRefId, _SpiModels__WEBPACK_IMPORTED_MODULE_1__[\"TransactionType\"].Preauth, amountCents, msg, \"Waiting for EFTPOS connection to make preauth partial cancellation request for \".concat((amountCents / 100.0).toFixed(2)));\n      var sentMsg = \"Asked EFTPOS to make preauth partial cancellation for \".concat((amountCents / 100.0).toFixed(2));\n      return this._initiatePreauthTx(tfs, sentMsg);\n    }\n  }, {\n    key: \"InitiateExtendTx\",\n    value: function InitiateExtendTx(posRefId, preauthId) {\n      var msg = new _Preauth__WEBPACK_IMPORTED_MODULE_0__[\"PreauthExtendRequest\"](preauthId, posRefId).ToMessage();\n      var tfs = new _SpiModels__WEBPACK_IMPORTED_MODULE_1__[\"TransactionFlowState\"](posRefId, _SpiModels__WEBPACK_IMPORTED_MODULE_1__[\"TransactionType\"].Preauth, 0, msg, \"Waiting for EFTPOS connection to make preauth Extend request\");\n      var sentMsg = \"Asked EFTPOS to make preauth Extend request\";\n      return this._initiatePreauthTx(tfs, sentMsg);\n    }\n  }, {\n    key: \"InitiateCompletionTx\",\n    value: function InitiateCompletionTx(posRefId, preauthId, amountCents, surchargeAmount) {\n      var msg = new _Preauth__WEBPACK_IMPORTED_MODULE_0__[\"PreauthCompletionRequest\"](preauthId, amountCents, posRefId, surchargeAmount).ToMessage();\n      var tfs = new _SpiModels__WEBPACK_IMPORTED_MODULE_1__[\"TransactionFlowState\"](posRefId, _SpiModels__WEBPACK_IMPORTED_MODULE_1__[\"TransactionType\"].Preauth, amountCents, msg, \"Waiting for EFTPOS connection to make preauth completion request for \".concat((amountCents / 100.0).toFixed(2)));\n      var sentMsg = \"Asked EFTPOS to make preauth completion for \".concat((amountCents / 100.0).toFixed(2));\n      return this._initiatePreauthTx(tfs, sentMsg);\n    }\n  }, {\n    key: \"InitiateCancelTx\",\n    value: function InitiateCancelTx(posRefId, preauthId) {\n      var msg = new _Preauth__WEBPACK_IMPORTED_MODULE_0__[\"PreauthCancelRequest\"](preauthId, posRefId).ToMessage();\n      var tfs = new _SpiModels__WEBPACK_IMPORTED_MODULE_1__[\"TransactionFlowState\"](posRefId, _SpiModels__WEBPACK_IMPORTED_MODULE_1__[\"TransactionType\"].Preauth, 0, msg, \"Waiting for EFTPOS connection to make preauth cancellation request\");\n      var sentMsg = \"Asked EFTPOS to make preauth cancellation request\";\n      return this._initiatePreauthTx(tfs, sentMsg);\n    }\n  }, {\n    key: \"_initiatePreauthTx\",\n    value: function _initiatePreauthTx(tfs, sentMsg) {\n      if (this._spi.CurrentStatus == _SpiModels__WEBPACK_IMPORTED_MODULE_1__[\"SpiStatus\"].Unpaired) return new _SpiModels__WEBPACK_IMPORTED_MODULE_1__[\"InitiateTxResult\"](false, \"Not Paired\");\n      if (this._spi.CurrentFlow != _SpiModels__WEBPACK_IMPORTED_MODULE_1__[\"SpiFlow\"].Idle) return new _SpiModels__WEBPACK_IMPORTED_MODULE_1__[\"InitiateTxResult\"](false, \"Not Idle\");\n      this._spi.CurrentFlow = _SpiModels__WEBPACK_IMPORTED_MODULE_1__[\"SpiFlow\"].Transaction;\n      this._spi.CurrentTxFlowState = tfs;\n\n      if (this._spi._send(tfs.Request)) {\n        this._spi.CurrentTxFlowState.Sent(sentMsg);\n      }\n\n      document.dispatchEvent(new CustomEvent('TxFlowStateChanged', {\n        detail: this._spi.CurrentTxFlowState\n      }));\n      return new _SpiModels__WEBPACK_IMPORTED_MODULE_1__[\"InitiateTxResult\"](true, \"Preauth Initiated\");\n    }\n  }, {\n    key: \"_handlePreauthMessage\",\n    value: function _handlePreauthMessage(m) {\n      switch (m.EventName) {\n        case _Preauth__WEBPACK_IMPORTED_MODULE_0__[\"PreauthEvents\"].AccountVerifyResponse:\n          this._handleAccountVerifyResponse(m);\n\n          break;\n\n        case _Preauth__WEBPACK_IMPORTED_MODULE_0__[\"PreauthEvents\"].PreauthOpenResponse:\n        case _Preauth__WEBPACK_IMPORTED_MODULE_0__[\"PreauthEvents\"].PreauthTopupResponse:\n        case _Preauth__WEBPACK_IMPORTED_MODULE_0__[\"PreauthEvents\"].PreauthPartialCancellationResponse:\n        case _Preauth__WEBPACK_IMPORTED_MODULE_0__[\"PreauthEvents\"].PreauthExtendResponse:\n        case _Preauth__WEBPACK_IMPORTED_MODULE_0__[\"PreauthEvents\"].PreauthCompleteResponse:\n        case _Preauth__WEBPACK_IMPORTED_MODULE_0__[\"PreauthEvents\"].PreauthCancellationResponse:\n          this._handlePreauthResponse(m);\n\n          break;\n\n        default:\n          this._log.info(\"I don't Understand Preauth Event: \".concat(m.EventName, \", \").concat(m.Data, \". Perhaps I have not implemented it yet.\"));\n\n          break;\n      }\n    }\n  }, {\n    key: \"_handleAccountVerifyResponse\",\n    value: function _handleAccountVerifyResponse(m) {\n      var incomingPosRefId = m.Data.pos_ref_id;\n      var currentTxFlowState = this._spi.CurrentTxFlowState;\n\n      if (this._spi.CurrentFlow != _SpiModels__WEBPACK_IMPORTED_MODULE_1__[\"SpiFlow\"].Transaction || currentTxFlowState.Finished || !currentTxFlowState.PosRefId === incomingPosRefId) {\n        this._log.info(\"Received Account Verify response but I was not waiting for one. Incoming Pos Ref ID: \".concat(incomingPosRefId));\n\n        return;\n      } // TH-1A, TH-2A\n\n\n      currentTxFlowState.Completed(m.GetSuccessState(), m, \"Account Verify Transaction Ended.\"); // TH-6A, TH-6E\n\n      document.dispatchEvent(new CustomEvent('TxFlowStateChanged', {\n        detail: this._spi.CurrentTxFlowState\n      }));\n    }\n  }, {\n    key: \"_handlePreauthResponse\",\n    value: function _handlePreauthResponse(m) {\n      var incomingPosRefId = m.Data.pos_ref_id;\n      var currentTxFlowState = this._spi.CurrentTxFlowState;\n\n      if (this._spi.CurrentFlow != _SpiModels__WEBPACK_IMPORTED_MODULE_1__[\"SpiFlow\"].Transaction || currentTxFlowState.Finished || !currentTxFlowState.PosRefId === incomingPosRefId) {\n        this._log.info(\"Received Preauth response but I was not waiting for one. Incoming Pos Ref ID: \".concat(incomingPosRefId));\n\n        return;\n      } // TH-1A, TH-2A\n\n\n      currentTxFlowState.Completed(m.GetSuccessState(), m, \"Preauth Transaction Ended.\"); // TH-6A, TH-6E\n\n      document.dispatchEvent(new CustomEvent('TxFlowStateChanged', {\n        detail: this._spi.CurrentTxFlowState\n      }));\n    }\n  }], [{\n    key: \"IsPreauthEvent\",\n    value: function IsPreauthEvent(eventName) {\n      return eventName.lastIndexOf(\"preauth\", 0) === 0 || eventName == _Preauth__WEBPACK_IMPORTED_MODULE_0__[\"PreauthEvents\"].PreauthCompleteResponse || eventName == _Preauth__WEBPACK_IMPORTED_MODULE_0__[\"PreauthEvents\"].PreauthCompleteRequest || eventName == _Preauth__WEBPACK_IMPORTED_MODULE_0__[\"PreauthEvents\"].AccountVerifyRequest || eventName == _Preauth__WEBPACK_IMPORTED_MODULE_0__[\"PreauthEvents\"].AccountVerifyResponse;\n    }\n  }]);\n\n  return SpiPreauth;\n}();\n\n/***/ }),\n\n/***/ \"./src/TerminalStatus.js\":\n/*!*******************************!*\\\n  !*** ./src/TerminalStatus.js ***!\n  \\*******************************/\n/*! exports provided: TerminalStatusRequest, TerminalStatusResponse, TerminalBattery */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"TerminalStatusRequest\", function() { return TerminalStatusRequest; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"TerminalStatusResponse\", function() { return TerminalStatusResponse; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"TerminalBattery\", function() { return TerminalBattery; });\n/* harmony import */ var _Messages__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Messages */ \"./src/Messages.js\");\n/* harmony import */ var _RequestIdHelper__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./RequestIdHelper */ \"./src/RequestIdHelper.js\");\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n\n\nvar TerminalStatusRequest =\n/*#__PURE__*/\nfunction () {\n  function TerminalStatusRequest() {\n    _classCallCheck(this, TerminalStatusRequest);\n  }\n\n  _createClass(TerminalStatusRequest, [{\n    key: \"ToMessage\",\n    value: function ToMessage() {\n      var data = {};\n      return new _Messages__WEBPACK_IMPORTED_MODULE_0__[\"Message\"](_RequestIdHelper__WEBPACK_IMPORTED_MODULE_1__[\"RequestIdHelper\"].Id(\"trmnl\"), _Messages__WEBPACK_IMPORTED_MODULE_0__[\"Events\"].TerminalStatusRequest, data, true);\n    }\n  }]);\n\n  return TerminalStatusRequest;\n}();\nvar TerminalStatusResponse =\n/*#__PURE__*/\nfunction () {\n  function TerminalStatusResponse(m) {\n    _classCallCheck(this, TerminalStatusResponse);\n\n    this._m = m;\n  }\n\n  _createClass(TerminalStatusResponse, [{\n    key: \"GetStatus\",\n    value: function GetStatus() {\n      return this._m.Data.status;\n    }\n  }, {\n    key: \"GetBatteryLevel\",\n    value: function GetBatteryLevel() {\n      return parseInt(this._m.Data.battery_level, 10);\n    }\n  }, {\n    key: \"IsCharging\",\n    value: function IsCharging() {\n      return !!this._m.Data.charging;\n    }\n  }]);\n\n  return TerminalStatusResponse;\n}();\nvar TerminalBattery = function TerminalBattery(m) {\n  _classCallCheck(this, TerminalBattery);\n\n  this.BatteryLevel = parseInt(m.Data.battery_level, 10);\n};\n\n/***/ }),\n\n/***/ 0:\n/*!************************!*\\\n  !*** buffer (ignored) ***!\n  \\************************/\n/*! no static exports found */\n/***/ (function(module, exports) {\n\n/* (ignored) */\n\n/***/ })\n\n/******/ });\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","import {\n    Spi, \n    Logger, \n    Secrets, \n    TransactionOptions,\n    TransactionType,\n    PrintingResponse,\n    RefundResponse,\n    TerminalStatusResponse,\n    TerminalBattery,\n    CashoutOnlyResponse,\n    MotoPurchaseResponse,\n    GetLastTransactionResponse,\n    PurchaseResponse,\n    Settlement,\n    SuccessState,\n    RequestIdHelper,\n    SpiFlow,\n    SpiStatus} from '@assemblypayments/spi-client-js/dist/spi-client-js';\n\n// <summary>\n// NOTE: THIS PROJECT USES THE 2.1.x of the SPI Client Library\n//  \n// This is your POS. To integrate with SPI, you need to instantiate a Spi object\n// and interact with it.\n// \n// Primarily you need to implement 3 things.\n// 1. Settings Screen\n// 2. Pairing Flow Screen\n// 3. Transaction Flow screen\n// \n// To see logs from spi, check the console\n// </summary>// <summary>\n// NOTE: THIS PROJECT USES THE 2.1.x of the SPI Client Library\n//  \n// This is your POS. To integrate with SPI, you need to instantiate a Spi object\n// and interact with it.\n// \n// Primarily you need to implement 3 things.\n// 1. Settings Screen\n// 2. Pairing Flow Screen\n// 3. Transaction Flow screen\n// \n// To see logs from spi, check the console\n// </summary>\nexport class KebabPos\n{\n    constructor(log, receipt, flow_msg) \n    {\n        this._spi = null;\n        this._posId = \"KEBABPOS1\";\n        this._eftposAddress = \"192.168.1.1\";\n        this._spiSecrets = null;\n        this._version = '2.1.0';\n        this._rcpt_from_eftpos = false;\n        this._sig_flow_from_eftpos = false;\n\n        this._log = log;\n        this._receipt = receipt;\n        this._flow_msg = flow_msg;\n    }\n\n    Start()\n    {\n        this._log.info(\"Starting KebabPos...\");\n        this.LoadPersistedState();\n\n        // region Spi Setup\n        // This is how you instantiate Spi.\n        this._spi = new Spi(this._posId, this._eftposAddress, this._spiSecrets); // It is ok to not have the secrets yet to start with.\n        this._spi.Config.PromptForCustomerCopyOnEftpos = this._rcpt_from_eftpos;\n        this._spi.Config.SignatureFlowOnEftpos = this._sig_flow_from_eftpos;\n\n        this._spi.SetPosInfo(\"assembly\", this._version);\n\n        document.addEventListener('StatusChanged', (e) => this.OnSpiStatusChanged(e.detail)); \n        document.addEventListener('PairingFlowStateChanged', (e) => this.OnPairingFlowStateChanged(e.detail)); \n        document.addEventListener('SecretsChanged', (e) => this.OnSecretsChanged(e.detail)); \n        document.addEventListener('TxFlowStateChanged', (e) => this.OnTxFlowStateChanged(e.detail)); \n        this._spi.Start();\n\n        // And Now we just accept user input and display to the user what is happening.\n\n        this._flow_msg.Clear();\n        this._flow_msg.Info(\"# Welcome to KebabPos !\");\n        \n        this.PrintStatusAndActions();\n        this.AcceptUserInput();\n    }\n\n    OnTxFlowStateChanged(txState)\n    {\n        this._flow_msg.Clear();\n        this.PrintStatusAndActions();\n        this._flow_msg.Info(\"> \");\n    }\n\n    OnPairingFlowStateChanged(pairingFlowState)\n    {\n        this._flow_msg.Clear();\n        this.PrintStatusAndActions();\n        this._flow_msg.Info(\"> \");\n    }\n\n    OnSecretsChanged(secrets)\n    {\n        this._spiSecrets = secrets;\n        if (secrets != null)\n        {\n            this._log.info(`# I Have Secrets: ${secrets.EncKey}${secrets.HmacKey}. Persist them Securely.`);\n            localStorage.setItem('EncKey', secrets.EncKey);\n            localStorage.setItem('HmacKey', secrets.HmacKey);\n        }\n        else\n        {\n            this._log.info(`# I Have Lost the Secrets, i.e. Unpaired. Destroy the persisted secrets.`);\n            localStorage.removeItem('EncKey');\n            localStorage.removeItem('HmacKey');\n        }\n    }\n\n    /// <summary>\n    /// Called when we received a Status Update i.e. Unpaired/PairedConnecting/PairedConnected\n    /// </summary>\n    /// <param name=\"sender\"></param>\n    /// <param name=\"spiStatus\"></param>\n    OnSpiStatusChanged(spiStatus)\n    {\n        this._log.clear();\n        this._log.info(`# --> SPI Status Changed: ${spiStatus}`);\n        this.PrintStatusAndActions();\n    }\n\n    PrintStatusAndActions()\n    {\n        this.PrintFlowInfo();\n\n        this.PrintActions();\n\n        this.PrintPairingStatus();\n    }\n\n    PrintFlowInfo()\n    {\n        switch (this._spi.CurrentFlow)\n        {\n            case SpiFlow.Pairing:\n                var pairingState = this._spi.CurrentPairingFlowState;\n                this._flow_msg.Info(\"### PAIRING PROCESS UPDATE ###\");\n                this._flow_msg.Info(`# ${pairingState.Message}`);\n                this._flow_msg.Info(`# Finished? ${pairingState.Finished}`);\n                this._flow_msg.Info(`# Successful? ${pairingState.Successful}`);\n                this._flow_msg.Info(`# Confirmation Code: ${pairingState.ConfirmationCode}`);\n                this._flow_msg.Info(`# Waiting Confirm from Eftpos? ${pairingState.AwaitingCheckFromEftpos}`);\n                this._flow_msg.Info(`# Waiting Confirm from POS? ${pairingState.AwaitingCheckFromPos}`);\n                break;\n\n            case SpiFlow.Transaction:\n                var txState = this._spi.CurrentTxFlowState;\n                this._flow_msg.Info(\"### TX PROCESS UPDATE ###\");\n                this._flow_msg.Info(`# ${txState.DisplayMessage}`);\n                this._flow_msg.Info(`# PosRefId: ${txState.PosRefId}`);\n                this._flow_msg.Info(`# Type: ${txState.Type}`);\n                this._flow_msg.Info(`# Amount: $${(txState.AmountCents / 100.0).toFixed(2)}`);\n                this._flow_msg.Info(`# Waiting For Signature: ${txState.AwaitingSignatureCheck}`);\n                this._flow_msg.Info(`# Attempting to Cancel : ${txState.AttemptingToCancel}`);\n                this._flow_msg.Info(`# Finished: ${txState.Finished}`);\n                this._flow_msg.Info(`# Success: ${txState.Success}`);\n\n                if (txState.AwaitingSignatureCheck)\n                {\n                    // We need to print the receipt for the customer to sign.\n                    this._flow_msg.Info(`# RECEIPT TO PRINT FOR SIGNATURE`);\n                    this._receipt.Info(txState.SignatureRequiredMessage.GetMerchantReceipt().trim());\n                }\n\n                if (txState.AwaitingPhoneForAuth)\n                {\n                    this._flow_msg.Info(`# PHONE FOR AUTH DETAILS:`);\n                    this._flow_msg.Info(`# CALL: ${txState.PhoneForAuthRequiredMessage.GetPhoneNumber()}`);\n                    this._flow_msg.Info(`# QUOTE: Merchant Id: ${txState.PhoneForAuthRequiredMessage.GetMerchantId()}`);\n                }\n\n                if (txState.Finished)\n                {\n                    switch (txState.Type)\n                    {\n                        case TransactionType.Purchase:\n                            this.HandleFinishedPurchase(txState);\n                            break;\n                        case TransactionType.Refund:\n                            this.HandleFinishedRefund(txState);\n                            break;\n                        case TransactionType.CashoutOnly:\n                            this.HandleFinishedCashout(txState);\n                            break;\n                        case TransactionType.MOTO:\n                            this.HandleFinishedMoto(txState);\n                            break;\n                        case TransactionType.Settle:\n                            this.HandleFinishedSettle(txState);\n                            break;\n                        case TransactionType.SettlementEnquiry:\n                            this.HandleFinishedSettlementEnquiry(txState);\n                            break;\n                        case TransactionType.GetLastTransaction:\n                            this.HandleFinishedGetLastTransaction(txState);\n                            break;\n                        default:\n                            this._flow_msg.Error(`# CAN'T HANDLE TX TYPE: ${txState.Type}`);\n                            break;\n                    }\n                }\n                break;\n        }\n    }\n\n    HandleFinishedPurchase(txState)\n    {\n        var purchaseResponse;\n        switch (txState.Success)\n        {\n            case SuccessState.Success:\n                this._flow_msg.Info(`# WOOHOO - WE GOT PAID!`);\n                purchaseResponse = new PurchaseResponse(txState.Response);\n                this._flow_msg.Info(`# Response: ${purchaseResponse.GetResponseText()}`);\n                this._flow_msg.Info(`# RRN: ${purchaseResponse.GetRRN()}`);\n                this._flow_msg.Info(`# Scheme: ${purchaseResponse.SchemeName}`);\n                this._flow_msg.Info(`# Customer Receipt:`);\n                this._receipt.Info(!purchaseResponse.WasCustomerReceiptPrinted() ? purchaseResponse.GetCustomerReceipt().trim() : `# PRINTED FROM EFTPOS`);\n                this._flow_msg.Info(`# PURCHASE: ${purchaseResponse.GetPurchaseAmount()}`);\n                this._flow_msg.Info(`# TIP: ${purchaseResponse.GetTipAmount()}`);\n                this._flow_msg.Info(`# CASHOUT: ${purchaseResponse.GetCashoutAmount()}`);\n                this._flow_msg.Info(`# BANKED NON-CASH AMOUNT: ${purchaseResponse.GetBankNonCashAmount()}`);\n                this._flow_msg.Info(`# BANKED CASH AMOUNT: ${purchaseResponse.GetBankCashAmount()}`);\n                break;\n            case SuccessState.Failed:\n                this._flow_msg.Info(`# WE DID NOT GET PAID :(`);\n                if (txState.Response != null)\n                {\n                    purchaseResponse = new PurchaseResponse(txState.Response);\n                    this._flow_msg.Info(`# Error: ${txState.Response.GetError()}`);\n                    this._flow_msg.Info(`# Error Detail: ${txState.Response.GetErrorDetail()}`);\n                    this._flow_msg.Info(`# Response: ${purchaseResponse.GetResponseText()}`);\n                    this._flow_msg.Info(`# RRN: ${purchaseResponse.GetRRN()}`);\n                    this._flow_msg.Info(`# Scheme: ${purchaseResponse.SchemeName}`);\n                    this._flow_msg.Info(`# Customer Receipt:`);\n                    this._receipt.Info(!purchaseResponse.WasCustomerReceiptPrinted()\n                        ? purchaseResponse.GetCustomerReceipt().trim()\n                        : `# PRINTED FROM EFTPOS`);\n                }\n                break;\n            case SuccessState.Unknown:\n                this._flow_msg.Info(`# WE'RE NOT QUITE SURE WHETHER WE GOT PAID OR NOT :/`);\n                this._flow_msg.Info(`# CHECK THE LAST TRANSACTION ON THE EFTPOS ITSELF FROM THE APPROPRIATE MENU ITEM.`);\n                this._flow_msg.Info(`# IF YOU CONFIRM THAT THE CUSTOMER PAID, CLOSE THE ORDER.`);\n                this._flow_msg.Info(`# OTHERWISE, RETRY THE PAYMENT FROM SCRATCH.`);\n                break;\n            default:\n                throw new Error('Unknown transaction state');\n        }\n    }\n\n    HandleFinishedRefund(txState)\n    {\n        var refundResponse;\n        switch (txState.Success)\n        {\n            case SuccessState.Success:\n                this._flow_msg.Info(`# REFUND GIVEN- OH WELL!`);\n                refundResponse = new RefundResponse(txState.Response);\n                this._flow_msg.Info(`# Response: ${refundResponse.GetResponseText()}`);\n                this._flow_msg.Info(`# RRN: ${refundResponse.GetRRN()}`);\n                this._flow_msg.Info(`# Scheme: ${refundResponse.SchemeName}`);\n                this._flow_msg.Info(`# Customer Receipt:`);\n                this._receipt.Info(!refundResponse.WasCustomerReceiptPrinted() ? refundResponse.GetCustomerReceipt().trim() : \"# PRINTED FROM EFTPOS\");\n                this._flow_msg.Info(`# REFUNDED AMOUNT: ${refundResponse.GetRefundAmount()}`);\n                break;\n            case SuccessState.Failed:\n                this._flow_msg.Info(`# REFUND FAILED!`);\n                if (txState.Response != null)\n                {\n                    refundResponse = new RefundResponse(txState.Response);\n                    this._flow_msg.Info(`# Error: ${txState.Response.GetError()}`);\n                    this._flow_msg.Info(`# Error Detail: ${txState.Response.GetErrorDetail()}`);\n                    this._flow_msg.Info(`# Response: ${refundResponse.GetResponseText()}`);\n                    this._flow_msg.Info(`# RRN: ${refundResponse.GetRRN()}`);\n                    this._flow_msg.Info(`# Scheme: ${refundResponse.SchemeName}`);\n                    this._flow_msg.Info(`# Customer Receipt:`);\n                    this._receipt.Info(!refundResponse.WasCustomerReceiptPrinted() ? refundResponse.GetCustomerReceipt().trim() : \"# PRINTED FROM EFTPOS\");\n                }\n                break;\n            case SuccessState.Unknown:\n                this._flow_msg.Info(\"# WE'RE NOT QUITE SURE WHETHER THE REFUND WENT THROUGH OR NOT :/\");\n                this._flow_msg.Info(\"# CHECK THE LAST TRANSACTION ON THE EFTPOS ITSELF FROM THE APPROPRIATE MENU ITEM.\");\n                this._flow_msg.Info(\"# YOU CAN THE TAKE THE APPROPRIATE ACTION.\");\n                break;\n            default:\n                throw new Error('Unknown transaction state');\n        }\n    }\n\n    HandleFinishedCashout(txState)\n    {\n        var cashoutResponse;\n        switch (txState.Success)\n        {\n            case SuccessState.Success:\n                this._flow_msg.Info(`# CASH-OUT SUCCESSFUL - HAND THEM THE CASH!`);\n                cashoutResponse = new CashoutOnlyResponse(txState.Response);\n                this._flow_msg.Info(`# Response: ${cashoutResponse.GetResponseText()}`);\n                this._flow_msg.Info(`# RRN: ${cashoutResponse.GetRRN()}`);\n                this._flow_msg.Info(`# Scheme: ${cashoutResponse.SchemeName}`);\n                this._flow_msg.Info(`# Customer Receipt:`);\n                this._receipt.Info(!cashoutResponse.WasCustomerReceiptPrinted() ? cashoutResponse.GetCustomerReceipt().trim() : \"# PRINTED FROM EFTPOS\");\n                this._flow_msg.Info(`# CASHOUT: ${cashoutResponse.GetCashoutAmount()}`);\n                this._flow_msg.Info(`# BANKED NON-CASH AMOUNT: ${cashoutResponse.GetBankNonCashAmount()}`);\n                this._flow_msg.Info(`# BANKED CASH AMOUNT: ${cashoutResponse.GetBankCashAmount()}`);\n                break;\n            case SuccessState.Failed:\n                this._flow_msg.Info(`# CASHOUT FAILED!`);\n                if (txState.Response != null)\n                {\n                    cashoutResponse = new CashoutOnlyResponse(txState.Response);\n                    this._flow_msg.Info(`# Error: ${txState.Response.GetError()}`);\n                    this._flow_msg.Info(`# Error Detail: ${txState.Response.GetErrorDetail()}`);\n                    this._flow_msg.Info(`# Response: ${cashoutResponse.GetResponseText()}`);\n                    this._flow_msg.Info(`# RRN: ${cashoutResponse.GetRRN()}`);\n                    this._flow_msg.Info(`# Scheme: ${cashoutResponse.SchemeName}`);\n                    this._flow_msg.Info(`# Customer Receipt:`);\n                    this._receipt.Info(cashoutResponse.GetCustomerReceipt());\n                }\n                break;\n            case SuccessState.Unknown:\n                this._flow_msg.Info(`# WE'RE NOT QUITE SURE WHETHER THE CASHOUT WENT THROUGH OR NOT :/`);\n                this._flow_msg.Info(`# CHECK THE LAST TRANSACTION ON THE EFTPOS ITSELF FROM THE APPROPRIATE MENU ITEM.`);\n                this._flow_msg.Info(`# YOU CAN THE TAKE THE APPROPRIATE ACTION.`);\n                break;\n            default:\n                throw new Error('Unknown transaction state');\n        }\n    }\n\n    HandleFinishedMoto(txState)\n    {\n        var motoResponse;\n        var purchaseResponse;\n        switch (txState.Success)\n        {\n            case SuccessState.Success:\n                this._flow_msg.Info(\"# WOOHOO - WE GOT MOTO-PAID!\");\n                motoResponse = new MotoPurchaseResponse(txState.Response);\n                purchaseResponse = motoResponse.PurchaseResponse;\n                this._flow_msg.Info(`# Response: ${purchaseResponse.GetResponseText()}`);\n                this._flow_msg.Info(`# RRN: ${purchaseResponse.GetRRN()}`);\n                this._flow_msg.Info(`# Scheme: ${purchaseResponse.SchemeName}`);\n                this._flow_msg.Info(`# Card Entry: ${purchaseResponse.GetCardEntry()}`);\n                this._flow_msg.Info(`# Customer Receipt:`);\n                this._receipt.Info(!purchaseResponse.WasCustomerReceiptPrinted() ? purchaseResponse.GetCustomerReceipt().trim() : \"# PRINTED FROM EFTPOS\");\n                this._flow_msg.Info(`# PURCHASE: ${purchaseResponse.GetPurchaseAmount()}`);\n                this._flow_msg.Info(`# BANKED NON-CASH AMOUNT: ${purchaseResponse.GetBankNonCashAmount()}`);\n                this._flow_msg.Info(`# BANKED CASH AMOUNT: ${purchaseResponse.GetBankCashAmount()}`);\n                break;\n            case SuccessState.Failed:\n                this._flow_msg.Info(`# WE DID NOT GET MOTO-PAID :(`);\n                if (txState.Response != null)\n                {\n                    motoResponse = new MotoPurchaseResponse(txState.Response);\n                    purchaseResponse = motoResponse.PurchaseResponse;\n                    this._flow_msg.Info(`# Error: ${txState.Response.GetError()}`);\n                    this._flow_msg.Info(`# Error Detail: ${txState.Response.GetErrorDetail()}`);\n                    this._flow_msg.Info(`# Response: ${purchaseResponse.GetResponseText()}`);\n                    this._flow_msg.Info(`# RRN: ${purchaseResponse.GetRRN()}`);\n                    this._flow_msg.Info(`# Scheme: ${purchaseResponse.SchemeName}`);\n                    this._flow_msg.Info(`# Customer Receipt:`);\n                    this._receipt.Info(purchaseResponse.GetCustomerReceipt().trim());\n                }\n                break;\n            case SuccessState.Unknown:\n                this._flow_msg.Info(\"# WE'RE NOT QUITE SURE WHETHER THE MOTO WENT THROUGH OR NOT :/\");\n                this._flow_msg.Info(\"# CHECK THE LAST TRANSACTION ON THE EFTPOS ITSELF FROM THE APPROPRIATE MENU ITEM.\");\n                this._flow_msg.Info(\"# YOU CAN THE TAKE THE APPROPRIATE ACTION.\");\n                break;\n            default:\n                throw new Error('Unknown transaction state');\n        }\n    }\n\n    HandleFinishedGetLastTransaction(txState)\n    {\n        if (txState.Response != null)\n        {\n            var gltResponse = new GetLastTransactionResponse(txState.Response);\n            var pos_ref_id  = document.getElementById('pos_ref_id').value;\n\n            if (pos_ref_id.length > 1) \n            {\n                // User specified that he intended to retrieve a specific tx by pos_ref_id\n                // This is how you can use a handy function to match it.\n                var success = this._spi.GltMatch(gltResponse, pos_ref_id);\n                if (success == SuccessState.Unknown)\n                {\n                    this._flow_msg.Info(\"# Did not retrieve Expected Transaction. Here is what we got:\");\n                } else {\n                    this._flow_msg.Info(\"# Tx Matched Expected Purchase Request.\");\n                }\n            }\n\n            var purchaseResponse = new PurchaseResponse(txState.Response);\n            this._flow_msg.Info(`# Scheme: ${purchaseResponse.SchemeName}`);\n            this._flow_msg.Info(`# Response: ${purchaseResponse.GetResponseText()}`);\n            this._flow_msg.Info(`# RRN: ${purchaseResponse.GetRRN()}`);\n            this._flow_msg.Info(`# Error: ${txState.Response.GetError()}`);\n            this._flow_msg.Info(`# Customer Receipt:`);\n            this._receipt.Info(purchaseResponse.GetCustomerReceipt().trim());\n        }\n        else\n        {\n            // We did not even get a response, like in the case of a time-out.\n            this._flow_msg.Info(\"# Could Not Retrieve Last Transaction.\");\n        }\n    }\n\n    HandleFinishedSettle(txState)\n    {\n        switch (txState.Success)\n        {\n            case SuccessState.Success:\n                this._flow_msg.Info(\"# SETTLEMENT SUCCESSFUL!\");\n                if (txState.Response != null)\n                {\n                    var settleResponse = new Settlement(txState.Response);\n                    this._flow_msg.Info(`# Response: ${settleResponse.GetResponseText()}`);\n                    this._flow_msg.Info(\"# Merchant Receipt:\");\n                    this._receipt.Info(settleResponse.GetReceipt().trim());\n                    this._flow_msg.Info(\"# Period Start: \" + settleResponse.GetPeriodStartTime());\n                    this._flow_msg.Info(\"# Period End: \" + settleResponse.GetPeriodEndTime());\n                    this._flow_msg.Info(\"# Settlement Time: \" + settleResponse.GetTriggeredTime());\n                    this._flow_msg.Info(\"# Transaction Range: \" + settleResponse.GetTransactionRange());\n                    this._flow_msg.Info(\"# Terminal Id: \" + settleResponse.GetTerminalId());\n                    this._flow_msg.Info(\"# Total TX Count: \" + settleResponse.GetTotalCount());\n                    this._flow_msg.Info(`# Total TX Value: $${(settleResponse.GetTotalValue() / 100.0).toFixed(2)}`);\n                    this._flow_msg.Info(\"# By Acquirer TX Count: \" + settleResponse.GetSettleByAcquirerCount());\n                    this._flow_msg.Info(`# By Acquirer TX Value: $${(settleResponse.GetSettleByAcquirerValue() / 100.0).toFixed(2)}`);\n                    this._flow_msg.Info(\"# SCHEME SETTLEMENTS:\");\n                    var schemes = settleResponse.GetSchemeSettlementEntries();\n                    for (var s in schemes)\n                    {\n                        this._flow_msg.Info(\"# \" + JSON.stringify(schemes[s]));\n                    }\n                }\n                break;\n            case SuccessState.Failed:\n                this._flow_msg.Info(\"# SETTLEMENT FAILED!\");\n                if (txState.Response != null)\n                {\n                    var settleResponse = new Settlement(txState.Response);\n                    this._flow_msg.Info(`# Response: ${settleResponse.GetResponseText()}`);\n                    this._flow_msg.Info(`# Error: ${txState.Response.GetError()}`);\n                    this._flow_msg.Info(\"# Merchant Receipt:\");\n                    this._receipt.Info(settleResponse.GetReceipt());\n                }\n                break;\n            case SuccessState.Unknown:\n                this._flow_msg.Info(\"# SETTLEMENT ENQUIRY RESULT UNKNOWN!\");\n                break;\n            default:\n                throw new Error('Unknown state');\n        }\n    }\n\n    HandleFinishedSettlementEnquiry(txState)\n    {\n        switch (txState.Success)\n        {\n            case SuccessState.Success:\n                this._flow_msg.Info(\"# SETTLEMENT ENQUIRY SUCCESSFUL!\");\n                if (txState.Response != null)\n                {\n                    var settleResponse = new Settlement(txState.Response);\n                    this._flow_msg.Info(`# Response: ${settleResponse.GetResponseText()}`);\n                    this._flow_msg.Info(`# Merchant Receipt:`);\n                    this._receipt.Info(settleResponse.GetReceipt().trim());\n                    this._flow_msg.Info(`# Period Start: ` + settleResponse.GetPeriodStartTime());\n                    this._flow_msg.Info(`# Period End: ` + settleResponse.GetPeriodEndTime());\n                    this._flow_msg.Info(`# Settlement Time: ` + settleResponse.GetTriggeredTime());\n                    this._flow_msg.Info(`# Transaction Range: ` + settleResponse.GetTransactionRange());\n                    this._flow_msg.Info(`# Terminal Id: ` + settleResponse.GetTerminalId());\n                    this._flow_msg.Info(`# Total TX Count: ` + settleResponse.GetTotalCount());\n                    this._flow_msg.Info(`# Total TX Value: $${(settleResponse.GetTotalValue() / 100.0).toFixed(2)}`);\n                    this._flow_msg.Info(`# By Acquirer TX Count: ` + settleResponse.GetSettleByAcquirerCount());\n                    this._flow_msg.Info(`# By Acquirer TX Value: $${(settleResponse.GetSettleByAcquirerValue() / 100.0).toFixed(2)}`);\n                    this._flow_msg.Info(`# SCHEME SETTLEMENTS:`);\n                    var schemes = settleResponse.GetSchemeSettlementEntries();\n                    for (var s in schemes)\n                    {\n                        this._flow_msg.Info(`# ` + JSON.stringify(schemes[s]));\n                    }\n                }\n                break;\n            case SuccessState.Failed:\n                this._flow_msg.Info(\"# SETTLEMENT ENQUIRY FAILED!\");\n                if (txState.Response != null)\n                {\n                    var settleResponse = new Settlement(txState.Response);\n                    this._flow_msg.Info(`# Response: ${settleResponse.GetResponseText()}`);\n                    this._flow_msg.Info(`# Error: ${txState.Response.GetError()}`);\n                    this._flow_msg.Info(`# Merchant Receipt:`);\n                    this._receipt.Info(settleResponse.GetReceipt());\n                }\n                break;\n            case SuccessState.Unknown:\n                this._flow_msg.Info(\"# SETTLEMENT ENQUIRY RESULT UNKNOWN!\");\n                break;\n            default:\n                throw new Error('Unknown Transaction state');\n        }\n    }\n\n    PrintActions()\n    {\n        // List of input controls which are enabled / shown for the current application state\n        let inputsEnabled   = [];\n        let statusEl        = document.getElementById('status_indicator');\n        let primaryStatusEl = document.getElementById('primary_status');\n        let flowStatusEl    = document.getElementById('flow_status');\n        let flowStatusHeading = document.getElementById('flow_status_heading');\n\n        statusEl.dataset['status']  = this._spi.CurrentStatus;\n        statusEl.dataset['flow']    = this._spi.CurrentFlow;\n        primaryStatusEl.innerText   = this._spi.CurrentStatus;\n        flowStatusEl.innerText      = this._spi.CurrentFlow;\n        flowStatusHeading.innerText = this._spi.CurrentFlow;\n\n        // Available Actions depend on the current status (Unpaired/PairedConnecting/PairedConnected)\n        switch (this._spi.CurrentStatus)\n        {\n            case SpiStatus.Unpaired: //Unpaired...\n                switch (this._spi.CurrentFlow)\n                {\n                    case SpiFlow.Idle: // Unpaired, Idle\n                        inputsEnabled.push('pos_id');\n                        inputsEnabled.push('eftpos_address');\n                        inputsEnabled.push('rcpt_from_eftpos');\n                        inputsEnabled.push('sig_flow_from_eftpos');\n                        inputsEnabled.push('pair');\n                        inputsEnabled.push('save_settings');\n                        break;\n                        \n                    case SpiFlow.Pairing: // Unpaired, PairingFlow\n                        var pairingState = this._spi.CurrentPairingFlowState;\n                        if (pairingState.AwaitingCheckFromPos)\n                        {\n                            inputsEnabled.push('pair_confirm');\n                        }\n                        if (!pairingState.Finished)\n                        {\n                            inputsEnabled.push('pair_cancel');\n                        }\n                        else\n                        {\n                            inputsEnabled.push('ok');\n                        }\n                        break;\n                        \n                    case SpiFlow.Transaction: // Unpaired, TransactionFlow - Should never be the case!\n                    default:\n                        this._log.info(`# .. Unexpected Flow .. ${this._spi.CurrentFlow}`);\n                        break;\n                }\n                break;\n            case SpiStatus.PairedConnecting: // This is still considered as a Paired kind of state, but...\n                // .. we give user the option of changing IP address, just in case the EFTPOS got a new one in the meanwhile\n                inputsEnabled.push('eftpos_address');\n                inputsEnabled.push('rcpt_from_eftpos');\n                inputsEnabled.push('sig_flow_from_eftpos');\n                inputsEnabled.push('save_settings');\n                // .. but otherwise we give the same options as PairedConnected\n                // goto case SpiStatus.PairedConnected;\n\n            case SpiStatus.PairedConnected:\n                switch (this._spi.CurrentFlow)\n                {\n                    case SpiFlow.Idle: // Paired, Idle\n                        inputsEnabled.push('amount_input');\n                        inputsEnabled.push('tip_amount_input');\n                        inputsEnabled.push('cashout_amount_input');\n                        inputsEnabled.push('prompt_for_cash');\n                        inputsEnabled.push('pos_ref_id_input');\n                        inputsEnabled.push('save_settings');\n\n                        inputsEnabled.push('purchase');\n                        inputsEnabled.push('moto');\n                        inputsEnabled.push('refund');\n                        inputsEnabled.push('cashout');\n                        inputsEnabled.push('settle');\n                        inputsEnabled.push('settle_enq');\n                        inputsEnabled.push('recover');\n                        inputsEnabled.push('unpair');\n                        inputsEnabled.push('glt');\n                        inputsEnabled.push('rcpt_from_eftpos');\n                        inputsEnabled.push('sig_flow_from_eftpos');\n                        break;\n                    case SpiFlow.Transaction: // Paired, Transaction\n                        if (this._spi.CurrentTxFlowState.AwaitingSignatureCheck)\n                        {\n                            inputsEnabled.push('tx_sign_accept');\n                            inputsEnabled.push('tx_sign_decline');\n                        }\n\n                        if(this._spi.CurrentTxFlowState.AwaitingPhoneForAuth)\n                        {\n                            inputsEnabled.push('tx_auth_code');\n                            inputsEnabled.push('auth_code_input');\n                        }\n\n                        if (!this._spi.CurrentTxFlowState.Finished && !this._spi.CurrentTxFlowState.AttemptingToCancel)\n                        {\n                            inputsEnabled.push('tx_cancel');\n                        }\n                        else\n                        {\n                            switch (this._spi.CurrentTxFlowState.Success) \n                            {\n                                case SuccessState.Success:\n                                    inputsEnabled.push('ok');\n                                    break;\n                                case SuccessState.Failed:\n                                    inputsEnabled.push('ok_cancel');\n                                    break;\n                                default:\n                                    // Unknown\n                                    inputsEnabled.push('ok_cancel');\n                                    break;\n                            }\n                        }\n                        break;\n                    case SpiFlow.Pairing: // Paired, Pairing - we have just finished the pairing flow. OK to ack.\n                        inputsEnabled.push('ok');\n                        break;\n                    default:\n                        this._log.info(`# .. Unexpected Flow .. ${this._spi.CurrentFlow}`);\n                        break;\n                }\n                break;\n\n\n            default:\n                this._log.info(`# .. Unexpected State .. ${this._spi.CurrentStatus}`);\n                break;\n        }\n\n        // Configure buttons / inputs\n        let inputs = document.querySelectorAll('.input');\n        for(let i = 0; i < inputs.length; i++) \n        {\n            inputs[i].disabled = true;\n        }\n\n        inputsEnabled.forEach((input) => \n        {\n            document.getElementById(input).disabled = false;\n        });\n\n        this._flow_msg.Info();\n    }\n\n    PrintPairingStatus()\n    {\n        this._flow_msg.Info(`# --------------- STATUS ------------------`);\n        this._flow_msg.Info(`# ${this._posId} <-> Eftpos: ${this._eftposAddress} #`);\n        this._flow_msg.Info(`# SPI STATUS: ${this._spi.CurrentStatus}     FLOW: ${this._spi.CurrentFlow} #`);\n        this._flow_msg.Info(`# SPI CONFIG: ${JSON.stringify(this._spi.Config)}`);\n        this._flow_msg.Info(`# -----------------------------------------`);\n        this._flow_msg.Info(`# POS: v${this._version} Spi: v${Spi.GetVersion()}`);\n\n    }\n\n    AcceptUserInput()\n    {\n        document.getElementById('save_settings').addEventListener('click', () => \n        {\n            if(this._spi.CurrentStatus === SpiStatus.Unpaired && this._spi.CurrentFlow === SpiFlow.Idle) \n            {\n                this._posId         = document.getElementById('pos_id').value;\n                this._eftposAddress = document.getElementById('eftpos_address').value;\n\n                this._spi.SetPosId(this._posId);\n                this._spi.SetEftposAddress(this._eftposAddress);\n\n                localStorage.setItem('pos_id', this._posId);\n                localStorage.setItem('eftpos_address', this._eftposAddress);\n                this._log.info(`Saved settings ${this._posId}:${this._eftposAddress}`);\n            }\n\n            this._spi.Config.PromptForCustomerCopyOnEftpos = document.getElementById('rcpt_from_eftpos').checked;\n            this._spi.Config.SignatureFlowOnEftpos = document.getElementById('sig_flow_from_eftpos').checked;\n\n            localStorage.setItem('rcpt_from_eftpos', this._spi.Config.PromptForCustomerCopyOnEftpos);\n            localStorage.setItem('sig_flow_from_eftpos', this._spi.Config.SignatureFlowOnEftpos);\n\n            this.PrintPairingStatus();\n        });\n\n        document.getElementById('pair').addEventListener('click', () => \n        {\n            this._spi.Pair();\n        });\n\n        document.getElementById('pair_confirm').addEventListener('click', () => \n        {\n            this._spi.PairingConfirmCode();\n        });\n\n        document.getElementById('pair_cancel').addEventListener('click', () => \n        {\n            this._spi.PairingCancel();\n        });\n\n        document.getElementById('unpair').addEventListener('click', () => \n        {\n            this._spi.Unpair();\n        });\n\n        document.getElementById('purchase').addEventListener('click', () => \n        {\n            let posRefId        = `purchase-${new Date().toISOString()}`; \n            let purchaseAmount  = parseInt(document.getElementById('amount').value,10);\n            let tipAmount       = parseInt(document.getElementById('tip_amount').value,10);\n            let cashoutAmount   = parseInt(document.getElementById('cashout_amount').value,10);\n            let promptForCashout = document.getElementById('prompt_for_cash').checked;\n            let res             = this._spi.InitiatePurchaseTxV2(posRefId, purchaseAmount, tipAmount, cashoutAmount, promptForCashout);\n            if (!res.Initiated)\n            {\n                this._flow_msg.Info(`# Could not initiate purchase: ${res.Message}. Please Retry.`);\n            }\n        });\n\n        document.getElementById('refund').addEventListener('click', () => \n        {\n            let amount      = parseInt(document.getElementById('amount').value,10);\n            let posRefId    = `refund-${new Date().toISOString()}`; \n            let res         = this._spi.InitiateRefundTx(posRefId, amount);\n            this._flow_msg.Info(res.Initiated ? \"# Refund Initiated. Will be updated with Progress.\" : `# Could not initiate refund: ${res.Message}. Please Retry.`);\n        });\n\n        document.getElementById('cashout').addEventListener('click', () => \n        {\n            let amount      = parseInt(document.getElementById('cashout_amount').value,10);\n\n            if(!amount > 0) \n            {\n                this._log.info('Cashout amount must be greater than 0');\n                return;\n            }\n\n            let posRefId    = `cashout-${new Date().toISOString()}`; \n            let res         = this._spi.InitiateCashoutOnlyTx(posRefId, amount);\n            this._flow_msg.Info(res.Initiated ? \"# Cashout Initiated. Will be updated with Progress.\" : `# Could not initiate cashout: ${res.Message}. Please Retry.`);\n        });\n\n        document.getElementById('moto').addEventListener('click', () => \n        {\n            let amount      = parseInt(document.getElementById('amount').value,10);\n            let posRefId    = `cashout-${new Date().toISOString()}`; \n            let res         = this._spi.InitiateMotoPurchaseTx(posRefId, amount);\n            this._flow_msg.Info(res.Initiated ? \"# MOTO purchase Initiated. Will be updated with Progress.\" : `# Could not initiate moto purchase: ${res.Message}. Please Retry.`);\n        });\n\n        document.getElementById('tx_sign_accept').addEventListener('click', () => \n        {\n            this._spi.AcceptSignature(true);\n        });\n\n        document.getElementById('tx_sign_decline').addEventListener('click', () => \n        {\n            this._spi.AcceptSignature(false);\n        });\n\n        document.getElementById('tx_cancel').addEventListener('click', () => \n        {\n            this._spi.CancelTransaction();\n        });\n\n        document.getElementById('tx_auth_code').addEventListener('click', () => \n        {\n            var authCode = document.getElementById('auth_code').value;\n            var res = this._spi.SubmitAuthCode(authCode);\n            this._flow_msg.Info(res.ValidFormat ? `# Auth code submitted` : `# Invalid Code Format. ${res.Message}. Try Again.`);\n        });\n\n        document.getElementById('settle').addEventListener('click', () => \n        {\n            let res = this._spi.InitiateSettleTx(RequestIdHelper.Id(\"settle\"));\n            this._flow_msg.Info(res.Initiated ? \"# Settle Initiated. Will be updated with Progress.\" : `# Could not initiate settle: ${res.Message}. Please Retry.`);\n        });\n\n        document.getElementById('settle_enq').addEventListener('click', () => \n        {\n            let res = this._spi.InitiateSettlementEnquiry(RequestIdHelper.Id(\"stlenq\"));\n            this._flow_msg.Info(res.Initiated ? \"# Settle enquiry Initiated. Will be updated with Progress.\" : `# Could not initiate settle enquiry: ${res.Message}. Please Retry.`);\n        });\n\n        document.getElementById('ok').addEventListener('click', () => \n        {\n            this._spi.AckFlowEndedAndBackToIdle();\n            this._flow_msg.Clear();\n            this._flow_msg.innerHTML = \"Select from the options below\";\n            this.PrintStatusAndActions();\n        });\n\n        document.getElementById('recover').addEventListener('click', () => \n        {\n            this._flow_msg.Clear();\n            var posRefId = document.getElementById('pos_ref_id').value;\n            var res = this._spi.InitiateRecovery(posRefId, TransactionType.Purchase);\n            this._flow_msg.Info(res.Initiated ? \"# Recovery Initiated. Will be updated with Progress.\" : `# Could not initiate recovery. ${res.Message}. Please Retry.`);\n        });\n\n        document.getElementById('glt').addEventListener('click', () => \n        {\n            let res = this._spi.InitiateGetLastTx();\n            this._flow_msg.Info(res.Initiated ? \"# GLT Initiated. Will be updated with Progress.\" : `# Could not initiate GLT: ${res.Message}. Please Retry.`);\n        });\n\n        document.getElementById('ok_cancel').addEventListener('click', () => \n        {\n            this._spi.AckFlowEndedAndBackToIdle();\n            this._flow_msg.Clear();\n            this._flow_msg.innerHTML = \"Order Cancelled\";\n            this.PrintStatusAndActions();\n        });\n    }\n\n    LoadPersistedState()\n    {\n        if(localStorage.getItem('pos_id')) \n        {\n            this._posId = localStorage.getItem('pos_id');\n            document.getElementById('pos_id').value = this._posId;\n        } \n        else \n        {\n            this._posId = document.getElementById('pos_id').value;\n        }\n\n        if(localStorage.getItem('eftpos_address')) \n        {\n            this._eftposAddress = localStorage.getItem('eftpos_address');\n            document.getElementById('eftpos_address').value = this._eftposAddress;\n        } \n        else \n        {\n            this._eftposAddress = document.getElementById('eftpos_address').value;\n        }\n\n        this._rcpt_from_eftpos = document.getElementById('rcpt_from_eftpos').checked = localStorage.getItem('rcpt_from_eftpos') === 'true' || false;\n        this._sig_flow_from_eftpos = document.getElementById('sig_flow_from_eftpos').checked = localStorage.getItem('sig_flow_from_eftpos') === 'true' || false;\n\n        if(localStorage.getItem('EncKey') && localStorage.getItem('HmacKey')) \n        {\n            this._spiSecrets = new Secrets(localStorage.getItem('EncKey'), localStorage.getItem('HmacKey'));\n        }\n    }\n}\n\n/**\n * Start the POS\n */\ndocument.addEventListener('DOMContentLoaded', () => \n{\n    try \n    {\n        let log         = console;\n        let receipt     = new Logger(document.getElementById('receipt_output'),`\\n\\n \\\\/\\\\/\\\\/\\\\/\\\\/\\\\/\\\\/\\\\/\\\\/\\\\/\\\\/\\\\/\\\\/\\\\/\\\\/ \\n\\n`);\n        let flow_msg    = new Logger(document.getElementById('flow_msg'));\n        let pos         = new KebabPos(log, receipt, flow_msg);\n        pos.Start();\n    } \n    catch(err) \n    {\n        console.error(err);\n    }\n});"],"sourceRoot":""}